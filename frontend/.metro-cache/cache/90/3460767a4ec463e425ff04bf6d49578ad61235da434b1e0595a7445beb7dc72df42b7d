{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":40,"index":55}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.LongPressGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  class LongPressGesture extends _gesture.BaseGesture {\n    config = {};\n    constructor() {\n      super();\n      this.handlerName = 'LongPressGestureHandler';\n      this.shouldCancelWhenOutside(true);\n    }\n\n    /**\n     * Minimum time, expressed in milliseconds, that a finger must remain pressed on the corresponding view.\n     * The default value is 500.\n     * @param duration\n     */\n    minDuration(duration) {\n      this.config.minDurationMs = duration;\n      return this;\n    }\n\n    /**\n     * Maximum distance, expressed in points, that defines how far the finger is allowed to travel during a long press gesture.\n     * @param distance\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/long-press-gesture#maxdistancevalue-number\n     */\n    maxDistance(distance) {\n      this.config.maxDist = distance;\n      return this;\n    }\n\n    /**\n     * Determine exact number of points required to handle the long press gesture.\n     * @param pointers\n     */\n    numberOfPointers(pointers) {\n      this.config.numberOfPointers = pointers;\n      return this;\n    }\n  }\n  exports.LongPressGesture = LongPressGesture;\n});","lineCount":47,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"LongPressGesture"],[7,26,1,13],[8,2,3,0],[8,6,3,0,"_gesture"],[8,14,3,0],[8,17,3,0,"require"],[8,24,3,0],[8,25,3,0,"_dependencyMap"],[8,39,3,0],[9,2,4,7],[9,8,4,13,"LongPressGesture"],[9,24,4,29],[9,33,4,38,"BaseGesture"],[9,53,4,49],[9,54,4,50],[10,4,5,2,"config"],[10,10,5,8],[10,13,5,11],[10,14,5,12],[10,15,5,13],[11,4,6,2,"constructor"],[11,15,6,13,"constructor"],[11,16,6,13],[11,18,6,16],[12,6,7,4],[12,11,7,9],[12,12,7,10],[12,13,7,11],[13,6,8,4],[13,10,8,8],[13,11,8,9,"handlerName"],[13,22,8,20],[13,25,8,23],[13,50,8,48],[14,6,9,4],[14,10,9,8],[14,11,9,9,"shouldCancelWhenOutside"],[14,34,9,32],[14,35,9,33],[14,39,9,37],[14,40,9,38],[15,4,10,2],[17,4,12,2],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,4,17,2,"minDuration"],[22,15,17,13,"minDuration"],[22,16,17,14,"duration"],[22,24,17,22],[22,26,17,24],[23,6,18,4],[23,10,18,8],[23,11,18,9,"config"],[23,17,18,15],[23,18,18,16,"minDurationMs"],[23,31,18,29],[23,34,18,32,"duration"],[23,42,18,40],[24,6,19,4],[24,13,19,11],[24,17,19,15],[25,4,20,2],[27,4,22,2],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,4,27,2,"maxDistance"],[32,15,27,13,"maxDistance"],[32,16,27,14,"distance"],[32,24,27,22],[32,26,27,24],[33,6,28,4],[33,10,28,8],[33,11,28,9,"config"],[33,17,28,15],[33,18,28,16,"maxDist"],[33,25,28,23],[33,28,28,26,"distance"],[33,36,28,34],[34,6,29,4],[34,13,29,11],[34,17,29,15],[35,4,30,2],[37,4,32,2],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,4,36,2,"numberOfPointers"],[41,20,36,18,"numberOfPointers"],[41,21,36,19,"pointers"],[41,29,36,27],[41,31,36,29],[42,6,37,4],[42,10,37,8],[42,11,37,9,"config"],[42,17,37,15],[42,18,37,16,"numberOfPointers"],[42,34,37,32],[42,37,37,35,"pointers"],[42,45,37,43],[43,6,38,4],[43,13,38,11],[43,17,38,15],[44,4,39,2],[45,2,40,0],[46,2,40,1,"exports"],[46,9,40,1],[46,10,40,1,"LongPressGesture"],[46,26,40,1],[46,29,40,1,"LongPressGesture"],[46,45,40,1],[47,0,40,1],[47,3]],"functionMap":{"names":["<global>","LongPressGesture","LongPressGesture#constructor","LongPressGesture#minDuration","LongPressGesture#maxDistance","LongPressGesture#numberOfPointers"],"mappings":"AAA;OCG;ECE;GDI;EEO;GFG;EGO;GHG;EIM;GJG;CDC"}},"type":"js/module"}]}