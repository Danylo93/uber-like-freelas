{"dependencies":[{"name":"../interfaces","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"GMKh3a5g5xNaAog15vl07v6pG2U=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _interfaces = require(_dependencyMap[0], \"../interfaces\");\n  class RotationGestureDetector {\n    currentTime = 0;\n    previousTime = 0;\n    previousAngle = 0;\n    _rotation = 0;\n    _anchorX = 0;\n    _anchorY = 0;\n    isInProgress = false;\n    keyPointers = [NaN, NaN];\n    constructor(callbacks) {\n      this.onRotationBegin = callbacks.onRotationBegin;\n      this.onRotation = callbacks.onRotation;\n      this.onRotationEnd = callbacks.onRotationEnd;\n    }\n    updateCurrent(event, tracker) {\n      this.previousTime = this.currentTime;\n      this.currentTime = event.time;\n      const [firstPointerID, secondPointerID] = this.keyPointers;\n      const firstPointerCoords = tracker.getLastAbsoluteCoords(firstPointerID);\n      const secondPointerCoords = tracker.getLastAbsoluteCoords(secondPointerID);\n      if (!firstPointerCoords || !secondPointerCoords) {\n        return;\n      }\n      const vectorX = secondPointerCoords.x - firstPointerCoords.x;\n      const vectorY = secondPointerCoords.y - firstPointerCoords.y;\n      this._anchorX = (firstPointerCoords.x + secondPointerCoords.x) / 2;\n      this._anchorY = (firstPointerCoords.y + secondPointerCoords.y) / 2;\n\n      // Angle diff should be positive when rotating in clockwise direction\n      const angle = -Math.atan2(vectorY, vectorX);\n      this._rotation = Number.isNaN(this.previousAngle) ? 0 : this.previousAngle - angle;\n      this.previousAngle = angle;\n      if (this.rotation > Math.PI) {\n        this._rotation -= Math.PI;\n      } else if (this.rotation < -Math.PI) {\n        this._rotation += Math.PI;\n      }\n      if (this.rotation > Math.PI / 2) {\n        this._rotation -= Math.PI;\n      } else if (this.rotation < -Math.PI / 2) {\n        this._rotation += Math.PI;\n      }\n    }\n    finish() {\n      if (!this.isInProgress) {\n        return;\n      }\n      this.isInProgress = false;\n      this.keyPointers = [NaN, NaN];\n      this.onRotationEnd(this);\n    }\n    setKeyPointers(tracker) {\n      if (this.keyPointers[0] && this.keyPointers[1]) {\n        return;\n      }\n      const pointerIDs = tracker.trackedPointers.keys();\n      this.keyPointers[0] = pointerIDs.next().value;\n      this.keyPointers[1] = pointerIDs.next().value;\n    }\n    onTouchEvent(event, tracker) {\n      switch (event.eventType) {\n        case _interfaces.EventTypes.DOWN:\n          this.isInProgress = false;\n          break;\n        case _interfaces.EventTypes.ADDITIONAL_POINTER_DOWN:\n          if (this.isInProgress) {\n            break;\n          }\n          this.isInProgress = true;\n          this.previousTime = event.time;\n          this.previousAngle = NaN;\n          this.setKeyPointers(tracker);\n          this.updateCurrent(event, tracker);\n          this.onRotationBegin(this);\n          break;\n        case _interfaces.EventTypes.MOVE:\n          if (!this.isInProgress) {\n            break;\n          }\n          this.updateCurrent(event, tracker);\n          this.onRotation(this);\n          break;\n        case _interfaces.EventTypes.ADDITIONAL_POINTER_UP:\n          if (!this.isInProgress) {\n            break;\n          }\n          if (this.keyPointers.indexOf(event.pointerId) >= 0) {\n            this.finish();\n          }\n          break;\n        case _interfaces.EventTypes.UP:\n          if (this.isInProgress) {\n            this.finish();\n          }\n          break;\n      }\n      return true;\n    }\n    reset() {\n      this.keyPointers = [NaN, NaN];\n      this.isInProgress = false;\n    }\n    get anchorX() {\n      return this._anchorX;\n    }\n    get anchorY() {\n      return this._anchorY;\n    }\n    get rotation() {\n      return this._rotation;\n    }\n    get timeDelta() {\n      return this.currentTime + this.previousTime;\n    }\n  }\n  exports.default = RotationGestureDetector;\n});","lineCount":125,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"default"],[7,17,1,13],[8,2,3,0],[8,6,3,0,"_interfaces"],[8,17,3,0],[8,20,3,0,"require"],[8,27,3,0],[8,28,3,0,"_dependencyMap"],[8,42,3,0],[9,2,4,15],[9,8,4,21,"RotationGestureDetector"],[9,31,4,44],[9,32,4,45],[10,4,5,2,"currentTime"],[10,15,5,13],[10,18,5,16],[10,19,5,17],[11,4,6,2,"previousTime"],[11,16,6,14],[11,19,6,17],[11,20,6,18],[12,4,7,2,"previousAngle"],[12,17,7,15],[12,20,7,18],[12,21,7,19],[13,4,8,2,"_rotation"],[13,13,8,11],[13,16,8,14],[13,17,8,15],[14,4,9,2,"_anchorX"],[14,12,9,10],[14,15,9,13],[14,16,9,14],[15,4,10,2,"_anchorY"],[15,12,10,10],[15,15,10,13],[15,16,10,14],[16,4,11,2,"isInProgress"],[16,16,11,14],[16,19,11,17],[16,24,11,22],[17,4,12,2,"keyPointers"],[17,15,12,13],[17,18,12,16],[17,19,12,17,"NaN"],[17,22,12,20],[17,24,12,22,"NaN"],[17,27,12,25],[17,28,12,26],[18,4,13,2,"constructor"],[18,15,13,13,"constructor"],[18,16,13,14,"callbacks"],[18,25,13,23],[18,27,13,25],[19,6,14,4],[19,10,14,8],[19,11,14,9,"onRotationBegin"],[19,26,14,24],[19,29,14,27,"callbacks"],[19,38,14,36],[19,39,14,37,"onRotationBegin"],[19,54,14,52],[20,6,15,4],[20,10,15,8],[20,11,15,9,"onRotation"],[20,21,15,19],[20,24,15,22,"callbacks"],[20,33,15,31],[20,34,15,32,"onRotation"],[20,44,15,42],[21,6,16,4],[21,10,16,8],[21,11,16,9,"onRotationEnd"],[21,24,16,22],[21,27,16,25,"callbacks"],[21,36,16,34],[21,37,16,35,"onRotationEnd"],[21,50,16,48],[22,4,17,2],[23,4,18,2,"updateCurrent"],[23,17,18,15,"updateCurrent"],[23,18,18,16,"event"],[23,23,18,21],[23,25,18,23,"tracker"],[23,32,18,30],[23,34,18,32],[24,6,19,4],[24,10,19,8],[24,11,19,9,"previousTime"],[24,23,19,21],[24,26,19,24],[24,30,19,28],[24,31,19,29,"currentTime"],[24,42,19,40],[25,6,20,4],[25,10,20,8],[25,11,20,9,"currentTime"],[25,22,20,20],[25,25,20,23,"event"],[25,30,20,28],[25,31,20,29,"time"],[25,35,20,33],[26,6,21,4],[26,12,21,10],[26,13,21,11,"firstPointerID"],[26,27,21,25],[26,29,21,27,"secondPointerID"],[26,44,21,42],[26,45,21,43],[26,48,21,46],[26,52,21,50],[26,53,21,51,"keyPointers"],[26,64,21,62],[27,6,22,4],[27,12,22,10,"firstPointerCoords"],[27,30,22,28],[27,33,22,31,"tracker"],[27,40,22,38],[27,41,22,39,"getLastAbsoluteCoords"],[27,62,22,60],[27,63,22,61,"firstPointerID"],[27,77,22,75],[27,78,22,76],[28,6,23,4],[28,12,23,10,"secondPointerCoords"],[28,31,23,29],[28,34,23,32,"tracker"],[28,41,23,39],[28,42,23,40,"getLastAbsoluteCoords"],[28,63,23,61],[28,64,23,62,"secondPointerID"],[28,79,23,77],[28,80,23,78],[29,6,24,4],[29,10,24,8],[29,11,24,9,"firstPointerCoords"],[29,29,24,27],[29,33,24,31],[29,34,24,32,"secondPointerCoords"],[29,53,24,51],[29,55,24,53],[30,8,25,6],[31,6,26,4],[32,6,27,4],[32,12,27,10,"vectorX"],[32,19,27,17],[32,22,27,20,"secondPointerCoords"],[32,41,27,39],[32,42,27,40,"x"],[32,43,27,41],[32,46,27,44,"firstPointerCoords"],[32,64,27,62],[32,65,27,63,"x"],[32,66,27,64],[33,6,28,4],[33,12,28,10,"vectorY"],[33,19,28,17],[33,22,28,20,"secondPointerCoords"],[33,41,28,39],[33,42,28,40,"y"],[33,43,28,41],[33,46,28,44,"firstPointerCoords"],[33,64,28,62],[33,65,28,63,"y"],[33,66,28,64],[34,6,29,4],[34,10,29,8],[34,11,29,9,"_anchorX"],[34,19,29,17],[34,22,29,20],[34,23,29,21,"firstPointerCoords"],[34,41,29,39],[34,42,29,40,"x"],[34,43,29,41],[34,46,29,44,"secondPointerCoords"],[34,65,29,63],[34,66,29,64,"x"],[34,67,29,65],[34,71,29,69],[34,72,29,70],[35,6,30,4],[35,10,30,8],[35,11,30,9,"_anchorY"],[35,19,30,17],[35,22,30,20],[35,23,30,21,"firstPointerCoords"],[35,41,30,39],[35,42,30,40,"y"],[35,43,30,41],[35,46,30,44,"secondPointerCoords"],[35,65,30,63],[35,66,30,64,"y"],[35,67,30,65],[35,71,30,69],[35,72,30,70],[37,6,32,4],[38,6,33,4],[38,12,33,10,"angle"],[38,17,33,15],[38,20,33,18],[38,21,33,19,"Math"],[38,25,33,23],[38,26,33,24,"atan2"],[38,31,33,29],[38,32,33,30,"vectorY"],[38,39,33,37],[38,41,33,39,"vectorX"],[38,48,33,46],[38,49,33,47],[39,6,34,4],[39,10,34,8],[39,11,34,9,"_rotation"],[39,20,34,18],[39,23,34,21,"Number"],[39,29,34,27],[39,30,34,28,"isNaN"],[39,35,34,33],[39,36,34,34],[39,40,34,38],[39,41,34,39,"previousAngle"],[39,54,34,52],[39,55,34,53],[39,58,34,56],[39,59,34,57],[39,62,34,60],[39,66,34,64],[39,67,34,65,"previousAngle"],[39,80,34,78],[39,83,34,81,"angle"],[39,88,34,86],[40,6,35,4],[40,10,35,8],[40,11,35,9,"previousAngle"],[40,24,35,22],[40,27,35,25,"angle"],[40,32,35,30],[41,6,36,4],[41,10,36,8],[41,14,36,12],[41,15,36,13,"rotation"],[41,23,36,21],[41,26,36,24,"Math"],[41,30,36,28],[41,31,36,29,"PI"],[41,33,36,31],[41,35,36,33],[42,8,37,6],[42,12,37,10],[42,13,37,11,"_rotation"],[42,22,37,20],[42,26,37,24,"Math"],[42,30,37,28],[42,31,37,29,"PI"],[42,33,37,31],[43,6,38,4],[43,7,38,5],[43,13,38,11],[43,17,38,15],[43,21,38,19],[43,22,38,20,"rotation"],[43,30,38,28],[43,33,38,31],[43,34,38,32,"Math"],[43,38,38,36],[43,39,38,37,"PI"],[43,41,38,39],[43,43,38,41],[44,8,39,6],[44,12,39,10],[44,13,39,11,"_rotation"],[44,22,39,20],[44,26,39,24,"Math"],[44,30,39,28],[44,31,39,29,"PI"],[44,33,39,31],[45,6,40,4],[46,6,41,4],[46,10,41,8],[46,14,41,12],[46,15,41,13,"rotation"],[46,23,41,21],[46,26,41,24,"Math"],[46,30,41,28],[46,31,41,29,"PI"],[46,33,41,31],[46,36,41,34],[46,37,41,35],[46,39,41,37],[47,8,42,6],[47,12,42,10],[47,13,42,11,"_rotation"],[47,22,42,20],[47,26,42,24,"Math"],[47,30,42,28],[47,31,42,29,"PI"],[47,33,42,31],[48,6,43,4],[48,7,43,5],[48,13,43,11],[48,17,43,15],[48,21,43,19],[48,22,43,20,"rotation"],[48,30,43,28],[48,33,43,31],[48,34,43,32,"Math"],[48,38,43,36],[48,39,43,37,"PI"],[48,41,43,39],[48,44,43,42],[48,45,43,43],[48,47,43,45],[49,8,44,6],[49,12,44,10],[49,13,44,11,"_rotation"],[49,22,44,20],[49,26,44,24,"Math"],[49,30,44,28],[49,31,44,29,"PI"],[49,33,44,31],[50,6,45,4],[51,4,46,2],[52,4,47,2,"finish"],[52,10,47,8,"finish"],[52,11,47,8],[52,13,47,11],[53,6,48,4],[53,10,48,8],[53,11,48,9],[53,15,48,13],[53,16,48,14,"isInProgress"],[53,28,48,26],[53,30,48,28],[54,8,49,6],[55,6,50,4],[56,6,51,4],[56,10,51,8],[56,11,51,9,"isInProgress"],[56,23,51,21],[56,26,51,24],[56,31,51,29],[57,6,52,4],[57,10,52,8],[57,11,52,9,"keyPointers"],[57,22,52,20],[57,25,52,23],[57,26,52,24,"NaN"],[57,29,52,27],[57,31,52,29,"NaN"],[57,34,52,32],[57,35,52,33],[58,6,53,4],[58,10,53,8],[58,11,53,9,"onRotationEnd"],[58,24,53,22],[58,25,53,23],[58,29,53,27],[58,30,53,28],[59,4,54,2],[60,4,55,2,"setKeyPointers"],[60,18,55,16,"setKeyPointers"],[60,19,55,17,"tracker"],[60,26,55,24],[60,28,55,26],[61,6,56,4],[61,10,56,8],[61,14,56,12],[61,15,56,13,"keyPointers"],[61,26,56,24],[61,27,56,25],[61,28,56,26],[61,29,56,27],[61,33,56,31],[61,37,56,35],[61,38,56,36,"keyPointers"],[61,49,56,47],[61,50,56,48],[61,51,56,49],[61,52,56,50],[61,54,56,52],[62,8,57,6],[63,6,58,4],[64,6,59,4],[64,12,59,10,"pointerIDs"],[64,22,59,20],[64,25,59,23,"tracker"],[64,32,59,30],[64,33,59,31,"trackedPointers"],[64,48,59,46],[64,49,59,47,"keys"],[64,53,59,51],[64,54,59,52],[64,55,59,53],[65,6,60,4],[65,10,60,8],[65,11,60,9,"keyPointers"],[65,22,60,20],[65,23,60,21],[65,24,60,22],[65,25,60,23],[65,28,60,26,"pointerIDs"],[65,38,60,36],[65,39,60,37,"next"],[65,43,60,41],[65,44,60,42],[65,45,60,43],[65,46,60,44,"value"],[65,51,60,49],[66,6,61,4],[66,10,61,8],[66,11,61,9,"keyPointers"],[66,22,61,20],[66,23,61,21],[66,24,61,22],[66,25,61,23],[66,28,61,26,"pointerIDs"],[66,38,61,36],[66,39,61,37,"next"],[66,43,61,41],[66,44,61,42],[66,45,61,43],[66,46,61,44,"value"],[66,51,61,49],[67,4,62,2],[68,4,63,2,"onTouchEvent"],[68,16,63,14,"onTouchEvent"],[68,17,63,15,"event"],[68,22,63,20],[68,24,63,22,"tracker"],[68,31,63,29],[68,33,63,31],[69,6,64,4],[69,14,64,12,"event"],[69,19,64,17],[69,20,64,18,"eventType"],[69,29,64,27],[70,8,65,6],[70,13,65,11,"EventTypes"],[70,35,65,21],[70,36,65,22,"DOWN"],[70,40,65,26],[71,10,66,8],[71,14,66,12],[71,15,66,13,"isInProgress"],[71,27,66,25],[71,30,66,28],[71,35,66,33],[72,10,67,8],[73,8,68,6],[73,13,68,11,"EventTypes"],[73,35,68,21],[73,36,68,22,"ADDITIONAL_POINTER_DOWN"],[73,59,68,45],[74,10,69,8],[74,14,69,12],[74,18,69,16],[74,19,69,17,"isInProgress"],[74,31,69,29],[74,33,69,31],[75,12,70,10],[76,10,71,8],[77,10,72,8],[77,14,72,12],[77,15,72,13,"isInProgress"],[77,27,72,25],[77,30,72,28],[77,34,72,32],[78,10,73,8],[78,14,73,12],[78,15,73,13,"previousTime"],[78,27,73,25],[78,30,73,28,"event"],[78,35,73,33],[78,36,73,34,"time"],[78,40,73,38],[79,10,74,8],[79,14,74,12],[79,15,74,13,"previousAngle"],[79,28,74,26],[79,31,74,29,"NaN"],[79,34,74,32],[80,10,75,8],[80,14,75,12],[80,15,75,13,"setKeyPointers"],[80,29,75,27],[80,30,75,28,"tracker"],[80,37,75,35],[80,38,75,36],[81,10,76,8],[81,14,76,12],[81,15,76,13,"updateCurrent"],[81,28,76,26],[81,29,76,27,"event"],[81,34,76,32],[81,36,76,34,"tracker"],[81,43,76,41],[81,44,76,42],[82,10,77,8],[82,14,77,12],[82,15,77,13,"onRotationBegin"],[82,30,77,28],[82,31,77,29],[82,35,77,33],[82,36,77,34],[83,10,78,8],[84,8,79,6],[84,13,79,11,"EventTypes"],[84,35,79,21],[84,36,79,22,"MOVE"],[84,40,79,26],[85,10,80,8],[85,14,80,12],[85,15,80,13],[85,19,80,17],[85,20,80,18,"isInProgress"],[85,32,80,30],[85,34,80,32],[86,12,81,10],[87,10,82,8],[88,10,83,8],[88,14,83,12],[88,15,83,13,"updateCurrent"],[88,28,83,26],[88,29,83,27,"event"],[88,34,83,32],[88,36,83,34,"tracker"],[88,43,83,41],[88,44,83,42],[89,10,84,8],[89,14,84,12],[89,15,84,13,"onRotation"],[89,25,84,23],[89,26,84,24],[89,30,84,28],[89,31,84,29],[90,10,85,8],[91,8,86,6],[91,13,86,11,"EventTypes"],[91,35,86,21],[91,36,86,22,"ADDITIONAL_POINTER_UP"],[91,57,86,43],[92,10,87,8],[92,14,87,12],[92,15,87,13],[92,19,87,17],[92,20,87,18,"isInProgress"],[92,32,87,30],[92,34,87,32],[93,12,88,10],[94,10,89,8],[95,10,90,8],[95,14,90,12],[95,18,90,16],[95,19,90,17,"keyPointers"],[95,30,90,28],[95,31,90,29,"indexOf"],[95,38,90,36],[95,39,90,37,"event"],[95,44,90,42],[95,45,90,43,"pointerId"],[95,54,90,52],[95,55,90,53],[95,59,90,57],[95,60,90,58],[95,62,90,60],[96,12,91,10],[96,16,91,14],[96,17,91,15,"finish"],[96,23,91,21],[96,24,91,22],[96,25,91,23],[97,10,92,8],[98,10,93,8],[99,8,94,6],[99,13,94,11,"EventTypes"],[99,35,94,21],[99,36,94,22,"UP"],[99,38,94,24],[100,10,95,8],[100,14,95,12],[100,18,95,16],[100,19,95,17,"isInProgress"],[100,31,95,29],[100,33,95,31],[101,12,96,10],[101,16,96,14],[101,17,96,15,"finish"],[101,23,96,21],[101,24,96,22],[101,25,96,23],[102,10,97,8],[103,10,98,8],[104,6,99,4],[105,6,100,4],[105,13,100,11],[105,17,100,15],[106,4,101,2],[107,4,102,2,"reset"],[107,9,102,7,"reset"],[107,10,102,7],[107,12,102,10],[108,6,103,4],[108,10,103,8],[108,11,103,9,"keyPointers"],[108,22,103,20],[108,25,103,23],[108,26,103,24,"NaN"],[108,29,103,27],[108,31,103,29,"NaN"],[108,34,103,32],[108,35,103,33],[109,6,104,4],[109,10,104,8],[109,11,104,9,"isInProgress"],[109,23,104,21],[109,26,104,24],[109,31,104,29],[110,4,105,2],[111,4,106,2],[111,8,106,6,"anchorX"],[111,15,106,13,"anchorX"],[111,16,106,13],[111,18,106,16],[112,6,107,4],[112,13,107,11],[112,17,107,15],[112,18,107,16,"_anchorX"],[112,26,107,24],[113,4,108,2],[114,4,109,2],[114,8,109,6,"anchorY"],[114,15,109,13,"anchorY"],[114,16,109,13],[114,18,109,16],[115,6,110,4],[115,13,110,11],[115,17,110,15],[115,18,110,16,"_anchorY"],[115,26,110,24],[116,4,111,2],[117,4,112,2],[117,8,112,6,"rotation"],[117,16,112,14,"rotation"],[117,17,112,14],[117,19,112,17],[118,6,113,4],[118,13,113,11],[118,17,113,15],[118,18,113,16,"_rotation"],[118,27,113,25],[119,4,114,2],[120,4,115,2],[120,8,115,6,"timeDelta"],[120,17,115,15,"timeDelta"],[120,18,115,15],[120,20,115,18],[121,6,116,4],[121,13,116,11],[121,17,116,15],[121,18,116,16,"currentTime"],[121,29,116,27],[121,32,116,30],[121,36,116,34],[121,37,116,35,"previousTime"],[121,49,116,47],[122,4,117,2],[123,2,118,0],[124,2,118,1,"exports"],[124,9,118,1],[124,10,118,1,"default"],[124,17,118,1],[124,20,118,1,"RotationGestureDetector"],[124,43,118,1],[125,0,118,1],[125,3]],"functionMap":{"names":["<global>","RotationGestureDetector","constructor","updateCurrent","finish","setKeyPointers","onTouchEvent","reset","get__anchorX","get__anchorY","get__rotation","get__timeDelta"],"mappings":"AAA;eCG;ECS;GDI;EEC;GF4B;EGC;GHO;EIC;GJO;EKC;GLsC;EMC;GNG;EOC;GPE;EQC;GRE;ESC;GTE;EUC;GVE;CDC"}},"type":"js/module"}]}