{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":49,"index":64}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SimultaneousGesture = exports.ExclusiveGesture = exports.ComposedGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function extendRelation(currentRelation, extendWith) {\n    if (currentRelation === undefined) {\n      return [...extendWith];\n    } else {\n      return [...currentRelation, ...extendWith];\n    }\n  }\n  class ComposedGesture extends _gesture.Gesture {\n    gestures = [];\n    simultaneousGestures = [];\n    requireGesturesToFail = [];\n    constructor(...gestures) {\n      super();\n      this.gestures = gestures;\n    }\n    prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {\n      if (gesture instanceof _gesture.BaseGesture) {\n        const newConfig = {\n          ...gesture.config\n        };\n\n        // No need to extend `blocksHandlers` here, because it's not changed in composition.\n        // The same effect is achieved by reversing the order of 2 gestures in `Exclusive`\n        newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);\n        newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);\n        gesture.config = newConfig;\n      } else if (gesture instanceof ComposedGesture) {\n        gesture.simultaneousGestures = simultaneousGestures;\n        gesture.requireGesturesToFail = requireGesturesToFail;\n        gesture.prepare();\n      }\n    }\n    prepare() {\n      for (const gesture of this.gestures) {\n        this.prepareSingleGesture(gesture, this.simultaneousGestures, this.requireGesturesToFail);\n      }\n    }\n    initialize() {\n      for (const gesture of this.gestures) {\n        gesture.initialize();\n      }\n    }\n    toGestureArray() {\n      return this.gestures.flatMap(gesture => gesture.toGestureArray());\n    }\n  }\n  exports.ComposedGesture = ComposedGesture;\n  class SimultaneousGesture extends ComposedGesture {\n    prepare() {\n      // This piece of magic works something like this:\n      // for every gesture in the array\n      const simultaneousArrays = this.gestures.map(gesture =>\n      // we take the array it's in\n      this.gestures\n      // and make a copy without it\n      .filter(x => x !== gesture)\n      // then we flatmap the result to get list of raw (not composed) gestures\n      // this way we don't make the gestures simultaneous with themselves, which is\n      // important when the gesture is `ExclusiveGesture` - we don't want to make\n      // exclusive gestures simultaneous\n      .flatMap(x => x.toGestureArray()));\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], simultaneousArrays[i], this.requireGesturesToFail);\n      }\n    }\n  }\n  exports.SimultaneousGesture = SimultaneousGesture;\n  class ExclusiveGesture extends ComposedGesture {\n    prepare() {\n      // Transforms the array of gestures into array of grouped raw (not composed) gestures\n      // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n      const gestureArrays = this.gestures.map(gesture => gesture.toGestureArray());\n      let requireToFail = [];\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail));\n\n        // Every group gets to wait for all groups before it\n        requireToFail = requireToFail.concat(gestureArrays[i]);\n      }\n    }\n  }\n  exports.ExclusiveGesture = ExclusiveGesture;\n});","lineCount":91,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"SimultaneousGesture"],[7,29,1,13],[7,32,1,13,"exports"],[7,39,1,13],[7,40,1,13,"ExclusiveGesture"],[7,56,1,13],[7,59,1,13,"exports"],[7,66,1,13],[7,67,1,13,"ComposedGesture"],[7,82,1,13],[8,2,3,0],[8,6,3,0,"_gesture"],[8,14,3,0],[8,17,3,0,"require"],[8,24,3,0],[8,25,3,0,"_dependencyMap"],[8,39,3,0],[9,2,4,0],[9,11,4,9,"extendRelation"],[9,25,4,23,"extendRelation"],[9,26,4,24,"currentRelation"],[9,41,4,39],[9,43,4,41,"extendWith"],[9,53,4,51],[9,55,4,53],[10,4,5,2],[10,8,5,6,"currentRelation"],[10,23,5,21],[10,28,5,26,"undefined"],[10,37,5,35],[10,39,5,37],[11,6,6,4],[11,13,6,11],[11,14,6,12],[11,17,6,15,"extendWith"],[11,27,6,25],[11,28,6,26],[12,4,7,2],[12,5,7,3],[12,11,7,9],[13,6,8,4],[13,13,8,11],[13,14,8,12],[13,17,8,15,"currentRelation"],[13,32,8,30],[13,34,8,32],[13,37,8,35,"extendWith"],[13,47,8,45],[13,48,8,46],[14,4,9,2],[15,2,10,0],[16,2,11,7],[16,8,11,13,"ComposedGesture"],[16,23,11,28],[16,32,11,37,"Gesture"],[16,48,11,44],[16,49,11,45],[17,4,12,2,"gestures"],[17,12,12,10],[17,15,12,13],[17,17,12,15],[18,4,13,2,"simultaneousGestures"],[18,24,13,22],[18,27,13,25],[18,29,13,27],[19,4,14,2,"requireGesturesToFail"],[19,25,14,23],[19,28,14,26],[19,30,14,28],[20,4,15,2,"constructor"],[20,15,15,13,"constructor"],[20,16,15,14],[20,19,15,17,"gestures"],[20,27,15,25],[20,29,15,27],[21,6,16,4],[21,11,16,9],[21,12,16,10],[21,13,16,11],[22,6,17,4],[22,10,17,8],[22,11,17,9,"gestures"],[22,19,17,17],[22,22,17,20,"gestures"],[22,30,17,28],[23,4,18,2],[24,4,19,2,"prepareSingleGesture"],[24,24,19,22,"prepareSingleGesture"],[24,25,19,23,"gesture"],[24,32,19,30],[24,34,19,32,"simultaneousGestures"],[24,54,19,52],[24,56,19,54,"requireGesturesToFail"],[24,77,19,75],[24,79,19,77],[25,6,20,4],[25,10,20,8,"gesture"],[25,17,20,15],[25,29,20,27,"BaseGesture"],[25,49,20,38],[25,51,20,40],[26,8,21,6],[26,14,21,12,"newConfig"],[26,23,21,21],[26,26,21,24],[27,10,22,8],[27,13,22,11,"gesture"],[27,20,22,18],[27,21,22,19,"config"],[28,8,23,6],[28,9,23,7],[30,8,25,6],[31,8,26,6],[32,8,27,6,"newConfig"],[32,17,27,15],[32,18,27,16,"simultaneousWith"],[32,34,27,32],[32,37,27,35,"extendRelation"],[32,51,27,49],[32,52,27,50,"newConfig"],[32,61,27,59],[32,62,27,60,"simultaneousWith"],[32,78,27,76],[32,80,27,78,"simultaneousGestures"],[32,100,27,98],[32,101,27,99],[33,8,28,6,"newConfig"],[33,17,28,15],[33,18,28,16,"requireToFail"],[33,31,28,29],[33,34,28,32,"extendRelation"],[33,48,28,46],[33,49,28,47,"newConfig"],[33,58,28,56],[33,59,28,57,"requireToFail"],[33,72,28,70],[33,74,28,72,"requireGesturesToFail"],[33,95,28,93],[33,96,28,94],[34,8,29,6,"gesture"],[34,15,29,13],[34,16,29,14,"config"],[34,22,29,20],[34,25,29,23,"newConfig"],[34,34,29,32],[35,6,30,4],[35,7,30,5],[35,13,30,11],[35,17,30,15,"gesture"],[35,24,30,22],[35,36,30,34,"ComposedGesture"],[35,51,30,49],[35,53,30,51],[36,8,31,6,"gesture"],[36,15,31,13],[36,16,31,14,"simultaneousGestures"],[36,36,31,34],[36,39,31,37,"simultaneousGestures"],[36,59,31,57],[37,8,32,6,"gesture"],[37,15,32,13],[37,16,32,14,"requireGesturesToFail"],[37,37,32,35],[37,40,32,38,"requireGesturesToFail"],[37,61,32,59],[38,8,33,6,"gesture"],[38,15,33,13],[38,16,33,14,"prepare"],[38,23,33,21],[38,24,33,22],[38,25,33,23],[39,6,34,4],[40,4,35,2],[41,4,36,2,"prepare"],[41,11,36,9,"prepare"],[41,12,36,9],[41,14,36,12],[42,6,37,4],[42,11,37,9],[42,17,37,15,"gesture"],[42,24,37,22],[42,28,37,26],[42,32,37,30],[42,33,37,31,"gestures"],[42,41,37,39],[42,43,37,41],[43,8,38,6],[43,12,38,10],[43,13,38,11,"prepareSingleGesture"],[43,33,38,31],[43,34,38,32,"gesture"],[43,41,38,39],[43,43,38,41],[43,47,38,45],[43,48,38,46,"simultaneousGestures"],[43,68,38,66],[43,70,38,68],[43,74,38,72],[43,75,38,73,"requireGesturesToFail"],[43,96,38,94],[43,97,38,95],[44,6,39,4],[45,4,40,2],[46,4,41,2,"initialize"],[46,14,41,12,"initialize"],[46,15,41,12],[46,17,41,15],[47,6,42,4],[47,11,42,9],[47,17,42,15,"gesture"],[47,24,42,22],[47,28,42,26],[47,32,42,30],[47,33,42,31,"gestures"],[47,41,42,39],[47,43,42,41],[48,8,43,6,"gesture"],[48,15,43,13],[48,16,43,14,"initialize"],[48,26,43,24],[48,27,43,25],[48,28,43,26],[49,6,44,4],[50,4,45,2],[51,4,46,2,"toGestureArray"],[51,18,46,16,"toGestureArray"],[51,19,46,16],[51,21,46,19],[52,6,47,4],[52,13,47,11],[52,17,47,15],[52,18,47,16,"gestures"],[52,26,47,24],[52,27,47,25,"flatMap"],[52,34,47,32],[52,35,47,33,"gesture"],[52,42,47,40],[52,46,47,44,"gesture"],[52,53,47,51],[52,54,47,52,"toGestureArray"],[52,68,47,66],[52,69,47,67],[52,70,47,68],[52,71,47,69],[53,4,48,2],[54,2,49,0],[55,2,49,1,"exports"],[55,9,49,1],[55,10,49,1,"ComposedGesture"],[55,25,49,1],[55,28,49,1,"ComposedGesture"],[55,43,49,1],[56,2,50,7],[56,8,50,13,"SimultaneousGesture"],[56,27,50,32],[56,36,50,41,"ComposedGesture"],[56,51,50,56],[56,52,50,57],[57,4,51,2,"prepare"],[57,11,51,9,"prepare"],[57,12,51,9],[57,14,51,12],[58,6,52,4],[59,6,53,4],[60,6,54,4],[60,12,54,10,"simultaneousArrays"],[60,30,54,28],[60,33,54,31],[60,37,54,35],[60,38,54,36,"gestures"],[60,46,54,44],[60,47,54,45,"map"],[60,50,54,48],[60,51,54,49,"gesture"],[60,58,54,56],[61,6,55,4],[62,6,56,4],[62,10,56,8],[62,11,56,9,"gestures"],[63,6,57,4],[64,6,57,4],[64,7,58,5,"filter"],[64,13,58,11],[64,14,58,12,"x"],[64,15,58,13],[64,19,58,17,"x"],[64,20,58,18],[64,25,58,23,"gesture"],[64,32,58,30],[65,6,59,4],[66,6,60,4],[67,6,61,4],[68,6,62,4],[69,6,62,4],[69,7,63,5,"flatMap"],[69,14,63,12],[69,15,63,13,"x"],[69,16,63,14],[69,20,63,18,"x"],[69,21,63,19],[69,22,63,20,"toGestureArray"],[69,36,63,34],[69,37,63,35],[69,38,63,36],[69,39,63,37],[69,40,63,38],[70,6,64,4],[70,11,64,9],[70,15,64,13,"i"],[70,16,64,14],[70,19,64,17],[70,20,64,18],[70,22,64,20,"i"],[70,23,64,21],[70,26,64,24],[70,30,64,28],[70,31,64,29,"gestures"],[70,39,64,37],[70,40,64,38,"length"],[70,46,64,44],[70,48,64,46,"i"],[70,49,64,47],[70,51,64,49],[70,53,64,51],[71,8,65,6],[71,12,65,10],[71,13,65,11,"prepareSingleGesture"],[71,33,65,31],[71,34,65,32],[71,38,65,36],[71,39,65,37,"gestures"],[71,47,65,45],[71,48,65,46,"i"],[71,49,65,47],[71,50,65,48],[71,52,65,50,"simultaneousArrays"],[71,70,65,68],[71,71,65,69,"i"],[71,72,65,70],[71,73,65,71],[71,75,65,73],[71,79,65,77],[71,80,65,78,"requireGesturesToFail"],[71,101,65,99],[71,102,65,100],[72,6,66,4],[73,4,67,2],[74,2,68,0],[75,2,68,1,"exports"],[75,9,68,1],[75,10,68,1,"SimultaneousGesture"],[75,29,68,1],[75,32,68,1,"SimultaneousGesture"],[75,51,68,1],[76,2,69,7],[76,8,69,13,"ExclusiveGesture"],[76,24,69,29],[76,33,69,38,"ComposedGesture"],[76,48,69,53],[76,49,69,54],[77,4,70,2,"prepare"],[77,11,70,9,"prepare"],[77,12,70,9],[77,14,70,12],[78,6,71,4],[79,6,72,4],[80,6,73,4],[80,12,73,10,"gestureArrays"],[80,25,73,23],[80,28,73,26],[80,32,73,30],[80,33,73,31,"gestures"],[80,41,73,39],[80,42,73,40,"map"],[80,45,73,43],[80,46,73,44,"gesture"],[80,53,73,51],[80,57,73,55,"gesture"],[80,64,73,62],[80,65,73,63,"toGestureArray"],[80,79,73,77],[80,80,73,78],[80,81,73,79],[80,82,73,80],[81,6,74,4],[81,10,74,8,"requireToFail"],[81,23,74,21],[81,26,74,24],[81,28,74,26],[82,6,75,4],[82,11,75,9],[82,15,75,13,"i"],[82,16,75,14],[82,19,75,17],[82,20,75,18],[82,22,75,20,"i"],[82,23,75,21],[82,26,75,24],[82,30,75,28],[82,31,75,29,"gestures"],[82,39,75,37],[82,40,75,38,"length"],[82,46,75,44],[82,48,75,46,"i"],[82,49,75,47],[82,51,75,49],[82,53,75,51],[83,8,76,6],[83,12,76,10],[83,13,76,11,"prepareSingleGesture"],[83,33,76,31],[83,34,76,32],[83,38,76,36],[83,39,76,37,"gestures"],[83,47,76,45],[83,48,76,46,"i"],[83,49,76,47],[83,50,76,48],[83,52,76,50],[83,56,76,54],[83,57,76,55,"simultaneousGestures"],[83,77,76,75],[83,79,76,77],[83,83,76,81],[83,84,76,82,"requireGesturesToFail"],[83,105,76,103],[83,106,76,104,"concat"],[83,112,76,110],[83,113,76,111,"requireToFail"],[83,126,76,124],[83,127,76,125],[83,128,76,126],[85,8,78,6],[86,8,79,6,"requireToFail"],[86,21,79,19],[86,24,79,22,"requireToFail"],[86,37,79,35],[86,38,79,36,"concat"],[86,44,79,42],[86,45,79,43,"gestureArrays"],[86,58,79,56],[86,59,79,57,"i"],[86,60,79,58],[86,61,79,59],[86,62,79,60],[87,6,80,4],[88,4,81,2],[89,2,82,0],[90,2,82,1,"exports"],[90,9,82,1],[90,10,82,1,"ExclusiveGesture"],[90,26,82,1],[90,29,82,1,"ExclusiveGesture"],[90,45,82,1],[91,0,82,1],[91,3]],"functionMap":{"names":["<global>","extendRelation","ComposedGesture","ComposedGesture#constructor","ComposedGesture#prepareSingleGesture","ComposedGesture#prepare","ComposedGesture#initialize","ComposedGesture#toGestureArray","gestures.flatMap$argument_0","SimultaneousGesture","SimultaneousGesture#prepare","gestures.map$argument_0","gestures.filter$argument_0","gestures.filter.flatMap$argument_0","ExclusiveGesture","ExclusiveGesture#prepare"],"mappings":"AAA;ACG;CDM;OEC;ECI;GDG;EEC;GFgB;EGC;GHI;EIC;GJI;EKC;iCCC,mCD;GLC;CFC;OSC;ECC;iDCG;YCI,kBD;aEK,uBF,CD;GDI;CTC;OcC;ECC;4CJG,mCI;GDQ;CdC"}},"type":"js/module"}]}