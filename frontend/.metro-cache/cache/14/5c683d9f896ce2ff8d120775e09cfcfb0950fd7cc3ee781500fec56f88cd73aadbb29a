{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":49,"index":260}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ForceTouchGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        forceChange: current.force\n      };\n    } else {\n      changePayload = {\n        forceChange: current.force - previous.force\n      };\n    }\n    return Object.assign({}, current, changePayload);\n  }\n  class ForceTouchGesture extends _gesture.ContinousBaseGesture {\n    constructor() {\n      super();\n      _defineProperty(this, \"config\", {});\n      this.handlerName = 'ForceTouchGestureHandler';\n    }\n    /**\n     * A minimal pressure that is required before gesture can activate.\n     * Should be a value from range [0.0, 1.0]. Default is 0.2.\n     * @param force\n     */\n\n    minForce(force) {\n      this.config.minForce = force;\n      return this;\n    }\n    /**\n     * A maximal pressure that could be applied for gesture.\n     * If the pressure is greater, gesture fails. Should be a value from range [0.0, 1.0].\n     * @param force\n     */\n\n    maxForce(force) {\n      this.config.maxForce = force;\n      return this;\n    }\n    /**\n     * Value defining if haptic feedback has to be performed on activation.\n     * @param value\n     */\n\n    feedbackOnActivation(value) {\n      this.config.feedbackOnActivation = value;\n      return this;\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, ForceTouchGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n  exports.ForceTouchGesture = ForceTouchGesture;\n});","lineCount":77,"map":[[6,2,3,0],[6,6,3,0,"_gesture"],[6,14,3,0],[6,17,3,0,"require"],[6,24,3,0],[6,25,3,0,"_dependencyMap"],[6,39,3,0],[7,2,1,0],[7,11,1,9,"_defineProperty"],[7,26,1,24,"_defineProperty"],[7,27,1,25,"obj"],[7,30,1,28],[7,32,1,30,"key"],[7,35,1,33],[7,37,1,35,"value"],[7,42,1,40],[7,44,1,42],[8,4,1,44],[8,8,1,48,"key"],[8,11,1,51],[8,15,1,55,"obj"],[8,18,1,58],[8,20,1,60],[9,6,1,62,"Object"],[9,12,1,68],[9,13,1,69,"defineProperty"],[9,27,1,83],[9,28,1,84,"obj"],[9,31,1,87],[9,33,1,89,"key"],[9,36,1,92],[9,38,1,94],[10,8,1,96,"value"],[10,13,1,101],[10,15,1,103,"value"],[10,20,1,108],[11,8,1,110,"enumerable"],[11,18,1,120],[11,20,1,122],[11,24,1,126],[12,8,1,128,"configurable"],[12,20,1,140],[12,22,1,142],[12,26,1,146],[13,8,1,148,"writable"],[13,16,1,156],[13,18,1,158],[14,6,1,163],[14,7,1,164],[14,8,1,165],[15,4,1,167],[15,5,1,168],[15,11,1,174],[16,6,1,176,"obj"],[16,9,1,179],[16,10,1,180,"key"],[16,13,1,183],[16,14,1,184],[16,17,1,187,"value"],[16,22,1,192],[17,4,1,194],[18,4,1,196],[18,11,1,203,"obj"],[18,14,1,206],[19,2,1,208],[20,2,5,0],[20,11,5,9,"changeEventCalculator"],[20,32,5,30,"changeEventCalculator"],[20,33,5,31,"current"],[20,40,5,38],[20,42,5,40,"previous"],[20,50,5,48],[20,52,5,50],[21,4,6,2],[21,13,6,11],[23,4,8,2],[23,8,8,6,"changePayload"],[23,21,8,19],[24,4,10,2],[24,8,10,6,"previous"],[24,16,10,14],[24,21,10,19,"undefined"],[24,30,10,28],[24,32,10,30],[25,6,11,4,"changePayload"],[25,19,11,17],[25,22,11,20],[26,8,12,6,"forceChange"],[26,19,12,17],[26,21,12,19,"current"],[26,28,12,26],[26,29,12,27,"force"],[27,6,13,4],[27,7,13,5],[28,4,14,2],[28,5,14,3],[28,11,14,9],[29,6,15,4,"changePayload"],[29,19,15,17],[29,22,15,20],[30,8,16,6,"forceChange"],[30,19,16,17],[30,21,16,19,"current"],[30,28,16,26],[30,29,16,27,"force"],[30,34,16,32],[30,37,16,35,"previous"],[30,45,16,43],[30,46,16,44,"force"],[31,6,17,4],[31,7,17,5],[32,4,18,2],[33,4,20,2],[33,11,20,2,"Object"],[33,17,20,2],[33,18,20,2,"assign"],[33,24,20,2],[33,29,20,14,"current"],[33,36,20,21],[33,38,21,7,"changePayload"],[33,51,21,20],[34,2,23,0],[35,2,25,7],[35,8,25,13,"ForceTouchGesture"],[35,25,25,30],[35,34,25,39,"ContinousBaseGesture"],[35,63,25,59],[35,64,25,60],[36,4,26,2,"constructor"],[36,15,26,13,"constructor"],[36,16,26,13],[36,18,26,16],[37,6,27,4],[37,11,27,9],[37,12,27,10],[37,13,27,11],[38,6,29,4,"_defineProperty"],[38,21,29,19],[38,22,29,20],[38,26,29,24],[38,28,29,26],[38,36,29,34],[38,38,29,36],[38,39,29,37],[38,40,29,38],[38,41,29,39],[39,6,31,4],[39,10,31,8],[39,11,31,9,"handlerName"],[39,22,31,20],[39,25,31,23],[39,51,31,49],[40,4,32,2],[41,4,33,2],[42,0,34,0],[43,0,35,0],[44,0,36,0],[45,0,37,0],[47,4,40,2,"minForce"],[47,12,40,10,"minForce"],[47,13,40,11,"force"],[47,18,40,16],[47,20,40,18],[48,6,41,4],[48,10,41,8],[48,11,41,9,"config"],[48,17,41,15],[48,18,41,16,"minForce"],[48,26,41,24],[48,29,41,27,"force"],[48,34,41,32],[49,6,42,4],[49,13,42,11],[49,17,42,15],[50,4,43,2],[51,4,44,2],[52,0,45,0],[53,0,46,0],[54,0,47,0],[55,0,48,0],[57,4,51,2,"maxForce"],[57,12,51,10,"maxForce"],[57,13,51,11,"force"],[57,18,51,16],[57,20,51,18],[58,6,52,4],[58,10,52,8],[58,11,52,9,"config"],[58,17,52,15],[58,18,52,16,"maxForce"],[58,26,52,24],[58,29,52,27,"force"],[58,34,52,32],[59,6,53,4],[59,13,53,11],[59,17,53,15],[60,4,54,2],[61,4,55,2],[62,0,56,0],[63,0,57,0],[64,0,58,0],[66,4,61,2,"feedbackOnActivation"],[66,24,61,22,"feedbackOnActivation"],[66,25,61,23,"value"],[66,30,61,28],[66,32,61,30],[67,6,62,4],[67,10,62,8],[67,11,62,9,"config"],[67,17,62,15],[67,18,62,16,"feedbackOnActivation"],[67,38,62,36],[67,41,62,39,"value"],[67,46,62,44],[68,6,63,4],[68,13,63,11],[68,17,63,15],[69,4,64,2],[70,4,66,2,"onChange"],[70,12,66,10,"onChange"],[70,13,66,11,"callback"],[70,21,66,19],[70,23,66,21],[71,6,67,4],[72,6,68,4],[72,10,68,8],[72,11,68,9,"handlers"],[72,19,68,17],[72,20,68,18,"changeEventCalculator"],[72,41,68,39],[72,44,68,42,"changeEventCalculator"],[72,65,68,63],[73,6,69,4],[73,13,69,11],[73,18,69,16],[73,19,69,17,"onChange"],[73,27,69,25],[73,28,69,26,"callback"],[73,36,69,34],[73,37,69,35],[74,4,70,2],[75,2,72,0],[76,2,72,1,"exports"],[76,9,72,1],[76,10,72,1,"ForceTouchGesture"],[76,27,72,1],[76,30,72,1,"ForceTouchGesture"],[76,47,72,1],[77,0,72,1],[77,3]],"functionMap":{"names":["_defineProperty","<global>","changeEventCalculator","ForceTouchGesture","ForceTouchGesture#constructor","ForceTouchGesture#minForce","ForceTouchGesture#maxForce","ForceTouchGesture#feedbackOnActivation","ForceTouchGesture#onChange"],"mappings":"AAA,iNC;ACI;CDkB;OEE;ECC;GDM;EEQ;GFG;EGQ;GHG;EIO;GJG;EKE;GLI;CFE"}},"type":"js/module"}]}