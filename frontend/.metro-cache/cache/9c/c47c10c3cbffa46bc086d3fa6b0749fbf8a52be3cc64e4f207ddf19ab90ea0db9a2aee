{"dependencies":[{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":14,"index":29},"end":{"line":3,"column":36,"index":51}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI=","exportNames":["*"]}},{"name":"events","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":74},"end":{"line":4,"column":31,"index":91}}],"key":"JsYPPZbiyTKGtgYi4nFi37XasmQ=","exportNames":["*"]}},{"name":"util","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":14,"index":120},"end":{"line":5,"column":29,"index":135}}],"key":"plO20G0zye191TqKMAMeOagk9EI=","exportNames":["*"]}},{"name":"../streams","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":14,"index":151},"end":{"line":6,"column":35,"index":172}}],"key":"WRUzKzhibAq1os0OAP69Ig38Ruo=","exportNames":["*"]}},{"name":"./headers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":14,"index":188},"end":{"line":7,"column":34,"index":208}}],"key":"SdGU1FC4qA8Bbw1qN5wwnqOr8gw=","exportNames":["*"]}},{"name":"./stream_reader","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":14,"index":224},"end":{"line":8,"column":40,"index":250}}],"key":"5JwNNfXke2GyVkj7xgDsuqHv4Y0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var Buffer = require(_dependencyMap[0], \"safe-buffer\").Buffer,\n    Emitter = require(_dependencyMap[1], \"events\").EventEmitter,\n    util = require(_dependencyMap[2], \"util\"),\n    streams = require(_dependencyMap[3], \"../streams\"),\n    Headers = require(_dependencyMap[4], \"./headers\"),\n    Reader = require(_dependencyMap[5], \"./stream_reader\");\n  var Base = function (request, url, options) {\n    Emitter.call(this);\n    Base.validateOptions(options || {}, ['maxLength', 'masking', 'requireMasking', 'protocols']);\n    this._request = request;\n    this._reader = new Reader();\n    this._options = options || {};\n    this._maxLength = this._options.maxLength || this.MAX_LENGTH;\n    this._headers = new Headers();\n    this.__queue = [];\n    this.readyState = 0;\n    this.url = url;\n    this.io = new streams.IO(this);\n    this.messages = new streams.Messages(this);\n    this._bindEventListeners();\n  };\n  util.inherits(Base, Emitter);\n  Base.isWebSocket = function (request) {\n    var connection = request.headers.connection || '',\n      upgrade = request.headers.upgrade || '';\n    return request.method === 'GET' && connection.toLowerCase().split(/ *, */).indexOf('upgrade') >= 0 && upgrade.toLowerCase() === 'websocket';\n  };\n  Base.validateOptions = function (options, validKeys) {\n    for (var key in options) {\n      if (validKeys.indexOf(key) < 0) throw new Error('Unrecognized option: ' + key);\n    }\n  };\n  var instance = {\n    // This is 64MB, small enough for an average VPS to handle without\n    // crashing from process out of memory\n    MAX_LENGTH: 0x3ffffff,\n    STATES: ['connecting', 'open', 'closing', 'closed'],\n    _bindEventListeners: function () {\n      var self = this;\n\n      // Protocol errors are informational and do not have to be handled\n      this.messages.on('error', function () {});\n      this.on('message', function (event) {\n        var messages = self.messages;\n        if (messages.readable) messages.emit('data', event.data);\n      });\n      this.on('error', function (error) {\n        var messages = self.messages;\n        if (messages.readable) messages.emit('error', error);\n      });\n      this.on('close', function () {\n        var messages = self.messages;\n        if (!messages.readable) return;\n        messages.readable = messages.writable = false;\n        messages.emit('end');\n      });\n    },\n    getState: function () {\n      return this.STATES[this.readyState] || null;\n    },\n    addExtension: function (extension) {\n      return false;\n    },\n    setHeader: function (name, value) {\n      if (this.readyState > 0) return false;\n      this._headers.set(name, value);\n      return true;\n    },\n    start: function () {\n      if (this.readyState !== 0) return false;\n      if (!Base.isWebSocket(this._request)) return this._failHandshake(new Error('Not a WebSocket request'));\n      var response;\n      try {\n        response = this._handshakeResponse();\n      } catch (error) {\n        return this._failHandshake(error);\n      }\n      this._write(response);\n      if (this._stage !== -1) this._open();\n      return true;\n    },\n    _failHandshake: function (error) {\n      var headers = new Headers();\n      headers.set('Content-Type', 'text/plain');\n      headers.set('Content-Length', Buffer.byteLength(error.message, 'utf8'));\n      headers = ['HTTP/1.1 400 Bad Request', headers.toString(), error.message];\n      this._write(Buffer.from(headers.join('\\r\\n'), 'utf8'));\n      this._fail('protocol_error', error.message);\n      return false;\n    },\n    text: function (message) {\n      return this.frame(message);\n    },\n    binary: function (message) {\n      return false;\n    },\n    ping: function () {\n      return false;\n    },\n    pong: function () {\n      return false;\n    },\n    close: function (reason, code) {\n      if (this.readyState !== 1) return false;\n      this.readyState = 3;\n      this.emit('close', new Base.CloseEvent(null, null));\n      return true;\n    },\n    _open: function () {\n      this.readyState = 1;\n      this.__queue.forEach(function (args) {\n        this.frame.apply(this, args);\n      }, this);\n      this.__queue = [];\n      this.emit('open', new Base.OpenEvent());\n    },\n    _queue: function (message) {\n      this.__queue.push(message);\n      return true;\n    },\n    _write: function (chunk) {\n      var io = this.io;\n      if (io.readable) io.emit('data', chunk);\n    },\n    _fail: function (type, message) {\n      this.readyState = 2;\n      this.emit('error', new Error(message));\n      this.close();\n    }\n  };\n  for (var key in instance) Base.prototype[key] = instance[key];\n  Base.ConnectEvent = function () {};\n  Base.OpenEvent = function () {};\n  Base.CloseEvent = function (code, reason) {\n    this.code = code;\n    this.reason = reason;\n  };\n  Base.MessageEvent = function (data) {\n    this.data = data;\n  };\n  Base.PingEvent = function (data) {\n    this.data = data;\n  };\n  Base.PongEvent = function (data) {\n    this.data = data;\n  };\n  module.exports = Base;\n});","lineCount":151,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"Buffer"],[4,12,3,10],[4,15,3,14,"require"],[4,22,3,21],[4,23,3,21,"_dependencyMap"],[4,37,3,21],[4,55,3,35],[4,56,3,36],[4,57,3,37,"Buffer"],[4,63,3,43],[5,4,4,4,"Emitter"],[5,11,4,11],[5,14,4,14,"require"],[5,21,4,21],[5,22,4,21,"_dependencyMap"],[5,36,4,21],[5,49,4,30],[5,50,4,31],[5,51,4,32,"EventEmitter"],[5,63,4,44],[6,4,5,4,"util"],[6,8,5,8],[6,11,5,14,"require"],[6,18,5,21],[6,19,5,21,"_dependencyMap"],[6,33,5,21],[6,44,5,28],[6,45,5,29],[7,4,6,4,"streams"],[7,11,6,11],[7,14,6,14,"require"],[7,21,6,21],[7,22,6,21,"_dependencyMap"],[7,36,6,21],[7,53,6,34],[7,54,6,35],[8,4,7,4,"Headers"],[8,11,7,11],[8,14,7,14,"require"],[8,21,7,21],[8,22,7,21,"_dependencyMap"],[8,36,7,21],[8,52,7,33],[8,53,7,34],[9,4,8,4,"Reader"],[9,10,8,10],[9,13,8,14,"require"],[9,20,8,21],[9,21,8,21,"_dependencyMap"],[9,35,8,21],[9,57,8,39],[9,58,8,40],[10,2,10,0],[10,6,10,4,"Base"],[10,10,10,8],[10,13,10,11],[10,22,10,11,"Base"],[10,23,10,20,"request"],[10,30,10,27],[10,32,10,29,"url"],[10,35,10,32],[10,37,10,34,"options"],[10,44,10,41],[10,46,10,43],[11,4,11,2,"Emitter"],[11,11,11,9],[11,12,11,10,"call"],[11,16,11,14],[11,17,11,15],[11,21,11,19],[11,22,11,20],[12,4,12,2,"Base"],[12,8,12,6],[12,9,12,7,"validateOptions"],[12,24,12,22],[12,25,12,23,"options"],[12,32,12,30],[12,36,12,34],[12,37,12,35],[12,38,12,36],[12,40,12,38],[12,41,12,39],[12,52,12,50],[12,54,12,52],[12,63,12,61],[12,65,12,63],[12,81,12,79],[12,83,12,81],[12,94,12,92],[12,95,12,93],[12,96,12,94],[13,4,14,2],[13,8,14,6],[13,9,14,7,"_request"],[13,17,14,15],[13,20,14,20,"request"],[13,27,14,27],[14,4,15,2],[14,8,15,6],[14,9,15,7,"_reader"],[14,16,15,14],[14,19,15,20],[14,23,15,24,"Reader"],[14,29,15,30],[14,30,15,31],[14,31,15,32],[15,4,16,2],[15,8,16,6],[15,9,16,7,"_options"],[15,17,16,15],[15,20,16,20,"options"],[15,27,16,27],[15,31,16,31],[15,32,16,32],[15,33,16,33],[16,4,17,2],[16,8,17,6],[16,9,17,7,"_maxLength"],[16,19,17,17],[16,22,17,20],[16,26,17,24],[16,27,17,25,"_options"],[16,35,17,33],[16,36,17,34,"maxLength"],[16,45,17,43],[16,49,17,47],[16,53,17,51],[16,54,17,52,"MAX_LENGTH"],[16,64,17,62],[17,4,18,2],[17,8,18,6],[17,9,18,7,"_headers"],[17,17,18,15],[17,20,18,20],[17,24,18,24,"Headers"],[17,31,18,31],[17,32,18,32],[17,33,18,33],[18,4,19,2],[18,8,19,6],[18,9,19,7,"__queue"],[18,16,19,14],[18,19,19,20],[18,21,19,22],[19,4,20,2],[19,8,20,6],[19,9,20,7,"readyState"],[19,19,20,17],[19,22,20,20],[19,23,20,21],[20,4,21,2],[20,8,21,6],[20,9,21,7,"url"],[20,12,21,10],[20,15,21,20,"url"],[20,18,21,23],[21,4,23,2],[21,8,23,6],[21,9,23,7,"io"],[21,11,23,9],[21,14,23,12],[21,18,23,16,"streams"],[21,25,23,23],[21,26,23,24,"IO"],[21,28,23,26],[21,29,23,27],[21,33,23,31],[21,34,23,32],[22,4,24,2],[22,8,24,6],[22,9,24,7,"messages"],[22,17,24,15],[22,20,24,18],[22,24,24,22,"streams"],[22,31,24,29],[22,32,24,30,"Messages"],[22,40,24,38],[22,41,24,39],[22,45,24,43],[22,46,24,44],[23,4,25,2],[23,8,25,6],[23,9,25,7,"_bindEventListeners"],[23,28,25,26],[23,29,25,27],[23,30,25,28],[24,2,26,0],[24,3,26,1],[25,2,27,0,"util"],[25,6,27,4],[25,7,27,5,"inherits"],[25,15,27,13],[25,16,27,14,"Base"],[25,20,27,18],[25,22,27,20,"Emitter"],[25,29,27,27],[25,30,27,28],[26,2,29,0,"Base"],[26,6,29,4],[26,7,29,5,"isWebSocket"],[26,18,29,16],[26,21,29,19],[26,31,29,28,"request"],[26,38,29,35],[26,40,29,37],[27,4,30,2],[27,8,30,6,"connection"],[27,18,30,16],[27,21,30,19,"request"],[27,28,30,26],[27,29,30,27,"headers"],[27,36,30,34],[27,37,30,35,"connection"],[27,47,30,45],[27,51,30,49],[27,53,30,51],[28,6,31,6,"upgrade"],[28,13,31,13],[28,16,31,19,"request"],[28,23,31,26],[28,24,31,27,"headers"],[28,31,31,34],[28,32,31,35,"upgrade"],[28,39,31,42],[28,43,31,46],[28,45,31,48],[29,4,33,2],[29,11,33,9,"request"],[29,18,33,16],[29,19,33,17,"method"],[29,25,33,23],[29,30,33,28],[29,35,33,33],[29,39,34,9,"connection"],[29,49,34,19],[29,50,34,20,"toLowerCase"],[29,61,34,31],[29,62,34,32],[29,63,34,33],[29,64,34,34,"split"],[29,69,34,39],[29,70,34,40],[29,77,34,47],[29,78,34,48],[29,79,34,49,"indexOf"],[29,86,34,56],[29,87,34,57],[29,96,34,66],[29,97,34,67],[29,101,34,71],[29,102,34,72],[29,106,35,9,"upgrade"],[29,113,35,16],[29,114,35,17,"toLowerCase"],[29,125,35,28],[29,126,35,29],[29,127,35,30],[29,132,35,35],[29,143,35,46],[30,2,36,0],[30,3,36,1],[31,2,38,0,"Base"],[31,6,38,4],[31,7,38,5,"validateOptions"],[31,22,38,20],[31,25,38,23],[31,35,38,32,"options"],[31,42,38,39],[31,44,38,41,"validKeys"],[31,53,38,50],[31,55,38,52],[32,4,39,2],[32,9,39,7],[32,13,39,11,"key"],[32,16,39,14],[32,20,39,18,"options"],[32,27,39,25],[32,29,39,27],[33,6,40,4],[33,10,40,8,"validKeys"],[33,19,40,17],[33,20,40,18,"indexOf"],[33,27,40,25],[33,28,40,26,"key"],[33,31,40,29],[33,32,40,30],[33,35,40,33],[33,36,40,34],[33,38,41,6],[33,44,41,12],[33,48,41,16,"Error"],[33,53,41,21],[33,54,41,22],[33,77,41,45],[33,80,41,48,"key"],[33,83,41,51],[33,84,41,52],[34,4,42,2],[35,2,43,0],[35,3,43,1],[36,2,45,0],[36,6,45,4,"instance"],[36,14,45,12],[36,17,45,15],[37,4,46,2],[38,4,47,2],[39,4,48,2,"MAX_LENGTH"],[39,14,48,12],[39,16,48,14],[39,25,48,23],[40,4,50,2,"STATES"],[40,10,50,8],[40,12,50,10],[40,13,50,11],[40,25,50,23],[40,27,50,25],[40,33,50,31],[40,35,50,33],[40,44,50,42],[40,46,50,44],[40,54,50,52],[40,55,50,53],[41,4,52,2,"_bindEventListeners"],[41,23,52,21],[41,25,52,23],[41,34,52,23,"_bindEventListeners"],[41,35,52,23],[41,37,52,34],[42,6,53,4],[42,10,53,8,"self"],[42,14,53,12],[42,17,53,15],[42,21,53,19],[44,6,55,4],[45,6,56,4],[45,10,56,8],[45,11,56,9,"messages"],[45,19,56,17],[45,20,56,18,"on"],[45,22,56,20],[45,23,56,21],[45,30,56,28],[45,32,56,30],[45,44,56,41],[45,45,56,42],[45,46,56,43],[45,47,56,44],[46,6,58,4],[46,10,58,8],[46,11,58,9,"on"],[46,13,58,11],[46,14,58,12],[46,23,58,21],[46,25,58,23],[46,35,58,32,"event"],[46,40,58,37],[46,42,58,39],[47,8,59,6],[47,12,59,10,"messages"],[47,20,59,18],[47,23,59,21,"self"],[47,27,59,25],[47,28,59,26,"messages"],[47,36,59,34],[48,8,60,6],[48,12,60,10,"messages"],[48,20,60,18],[48,21,60,19,"readable"],[48,29,60,27],[48,31,60,29,"messages"],[48,39,60,37],[48,40,60,38,"emit"],[48,44,60,42],[48,45,60,43],[48,51,60,49],[48,53,60,51,"event"],[48,58,60,56],[48,59,60,57,"data"],[48,63,60,61],[48,64,60,62],[49,6,61,4],[49,7,61,5],[49,8,61,6],[50,6,63,4],[50,10,63,8],[50,11,63,9,"on"],[50,13,63,11],[50,14,63,12],[50,21,63,19],[50,23,63,21],[50,33,63,30,"error"],[50,38,63,35],[50,40,63,37],[51,8,64,6],[51,12,64,10,"messages"],[51,20,64,18],[51,23,64,21,"self"],[51,27,64,25],[51,28,64,26,"messages"],[51,36,64,34],[52,8,65,6],[52,12,65,10,"messages"],[52,20,65,18],[52,21,65,19,"readable"],[52,29,65,27],[52,31,65,29,"messages"],[52,39,65,37],[52,40,65,38,"emit"],[52,44,65,42],[52,45,65,43],[52,52,65,50],[52,54,65,52,"error"],[52,59,65,57],[52,60,65,58],[53,6,66,4],[53,7,66,5],[53,8,66,6],[54,6,68,4],[54,10,68,8],[54,11,68,9,"on"],[54,13,68,11],[54,14,68,12],[54,21,68,19],[54,23,68,21],[54,35,68,32],[55,8,69,6],[55,12,69,10,"messages"],[55,20,69,18],[55,23,69,21,"self"],[55,27,69,25],[55,28,69,26,"messages"],[55,36,69,34],[56,8,70,6],[56,12,70,10],[56,13,70,11,"messages"],[56,21,70,19],[56,22,70,20,"readable"],[56,30,70,28],[56,32,70,30],[57,8,71,6,"messages"],[57,16,71,14],[57,17,71,15,"readable"],[57,25,71,23],[57,28,71,26,"messages"],[57,36,71,34],[57,37,71,35,"writable"],[57,45,71,43],[57,48,71,46],[57,53,71,51],[58,8,72,6,"messages"],[58,16,72,14],[58,17,72,15,"emit"],[58,21,72,19],[58,22,72,20],[58,27,72,25],[58,28,72,26],[59,6,73,4],[59,7,73,5],[59,8,73,6],[60,4,74,2],[60,5,74,3],[61,4,76,2,"getState"],[61,12,76,10],[61,14,76,12],[61,23,76,12,"getState"],[61,24,76,12],[61,26,76,23],[62,6,77,4],[62,13,77,11],[62,17,77,15],[62,18,77,16,"STATES"],[62,24,77,22],[62,25,77,23],[62,29,77,27],[62,30,77,28,"readyState"],[62,40,77,38],[62,41,77,39],[62,45,77,43],[62,49,77,47],[63,4,78,2],[63,5,78,3],[64,4,80,2,"addExtension"],[64,16,80,14],[64,18,80,16],[64,27,80,16,"addExtension"],[64,28,80,25,"extension"],[64,37,80,34],[64,39,80,36],[65,6,81,4],[65,13,81,11],[65,18,81,16],[66,4,82,2],[66,5,82,3],[67,4,84,2,"setHeader"],[67,13,84,11],[67,15,84,13],[67,24,84,13,"setHeader"],[67,25,84,22,"name"],[67,29,84,26],[67,31,84,28,"value"],[67,36,84,33],[67,38,84,35],[68,6,85,4],[68,10,85,8],[68,14,85,12],[68,15,85,13,"readyState"],[68,25,85,23],[68,28,85,26],[68,29,85,27],[68,31,85,29],[68,38,85,36],[68,43,85,41],[69,6,86,4],[69,10,86,8],[69,11,86,9,"_headers"],[69,19,86,17],[69,20,86,18,"set"],[69,23,86,21],[69,24,86,22,"name"],[69,28,86,26],[69,30,86,28,"value"],[69,35,86,33],[69,36,86,34],[70,6,87,4],[70,13,87,11],[70,17,87,15],[71,4,88,2],[71,5,88,3],[72,4,90,2,"start"],[72,9,90,7],[72,11,90,9],[72,20,90,9,"start"],[72,21,90,9],[72,23,90,20],[73,6,91,4],[73,10,91,8],[73,14,91,12],[73,15,91,13,"readyState"],[73,25,91,23],[73,30,91,28],[73,31,91,29],[73,33,91,31],[73,40,91,38],[73,45,91,43],[74,6,93,4],[74,10,93,8],[74,11,93,9,"Base"],[74,15,93,13],[74,16,93,14,"isWebSocket"],[74,27,93,25],[74,28,93,26],[74,32,93,30],[74,33,93,31,"_request"],[74,41,93,39],[74,42,93,40],[74,44,94,6],[74,51,94,13],[74,55,94,17],[74,56,94,18,"_failHandshake"],[74,70,94,32],[74,71,94,33],[74,75,94,37,"Error"],[74,80,94,42],[74,81,94,43],[74,106,94,68],[74,107,94,69],[74,108,94,70],[75,6,96,4],[75,10,96,8,"response"],[75,18,96,16],[76,6,98,4],[76,10,98,8],[77,8,99,6,"response"],[77,16,99,14],[77,19,99,17],[77,23,99,21],[77,24,99,22,"_handshakeResponse"],[77,42,99,40],[77,43,99,41],[77,44,99,42],[78,6,100,4],[78,7,100,5],[78,8,100,6],[78,15,100,13,"error"],[78,20,100,18],[78,22,100,20],[79,8,101,6],[79,15,101,13],[79,19,101,17],[79,20,101,18,"_failHandshake"],[79,34,101,32],[79,35,101,33,"error"],[79,40,101,38],[79,41,101,39],[80,6,102,4],[81,6,104,4],[81,10,104,8],[81,11,104,9,"_write"],[81,17,104,15],[81,18,104,16,"response"],[81,26,104,24],[81,27,104,25],[82,6,105,4],[82,10,105,8],[82,14,105,12],[82,15,105,13,"_stage"],[82,21,105,19],[82,26,105,24],[82,27,105,25],[82,28,105,26],[82,30,105,28],[82,34,105,32],[82,35,105,33,"_open"],[82,40,105,38],[82,41,105,39],[82,42,105,40],[83,6,106,4],[83,13,106,11],[83,17,106,15],[84,4,107,2],[84,5,107,3],[85,4,109,2,"_failHandshake"],[85,18,109,16],[85,20,109,18],[85,29,109,18,"_failHandshake"],[85,30,109,27,"error"],[85,35,109,32],[85,37,109,34],[86,6,110,4],[86,10,110,8,"headers"],[86,17,110,15],[86,20,110,18],[86,24,110,22,"Headers"],[86,31,110,29],[86,32,110,30],[86,33,110,31],[87,6,111,4,"headers"],[87,13,111,11],[87,14,111,12,"set"],[87,17,111,15],[87,18,111,16],[87,32,111,30],[87,34,111,32],[87,46,111,44],[87,47,111,45],[88,6,112,4,"headers"],[88,13,112,11],[88,14,112,12,"set"],[88,17,112,15],[88,18,112,16],[88,34,112,32],[88,36,112,34,"Buffer"],[88,42,112,40],[88,43,112,41,"byteLength"],[88,53,112,51],[88,54,112,52,"error"],[88,59,112,57],[88,60,112,58,"message"],[88,67,112,65],[88,69,112,67],[88,75,112,73],[88,76,112,74],[88,77,112,75],[89,6,114,4,"headers"],[89,13,114,11],[89,16,114,14],[89,17,114,15],[89,43,114,41],[89,45,114,43,"headers"],[89,52,114,50],[89,53,114,51,"toString"],[89,61,114,59],[89,62,114,60],[89,63,114,61],[89,65,114,63,"error"],[89,70,114,68],[89,71,114,69,"message"],[89,78,114,76],[89,79,114,77],[90,6,115,4],[90,10,115,8],[90,11,115,9,"_write"],[90,17,115,15],[90,18,115,16,"Buffer"],[90,24,115,22],[90,25,115,23,"from"],[90,29,115,27],[90,30,115,28,"headers"],[90,37,115,35],[90,38,115,36,"join"],[90,42,115,40],[90,43,115,41],[90,49,115,47],[90,50,115,48],[90,52,115,50],[90,58,115,56],[90,59,115,57],[90,60,115,58],[91,6,116,4],[91,10,116,8],[91,11,116,9,"_fail"],[91,16,116,14],[91,17,116,15],[91,33,116,31],[91,35,116,33,"error"],[91,40,116,38],[91,41,116,39,"message"],[91,48,116,46],[91,49,116,47],[92,6,118,4],[92,13,118,11],[92,18,118,16],[93,4,119,2],[93,5,119,3],[94,4,121,2,"text"],[94,8,121,6],[94,10,121,8],[94,19,121,8,"text"],[94,20,121,17,"message"],[94,27,121,24],[94,29,121,26],[95,6,122,4],[95,13,122,11],[95,17,122,15],[95,18,122,16,"frame"],[95,23,122,21],[95,24,122,22,"message"],[95,31,122,29],[95,32,122,30],[96,4,123,2],[96,5,123,3],[97,4,125,2,"binary"],[97,10,125,8],[97,12,125,10],[97,21,125,10,"binary"],[97,22,125,19,"message"],[97,29,125,26],[97,31,125,28],[98,6,126,4],[98,13,126,11],[98,18,126,16],[99,4,127,2],[99,5,127,3],[100,4,129,2,"ping"],[100,8,129,6],[100,10,129,8],[100,19,129,8,"ping"],[100,20,129,8],[100,22,129,19],[101,6,130,4],[101,13,130,11],[101,18,130,16],[102,4,131,2],[102,5,131,3],[103,4,133,2,"pong"],[103,8,133,6],[103,10,133,8],[103,19,133,8,"pong"],[103,20,133,8],[103,22,133,19],[104,6,134,6],[104,13,134,13],[104,18,134,18],[105,4,135,2],[105,5,135,3],[106,4,137,2,"close"],[106,9,137,7],[106,11,137,9],[106,20,137,9,"close"],[106,21,137,18,"reason"],[106,27,137,24],[106,29,137,26,"code"],[106,33,137,30],[106,35,137,32],[107,6,138,4],[107,10,138,8],[107,14,138,12],[107,15,138,13,"readyState"],[107,25,138,23],[107,30,138,28],[107,31,138,29],[107,33,138,31],[107,40,138,38],[107,45,138,43],[108,6,139,4],[108,10,139,8],[108,11,139,9,"readyState"],[108,21,139,19],[108,24,139,22],[108,25,139,23],[109,6,140,4],[109,10,140,8],[109,11,140,9,"emit"],[109,15,140,13],[109,16,140,14],[109,23,140,21],[109,25,140,23],[109,29,140,27,"Base"],[109,33,140,31],[109,34,140,32,"CloseEvent"],[109,44,140,42],[109,45,140,43],[109,49,140,47],[109,51,140,49],[109,55,140,53],[109,56,140,54],[109,57,140,55],[110,6,141,4],[110,13,141,11],[110,17,141,15],[111,4,142,2],[111,5,142,3],[112,4,144,2,"_open"],[112,9,144,7],[112,11,144,9],[112,20,144,9,"_open"],[112,21,144,9],[112,23,144,20],[113,6,145,4],[113,10,145,8],[113,11,145,9,"readyState"],[113,21,145,19],[113,24,145,22],[113,25,145,23],[114,6,146,4],[114,10,146,8],[114,11,146,9,"__queue"],[114,18,146,16],[114,19,146,17,"forEach"],[114,26,146,24],[114,27,146,25],[114,37,146,34,"args"],[114,41,146,38],[114,43,146,40],[115,8,146,42],[115,12,146,46],[115,13,146,47,"frame"],[115,18,146,52],[115,19,146,53,"apply"],[115,24,146,58],[115,25,146,59],[115,29,146,63],[115,31,146,65,"args"],[115,35,146,69],[115,36,146,70],[116,6,146,71],[116,7,146,72],[116,9,146,74],[116,13,146,78],[116,14,146,79],[117,6,147,4],[117,10,147,8],[117,11,147,9,"__queue"],[117,18,147,16],[117,21,147,19],[117,23,147,21],[118,6,148,4],[118,10,148,8],[118,11,148,9,"emit"],[118,15,148,13],[118,16,148,14],[118,22,148,20],[118,24,148,22],[118,28,148,26,"Base"],[118,32,148,30],[118,33,148,31,"OpenEvent"],[118,42,148,40],[118,43,148,41],[118,44,148,42],[118,45,148,43],[119,4,149,2],[119,5,149,3],[120,4,151,2,"_queue"],[120,10,151,8],[120,12,151,10],[120,21,151,10,"_queue"],[120,22,151,19,"message"],[120,29,151,26],[120,31,151,28],[121,6,152,4],[121,10,152,8],[121,11,152,9,"__queue"],[121,18,152,16],[121,19,152,17,"push"],[121,23,152,21],[121,24,152,22,"message"],[121,31,152,29],[121,32,152,30],[122,6,153,4],[122,13,153,11],[122,17,153,15],[123,4,154,2],[123,5,154,3],[124,4,156,2,"_write"],[124,10,156,8],[124,12,156,10],[124,21,156,10,"_write"],[124,22,156,19,"chunk"],[124,27,156,24],[124,29,156,26],[125,6,157,4],[125,10,157,8,"io"],[125,12,157,10],[125,15,157,13],[125,19,157,17],[125,20,157,18,"io"],[125,22,157,20],[126,6,158,4],[126,10,158,8,"io"],[126,12,158,10],[126,13,158,11,"readable"],[126,21,158,19],[126,23,158,21,"io"],[126,25,158,23],[126,26,158,24,"emit"],[126,30,158,28],[126,31,158,29],[126,37,158,35],[126,39,158,37,"chunk"],[126,44,158,42],[126,45,158,43],[127,4,159,2],[127,5,159,3],[128,4,161,2,"_fail"],[128,9,161,7],[128,11,161,9],[128,20,161,9,"_fail"],[128,21,161,18,"type"],[128,25,161,22],[128,27,161,24,"message"],[128,34,161,31],[128,36,161,33],[129,6,162,4],[129,10,162,8],[129,11,162,9,"readyState"],[129,21,162,19],[129,24,162,22],[129,25,162,23],[130,6,163,4],[130,10,163,8],[130,11,163,9,"emit"],[130,15,163,13],[130,16,163,14],[130,23,163,21],[130,25,163,23],[130,29,163,27,"Error"],[130,34,163,32],[130,35,163,33,"message"],[130,42,163,40],[130,43,163,41],[130,44,163,42],[131,6,164,4],[131,10,164,8],[131,11,164,9,"close"],[131,16,164,14],[131,17,164,15],[131,18,164,16],[132,4,165,2],[133,2,166,0],[133,3,166,1],[134,2,168,0],[134,7,168,5],[134,11,168,9,"key"],[134,14,168,12],[134,18,168,16,"instance"],[134,26,168,24],[134,28,169,2,"Base"],[134,32,169,6],[134,33,169,7,"prototype"],[134,42,169,16],[134,43,169,17,"key"],[134,46,169,20],[134,47,169,21],[134,50,169,24,"instance"],[134,58,169,32],[134,59,169,33,"key"],[134,62,169,36],[134,63,169,37],[135,2,172,0,"Base"],[135,6,172,4],[135,7,172,5,"ConnectEvent"],[135,19,172,17],[135,22,172,20],[135,34,172,31],[135,35,172,32],[135,36,172,33],[136,2,174,0,"Base"],[136,6,174,4],[136,7,174,5,"OpenEvent"],[136,16,174,14],[136,19,174,17],[136,31,174,28],[136,32,174,29],[136,33,174,30],[137,2,176,0,"Base"],[137,6,176,4],[137,7,176,5,"CloseEvent"],[137,17,176,15],[137,20,176,18],[137,30,176,27,"code"],[137,34,176,31],[137,36,176,33,"reason"],[137,42,176,39],[137,44,176,41],[138,4,177,2],[138,8,177,6],[138,9,177,7,"code"],[138,13,177,11],[138,16,177,16,"code"],[138,20,177,20],[139,4,178,2],[139,8,178,6],[139,9,178,7,"reason"],[139,15,178,13],[139,18,178,16,"reason"],[139,24,178,22],[140,2,179,0],[140,3,179,1],[141,2,181,0,"Base"],[141,6,181,4],[141,7,181,5,"MessageEvent"],[141,19,181,17],[141,22,181,20],[141,32,181,29,"data"],[141,36,181,33],[141,38,181,35],[142,4,182,2],[142,8,182,6],[142,9,182,7,"data"],[142,13,182,11],[142,16,182,14,"data"],[142,20,182,18],[143,2,183,0],[143,3,183,1],[144,2,185,0,"Base"],[144,6,185,4],[144,7,185,5,"PingEvent"],[144,16,185,14],[144,19,185,17],[144,29,185,26,"data"],[144,33,185,30],[144,35,185,32],[145,4,186,2],[145,8,186,6],[145,9,186,7,"data"],[145,13,186,11],[145,16,186,14,"data"],[145,20,186,18],[146,2,187,0],[146,3,187,1],[147,2,189,0,"Base"],[147,6,189,4],[147,7,189,5,"PongEvent"],[147,16,189,14],[147,19,189,17],[147,29,189,26,"data"],[147,33,189,30],[147,35,189,32],[148,4,190,2],[148,8,190,6],[148,9,190,7,"data"],[148,13,190,11],[148,16,190,14,"data"],[148,20,190,18],[149,2,191,0],[149,3,191,1],[150,2,193,0,"module"],[150,8,193,6],[150,9,193,7,"exports"],[150,16,193,14],[150,19,193,17,"Base"],[150,23,193,21],[151,0,193,22],[151,3]],"functionMap":{"names":["<global>","Base","Base.isWebSocket","Base.validateOptions","instance._bindEventListeners","messages.on$argument_1","on$argument_1","instance.getState","instance.addExtension","instance.setHeader","instance.start","instance._failHandshake","instance.text","instance.binary","instance.ping","instance.pong","instance.close","instance._open","__queue.forEach$argument_0","instance._queue","instance._write","instance._fail","Base.ConnectEvent","Base.OpenEvent","Base.CloseEvent","Base.MessageEvent","Base.PingEvent","Base.PongEvent"],"mappings":"AAA;WCS;CDgB;mBEG;CFO;uBGE;CHK;uBIS;8BCI,aD;uBEE;KFG;qBEE;KFG;qBEE;KFK;GJC;YOE;GPE;gBQE;GRE;aSE;GTI;SUE;GViB;kBWE;GXU;QYE;GZE;UaE;GbE;QcE;GdE;QeE;GfE;SgBE;GhBK;SiBE;yBCE,+CD;GjBG;UmBE;GnBG;UoBE;GpBG;SqBE;GrBI;oBsBO,atB;iBuBE,avB;kBwBE;CxBG;oByBE;CzBE;iB0BE;C1BE;iB2BE;C3BE"}},"type":"js/module"}]}