{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":112},"end":{"line":5,"column":36,"index":148}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":149},"end":{"line":6,"column":40,"index":189}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"]}},{"name":"./Errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":190},"end":{"line":7,"column":44,"index":234}}],"key":"Hc24lHtszv0n4sfQahKq/F+wSE4=","exportNames":["*"]}},{"name":"./DraggingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":235},"end":{"line":8,"column":62,"index":297}}],"key":"veIIVtZ+Znwl7KqPaA+sdGzF8LE=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":298},"end":{"line":9,"column":32,"index":330}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /* eslint-disable @eslint-community/eslint-comments/no-unlimited-disable */\n  /* eslint-disable */\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _hammerjs = _interopRequireDefault(require(_dependencyMap[1], \"@egjs/hammerjs\"));\n  var _constants = require(_dependencyMap[2], \"./constants\");\n  var _Errors = require(_dependencyMap[3], \"./Errors\");\n  var _DraggingGestureHandler = _interopRequireDefault(require(_dependencyMap[4], \"./DraggingGestureHandler\"));\n  var _utils = require(_dependencyMap[5], \"./utils\");\n  class FlingGestureHandler extends _DraggingGestureHandler.default {\n    get name() {\n      return 'swipe';\n    }\n    get NativeGestureClass() {\n      return _hammerjs.default.Swipe;\n    }\n    onGestureActivated(event) {\n      this.sendEvent({\n        ...event,\n        eventType: _hammerjs.default.INPUT_MOVE,\n        isFinal: false,\n        isFirst: true\n      });\n      this.isGestureRunning = false;\n      this.hasGestureFailed = false;\n      this.sendEvent({\n        ...event,\n        eventType: _hammerjs.default.INPUT_END,\n        isFinal: true\n      });\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.hasGestureFailed) {\n        return;\n      }\n      // Hammer doesn't send a `cancel` event for taps.\n      // Manually fail the event.\n      if (ev.isFinal) {\n        setTimeout(() => {\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name);\n        // @ts-ignore FIXME(TS)\n        if (gesture.options.enable(gesture, ev)) {\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n    getHammerConfig() {\n      return {\n        // @ts-ignore FIXME(TS)\n        pointers: this.config.numberOfPointers,\n        direction: this.getDirection()\n      };\n    }\n    getTargetDirections(direction) {\n      const directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(_hammerjs.default.DIRECTION_RIGHT);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(_hammerjs.default.DIRECTION_LEFT);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(_hammerjs.default.DIRECTION_UP);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(_hammerjs.default.DIRECTION_DOWN);\n      }\n      // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n      return directions;\n    }\n    getDirection() {\n      // @ts-ignore FIXME(TS)\n      const {\n        direction\n      } = this.getConfig();\n      let directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(_hammerjs.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(_hammerjs.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(_hammerjs.default.DIRECTION_VERTICAL);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(_hammerjs.default.DIRECTION_VERTICAL);\n      }\n      directions = [...new Set(directions)];\n      if (directions.length === 0) return _hammerjs.default.DIRECTION_NONE;\n      if (directions.length === 1) return directions[0];\n      return _hammerjs.default.DIRECTION_ALL;\n    }\n    isGestureEnabledForEvent({\n      numberOfPointers\n    }, _recognizer, {\n      maxPointers: pointerLength\n    }) {\n      const validPointerCount = pointerLength === numberOfPointers;\n      if (!validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n    updateGestureConfig({\n      numberOfPointers = 1,\n      direction,\n      ...props\n    }) {\n      if ((0, _utils.isnan)(direction) || typeof direction !== 'number') {\n        throw new _Errors.GesturePropError('direction', direction, 'number');\n      }\n      return super.updateGestureConfig({\n        numberOfPointers,\n        direction,\n        ...props\n      });\n    }\n  }\n  var _default = exports.default = FlingGestureHandler;\n});","lineCount":139,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,4,0],[6,2,4,0],[6,6,4,0,"_interopRequireDefault"],[6,28,4,0],[6,31,4,0,"require"],[6,38,4,0],[6,39,4,0,"_dependencyMap"],[6,53,4,0],[7,2,4,0,"Object"],[7,8,4,0],[7,9,4,0,"defineProperty"],[7,23,4,0],[7,24,4,0,"exports"],[7,31,4,0],[8,4,4,0,"value"],[8,9,4,0],[9,2,4,0],[10,2,4,0,"exports"],[10,9,4,0],[10,10,4,0,"default"],[10,17,4,0],[11,2,5,0],[11,6,5,0,"_hammerjs"],[11,15,5,0],[11,18,5,0,"_interopRequireDefault"],[11,40,5,0],[11,41,5,0,"require"],[11,48,5,0],[11,49,5,0,"_dependencyMap"],[11,63,5,0],[12,2,6,0],[12,6,6,0,"_constants"],[12,16,6,0],[12,19,6,0,"require"],[12,26,6,0],[12,27,6,0,"_dependencyMap"],[12,41,6,0],[13,2,7,0],[13,6,7,0,"_Errors"],[13,13,7,0],[13,16,7,0,"require"],[13,23,7,0],[13,24,7,0,"_dependencyMap"],[13,38,7,0],[14,2,8,0],[14,6,8,0,"_DraggingGestureHandler"],[14,29,8,0],[14,32,8,0,"_interopRequireDefault"],[14,54,8,0],[14,55,8,0,"require"],[14,62,8,0],[14,63,8,0,"_dependencyMap"],[14,77,8,0],[15,2,9,0],[15,6,9,0,"_utils"],[15,12,9,0],[15,15,9,0,"require"],[15,22,9,0],[15,23,9,0,"_dependencyMap"],[15,37,9,0],[16,2,10,0],[16,8,10,6,"FlingGestureHandler"],[16,27,10,25],[16,36,10,34,"DraggingGestureHandler"],[16,67,10,56],[16,68,10,57],[17,4,11,2],[17,8,11,6,"name"],[17,12,11,10,"name"],[17,13,11,10],[17,15,11,13],[18,6,12,4],[18,13,12,11],[18,20,12,18],[19,4,13,2],[20,4,14,2],[20,8,14,6,"NativeGestureClass"],[20,26,14,24,"NativeGestureClass"],[20,27,14,24],[20,29,14,27],[21,6,15,4],[21,13,15,11,"Hammer"],[21,30,15,17],[21,31,15,18,"Swipe"],[21,36,15,23],[22,4,16,2],[23,4,17,2,"onGestureActivated"],[23,22,17,20,"onGestureActivated"],[23,23,17,21,"event"],[23,28,17,26],[23,30,17,28],[24,6,18,4],[24,10,18,8],[24,11,18,9,"sendEvent"],[24,20,18,18],[24,21,18,19],[25,8,19,6],[25,11,19,9,"event"],[25,16,19,14],[26,8,20,6,"eventType"],[26,17,20,15],[26,19,20,17,"Hammer"],[26,36,20,23],[26,37,20,24,"INPUT_MOVE"],[26,47,20,34],[27,8,21,6,"isFinal"],[27,15,21,13],[27,17,21,15],[27,22,21,20],[28,8,22,6,"isFirst"],[28,15,22,13],[28,17,22,15],[29,6,23,4],[29,7,23,5],[29,8,23,6],[30,6,24,4],[30,10,24,8],[30,11,24,9,"isGestureRunning"],[30,27,24,25],[30,30,24,28],[30,35,24,33],[31,6,25,4],[31,10,25,8],[31,11,25,9,"hasGestureFailed"],[31,27,25,25],[31,30,25,28],[31,35,25,33],[32,6,26,4],[32,10,26,8],[32,11,26,9,"sendEvent"],[32,20,26,18],[32,21,26,19],[33,8,27,6],[33,11,27,9,"event"],[33,16,27,14],[34,8,28,6,"eventType"],[34,17,28,15],[34,19,28,17,"Hammer"],[34,36,28,23],[34,37,28,24,"INPUT_END"],[34,46,28,33],[35,8,29,6,"isFinal"],[35,15,29,13],[35,17,29,15],[36,6,30,4],[36,7,30,5],[36,8,30,6],[37,4,31,2],[38,4,32,2,"onRawEvent"],[38,14,32,12,"onRawEvent"],[38,15,32,13,"ev"],[38,17,32,15],[38,19,32,17],[39,6,33,4],[39,11,33,9],[39,12,33,10,"onRawEvent"],[39,22,33,20],[39,23,33,21,"ev"],[39,25,33,23],[39,26,33,24],[40,6,34,4],[40,10,34,8],[40,14,34,12],[40,15,34,13,"hasGestureFailed"],[40,31,34,29],[40,33,34,31],[41,8,35,6],[42,6,36,4],[43,6,37,4],[44,6,38,4],[45,6,39,4],[45,10,39,8,"ev"],[45,12,39,10],[45,13,39,11,"isFinal"],[45,20,39,18],[45,22,39,20],[46,8,40,6,"setTimeout"],[46,18,40,16],[46,19,40,17],[46,25,40,23],[47,10,41,8],[47,14,41,12],[47,18,41,16],[47,19,41,17,"isGestureRunning"],[47,35,41,33],[47,37,41,35],[48,12,42,10],[48,16,42,14],[48,17,42,15,"cancelEvent"],[48,28,42,26],[48,29,42,27,"ev"],[48,31,42,29],[48,32,42,30],[49,10,43,8],[50,8,44,6],[50,9,44,7],[50,10,44,8],[51,6,45,4],[51,7,45,5],[51,13,45,11],[51,17,45,15],[51,18,45,16],[51,22,45,20],[51,23,45,21,"hasGestureFailed"],[51,39,45,37],[51,43,45,41],[51,44,45,42],[51,48,45,46],[51,49,45,47,"isGestureRunning"],[51,65,45,63],[51,67,45,65],[52,8,46,6],[53,8,47,6],[53,14,47,12,"gesture"],[53,21,47,19],[53,24,47,22],[53,28,47,26],[53,29,47,27,"hammer"],[53,35,47,33],[53,36,47,34,"get"],[53,39,47,37],[53,40,47,38],[53,44,47,42],[53,45,47,43,"name"],[53,49,47,47],[53,50,47,48],[54,8,48,6],[55,8,49,6],[55,12,49,10,"gesture"],[55,19,49,17],[55,20,49,18,"options"],[55,27,49,25],[55,28,49,26,"enable"],[55,34,49,32],[55,35,49,33,"gesture"],[55,42,49,40],[55,44,49,42,"ev"],[55,46,49,44],[55,47,49,45],[55,49,49,47],[56,10,50,8],[56,14,50,12],[56,15,50,13,"onStart"],[56,22,50,20],[56,23,50,21,"ev"],[56,25,50,23],[56,26,50,24],[57,10,51,8],[57,14,51,12],[57,15,51,13,"sendEvent"],[57,24,51,22],[57,25,51,23,"ev"],[57,27,51,25],[57,28,51,26],[58,8,52,6],[59,6,53,4],[60,4,54,2],[61,4,55,2,"getHammerConfig"],[61,19,55,17,"getHammerConfig"],[61,20,55,17],[61,22,55,20],[62,6,56,4],[62,13,56,11],[63,8,57,6],[64,8,58,6,"pointers"],[64,16,58,14],[64,18,58,16],[64,22,58,20],[64,23,58,21,"config"],[64,29,58,27],[64,30,58,28,"numberOfPointers"],[64,46,58,44],[65,8,59,6,"direction"],[65,17,59,15],[65,19,59,17],[65,23,59,21],[65,24,59,22,"getDirection"],[65,36,59,34],[65,37,59,35],[66,6,60,4],[66,7,60,5],[67,4,61,2],[68,4,62,2,"getTargetDirections"],[68,23,62,21,"getTargetDirections"],[68,24,62,22,"direction"],[68,33,62,31],[68,35,62,33],[69,6,63,4],[69,12,63,10,"directions"],[69,22,63,20],[69,25,63,23],[69,27,63,25],[70,6,64,4],[70,10,64,8,"direction"],[70,19,64,17],[70,22,64,20,"Direction"],[70,42,64,29],[70,43,64,30,"RIGHT"],[70,48,64,35],[70,50,64,37],[71,8,65,6,"directions"],[71,18,65,16],[71,19,65,17,"push"],[71,23,65,21],[71,24,65,22,"Hammer"],[71,41,65,28],[71,42,65,29,"DIRECTION_RIGHT"],[71,57,65,44],[71,58,65,45],[72,6,66,4],[73,6,67,4],[73,10,67,8,"direction"],[73,19,67,17],[73,22,67,20,"Direction"],[73,42,67,29],[73,43,67,30,"LEFT"],[73,47,67,34],[73,49,67,36],[74,8,68,6,"directions"],[74,18,68,16],[74,19,68,17,"push"],[74,23,68,21],[74,24,68,22,"Hammer"],[74,41,68,28],[74,42,68,29,"DIRECTION_LEFT"],[74,56,68,43],[74,57,68,44],[75,6,69,4],[76,6,70,4],[76,10,70,8,"direction"],[76,19,70,17],[76,22,70,20,"Direction"],[76,42,70,29],[76,43,70,30,"UP"],[76,45,70,32],[76,47,70,34],[77,8,71,6,"directions"],[77,18,71,16],[77,19,71,17,"push"],[77,23,71,21],[77,24,71,22,"Hammer"],[77,41,71,28],[77,42,71,29,"DIRECTION_UP"],[77,54,71,41],[77,55,71,42],[78,6,72,4],[79,6,73,4],[79,10,73,8,"direction"],[79,19,73,17],[79,22,73,20,"Direction"],[79,42,73,29],[79,43,73,30,"DOWN"],[79,47,73,34],[79,49,73,36],[80,8,74,6,"directions"],[80,18,74,16],[80,19,74,17,"push"],[80,23,74,21],[80,24,74,22,"Hammer"],[80,41,74,28],[80,42,74,29,"DIRECTION_DOWN"],[80,56,74,43],[80,57,74,44],[81,6,75,4],[82,6,76,4],[83,6,77,4],[83,13,77,11,"directions"],[83,23,77,21],[84,4,78,2],[85,4,79,2,"getDirection"],[85,16,79,14,"getDirection"],[85,17,79,14],[85,19,79,17],[86,6,80,4],[87,6,81,4],[87,12,81,10],[88,8,82,6,"direction"],[89,6,83,4],[89,7,83,5],[89,10,83,8],[89,14,83,12],[89,15,83,13,"getConfig"],[89,24,83,22],[89,25,83,23],[89,26,83,24],[90,6,84,4],[90,10,84,8,"directions"],[90,20,84,18],[90,23,84,21],[90,25,84,23],[91,6,85,4],[91,10,85,8,"direction"],[91,19,85,17],[91,22,85,20,"Direction"],[91,42,85,29],[91,43,85,30,"RIGHT"],[91,48,85,35],[91,50,85,37],[92,8,86,6,"directions"],[92,18,86,16],[92,19,86,17,"push"],[92,23,86,21],[92,24,86,22,"Hammer"],[92,41,86,28],[92,42,86,29,"DIRECTION_HORIZONTAL"],[92,62,86,49],[92,63,86,50],[93,6,87,4],[94,6,88,4],[94,10,88,8,"direction"],[94,19,88,17],[94,22,88,20,"Direction"],[94,42,88,29],[94,43,88,30,"LEFT"],[94,47,88,34],[94,49,88,36],[95,8,89,6,"directions"],[95,18,89,16],[95,19,89,17,"push"],[95,23,89,21],[95,24,89,22,"Hammer"],[95,41,89,28],[95,42,89,29,"DIRECTION_HORIZONTAL"],[95,62,89,49],[95,63,89,50],[96,6,90,4],[97,6,91,4],[97,10,91,8,"direction"],[97,19,91,17],[97,22,91,20,"Direction"],[97,42,91,29],[97,43,91,30,"UP"],[97,45,91,32],[97,47,91,34],[98,8,92,6,"directions"],[98,18,92,16],[98,19,92,17,"push"],[98,23,92,21],[98,24,92,22,"Hammer"],[98,41,92,28],[98,42,92,29,"DIRECTION_VERTICAL"],[98,60,92,47],[98,61,92,48],[99,6,93,4],[100,6,94,4],[100,10,94,8,"direction"],[100,19,94,17],[100,22,94,20,"Direction"],[100,42,94,29],[100,43,94,30,"DOWN"],[100,47,94,34],[100,49,94,36],[101,8,95,6,"directions"],[101,18,95,16],[101,19,95,17,"push"],[101,23,95,21],[101,24,95,22,"Hammer"],[101,41,95,28],[101,42,95,29,"DIRECTION_VERTICAL"],[101,60,95,47],[101,61,95,48],[102,6,96,4],[103,6,97,4,"directions"],[103,16,97,14],[103,19,97,17],[103,20,97,18],[103,23,97,21],[103,27,97,25,"Set"],[103,30,97,28],[103,31,97,29,"directions"],[103,41,97,39],[103,42,97,40],[103,43,97,41],[104,6,98,4],[104,10,98,8,"directions"],[104,20,98,18],[104,21,98,19,"length"],[104,27,98,25],[104,32,98,30],[104,33,98,31],[104,35,98,33],[104,42,98,40,"Hammer"],[104,59,98,46],[104,60,98,47,"DIRECTION_NONE"],[104,74,98,61],[105,6,99,4],[105,10,99,8,"directions"],[105,20,99,18],[105,21,99,19,"length"],[105,27,99,25],[105,32,99,30],[105,33,99,31],[105,35,99,33],[105,42,99,40,"directions"],[105,52,99,50],[105,53,99,51],[105,54,99,52],[105,55,99,53],[106,6,100,4],[106,13,100,11,"Hammer"],[106,30,100,17],[106,31,100,18,"DIRECTION_ALL"],[106,44,100,31],[107,4,101,2],[108,4,102,2,"isGestureEnabledForEvent"],[108,28,102,26,"isGestureEnabledForEvent"],[108,29,102,27],[109,6,103,4,"numberOfPointers"],[110,4,104,2],[110,5,104,3],[110,7,104,5,"_recognizer"],[110,18,104,16],[110,20,104,18],[111,6,105,4,"maxPointers"],[111,17,105,15],[111,19,105,17,"pointerLength"],[112,4,106,2],[112,5,106,3],[112,7,106,5],[113,6,107,4],[113,12,107,10,"validPointerCount"],[113,29,107,27],[113,32,107,30,"pointerLength"],[113,45,107,43],[113,50,107,48,"numberOfPointers"],[113,66,107,64],[114,6,108,4],[114,10,108,8],[114,11,108,9,"validPointerCount"],[114,28,108,26],[114,32,108,30],[114,36,108,34],[114,37,108,35,"isGestureRunning"],[114,53,108,51],[114,55,108,53],[115,8,109,6],[115,15,109,13],[116,10,110,8,"failed"],[116,16,110,14],[116,18,110,16],[117,8,111,6],[117,9,111,7],[118,6,112,4],[119,6,113,4],[119,13,113,11],[120,8,114,6,"success"],[120,15,114,13],[120,17,114,15,"validPointerCount"],[121,6,115,4],[121,7,115,5],[122,4,116,2],[123,4,117,2,"updateGestureConfig"],[123,23,117,21,"updateGestureConfig"],[123,24,117,22],[124,6,118,4,"numberOfPointers"],[124,22,118,20],[124,25,118,23],[124,26,118,24],[125,6,119,4,"direction"],[125,15,119,13],[126,6,120,4],[126,9,120,7,"props"],[127,4,121,2],[127,5,121,3],[127,7,121,5],[128,6,122,4],[128,10,122,8],[128,14,122,8,"isnan"],[128,26,122,13],[128,28,122,14,"direction"],[128,37,122,23],[128,38,122,24],[128,42,122,28],[128,49,122,35,"direction"],[128,58,122,44],[128,63,122,49],[128,71,122,57],[128,73,122,59],[129,8,123,6],[129,14,123,12],[129,18,123,16,"GesturePropError"],[129,42,123,32],[129,43,123,33],[129,54,123,44],[129,56,123,46,"direction"],[129,65,123,55],[129,67,123,57],[129,75,123,65],[129,76,123,66],[130,6,124,4],[131,6,125,4],[131,13,125,11],[131,18,125,16],[131,19,125,17,"updateGestureConfig"],[131,38,125,36],[131,39,125,37],[132,8,126,6,"numberOfPointers"],[132,24,126,22],[133,8,127,6,"direction"],[133,17,127,15],[134,8,128,6],[134,11,128,9,"props"],[135,6,129,4],[135,7,129,5],[135,8,129,6],[136,4,130,2],[137,2,131,0],[138,2,131,1],[138,6,131,1,"_default"],[138,14,131,1],[138,17,131,1,"exports"],[138,24,131,1],[138,25,131,1,"default"],[138,32,131,1],[138,35,132,15,"FlingGestureHandler"],[138,54,132,34],[139,0,132,34],[139,3]],"functionMap":{"names":["<global>","FlingGestureHandler","get__name","get__NativeGestureClass","onGestureActivated","onRawEvent","setTimeout$argument_0","getHammerConfig","getTargetDirections","getDirection","isGestureEnabledForEvent","updateGestureConfig"],"mappings":"AAA;ACS;ECC;GDE;EEC;GFE;EGC;GHc;EIC;iBCQ;ODI;GJU;EMC;GNM;EOC;GPgB;EQC;GRsB;ESC;GTc;EUC;GVa;CDC"}},"type":"js/module"}]}