{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":49,"index":64}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RotationGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        rotationChange: current.rotation\n      };\n    } else {\n      changePayload = {\n        rotationChange: current.rotation - previous.rotation\n      };\n    }\n    return Object.assign({}, current, changePayload);\n  }\n  class RotationGesture extends _gesture.ContinousBaseGesture {\n    constructor() {\n      super();\n      this.handlerName = 'RotationGestureHandler';\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, RotationGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n  exports.RotationGesture = RotationGesture;\n});","lineCount":36,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"RotationGesture"],[7,25,1,13],[8,2,3,0],[8,6,3,0,"_gesture"],[8,14,3,0],[8,17,3,0,"require"],[8,24,3,0],[8,25,3,0,"_dependencyMap"],[8,39,3,0],[9,2,4,0],[9,11,4,9,"changeEventCalculator"],[9,32,4,30,"changeEventCalculator"],[9,33,4,31,"current"],[9,40,4,38],[9,42,4,40,"previous"],[9,50,4,48],[9,52,4,50],[10,4,5,2],[10,13,5,11],[12,4,7,2],[12,8,7,6,"changePayload"],[12,21,7,19],[13,4,8,2],[13,8,8,6,"previous"],[13,16,8,14],[13,21,8,19,"undefined"],[13,30,8,28],[13,32,8,30],[14,6,9,4,"changePayload"],[14,19,9,17],[14,22,9,20],[15,8,10,6,"rotationChange"],[15,22,10,20],[15,24,10,22,"current"],[15,31,10,29],[15,32,10,30,"rotation"],[16,6,11,4],[16,7,11,5],[17,4,12,2],[17,5,12,3],[17,11,12,9],[18,6,13,4,"changePayload"],[18,19,13,17],[18,22,13,20],[19,8,14,6,"rotationChange"],[19,22,14,20],[19,24,14,22,"current"],[19,31,14,29],[19,32,14,30,"rotation"],[19,40,14,38],[19,43,14,41,"previous"],[19,51,14,49],[19,52,14,50,"rotation"],[20,6,15,4],[20,7,15,5],[21,4,16,2],[22,4,17,2],[22,11,17,2,"Object"],[22,17,17,2],[22,18,17,2,"assign"],[22,24,17,2],[22,29,18,7,"current"],[22,36,18,14],[22,38,19,7,"changePayload"],[22,51,19,20],[23,2,21,0],[24,2,22,7],[24,8,22,13,"RotationGesture"],[24,23,22,28],[24,32,22,37,"ContinousBaseGesture"],[24,61,22,57],[24,62,22,58],[25,4,23,2,"constructor"],[25,15,23,13,"constructor"],[25,16,23,13],[25,18,23,16],[26,6,24,4],[26,11,24,9],[26,12,24,10],[26,13,24,11],[27,6,25,4],[27,10,25,8],[27,11,25,9,"handlerName"],[27,22,25,20],[27,25,25,23],[27,49,25,47],[28,4,26,2],[29,4,27,2,"onChange"],[29,12,27,10,"onChange"],[29,13,27,11,"callback"],[29,21,27,19],[29,23,27,21],[30,6,28,4],[31,6,29,4],[31,10,29,8],[31,11,29,9,"handlers"],[31,19,29,17],[31,20,29,18,"changeEventCalculator"],[31,41,29,39],[31,44,29,42,"changeEventCalculator"],[31,65,29,63],[32,6,30,4],[32,13,30,11],[32,18,30,16],[32,19,30,17,"onChange"],[32,27,30,25],[32,28,30,26,"callback"],[32,36,30,34],[32,37,30,35],[33,4,31,2],[34,2,32,0],[35,2,32,1,"exports"],[35,9,32,1],[35,10,32,1,"RotationGesture"],[35,25,32,1],[35,28,32,1,"RotationGesture"],[35,43,32,1],[36,0,32,1],[36,3]],"functionMap":{"names":["<global>","changeEventCalculator","RotationGesture","RotationGesture#constructor","RotationGesture#onChange"],"mappings":"AAA;ACG;CDiB;OEC;ECC;GDG;EEC;GFI;CFC"}},"type":"js/module"}]}