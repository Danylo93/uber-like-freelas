{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RotationGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        rotationChange: current.rotation\n      };\n    } else {\n      changePayload = {\n        rotationChange: current.rotation - previous.rotation\n      };\n    }\n    return Object.assign({}, current, changePayload);\n  }\n  class RotationGesture extends _gesture.ContinousBaseGesture {\n    constructor() {\n      super();\n      this.handlerName = 'RotationGestureHandler';\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, RotationGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n  exports.RotationGesture = RotationGesture;\n});","lineCount":34,"map":[[6,2,1,0],[6,6,1,0,"_gesture"],[6,14,1,0],[6,17,1,0,"require"],[6,24,1,0],[6,25,1,0,"_dependencyMap"],[6,39,1,0],[7,2,3,0],[7,11,3,9,"changeEventCalculator"],[7,32,3,30,"changeEventCalculator"],[7,33,3,31,"current"],[7,40,3,38],[7,42,3,40,"previous"],[7,50,3,48],[7,52,3,50],[8,4,4,2],[8,13,4,11],[10,4,6,2],[10,8,6,6,"changePayload"],[10,21,6,19],[11,4,8,2],[11,8,8,6,"previous"],[11,16,8,14],[11,21,8,19,"undefined"],[11,30,8,28],[11,32,8,30],[12,6,9,4,"changePayload"],[12,19,9,17],[12,22,9,20],[13,8,10,6,"rotationChange"],[13,22,10,20],[13,24,10,22,"current"],[13,31,10,29],[13,32,10,30,"rotation"],[14,6,11,4],[14,7,11,5],[15,4,12,2],[15,5,12,3],[15,11,12,9],[16,6,13,4,"changePayload"],[16,19,13,17],[16,22,13,20],[17,8,14,6,"rotationChange"],[17,22,14,20],[17,24,14,22,"current"],[17,31,14,29],[17,32,14,30,"rotation"],[17,40,14,38],[17,43,14,41,"previous"],[17,51,14,49],[17,52,14,50,"rotation"],[18,6,15,4],[18,7,15,5],[19,4,16,2],[20,4,18,2],[20,11,18,2,"Object"],[20,17,18,2],[20,18,18,2,"assign"],[20,24,18,2],[20,29,18,14,"current"],[20,36,18,21],[20,38,19,7,"changePayload"],[20,51,19,20],[21,2,21,0],[22,2,23,7],[22,8,23,13,"RotationGesture"],[22,23,23,28],[22,32,23,37,"ContinousBaseGesture"],[22,61,23,57],[22,62,23,58],[23,4,24,2,"constructor"],[23,15,24,13,"constructor"],[23,16,24,13],[23,18,24,16],[24,6,25,4],[24,11,25,9],[24,12,25,10],[24,13,25,11],[25,6,26,4],[25,10,26,8],[25,11,26,9,"handlerName"],[25,22,26,20],[25,25,26,23],[25,49,26,47],[26,4,27,2],[27,4,29,2,"onChange"],[27,12,29,10,"onChange"],[27,13,29,11,"callback"],[27,21,29,19],[27,23,29,21],[28,6,30,4],[29,6,31,4],[29,10,31,8],[29,11,31,9,"handlers"],[29,19,31,17],[29,20,31,18,"changeEventCalculator"],[29,41,31,39],[29,44,31,42,"changeEventCalculator"],[29,65,31,63],[30,6,32,4],[30,13,32,11],[30,18,32,16],[30,19,32,17,"onChange"],[30,27,32,25],[30,28,32,26,"callback"],[30,36,32,34],[30,37,32,35],[31,4,33,2],[32,2,35,0],[33,2,35,1,"exports"],[33,9,35,1],[33,10,35,1,"RotationGesture"],[33,25,35,1],[33,28,35,1,"RotationGesture"],[33,43,35,1],[34,0,35,1],[34,3]],"functionMap":{"names":["<global>","changeEventCalculator","RotationGesture","RotationGesture#constructor","RotationGesture#onChange"],"mappings":"AAA;ACE;CDkB;OEE;ECC;GDG;EEE;GFI;CFE"}},"type":"js/module"}]}