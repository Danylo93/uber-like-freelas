{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":36,"index":51}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":52},"end":{"line":4,"column":33,"index":85}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":86},"end":{"line":5,"column":89,"index":175}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"]}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":176},"end":{"line":6,"column":62,"index":238}}],"key":"dpOMqAtzFjjUQychI3TYNsYmXQE=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":239},"end":{"line":7,"column":66,"index":305}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _hammerjs = _interopRequireDefault(require(_dependencyMap[1], \"@egjs/hammerjs\"));\n  var _State = require(_dependencyMap[2], \"../State\");\n  var _constants = require(_dependencyMap[3], \"./constants\");\n  var _DiscreteGestureHandler = _interopRequireDefault(require(_dependencyMap[4], \"./DiscreteGestureHandler\"));\n  var _utils = require(_dependencyMap[5], \"./utils\");\n  class PressGestureHandler extends _DiscreteGestureHandler.default {\n    initialEvent = null;\n    get name() {\n      return 'press';\n    }\n    get minDurationMs() {\n      // @ts-ignore FIXME(TS)\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n    get maxDist() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n    get NativeGestureClass() {\n      return _hammerjs.default.Press;\n    }\n    shouldDelayTouches = true;\n    simulateCancelEvent(inputData) {\n      // Long press never starts so we can't rely on the running event boolean.\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n    updateHasCustomActivationCriteria({\n      shouldCancelWhenOutside,\n      maxDistSq\n    }) {\n      return shouldCancelWhenOutside || !(0, _utils.isValidNumber)(maxDistSq);\n    }\n    getState(type) {\n      return {\n        [_hammerjs.default.INPUT_START]: _State.State.BEGAN,\n        [_hammerjs.default.INPUT_MOVE]: _State.State.ACTIVE,\n        [_hammerjs.default.INPUT_END]: _State.State.END,\n        [_hammerjs.default.INPUT_CANCEL]: _State.State.CANCELLED\n      }[type];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    getHammerConfig() {\n      return {\n        ...super.getHammerConfig(),\n        // threshold: this.maxDist,\n        time: this.minDurationMs\n      };\n    }\n    onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n    shouldDelayTouchForEvent({\n      pointerType\n    }) {\n      // Don't disable event for mouse input\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n    onGestureStart(ev) {\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = (0, _utils.fireAfterInterval)(() => {\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && _constants.CONTENT_TOUCHES_DELAY);\n    }\n    sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent({\n        ...ev,\n        eventType: _hammerjs.default.INPUT_MOVE,\n        isFirst: true\n      });\n    }\n    forceInvalidate(event) {\n      super.forceInvalidate(event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.isGestureRunning) {\n        if (ev.isFinal) {\n          let timeout;\n          if (this.visualFeedbackTimer) {\n            // Aesthetic timing for a quick tap.\n            // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n            // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n            timeout = _constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n            this.sendGestureStartedEvent(this.initialEvent);\n            this.initialEvent = null;\n          }\n          (0, _utils.fireAfterInterval)(() => {\n            this.sendEvent({\n              ...ev,\n              eventType: _hammerjs.default.INPUT_END,\n              isFinal: true\n            });\n            // @ts-ignore -- this should explicitly support undefined\n            this.onGestureEnded();\n          }, timeout);\n        } else {\n          this.sendEvent({\n            ...ev,\n            eventType: _hammerjs.default.INPUT_MOVE,\n            isFinal: false\n          });\n        }\n      }\n    }\n    updateGestureConfig({\n      shouldActivateOnStart = false,\n      disallowInterruption = false,\n      shouldCancelWhenOutside = true,\n      minDurationMs = Number.NaN,\n      maxDist = Number.NaN,\n      minPointers = 1,\n      maxPointers = 1,\n      ...props\n    }) {\n      return super.updateGestureConfig({\n        shouldActivateOnStart,\n        disallowInterruption,\n        shouldCancelWhenOutside,\n        minDurationMs,\n        maxDist,\n        minPointers,\n        maxPointers,\n        ...props\n      });\n    }\n  }\n  var _default = exports.default = PressGestureHandler;\n});","lineCount":154,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[9,2,3,0],[9,6,3,0,"_hammerjs"],[9,15,3,0],[9,18,3,0,"_interopRequireDefault"],[9,40,3,0],[9,41,3,0,"require"],[9,48,3,0],[9,49,3,0,"_dependencyMap"],[9,63,3,0],[10,2,4,0],[10,6,4,0,"_State"],[10,12,4,0],[10,15,4,0,"require"],[10,22,4,0],[10,23,4,0,"_dependencyMap"],[10,37,4,0],[11,2,5,0],[11,6,5,0,"_constants"],[11,16,5,0],[11,19,5,0,"require"],[11,26,5,0],[11,27,5,0,"_dependencyMap"],[11,41,5,0],[12,2,6,0],[12,6,6,0,"_DiscreteGestureHandler"],[12,29,6,0],[12,32,6,0,"_interopRequireDefault"],[12,54,6,0],[12,55,6,0,"require"],[12,62,6,0],[12,63,6,0,"_dependencyMap"],[12,77,6,0],[13,2,7,0],[13,6,7,0,"_utils"],[13,12,7,0],[13,15,7,0,"require"],[13,22,7,0],[13,23,7,0,"_dependencyMap"],[13,37,7,0],[14,2,8,0],[14,8,8,6,"PressGestureHandler"],[14,27,8,25],[14,36,8,34,"DiscreteGestureHandler"],[14,67,8,56],[14,68,8,57],[15,4,9,2,"initialEvent"],[15,16,9,14],[15,19,9,17],[15,23,9,21],[16,4,10,2],[16,8,10,6,"name"],[16,12,10,10,"name"],[16,13,10,10],[16,15,10,13],[17,6,11,4],[17,13,11,11],[17,20,11,18],[18,4,12,2],[19,4,13,2],[19,8,13,6,"minDurationMs"],[19,21,13,19,"minDurationMs"],[19,22,13,19],[19,24,13,22],[20,6,14,4],[21,6,15,4],[21,13,15,11],[21,17,15,11,"isnan"],[21,29,15,16],[21,31,15,17],[21,35,15,21],[21,36,15,22,"config"],[21,42,15,28],[21,43,15,29,"minDurationMs"],[21,56,15,42],[21,57,15,43],[21,60,15,46],[21,61,15,47],[21,64,15,50],[21,68,15,54],[21,69,15,55,"config"],[21,75,15,61],[21,76,15,62,"minDurationMs"],[21,89,15,75],[22,4,16,2],[23,4,17,2],[23,8,17,6,"maxDist"],[23,15,17,13,"maxDist"],[23,16,17,13],[23,18,17,16],[24,6,18,4],[24,13,18,11],[24,17,18,11,"isnan"],[24,29,18,16],[24,31,18,17],[24,35,18,21],[24,36,18,22,"config"],[24,42,18,28],[24,43,18,29,"maxDist"],[24,50,18,36],[24,51,18,37],[24,54,18,40],[24,55,18,41],[24,58,18,44],[24,62,18,48],[24,63,18,49,"config"],[24,69,18,55],[24,70,18,56,"maxDist"],[24,77,18,63],[25,4,19,2],[26,4,20,2],[26,8,20,6,"NativeGestureClass"],[26,26,20,24,"NativeGestureClass"],[26,27,20,24],[26,29,20,27],[27,6,21,4],[27,13,21,11,"Hammer"],[27,30,21,17],[27,31,21,18,"Press"],[27,36,21,23],[28,4,22,2],[29,4,23,2,"shouldDelayTouches"],[29,22,23,20],[29,25,23,23],[29,29,23,27],[30,4,24,2,"simulateCancelEvent"],[30,23,24,21,"simulateCancelEvent"],[30,24,24,22,"inputData"],[30,33,24,31],[30,35,24,33],[31,6,25,4],[32,6,26,4],[32,10,26,8],[32,11,26,9,"hasGestureFailed"],[32,27,26,25],[32,30,26,28],[32,34,26,32],[33,6,27,4],[33,10,27,8],[33,11,27,9,"cancelEvent"],[33,22,27,20],[33,23,27,21,"inputData"],[33,32,27,30],[33,33,27,31],[34,4,28,2],[35,4,29,2,"updateHasCustomActivationCriteria"],[35,37,29,35,"updateHasCustomActivationCriteria"],[35,38,29,36],[36,6,30,4,"shouldCancelWhenOutside"],[36,29,30,27],[37,6,31,4,"maxDistSq"],[38,4,32,2],[38,5,32,3],[38,7,32,5],[39,6,33,4],[39,13,33,11,"shouldCancelWhenOutside"],[39,36,33,34],[39,40,33,38],[39,41,33,39],[39,45,33,39,"isValidNumber"],[39,65,33,52],[39,67,33,53,"maxDistSq"],[39,76,33,62],[39,77,33,63],[40,4,34,2],[41,4,35,2,"getState"],[41,12,35,10,"getState"],[41,13,35,11,"type"],[41,17,35,15],[41,19,35,17],[42,6,36,4],[42,13,36,11],[43,8,37,6],[43,9,37,7,"Hammer"],[43,26,37,13],[43,27,37,14,"INPUT_START"],[43,38,37,25],[43,41,37,28,"State"],[43,53,37,33],[43,54,37,34,"BEGAN"],[43,59,37,39],[44,8,38,6],[44,9,38,7,"Hammer"],[44,26,38,13],[44,27,38,14,"INPUT_MOVE"],[44,37,38,24],[44,40,38,27,"State"],[44,52,38,32],[44,53,38,33,"ACTIVE"],[44,59,38,39],[45,8,39,6],[45,9,39,7,"Hammer"],[45,26,39,13],[45,27,39,14,"INPUT_END"],[45,36,39,23],[45,39,39,26,"State"],[45,51,39,31],[45,52,39,32,"END"],[45,55,39,35],[46,8,40,6],[46,9,40,7,"Hammer"],[46,26,40,13],[46,27,40,14,"INPUT_CANCEL"],[46,39,40,26],[46,42,40,29,"State"],[46,54,40,34],[46,55,40,35,"CANCELLED"],[47,6,41,4],[47,7,41,5],[47,8,41,6,"type"],[47,12,41,10],[47,13,41,11],[48,4,42,2],[49,4,43,2,"getConfig"],[49,13,43,11,"getConfig"],[49,14,43,11],[49,16,43,14],[50,6,44,4],[50,10,44,8],[50,11,44,9],[50,15,44,13],[50,16,44,14,"hasCustomActivationCriteria"],[50,43,44,41],[50,45,44,43],[51,8,45,6],[52,8,46,6],[53,8,47,6],[53,15,47,13],[54,10,48,8,"shouldCancelWhenOutside"],[54,33,48,31],[54,35,48,33],[54,39,48,37],[55,10,49,8,"maxDistSq"],[55,19,49,17],[55,21,49,19],[56,8,50,6],[56,9,50,7],[57,6,51,4],[58,6,52,4],[58,13,52,11],[58,17,52,15],[58,18,52,16,"config"],[58,24,52,22],[59,4,53,2],[60,4,54,2,"getHammerConfig"],[60,19,54,17,"getHammerConfig"],[60,20,54,17],[60,22,54,20],[61,6,55,4],[61,13,55,11],[62,8,56,6],[62,11,56,9],[62,16,56,14],[62,17,56,15,"getHammerConfig"],[62,32,56,30],[62,33,56,31],[62,34,56,32],[63,8,57,6],[64,8,58,6,"time"],[64,12,58,10],[64,14,58,12],[64,18,58,16],[64,19,58,17,"minDurationMs"],[65,6,59,4],[65,7,59,5],[66,4,60,2],[67,4,61,2,"onGestureActivated"],[67,22,61,20,"onGestureActivated"],[67,23,61,21,"ev"],[67,25,61,23],[67,27,61,25],[68,6,62,4],[68,10,62,8],[68,11,62,9,"onGestureStart"],[68,25,62,23],[68,26,62,24,"ev"],[68,28,62,26],[68,29,62,27],[69,4,63,2],[70,4,64,2,"shouldDelayTouchForEvent"],[70,28,64,26,"shouldDelayTouchForEvent"],[70,29,64,27],[71,6,65,4,"pointerType"],[72,4,66,2],[72,5,66,3],[72,7,66,5],[73,6,67,4],[74,6,68,4],[74,13,68,11],[74,17,68,15],[74,18,68,16,"shouldDelayTouches"],[74,36,68,34],[74,40,68,38,"pointerType"],[74,51,68,49],[74,56,68,54],[74,63,68,61],[75,4,69,2],[76,4,70,2,"onGestureStart"],[76,18,70,16,"onGestureStart"],[76,19,70,17,"ev"],[76,21,70,19],[76,23,70,21],[77,6,71,4],[77,10,71,8],[77,11,71,9,"isGestureRunning"],[77,27,71,25],[77,30,71,28],[77,34,71,32],[78,6,72,4,"clearTimeout"],[78,18,72,16],[78,19,72,17],[78,23,72,21],[78,24,72,22,"visualFeedbackTimer"],[78,43,72,41],[78,44,72,42],[79,6,73,4],[79,10,73,8],[79,11,73,9,"initialEvent"],[79,23,73,21],[79,26,73,24,"ev"],[79,28,73,26],[80,6,74,4],[80,10,74,8],[80,11,74,9,"visualFeedbackTimer"],[80,30,74,28],[80,33,74,31],[80,37,74,31,"fireAfterInterval"],[80,61,74,48],[80,63,74,49],[80,69,74,55],[81,8,75,6],[81,12,75,10],[81,13,75,11,"sendGestureStartedEvent"],[81,36,75,34],[81,37,75,35],[81,41,75,39],[81,42,75,40,"initialEvent"],[81,54,75,52],[81,55,75,53],[82,8,76,6],[82,12,76,10],[82,13,76,11,"initialEvent"],[82,25,76,23],[82,28,76,26],[82,32,76,30],[83,6,77,4],[83,7,77,5],[83,9,77,7],[83,13,77,11],[83,14,77,12,"shouldDelayTouchForEvent"],[83,38,77,36],[83,39,77,37,"ev"],[83,41,77,39],[83,42,77,40],[83,46,77,44,"CONTENT_TOUCHES_DELAY"],[83,78,77,65],[83,79,77,66],[84,4,78,2],[85,4,79,2,"sendGestureStartedEvent"],[85,27,79,25,"sendGestureStartedEvent"],[85,28,79,26,"ev"],[85,30,79,28],[85,32,79,30],[86,6,80,4,"clearTimeout"],[86,18,80,16],[86,19,80,17],[86,23,80,21],[86,24,80,22,"visualFeedbackTimer"],[86,43,80,41],[86,44,80,42],[87,6,81,4],[87,10,81,8],[87,11,81,9,"visualFeedbackTimer"],[87,30,81,28],[87,33,81,31],[87,37,81,35],[88,6,82,4],[88,10,82,8],[88,11,82,9,"sendEvent"],[88,20,82,18],[88,21,82,19],[89,8,83,6],[89,11,83,9,"ev"],[89,13,83,11],[90,8,84,6,"eventType"],[90,17,84,15],[90,19,84,17,"Hammer"],[90,36,84,23],[90,37,84,24,"INPUT_MOVE"],[90,47,84,34],[91,8,85,6,"isFirst"],[91,15,85,13],[91,17,85,15],[92,6,86,4],[92,7,86,5],[92,8,86,6],[93,4,87,2],[94,4,88,2,"forceInvalidate"],[94,19,88,17,"forceInvalidate"],[94,20,88,18,"event"],[94,25,88,23],[94,27,88,25],[95,6,89,4],[95,11,89,9],[95,12,89,10,"forceInvalidate"],[95,27,89,25],[95,28,89,26,"event"],[95,33,89,31],[95,34,89,32],[96,6,90,4,"clearTimeout"],[96,18,90,16],[96,19,90,17],[96,23,90,21],[96,24,90,22,"visualFeedbackTimer"],[96,43,90,41],[96,44,90,42],[97,6,91,4],[97,10,91,8],[97,11,91,9,"visualFeedbackTimer"],[97,30,91,28],[97,33,91,31],[97,37,91,35],[98,6,92,4],[98,10,92,8],[98,11,92,9,"initialEvent"],[98,23,92,21],[98,26,92,24],[98,30,92,28],[99,4,93,2],[100,4,94,2,"onRawEvent"],[100,14,94,12,"onRawEvent"],[100,15,94,13,"ev"],[100,17,94,15],[100,19,94,17],[101,6,95,4],[101,11,95,9],[101,12,95,10,"onRawEvent"],[101,22,95,20],[101,23,95,21,"ev"],[101,25,95,23],[101,26,95,24],[102,6,96,4],[102,10,96,8],[102,14,96,12],[102,15,96,13,"isGestureRunning"],[102,31,96,29],[102,33,96,31],[103,8,97,6],[103,12,97,10,"ev"],[103,14,97,12],[103,15,97,13,"isFinal"],[103,22,97,20],[103,24,97,22],[104,10,98,8],[104,14,98,12,"timeout"],[104,21,98,19],[105,10,99,8],[105,14,99,12],[105,18,99,16],[105,19,99,17,"visualFeedbackTimer"],[105,38,99,36],[105,40,99,38],[106,12,100,10],[107,12,101,10],[108,12,102,10],[109,12,103,10,"timeout"],[109,19,103,17],[109,22,103,20,"CONTENT_TOUCHES_QUICK_TAP_END_DELAY"],[109,68,103,55],[110,12,104,10],[110,16,104,14],[110,17,104,15,"sendGestureStartedEvent"],[110,40,104,38],[110,41,104,39],[110,45,104,43],[110,46,104,44,"initialEvent"],[110,58,104,56],[110,59,104,57],[111,12,105,10],[111,16,105,14],[111,17,105,15,"initialEvent"],[111,29,105,27],[111,32,105,30],[111,36,105,34],[112,10,106,8],[113,10,107,8],[113,14,107,8,"fireAfterInterval"],[113,38,107,25],[113,40,107,26],[113,46,107,32],[114,12,108,10],[114,16,108,14],[114,17,108,15,"sendEvent"],[114,26,108,24],[114,27,108,25],[115,14,109,12],[115,17,109,15,"ev"],[115,19,109,17],[116,14,110,12,"eventType"],[116,23,110,21],[116,25,110,23,"Hammer"],[116,42,110,29],[116,43,110,30,"INPUT_END"],[116,52,110,39],[117,14,111,12,"isFinal"],[117,21,111,19],[117,23,111,21],[118,12,112,10],[118,13,112,11],[118,14,112,12],[119,12,113,10],[120,12,114,10],[120,16,114,14],[120,17,114,15,"onGestureEnded"],[120,31,114,29],[120,32,114,30],[120,33,114,31],[121,10,115,8],[121,11,115,9],[121,13,115,11,"timeout"],[121,20,115,18],[121,21,115,19],[122,8,116,6],[122,9,116,7],[122,15,116,13],[123,10,117,8],[123,14,117,12],[123,15,117,13,"sendEvent"],[123,24,117,22],[123,25,117,23],[124,12,118,10],[124,15,118,13,"ev"],[124,17,118,15],[125,12,119,10,"eventType"],[125,21,119,19],[125,23,119,21,"Hammer"],[125,40,119,27],[125,41,119,28,"INPUT_MOVE"],[125,51,119,38],[126,12,120,10,"isFinal"],[126,19,120,17],[126,21,120,19],[127,10,121,8],[127,11,121,9],[127,12,121,10],[128,8,122,6],[129,6,123,4],[130,4,124,2],[131,4,125,2,"updateGestureConfig"],[131,23,125,21,"updateGestureConfig"],[131,24,125,22],[132,6,126,4,"shouldActivateOnStart"],[132,27,126,25],[132,30,126,28],[132,35,126,33],[133,6,127,4,"disallowInterruption"],[133,26,127,24],[133,29,127,27],[133,34,127,32],[134,6,128,4,"shouldCancelWhenOutside"],[134,29,128,27],[134,32,128,30],[134,36,128,34],[135,6,129,4,"minDurationMs"],[135,19,129,17],[135,22,129,20,"Number"],[135,28,129,26],[135,29,129,27,"NaN"],[135,32,129,30],[136,6,130,4,"maxDist"],[136,13,130,11],[136,16,130,14,"Number"],[136,22,130,20],[136,23,130,21,"NaN"],[136,26,130,24],[137,6,131,4,"minPointers"],[137,17,131,15],[137,20,131,18],[137,21,131,19],[138,6,132,4,"maxPointers"],[138,17,132,15],[138,20,132,18],[138,21,132,19],[139,6,133,4],[139,9,133,7,"props"],[140,4,134,2],[140,5,134,3],[140,7,134,5],[141,6,135,4],[141,13,135,11],[141,18,135,16],[141,19,135,17,"updateGestureConfig"],[141,38,135,36],[141,39,135,37],[142,8,136,6,"shouldActivateOnStart"],[142,29,136,27],[143,8,137,6,"disallowInterruption"],[143,28,137,26],[144,8,138,6,"shouldCancelWhenOutside"],[144,31,138,29],[145,8,139,6,"minDurationMs"],[145,21,139,19],[146,8,140,6,"maxDist"],[146,15,140,13],[147,8,141,6,"minPointers"],[147,19,141,17],[148,8,142,6,"maxPointers"],[148,19,142,17],[149,8,143,6],[149,11,143,9,"props"],[150,6,144,4],[150,7,144,5],[150,8,144,6],[151,4,145,2],[152,2,146,0],[153,2,146,1],[153,6,146,1,"_default"],[153,14,146,1],[153,17,146,1,"exports"],[153,24,146,1],[153,25,146,1,"default"],[153,32,146,1],[153,35,147,15,"PressGestureHandler"],[153,54,147,34],[154,0,147,34],[154,3]],"functionMap":{"names":["<global>","PressGestureHandler","get__name","get__minDurationMs","get__maxDist","get__NativeGestureClass","simulateCancelEvent","updateHasCustomActivationCriteria","getState","getConfig","getHammerConfig","onGestureActivated","shouldDelayTouchForEvent","onGestureStart","fireAfterInterval$argument_0","sendGestureStartedEvent","forceInvalidate","onRawEvent","updateGestureConfig"],"mappings":"AAA;ACO;ECE;GDE;EEC;GFG;EGC;GHE;EIC;GJE;EKE;GLI;EMC;GNK;EOC;GPO;EQC;GRU;ESC;GTM;EUC;GVE;EWC;GXK;EYC;iDCI;KDG;GZC;EcC;GdQ;EeC;GfK;EgBC;0BHa;SGQ;GhBS;EiBC;GjBoB;CDC"}},"type":"js/module"}]}