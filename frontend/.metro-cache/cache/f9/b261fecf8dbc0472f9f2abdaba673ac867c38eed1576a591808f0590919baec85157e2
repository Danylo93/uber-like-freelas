{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  class EventManager {\n    pointersInBounds = [];\n    constructor(view) {\n      this.view = view;\n      this.activePointersCounter = 0;\n    }\n    onPointerDown(_event) {}\n    onPointerAdd(_event) {}\n    onPointerUp(_event) {}\n    onPointerRemove(_event) {}\n    onPointerMove(_event) {}\n    onPointerLeave(_event) {} // Called only when pointer is pressed (or touching)\n    onPointerEnter(_event) {} // Called only when pointer is pressed (or touching)\n    onPointerCancel(_event) {\n      // When pointer cancel is triggered and there are more pointers on the view, only one pointer is cancelled\n      // Because we want all pointers to be cancelled by that event, we are doing it manually by reseting handler and changing activePointersCounter to 0\n      // Events that correspond to removing the pointer (pointerup, touchend) have condition, that they don't perform any action when activePointersCounter\n      // is equal to 0. This prevents counter from going to negative values, when pointers are removed from view after one of them has been cancelled\n    }\n    onPointerOutOfBounds(_event) {}\n    onPointerMoveOver(_event) {}\n    onPointerMoveOut(_event) {}\n    onWheel(_event) {}\n    setOnPointerDown(callback) {\n      this.onPointerDown = callback;\n    }\n    setOnPointerAdd(callback) {\n      this.onPointerAdd = callback;\n    }\n    setOnPointerUp(callback) {\n      this.onPointerUp = callback;\n    }\n    setOnPointerRemove(callback) {\n      this.onPointerRemove = callback;\n    }\n    setOnPointerMove(callback) {\n      this.onPointerMove = callback;\n    }\n    setOnPointerLeave(callback) {\n      this.onPointerLeave = callback;\n    }\n    setOnPointerEnter(callback) {\n      this.onPointerEnter = callback;\n    }\n    setOnPointerCancel(callback) {\n      this.onPointerCancel = callback;\n    }\n    setOnPointerOutOfBounds(callback) {\n      this.onPointerOutOfBounds = callback;\n    }\n    setOnPointerMoveOver(callback) {\n      this.onPointerMoveOver = callback;\n    }\n    setOnPointerMoveOut(callback) {\n      this.onPointerMoveOut = callback;\n    }\n    setOnWheel(callback) {\n      this.onWheel = callback;\n    }\n    markAsInBounds(pointerId) {\n      if (this.pointersInBounds.indexOf(pointerId) >= 0) {\n        return;\n      }\n      this.pointersInBounds.push(pointerId);\n    }\n    markAsOutOfBounds(pointerId) {\n      const index = this.pointersInBounds.indexOf(pointerId);\n      if (index < 0) {\n        return;\n      }\n      this.pointersInBounds.splice(index, 1);\n    }\n    resetManager() {\n      // Reseting activePointersCounter is necessary to make gestures such as pinch work properly\n      // There are gestures that end when there is still one active pointer (like pinch/rotation)\n      // When these gestures end, they are reset, but they still receive events from pointer that is active\n      // This causes trouble, since only onPointerDown registers gesture in orchestrator, and while gestures receive\n      // Events from active pointer after they finished, next pointerdown event will be registered as additional pointer, not the first one\n      // This casues trouble like gestures getting stuck in END state, even though they should have gone to UNDETERMINED\n\n      this.activePointersCounter = 0;\n      this.pointersInBounds = [];\n    }\n  }\n  exports.default = EventManager;\n});","lineCount":94,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0,"Object"],[5,8,3,0],[5,9,3,0,"defineProperty"],[5,23,3,0],[5,24,3,0,"exports"],[5,31,3,0],[6,4,3,0,"value"],[6,9,3,0],[7,2,3,0],[8,2,3,0,"exports"],[8,9,3,0],[8,10,3,0,"default"],[8,17,3,0],[9,2,5,15],[9,8,5,21,"EventManager"],[9,20,5,33],[9,21,5,34],[10,4,6,2,"pointersInBounds"],[10,20,6,18],[10,23,6,21],[10,25,6,23],[11,4,7,2,"constructor"],[11,15,7,13,"constructor"],[11,16,7,14,"view"],[11,20,7,18],[11,22,7,20],[12,6,8,4],[12,10,8,8],[12,11,8,9,"view"],[12,15,8,13],[12,18,8,16,"view"],[12,22,8,20],[13,6,9,4],[13,10,9,8],[13,11,9,9,"activePointersCounter"],[13,32,9,30],[13,35,9,33],[13,36,9,34],[14,4,10,2],[15,4,11,2,"onPointerDown"],[15,17,11,15,"onPointerDown"],[15,18,11,16,"_event"],[15,24,11,22],[15,26,11,24],[15,27,11,25],[16,4,12,2,"onPointerAdd"],[16,16,12,14,"onPointerAdd"],[16,17,12,15,"_event"],[16,23,12,21],[16,25,12,23],[16,26,12,24],[17,4,13,2,"onPointerUp"],[17,15,13,13,"onPointerUp"],[17,16,13,14,"_event"],[17,22,13,20],[17,24,13,22],[17,25,13,23],[18,4,14,2,"onPointerRemove"],[18,19,14,17,"onPointerRemove"],[18,20,14,18,"_event"],[18,26,14,24],[18,28,14,26],[18,29,14,27],[19,4,15,2,"onPointerMove"],[19,17,15,15,"onPointerMove"],[19,18,15,16,"_event"],[19,24,15,22],[19,26,15,24],[19,27,15,25],[20,4,16,2,"onPointerLeave"],[20,18,16,16,"onPointerLeave"],[20,19,16,17,"_event"],[20,25,16,23],[20,27,16,25],[20,28,16,26],[20,29,16,27],[20,30,16,28],[21,4,17,2,"onPointerEnter"],[21,18,17,16,"onPointerEnter"],[21,19,17,17,"_event"],[21,25,17,23],[21,27,17,25],[21,28,17,26],[21,29,17,27],[21,30,17,28],[22,4,18,2,"onPointerCancel"],[22,19,18,17,"onPointerCancel"],[22,20,18,18,"_event"],[22,26,18,24],[22,28,18,26],[23,6,19,4],[24,6,20,4],[25,6,21,4],[26,6,22,4],[27,4,22,4],[28,4,24,2,"onPointerOutOfBounds"],[28,24,24,22,"onPointerOutOfBounds"],[28,25,24,23,"_event"],[28,31,24,29],[28,33,24,31],[28,34,24,32],[29,4,25,2,"onPointerMoveOver"],[29,21,25,19,"onPointerMoveOver"],[29,22,25,20,"_event"],[29,28,25,26],[29,30,25,28],[29,31,25,29],[30,4,26,2,"onPointerMoveOut"],[30,20,26,18,"onPointerMoveOut"],[30,21,26,19,"_event"],[30,27,26,25],[30,29,26,27],[30,30,26,28],[31,4,27,2,"onWheel"],[31,11,27,9,"onWheel"],[31,12,27,10,"_event"],[31,18,27,16],[31,20,27,18],[31,21,27,19],[32,4,28,2,"setOnPointerDown"],[32,20,28,18,"setOnPointerDown"],[32,21,28,19,"callback"],[32,29,28,27],[32,31,28,29],[33,6,29,4],[33,10,29,8],[33,11,29,9,"onPointerDown"],[33,24,29,22],[33,27,29,25,"callback"],[33,35,29,33],[34,4,30,2],[35,4,31,2,"setOnPointerAdd"],[35,19,31,17,"setOnPointerAdd"],[35,20,31,18,"callback"],[35,28,31,26],[35,30,31,28],[36,6,32,4],[36,10,32,8],[36,11,32,9,"onPointerAdd"],[36,23,32,21],[36,26,32,24,"callback"],[36,34,32,32],[37,4,33,2],[38,4,34,2,"setOnPointerUp"],[38,18,34,16,"setOnPointerUp"],[38,19,34,17,"callback"],[38,27,34,25],[38,29,34,27],[39,6,35,4],[39,10,35,8],[39,11,35,9,"onPointerUp"],[39,22,35,20],[39,25,35,23,"callback"],[39,33,35,31],[40,4,36,2],[41,4,37,2,"setOnPointerRemove"],[41,22,37,20,"setOnPointerRemove"],[41,23,37,21,"callback"],[41,31,37,29],[41,33,37,31],[42,6,38,4],[42,10,38,8],[42,11,38,9,"onPointerRemove"],[42,26,38,24],[42,29,38,27,"callback"],[42,37,38,35],[43,4,39,2],[44,4,40,2,"setOnPointerMove"],[44,20,40,18,"setOnPointerMove"],[44,21,40,19,"callback"],[44,29,40,27],[44,31,40,29],[45,6,41,4],[45,10,41,8],[45,11,41,9,"onPointerMove"],[45,24,41,22],[45,27,41,25,"callback"],[45,35,41,33],[46,4,42,2],[47,4,43,2,"setOnPointerLeave"],[47,21,43,19,"setOnPointerLeave"],[47,22,43,20,"callback"],[47,30,43,28],[47,32,43,30],[48,6,44,4],[48,10,44,8],[48,11,44,9,"onPointerLeave"],[48,25,44,23],[48,28,44,26,"callback"],[48,36,44,34],[49,4,45,2],[50,4,46,2,"setOnPointerEnter"],[50,21,46,19,"setOnPointerEnter"],[50,22,46,20,"callback"],[50,30,46,28],[50,32,46,30],[51,6,47,4],[51,10,47,8],[51,11,47,9,"onPointerEnter"],[51,25,47,23],[51,28,47,26,"callback"],[51,36,47,34],[52,4,48,2],[53,4,49,2,"setOnPointerCancel"],[53,22,49,20,"setOnPointerCancel"],[53,23,49,21,"callback"],[53,31,49,29],[53,33,49,31],[54,6,50,4],[54,10,50,8],[54,11,50,9,"onPointerCancel"],[54,26,50,24],[54,29,50,27,"callback"],[54,37,50,35],[55,4,51,2],[56,4,52,2,"setOnPointerOutOfBounds"],[56,27,52,25,"setOnPointerOutOfBounds"],[56,28,52,26,"callback"],[56,36,52,34],[56,38,52,36],[57,6,53,4],[57,10,53,8],[57,11,53,9,"onPointerOutOfBounds"],[57,31,53,29],[57,34,53,32,"callback"],[57,42,53,40],[58,4,54,2],[59,4,55,2,"setOnPointerMoveOver"],[59,24,55,22,"setOnPointerMoveOver"],[59,25,55,23,"callback"],[59,33,55,31],[59,35,55,33],[60,6,56,4],[60,10,56,8],[60,11,56,9,"onPointerMoveOver"],[60,28,56,26],[60,31,56,29,"callback"],[60,39,56,37],[61,4,57,2],[62,4,58,2,"setOnPointerMoveOut"],[62,23,58,21,"setOnPointerMoveOut"],[62,24,58,22,"callback"],[62,32,58,30],[62,34,58,32],[63,6,59,4],[63,10,59,8],[63,11,59,9,"onPointerMoveOut"],[63,27,59,25],[63,30,59,28,"callback"],[63,38,59,36],[64,4,60,2],[65,4,61,2,"setOnWheel"],[65,14,61,12,"setOnWheel"],[65,15,61,13,"callback"],[65,23,61,21],[65,25,61,23],[66,6,62,4],[66,10,62,8],[66,11,62,9,"onWheel"],[66,18,62,16],[66,21,62,19,"callback"],[66,29,62,27],[67,4,63,2],[68,4,64,2,"markAsInBounds"],[68,18,64,16,"markAsInBounds"],[68,19,64,17,"pointerId"],[68,28,64,26],[68,30,64,28],[69,6,65,4],[69,10,65,8],[69,14,65,12],[69,15,65,13,"pointersInBounds"],[69,31,65,29],[69,32,65,30,"indexOf"],[69,39,65,37],[69,40,65,38,"pointerId"],[69,49,65,47],[69,50,65,48],[69,54,65,52],[69,55,65,53],[69,57,65,55],[70,8,66,6],[71,6,67,4],[72,6,68,4],[72,10,68,8],[72,11,68,9,"pointersInBounds"],[72,27,68,25],[72,28,68,26,"push"],[72,32,68,30],[72,33,68,31,"pointerId"],[72,42,68,40],[72,43,68,41],[73,4,69,2],[74,4,70,2,"markAsOutOfBounds"],[74,21,70,19,"markAsOutOfBounds"],[74,22,70,20,"pointerId"],[74,31,70,29],[74,33,70,31],[75,6,71,4],[75,12,71,10,"index"],[75,17,71,15],[75,20,71,18],[75,24,71,22],[75,25,71,23,"pointersInBounds"],[75,41,71,39],[75,42,71,40,"indexOf"],[75,49,71,47],[75,50,71,48,"pointerId"],[75,59,71,57],[75,60,71,58],[76,6,72,4],[76,10,72,8,"index"],[76,15,72,13],[76,18,72,16],[76,19,72,17],[76,21,72,19],[77,8,73,6],[78,6,74,4],[79,6,75,4],[79,10,75,8],[79,11,75,9,"pointersInBounds"],[79,27,75,25],[79,28,75,26,"splice"],[79,34,75,32],[79,35,75,33,"index"],[79,40,75,38],[79,42,75,40],[79,43,75,41],[79,44,75,42],[80,4,76,2],[81,4,77,2,"resetManager"],[81,16,77,14,"resetManager"],[81,17,77,14],[81,19,77,17],[82,6,78,4],[83,6,79,4],[84,6,80,4],[85,6,81,4],[86,6,82,4],[87,6,83,4],[89,6,85,4],[89,10,85,8],[89,11,85,9,"activePointersCounter"],[89,32,85,30],[89,35,85,33],[89,36,85,34],[90,6,86,4],[90,10,86,8],[90,11,86,9,"pointersInBounds"],[90,27,86,25],[90,30,86,28],[90,32,86,30],[91,4,87,2],[92,2,88,0],[93,2,88,1,"exports"],[93,9,88,1],[93,10,88,1,"default"],[93,17,88,1],[93,20,88,1,"EventManager"],[93,32,88,1],[94,0,88,1],[94,3]],"functionMap":{"names":["<global>","EventManager","constructor","onPointerDown","onPointerAdd","onPointerUp","onPointerRemove","onPointerMove","onPointerLeave","onPointerEnter","onPointerCancel","onPointerOutOfBounds","onPointerMoveOver","onPointerMoveOut","onWheel","setOnPointerDown","setOnPointerAdd","setOnPointerUp","setOnPointerRemove","setOnPointerMove","setOnPointerLeave","setOnPointerEnter","setOnPointerCancel","setOnPointerOutOfBounds","setOnPointerMoveOver","setOnPointerMoveOut","setOnWheel","markAsInBounds","markAsOutOfBounds","resetManager"],"mappings":"AAA;eCI;ECE;GDG;EEC,wBF;EGC,uBH;EIC,sBJ;EKC,0BL;EMC,wBN;EOC,yBP;EQC,yBR;ESC;GTK;EUC,+BV;EWC,4BX;EYC,2BZ;EaC,kBb;EcC;GdE;EeC;GfE;EgBC;GhBE;EiBC;GjBE;EkBC;GlBE;EmBC;GnBE;EoBC;GpBE;EqBC;GrBE;EsBC;GtBE;EuBC;GvBE;EwBC;GxBE;EyBC;GzBE;E0BC;G1BK;E2BC;G3BM;E4BC;G5BU;CDC"}},"type":"js/module"}]}