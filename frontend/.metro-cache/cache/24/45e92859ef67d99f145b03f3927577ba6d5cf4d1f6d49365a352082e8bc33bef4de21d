{"dependencies":[{"name":"./notifyManager.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":24},"end":{"line":2,"column":51,"index":75}}],"key":"sE8Jk2BSATSKXEwal1fu77sfV3E=","exportNames":["*"]}},{"name":"./mutation.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":76},"end":{"line":3,"column":41,"index":117}}],"key":"DEeb5DG8JiSOn+k43YR2tCf/fEk=","exportNames":["*"]}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":118},"end":{"line":4,"column":49,"index":167}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"]}},{"name":"./subscribable.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":168},"end":{"line":5,"column":49,"index":217}}],"key":"f0fxTGZggQRtb//cHMvH9AHIWOw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MutationCache = void 0;\n  var _notifyManager = require(_dependencyMap[0], \"./notifyManager.js\");\n  var _mutation = require(_dependencyMap[1], \"./mutation.js\");\n  var _utils = require(_dependencyMap[2], \"./utils.js\");\n  var _subscribable = require(_dependencyMap[3], \"./subscribable.js\");\n  // src/mutationCache.ts\n\n  var MutationCache = class extends _subscribable.Subscribable {\n    constructor(config = {}) {\n      super();\n      this.config = config;\n      this.#mutations = /* @__PURE__ */new Set();\n      this.#scopes = /* @__PURE__ */new Map();\n      this.#mutationId = 0;\n    }\n    #mutations;\n    #scopes;\n    #mutationId;\n    build(client, options, state) {\n      const mutation = new _mutation.Mutation({\n        client,\n        mutationCache: this,\n        mutationId: ++this.#mutationId,\n        options: client.defaultMutationOptions(options),\n        state\n      });\n      this.add(mutation);\n      return mutation;\n    }\n    add(mutation) {\n      this.#mutations.add(mutation);\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          scopedMutations.push(mutation);\n        } else {\n          this.#scopes.set(scope, [mutation]);\n        }\n      }\n      this.notify({\n        type: \"added\",\n        mutation\n      });\n    }\n    remove(mutation) {\n      if (this.#mutations.delete(mutation)) {\n        const scope = scopeFor(mutation);\n        if (typeof scope === \"string\") {\n          const scopedMutations = this.#scopes.get(scope);\n          if (scopedMutations) {\n            if (scopedMutations.length > 1) {\n              const index = scopedMutations.indexOf(mutation);\n              if (index !== -1) {\n                scopedMutations.splice(index, 1);\n              }\n            } else if (scopedMutations[0] === mutation) {\n              this.#scopes.delete(scope);\n            }\n          }\n        }\n      }\n      this.notify({\n        type: \"removed\",\n        mutation\n      });\n    }\n    canRun(mutation) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const mutationsWithSameScope = this.#scopes.get(scope);\n        const firstPendingMutation = mutationsWithSameScope?.find(m => m.state.status === \"pending\");\n        return !firstPendingMutation || firstPendingMutation === mutation;\n      } else {\n        return true;\n      }\n    }\n    runNext(mutation) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const foundMutation = this.#scopes.get(scope)?.find(m => m !== mutation && m.state.isPaused);\n        return foundMutation?.continue() ?? Promise.resolve();\n      } else {\n        return Promise.resolve();\n      }\n    }\n    clear() {\n      _notifyManager.notifyManager.batch(() => {\n        this.#mutations.forEach(mutation => {\n          this.notify({\n            type: \"removed\",\n            mutation\n          });\n        });\n        this.#mutations.clear();\n        this.#scopes.clear();\n      });\n    }\n    getAll() {\n      return Array.from(this.#mutations);\n    }\n    find(filters) {\n      const defaultedFilters = Object.assign({\n        exact: true\n      }, filters);\n      return this.getAll().find(mutation => (0, _utils.matchMutation)(defaultedFilters, mutation));\n    }\n    findAll(filters = {}) {\n      return this.getAll().filter(mutation => (0, _utils.matchMutation)(filters, mutation));\n    }\n    notify(event) {\n      _notifyManager.notifyManager.batch(() => {\n        this.listeners.forEach(listener => {\n          listener(event);\n        });\n      });\n    }\n    resumePausedMutations() {\n      const pausedMutations = this.getAll().filter(x => x.state.isPaused);\n      return _notifyManager.notifyManager.batch(() => Promise.all(pausedMutations.map(mutation => mutation.continue().catch(_utils.noop))));\n    }\n  };\n  exports.MutationCache = MutationCache;\n  function scopeFor(mutation) {\n    return mutation.options.scope?.id;\n  }\n});","lineCount":131,"map":[[6,2,2,0],[6,6,2,0,"_notifyManager"],[6,20,2,0],[6,23,2,0,"require"],[6,30,2,0],[6,31,2,0,"_dependencyMap"],[6,45,2,0],[7,2,3,0],[7,6,3,0,"_mutation"],[7,15,3,0],[7,18,3,0,"require"],[7,25,3,0],[7,26,3,0,"_dependencyMap"],[7,40,3,0],[8,2,4,0],[8,6,4,0,"_utils"],[8,12,4,0],[8,15,4,0,"require"],[8,22,4,0],[8,23,4,0,"_dependencyMap"],[8,37,4,0],[9,2,5,0],[9,6,5,0,"_subscribable"],[9,19,5,0],[9,22,5,0,"require"],[9,29,5,0],[9,30,5,0,"_dependencyMap"],[9,44,5,0],[10,2,1,0],[12,2,6,0],[12,6,6,4,"MutationCache"],[12,19,6,17],[12,22,6,20],[12,36,6,34,"Subscribable"],[12,62,6,46],[12,63,6,47],[13,4,7,2,"constructor"],[13,15,7,13,"constructor"],[13,16,7,14,"config"],[13,22,7,20],[13,25,7,23],[13,26,7,24],[13,27,7,25],[13,29,7,27],[14,6,8,4],[14,11,8,9],[14,12,8,10],[14,13,8,11],[15,6,9,4],[15,10,9,8],[15,11,9,9,"config"],[15,17,9,15],[15,20,9,18,"config"],[15,26,9,24],[16,6,10,4],[16,10,10,8],[16,11,10,9],[16,12,10,10,"mutations"],[16,21,10,19],[16,24,10,22],[16,39,10,38],[16,43,10,42,"Set"],[16,46,10,45],[16,47,10,46],[16,48,10,47],[17,6,11,4],[17,10,11,8],[17,11,11,9],[17,12,11,10,"scopes"],[17,18,11,16],[17,21,11,19],[17,36,11,35],[17,40,11,39,"Map"],[17,43,11,42],[17,44,11,43],[17,45,11,44],[18,6,12,4],[18,10,12,8],[18,11,12,9],[18,12,12,10,"mutationId"],[18,22,12,20],[18,25,12,23],[18,26,12,24],[19,4,13,2],[20,4,14,2],[20,5,14,3,"mutations"],[20,14,14,12],[21,4,15,2],[21,5,15,3,"scopes"],[21,11,15,9],[22,4,16,2],[22,5,16,3,"mutationId"],[22,15,16,13],[23,4,17,2,"build"],[23,9,17,7,"build"],[23,10,17,8,"client"],[23,16,17,14],[23,18,17,16,"options"],[23,25,17,23],[23,27,17,25,"state"],[23,32,17,30],[23,34,17,32],[24,6,18,4],[24,12,18,10,"mutation"],[24,20,18,18],[24,23,18,21],[24,27,18,25,"Mutation"],[24,45,18,33],[24,46,18,34],[25,8,19,6,"client"],[25,14,19,12],[26,8,20,6,"mutationCache"],[26,21,20,19],[26,23,20,21],[26,27,20,25],[27,8,21,6,"mutationId"],[27,18,21,16],[27,20,21,18],[27,22,21,20],[27,26,21,24],[27,27,21,25],[27,28,21,26,"mutationId"],[27,38,21,36],[28,8,22,6,"options"],[28,15,22,13],[28,17,22,15,"client"],[28,23,22,21],[28,24,22,22,"defaultMutationOptions"],[28,46,22,44],[28,47,22,45,"options"],[28,54,22,52],[28,55,22,53],[29,8,23,6,"state"],[30,6,24,4],[30,7,24,5],[30,8,24,6],[31,6,25,4],[31,10,25,8],[31,11,25,9,"add"],[31,14,25,12],[31,15,25,13,"mutation"],[31,23,25,21],[31,24,25,22],[32,6,26,4],[32,13,26,11,"mutation"],[32,21,26,19],[33,4,27,2],[34,4,28,2,"add"],[34,7,28,5,"add"],[34,8,28,6,"mutation"],[34,16,28,14],[34,18,28,16],[35,6,29,4],[35,10,29,8],[35,11,29,9],[35,12,29,10,"mutations"],[35,21,29,19],[35,22,29,20,"add"],[35,25,29,23],[35,26,29,24,"mutation"],[35,34,29,32],[35,35,29,33],[36,6,30,4],[36,12,30,10,"scope"],[36,17,30,15],[36,20,30,18,"scopeFor"],[36,28,30,26],[36,29,30,27,"mutation"],[36,37,30,35],[36,38,30,36],[37,6,31,4],[37,10,31,8],[37,17,31,15,"scope"],[37,22,31,20],[37,27,31,25],[37,35,31,33],[37,37,31,35],[38,8,32,6],[38,14,32,12,"scopedMutations"],[38,29,32,27],[38,32,32,30],[38,36,32,34],[38,37,32,35],[38,38,32,36,"scopes"],[38,44,32,42],[38,45,32,43,"get"],[38,48,32,46],[38,49,32,47,"scope"],[38,54,32,52],[38,55,32,53],[39,8,33,6],[39,12,33,10,"scopedMutations"],[39,27,33,25],[39,29,33,27],[40,10,34,8,"scopedMutations"],[40,25,34,23],[40,26,34,24,"push"],[40,30,34,28],[40,31,34,29,"mutation"],[40,39,34,37],[40,40,34,38],[41,8,35,6],[41,9,35,7],[41,15,35,13],[42,10,36,8],[42,14,36,12],[42,15,36,13],[42,16,36,14,"scopes"],[42,22,36,20],[42,23,36,21,"set"],[42,26,36,24],[42,27,36,25,"scope"],[42,32,36,30],[42,34,36,32],[42,35,36,33,"mutation"],[42,43,36,41],[42,44,36,42],[42,45,36,43],[43,8,37,6],[44,6,38,4],[45,6,39,4],[45,10,39,8],[45,11,39,9,"notify"],[45,17,39,15],[45,18,39,16],[46,8,39,18,"type"],[46,12,39,22],[46,14,39,24],[46,21,39,31],[47,8,39,33,"mutation"],[48,6,39,42],[48,7,39,43],[48,8,39,44],[49,4,40,2],[50,4,41,2,"remove"],[50,10,41,8,"remove"],[50,11,41,9,"mutation"],[50,19,41,17],[50,21,41,19],[51,6,42,4],[51,10,42,8],[51,14,42,12],[51,15,42,13],[51,16,42,14,"mutations"],[51,25,42,23],[51,26,42,24,"delete"],[51,32,42,30],[51,33,42,31,"mutation"],[51,41,42,39],[51,42,42,40],[51,44,42,42],[52,8,43,6],[52,14,43,12,"scope"],[52,19,43,17],[52,22,43,20,"scopeFor"],[52,30,43,28],[52,31,43,29,"mutation"],[52,39,43,37],[52,40,43,38],[53,8,44,6],[53,12,44,10],[53,19,44,17,"scope"],[53,24,44,22],[53,29,44,27],[53,37,44,35],[53,39,44,37],[54,10,45,8],[54,16,45,14,"scopedMutations"],[54,31,45,29],[54,34,45,32],[54,38,45,36],[54,39,45,37],[54,40,45,38,"scopes"],[54,46,45,44],[54,47,45,45,"get"],[54,50,45,48],[54,51,45,49,"scope"],[54,56,45,54],[54,57,45,55],[55,10,46,8],[55,14,46,12,"scopedMutations"],[55,29,46,27],[55,31,46,29],[56,12,47,10],[56,16,47,14,"scopedMutations"],[56,31,47,29],[56,32,47,30,"length"],[56,38,47,36],[56,41,47,39],[56,42,47,40],[56,44,47,42],[57,14,48,12],[57,20,48,18,"index"],[57,25,48,23],[57,28,48,26,"scopedMutations"],[57,43,48,41],[57,44,48,42,"indexOf"],[57,51,48,49],[57,52,48,50,"mutation"],[57,60,48,58],[57,61,48,59],[58,14,49,12],[58,18,49,16,"index"],[58,23,49,21],[58,28,49,26],[58,29,49,27],[58,30,49,28],[58,32,49,30],[59,16,50,14,"scopedMutations"],[59,31,50,29],[59,32,50,30,"splice"],[59,38,50,36],[59,39,50,37,"index"],[59,44,50,42],[59,46,50,44],[59,47,50,45],[59,48,50,46],[60,14,51,12],[61,12,52,10],[61,13,52,11],[61,19,52,17],[61,23,52,21,"scopedMutations"],[61,38,52,36],[61,39,52,37],[61,40,52,38],[61,41,52,39],[61,46,52,44,"mutation"],[61,54,52,52],[61,56,52,54],[62,14,53,12],[62,18,53,16],[62,19,53,17],[62,20,53,18,"scopes"],[62,26,53,24],[62,27,53,25,"delete"],[62,33,53,31],[62,34,53,32,"scope"],[62,39,53,37],[62,40,53,38],[63,12,54,10],[64,10,55,8],[65,8,56,6],[66,6,57,4],[67,6,58,4],[67,10,58,8],[67,11,58,9,"notify"],[67,17,58,15],[67,18,58,16],[68,8,58,18,"type"],[68,12,58,22],[68,14,58,24],[68,23,58,33],[69,8,58,35,"mutation"],[70,6,58,44],[70,7,58,45],[70,8,58,46],[71,4,59,2],[72,4,60,2,"canRun"],[72,10,60,8,"canRun"],[72,11,60,9,"mutation"],[72,19,60,17],[72,21,60,19],[73,6,61,4],[73,12,61,10,"scope"],[73,17,61,15],[73,20,61,18,"scopeFor"],[73,28,61,26],[73,29,61,27,"mutation"],[73,37,61,35],[73,38,61,36],[74,6,62,4],[74,10,62,8],[74,17,62,15,"scope"],[74,22,62,20],[74,27,62,25],[74,35,62,33],[74,37,62,35],[75,8,63,6],[75,14,63,12,"mutationsWithSameScope"],[75,36,63,34],[75,39,63,37],[75,43,63,41],[75,44,63,42],[75,45,63,43,"scopes"],[75,51,63,49],[75,52,63,50,"get"],[75,55,63,53],[75,56,63,54,"scope"],[75,61,63,59],[75,62,63,60],[76,8,64,6],[76,14,64,12,"firstPendingMutation"],[76,34,64,32],[76,37,64,35,"mutationsWithSameScope"],[76,59,64,57],[76,61,64,59,"find"],[76,65,64,63],[76,66,65,9,"m"],[76,67,65,10],[76,71,65,15,"m"],[76,72,65,16],[76,73,65,17,"state"],[76,78,65,22],[76,79,65,23,"status"],[76,85,65,29],[76,90,65,34],[76,99,66,6],[76,100,66,7],[77,8,67,6],[77,15,67,13],[77,16,67,14,"firstPendingMutation"],[77,36,67,34],[77,40,67,38,"firstPendingMutation"],[77,60,67,58],[77,65,67,63,"mutation"],[77,73,67,71],[78,6,68,4],[78,7,68,5],[78,13,68,11],[79,8,69,6],[79,15,69,13],[79,19,69,17],[80,6,70,4],[81,4,71,2],[82,4,72,2,"runNext"],[82,11,72,9,"runNext"],[82,12,72,10,"mutation"],[82,20,72,18],[82,22,72,20],[83,6,73,4],[83,12,73,10,"scope"],[83,17,73,15],[83,20,73,18,"scopeFor"],[83,28,73,26],[83,29,73,27,"mutation"],[83,37,73,35],[83,38,73,36],[84,6,74,4],[84,10,74,8],[84,17,74,15,"scope"],[84,22,74,20],[84,27,74,25],[84,35,74,33],[84,37,74,35],[85,8,75,6],[85,14,75,12,"foundMutation"],[85,27,75,25],[85,30,75,28],[85,34,75,32],[85,35,75,33],[85,36,75,34,"scopes"],[85,42,75,40],[85,43,75,41,"get"],[85,46,75,44],[85,47,75,45,"scope"],[85,52,75,50],[85,53,75,51],[85,55,75,53,"find"],[85,59,75,57],[85,60,75,59,"m"],[85,61,75,60],[85,65,75,65,"m"],[85,66,75,66],[85,71,75,71,"mutation"],[85,79,75,79],[85,83,75,83,"m"],[85,84,75,84],[85,85,75,85,"state"],[85,90,75,90],[85,91,75,91,"isPaused"],[85,99,75,99],[85,100,75,100],[86,8,76,6],[86,15,76,13,"foundMutation"],[86,28,76,26],[86,30,76,28,"continue"],[86,38,76,36],[86,39,76,37],[86,40,76,38],[86,44,76,42,"Promise"],[86,51,76,49],[86,52,76,50,"resolve"],[86,59,76,57],[86,60,76,58],[86,61,76,59],[87,6,77,4],[87,7,77,5],[87,13,77,11],[88,8,78,6],[88,15,78,13,"Promise"],[88,22,78,20],[88,23,78,21,"resolve"],[88,30,78,28],[88,31,78,29],[88,32,78,30],[89,6,79,4],[90,4,80,2],[91,4,81,2,"clear"],[91,9,81,7,"clear"],[91,10,81,7],[91,12,81,10],[92,6,82,4,"notifyManager"],[92,34,82,17],[92,35,82,18,"batch"],[92,40,82,23],[92,41,82,24],[92,47,82,30],[93,8,83,6],[93,12,83,10],[93,13,83,11],[93,14,83,12,"mutations"],[93,23,83,21],[93,24,83,22,"forEach"],[93,31,83,29],[93,32,83,31,"mutation"],[93,40,83,39],[93,44,83,44],[94,10,84,8],[94,14,84,12],[94,15,84,13,"notify"],[94,21,84,19],[94,22,84,20],[95,12,84,22,"type"],[95,16,84,26],[95,18,84,28],[95,27,84,37],[96,12,84,39,"mutation"],[97,10,84,48],[97,11,84,49],[97,12,84,50],[98,8,85,6],[98,9,85,7],[98,10,85,8],[99,8,86,6],[99,12,86,10],[99,13,86,11],[99,14,86,12,"mutations"],[99,23,86,21],[99,24,86,22,"clear"],[99,29,86,27],[99,30,86,28],[99,31,86,29],[100,8,87,6],[100,12,87,10],[100,13,87,11],[100,14,87,12,"scopes"],[100,20,87,18],[100,21,87,19,"clear"],[100,26,87,24],[100,27,87,25],[100,28,87,26],[101,6,88,4],[101,7,88,5],[101,8,88,6],[102,4,89,2],[103,4,90,2,"getAll"],[103,10,90,8,"getAll"],[103,11,90,8],[103,13,90,11],[104,6,91,4],[104,13,91,11,"Array"],[104,18,91,16],[104,19,91,17,"from"],[104,23,91,21],[104,24,91,22],[104,28,91,26],[104,29,91,27],[104,30,91,28,"mutations"],[104,39,91,37],[104,40,91,38],[105,4,92,2],[106,4,93,2,"find"],[106,8,93,6,"find"],[106,9,93,7,"filters"],[106,16,93,14],[106,18,93,16],[107,6,94,4],[107,12,94,10,"defaultedFilters"],[107,28,94,26],[107,31,94,26,"Object"],[107,37,94,26],[107,38,94,26,"assign"],[107,44,94,26],[108,8,94,31,"exact"],[108,13,94,36],[108,15,94,38],[109,6,94,42],[109,9,94,47,"filters"],[109,16,94,54],[109,17,94,56],[110,6,95,4],[110,13,95,11],[110,17,95,15],[110,18,95,16,"getAll"],[110,24,95,22],[110,25,95,23],[110,26,95,24],[110,27,95,25,"find"],[110,31,95,29],[110,32,96,7,"mutation"],[110,40,96,15],[110,44,96,20],[110,48,96,20,"matchMutation"],[110,68,96,33],[110,70,96,34,"defaultedFilters"],[110,86,96,50],[110,88,96,52,"mutation"],[110,96,96,60],[110,97,97,4],[110,98,97,5],[111,4,98,2],[112,4,99,2,"findAll"],[112,11,99,9,"findAll"],[112,12,99,10,"filters"],[112,19,99,17],[112,22,99,20],[112,23,99,21],[112,24,99,22],[112,26,99,24],[113,6,100,4],[113,13,100,11],[113,17,100,15],[113,18,100,16,"getAll"],[113,24,100,22],[113,25,100,23],[113,26,100,24],[113,27,100,25,"filter"],[113,33,100,31],[113,34,100,33,"mutation"],[113,42,100,41],[113,46,100,46],[113,50,100,46,"matchMutation"],[113,70,100,59],[113,72,100,60,"filters"],[113,79,100,67],[113,81,100,69,"mutation"],[113,89,100,77],[113,90,100,78],[113,91,100,79],[114,4,101,2],[115,4,102,2,"notify"],[115,10,102,8,"notify"],[115,11,102,9,"event"],[115,16,102,14],[115,18,102,16],[116,6,103,4,"notifyManager"],[116,34,103,17],[116,35,103,18,"batch"],[116,40,103,23],[116,41,103,24],[116,47,103,30],[117,8,104,6],[117,12,104,10],[117,13,104,11,"listeners"],[117,22,104,20],[117,23,104,21,"forEach"],[117,30,104,28],[117,31,104,30,"listener"],[117,39,104,38],[117,43,104,43],[118,10,105,8,"listener"],[118,18,105,16],[118,19,105,17,"event"],[118,24,105,22],[118,25,105,23],[119,8,106,6],[119,9,106,7],[119,10,106,8],[120,6,107,4],[120,7,107,5],[120,8,107,6],[121,4,108,2],[122,4,109,2,"resumePausedMutations"],[122,25,109,23,"resumePausedMutations"],[122,26,109,23],[122,28,109,26],[123,6,110,4],[123,12,110,10,"pausedMutations"],[123,27,110,25],[123,30,110,28],[123,34,110,32],[123,35,110,33,"getAll"],[123,41,110,39],[123,42,110,40],[123,43,110,41],[123,44,110,42,"filter"],[123,50,110,48],[123,51,110,50,"x"],[123,52,110,51],[123,56,110,56,"x"],[123,57,110,57],[123,58,110,58,"state"],[123,63,110,63],[123,64,110,64,"isPaused"],[123,72,110,72],[123,73,110,73],[124,6,111,4],[124,13,111,11,"notifyManager"],[124,41,111,24],[124,42,111,25,"batch"],[124,47,111,30],[124,48,112,6],[124,54,112,12,"Promise"],[124,61,112,19],[124,62,112,20,"all"],[124,65,112,23],[124,66,113,8,"pausedMutations"],[124,81,113,23],[124,82,113,24,"map"],[124,85,113,27],[124,86,113,29,"mutation"],[124,94,113,37],[124,98,113,42,"mutation"],[124,106,113,50],[124,107,113,51,"continue"],[124,115,113,59],[124,116,113,60],[124,117,113,61],[124,118,113,62,"catch"],[124,123,113,67],[124,124,113,68,"noop"],[124,135,113,72],[124,136,113,73],[124,137,114,6],[124,138,115,4],[124,139,115,5],[125,4,116,2],[126,2,117,0],[126,3,117,1],[127,2,117,2,"exports"],[127,9,117,2],[127,10,117,2,"MutationCache"],[127,23,117,2],[127,26,117,2,"MutationCache"],[127,39,117,2],[128,2,118,0],[128,11,118,9,"scopeFor"],[128,19,118,17,"scopeFor"],[128,20,118,18,"mutation"],[128,28,118,26],[128,30,118,28],[129,4,119,2],[129,11,119,9,"mutation"],[129,19,119,17],[129,20,119,18,"options"],[129,27,119,25],[129,28,119,26,"scope"],[129,33,119,31],[129,35,119,33,"id"],[129,37,119,35],[130,2,120,0],[131,0,120,1],[131,3]],"functionMap":{"names":["<global>","MutationCache","MutationCache#constructor","MutationCache#build","MutationCache#add","MutationCache#remove","MutationCache#canRun","mutationsWithSameScope.find$argument_0","MutationCache#runNext","get.find$argument_0","MutationCache#clear","notifyManager.batch$argument_0","forEach$argument_0","MutationCache#getAll","MutationCache#find","getAll.find$argument_0","MutationCache#findAll","getAll.filter$argument_0","MutationCache#notify","listeners.forEach$argument_0","MutationCache#resumePausedMutations","pausedMutations.map$argument_0","scopeFor"],"mappings":"AAA;oBCK;ECC;GDM;EEI;GFU;EGC;GHY;EIC;GJkB;EKC;QCK,mCD;GLM;EOC;0DCG,yCD;GPK;ESC;wBCC;8BCC;ODE;KDG;GTC;EYC;GZE;EaC;MCG,uDD;GbE;EeC;gCCC,8CD;GfC;EiBC;wBPC;6BQC;ORE;KOC;GjBC;EmBC;iDHC,uBG;MTE;4BUC,6CV;OSC;GnBE;CDC;AsBC;CtBE"}},"type":"js/module"}]}