{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PinchGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        scaleChange: current.scale\n      };\n    } else {\n      changePayload = {\n        scaleChange: current.scale / previous.scale\n      };\n    }\n    return {\n      ...current,\n      ...changePayload\n    };\n  }\n  class PinchGesture extends _gesture.ContinousBaseGesture {\n    constructor() {\n      super();\n      this.handlerName = 'PinchGestureHandler';\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, PinchGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n  exports.PinchGesture = PinchGesture;\n});","lineCount":37,"map":[[6,2,1,0],[6,6,1,0,"_gesture"],[6,14,1,0],[6,17,1,0,"require"],[6,24,1,0],[6,25,1,0,"_dependencyMap"],[6,39,1,0],[7,2,3,0],[7,11,3,9,"changeEventCalculator"],[7,32,3,30,"changeEventCalculator"],[7,33,3,31,"current"],[7,40,3,38],[7,42,3,40,"previous"],[7,50,3,48],[7,52,3,50],[8,4,4,2],[8,13,4,11],[10,4,6,2],[10,8,6,6,"changePayload"],[10,21,6,19],[11,4,8,2],[11,8,8,6,"previous"],[11,16,8,14],[11,21,8,19,"undefined"],[11,30,8,28],[11,32,8,30],[12,6,9,4,"changePayload"],[12,19,9,17],[12,22,9,20],[13,8,10,6,"scaleChange"],[13,19,10,17],[13,21,10,19,"current"],[13,28,10,26],[13,29,10,27,"scale"],[14,6,11,4],[14,7,11,5],[15,4,12,2],[15,5,12,3],[15,11,12,9],[16,6,13,4,"changePayload"],[16,19,13,17],[16,22,13,20],[17,8,14,6,"scaleChange"],[17,19,14,17],[17,21,14,19,"current"],[17,28,14,26],[17,29,14,27,"scale"],[17,34,14,32],[17,37,14,35,"previous"],[17,45,14,43],[17,46,14,44,"scale"],[18,6,15,4],[18,7,15,5],[19,4,16,2],[20,4,18,2],[20,11,18,9],[21,6,18,11],[21,9,18,14,"current"],[21,16,18,21],[22,6,19,4],[22,9,19,7,"changePayload"],[23,4,20,2],[23,5,20,3],[24,2,21,0],[25,2,23,7],[25,8,23,13,"PinchGesture"],[25,20,23,25],[25,29,23,34,"ContinousBaseGesture"],[25,58,23,54],[25,59,23,55],[26,4,24,2,"constructor"],[26,15,24,13,"constructor"],[26,16,24,13],[26,18,24,16],[27,6,25,4],[27,11,25,9],[27,12,25,10],[27,13,25,11],[28,6,26,4],[28,10,26,8],[28,11,26,9,"handlerName"],[28,22,26,20],[28,25,26,23],[28,46,26,44],[29,4,27,2],[30,4,29,2,"onChange"],[30,12,29,10,"onChange"],[30,13,29,11,"callback"],[30,21,29,19],[30,23,29,21],[31,6,30,4],[32,6,31,4],[32,10,31,8],[32,11,31,9,"handlers"],[32,19,31,17],[32,20,31,18,"changeEventCalculator"],[32,41,31,39],[32,44,31,42,"changeEventCalculator"],[32,65,31,63],[33,6,32,4],[33,13,32,11],[33,18,32,16],[33,19,32,17,"onChange"],[33,27,32,25],[33,28,32,26,"callback"],[33,36,32,34],[33,37,32,35],[34,4,33,2],[35,2,35,0],[36,2,35,1,"exports"],[36,9,35,1],[36,10,35,1,"PinchGesture"],[36,22,35,1],[36,25,35,1,"PinchGesture"],[36,37,35,1],[37,0,35,1],[37,3]],"functionMap":{"names":["<global>","changeEventCalculator","PinchGesture","PinchGesture#constructor","PinchGesture#onChange"],"mappings":"AAA;ACE;CDkB;OEE;ECC;GDG;EEE;GFI;CFE"}},"type":"js/module"}]}