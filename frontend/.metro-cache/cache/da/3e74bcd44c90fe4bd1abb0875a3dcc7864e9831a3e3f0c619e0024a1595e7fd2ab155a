{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":49,"index":64}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PanGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        changeX: current.translationX,\n        changeY: current.translationY\n      };\n    } else {\n      changePayload = {\n        changeX: current.translationX - previous.translationX,\n        changeY: current.translationY - previous.translationY\n      };\n    }\n    return {\n      ...current,\n      ...changePayload\n    };\n  }\n  class PanGesture extends _gesture.ContinousBaseGesture {\n    config = {};\n    constructor() {\n      super();\n      this.handlerName = 'PanGestureHandler';\n    }\n\n    /**\n     * Range along Y axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetyvalue-number--number\n     */\n    activeOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetYStart = offset[0];\n        this.config.activeOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetYStart = offset;\n      } else {\n        this.config.activeOffsetYEnd = offset;\n      }\n      return this;\n    }\n\n    /**\n     * Range along X axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetxvalue-number--number\n     */\n    activeOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetXStart = offset[0];\n        this.config.activeOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetXStart = offset;\n      } else {\n        this.config.activeOffsetXEnd = offset;\n      }\n      return this;\n    }\n\n    /**\n     * When the finger moves outside this range (in points) along Y axis and gesture hasn't yet activated it will fail recognizing the gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetyvalue-number--number\n     */\n    failOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetYStart = offset[0];\n        this.config.failOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetYStart = offset;\n      } else {\n        this.config.failOffsetYEnd = offset;\n      }\n      return this;\n    }\n\n    /**\n     * When the finger moves outside this range (in points) along X axis and gesture hasn't yet activated it will fail recognizing the gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetxvalue-number--number\n     */\n    failOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetXStart = offset[0];\n        this.config.failOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetXStart = offset;\n      } else {\n        this.config.failOffsetXEnd = offset;\n      }\n      return this;\n    }\n\n    /**\n     * A number of fingers that is required to be placed before gesture can activate. Should be a higher or equal to 0 integer.\n     * @param minPointers\n     */\n    minPointers(minPointers) {\n      this.config.minPointers = minPointers;\n      return this;\n    }\n\n    /**\n     * When the given number of fingers is placed on the screen and gesture hasn't yet activated it will fail recognizing the gesture.\n     * Should be a higher or equal to 0 integer.\n     * @param maxPointers\n     */\n    maxPointers(maxPointers) {\n      this.config.maxPointers = maxPointers;\n      return this;\n    }\n\n    /**\n     * Minimum distance the finger (or multiple finger) need to travel before the gesture activates.\n     * Expressed in points.\n     * @param distance\n     */\n    minDistance(distance) {\n      this.config.minDist = distance;\n      return this;\n    }\n\n    /**\n     * Minimum velocity the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n    minVelocity(velocity) {\n      this.config.minVelocity = velocity;\n      return this;\n    }\n\n    /**\n     * Minimum velocity along X axis the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n    minVelocityX(velocity) {\n      this.config.minVelocityX = velocity;\n      return this;\n    }\n\n    /**\n     * Minimum velocity along Y axis the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n    minVelocityY(velocity) {\n      this.config.minVelocityY = velocity;\n      return this;\n    }\n\n    /**\n     * #### Android only\n     * Android, by default, will calculate translation values based on the position of the leading pointer (the first one that was placed on the screen).\n     * This modifier allows that behavior to be changed to the one that is default on iOS - the averaged position of all active pointers will be used to calculate the translation values.\n     * @param value\n     */\n    averageTouches(value) {\n      this.config.avgTouches = value;\n      return this;\n    }\n\n    /**\n     * #### iOS only\n     * Enables two-finger gestures on supported devices, for example iPads with trackpads.\n     * @param value\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#enabletrackpadtwofingergesturevalue-boolean-ios-only\n     */\n    enableTrackpadTwoFingerGesture(value) {\n      this.config.enableTrackpadTwoFingerGesture = value;\n      return this;\n    }\n\n    /**\n     * Duration in milliseconds of the LongPress gesture before Pan is allowed to activate.\n     * @param duration\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#activateafterlongpressduration-number\n     */\n    activateAfterLongPress(duration) {\n      this.config.activateAfterLongPress = duration;\n      return this;\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n  exports.PanGesture = PanGesture;\n});","lineCount":198,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"PanGesture"],[7,20,1,13],[8,2,3,0],[8,6,3,0,"_gesture"],[8,14,3,0],[8,17,3,0,"require"],[8,24,3,0],[8,25,3,0,"_dependencyMap"],[8,39,3,0],[9,2,4,0],[9,11,4,9,"changeEventCalculator"],[9,32,4,30,"changeEventCalculator"],[9,33,4,31,"current"],[9,40,4,38],[9,42,4,40,"previous"],[9,50,4,48],[9,52,4,50],[10,4,5,2],[10,13,5,11],[12,4,7,2],[12,8,7,6,"changePayload"],[12,21,7,19],[13,4,8,2],[13,8,8,6,"previous"],[13,16,8,14],[13,21,8,19,"undefined"],[13,30,8,28],[13,32,8,30],[14,6,9,4,"changePayload"],[14,19,9,17],[14,22,9,20],[15,8,10,6,"changeX"],[15,15,10,13],[15,17,10,15,"current"],[15,24,10,22],[15,25,10,23,"translationX"],[15,37,10,35],[16,8,11,6,"changeY"],[16,15,11,13],[16,17,11,15,"current"],[16,24,11,22],[16,25,11,23,"translationY"],[17,6,12,4],[17,7,12,5],[18,4,13,2],[18,5,13,3],[18,11,13,9],[19,6,14,4,"changePayload"],[19,19,14,17],[19,22,14,20],[20,8,15,6,"changeX"],[20,15,15,13],[20,17,15,15,"current"],[20,24,15,22],[20,25,15,23,"translationX"],[20,37,15,35],[20,40,15,38,"previous"],[20,48,15,46],[20,49,15,47,"translationX"],[20,61,15,59],[21,8,16,6,"changeY"],[21,15,16,13],[21,17,16,15,"current"],[21,24,16,22],[21,25,16,23,"translationY"],[21,37,16,35],[21,40,16,38,"previous"],[21,48,16,46],[21,49,16,47,"translationY"],[22,6,17,4],[22,7,17,5],[23,4,18,2],[24,4,19,2],[24,11,19,9],[25,6,20,4],[25,9,20,7,"current"],[25,16,20,14],[26,6,21,4],[26,9,21,7,"changePayload"],[27,4,22,2],[27,5,22,3],[28,2,23,0],[29,2,24,7],[29,8,24,13,"PanGesture"],[29,18,24,23],[29,27,24,32,"ContinousBaseGesture"],[29,56,24,52],[29,57,24,53],[30,4,25,2,"config"],[30,10,25,8],[30,13,25,11],[30,14,25,12],[30,15,25,13],[31,4,26,2,"constructor"],[31,15,26,13,"constructor"],[31,16,26,13],[31,18,26,16],[32,6,27,4],[32,11,27,9],[32,12,27,10],[32,13,27,11],[33,6,28,4],[33,10,28,8],[33,11,28,9,"handlerName"],[33,22,28,20],[33,25,28,23],[33,44,28,42],[34,4,29,2],[36,4,31,2],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,4,36,2,"activeOffsetY"],[41,17,36,15,"activeOffsetY"],[41,18,36,16,"offset"],[41,24,36,22],[41,26,36,24],[42,6,37,4],[42,10,37,8,"Array"],[42,15,37,13],[42,16,37,14,"isArray"],[42,23,37,21],[42,24,37,22,"offset"],[42,30,37,28],[42,31,37,29],[42,33,37,31],[43,8,38,6],[43,12,38,10],[43,13,38,11,"config"],[43,19,38,17],[43,20,38,18,"activeOffsetYStart"],[43,38,38,36],[43,41,38,39,"offset"],[43,47,38,45],[43,48,38,46],[43,49,38,47],[43,50,38,48],[44,8,39,6],[44,12,39,10],[44,13,39,11,"config"],[44,19,39,17],[44,20,39,18,"activeOffsetYEnd"],[44,36,39,34],[44,39,39,37,"offset"],[44,45,39,43],[44,46,39,44],[44,47,39,45],[44,48,39,46],[45,6,40,4],[45,7,40,5],[45,13,40,11],[45,17,40,15,"offset"],[45,23,40,21],[45,26,40,24],[45,27,40,25],[45,29,40,27],[46,8,41,6],[46,12,41,10],[46,13,41,11,"config"],[46,19,41,17],[46,20,41,18,"activeOffsetYStart"],[46,38,41,36],[46,41,41,39,"offset"],[46,47,41,45],[47,6,42,4],[47,7,42,5],[47,13,42,11],[48,8,43,6],[48,12,43,10],[48,13,43,11,"config"],[48,19,43,17],[48,20,43,18,"activeOffsetYEnd"],[48,36,43,34],[48,39,43,37,"offset"],[48,45,43,43],[49,6,44,4],[50,6,45,4],[50,13,45,11],[50,17,45,15],[51,4,46,2],[53,4,48,2],[54,0,49,0],[55,0,50,0],[56,0,51,0],[57,0,52,0],[58,4,53,2,"activeOffsetX"],[58,17,53,15,"activeOffsetX"],[58,18,53,16,"offset"],[58,24,53,22],[58,26,53,24],[59,6,54,4],[59,10,54,8,"Array"],[59,15,54,13],[59,16,54,14,"isArray"],[59,23,54,21],[59,24,54,22,"offset"],[59,30,54,28],[59,31,54,29],[59,33,54,31],[60,8,55,6],[60,12,55,10],[60,13,55,11,"config"],[60,19,55,17],[60,20,55,18,"activeOffsetXStart"],[60,38,55,36],[60,41,55,39,"offset"],[60,47,55,45],[60,48,55,46],[60,49,55,47],[60,50,55,48],[61,8,56,6],[61,12,56,10],[61,13,56,11,"config"],[61,19,56,17],[61,20,56,18,"activeOffsetXEnd"],[61,36,56,34],[61,39,56,37,"offset"],[61,45,56,43],[61,46,56,44],[61,47,56,45],[61,48,56,46],[62,6,57,4],[62,7,57,5],[62,13,57,11],[62,17,57,15,"offset"],[62,23,57,21],[62,26,57,24],[62,27,57,25],[62,29,57,27],[63,8,58,6],[63,12,58,10],[63,13,58,11,"config"],[63,19,58,17],[63,20,58,18,"activeOffsetXStart"],[63,38,58,36],[63,41,58,39,"offset"],[63,47,58,45],[64,6,59,4],[64,7,59,5],[64,13,59,11],[65,8,60,6],[65,12,60,10],[65,13,60,11,"config"],[65,19,60,17],[65,20,60,18,"activeOffsetXEnd"],[65,36,60,34],[65,39,60,37,"offset"],[65,45,60,43],[66,6,61,4],[67,6,62,4],[67,13,62,11],[67,17,62,15],[68,4,63,2],[70,4,65,2],[71,0,66,0],[72,0,67,0],[73,0,68,0],[74,0,69,0],[75,4,70,2,"failOffsetY"],[75,15,70,13,"failOffsetY"],[75,16,70,14,"offset"],[75,22,70,20],[75,24,70,22],[76,6,71,4],[76,10,71,8,"Array"],[76,15,71,13],[76,16,71,14,"isArray"],[76,23,71,21],[76,24,71,22,"offset"],[76,30,71,28],[76,31,71,29],[76,33,71,31],[77,8,72,6],[77,12,72,10],[77,13,72,11,"config"],[77,19,72,17],[77,20,72,18,"failOffsetYStart"],[77,36,72,34],[77,39,72,37,"offset"],[77,45,72,43],[77,46,72,44],[77,47,72,45],[77,48,72,46],[78,8,73,6],[78,12,73,10],[78,13,73,11,"config"],[78,19,73,17],[78,20,73,18,"failOffsetYEnd"],[78,34,73,32],[78,37,73,35,"offset"],[78,43,73,41],[78,44,73,42],[78,45,73,43],[78,46,73,44],[79,6,74,4],[79,7,74,5],[79,13,74,11],[79,17,74,15,"offset"],[79,23,74,21],[79,26,74,24],[79,27,74,25],[79,29,74,27],[80,8,75,6],[80,12,75,10],[80,13,75,11,"config"],[80,19,75,17],[80,20,75,18,"failOffsetYStart"],[80,36,75,34],[80,39,75,37,"offset"],[80,45,75,43],[81,6,76,4],[81,7,76,5],[81,13,76,11],[82,8,77,6],[82,12,77,10],[82,13,77,11,"config"],[82,19,77,17],[82,20,77,18,"failOffsetYEnd"],[82,34,77,32],[82,37,77,35,"offset"],[82,43,77,41],[83,6,78,4],[84,6,79,4],[84,13,79,11],[84,17,79,15],[85,4,80,2],[87,4,82,2],[88,0,83,0],[89,0,84,0],[90,0,85,0],[91,0,86,0],[92,4,87,2,"failOffsetX"],[92,15,87,13,"failOffsetX"],[92,16,87,14,"offset"],[92,22,87,20],[92,24,87,22],[93,6,88,4],[93,10,88,8,"Array"],[93,15,88,13],[93,16,88,14,"isArray"],[93,23,88,21],[93,24,88,22,"offset"],[93,30,88,28],[93,31,88,29],[93,33,88,31],[94,8,89,6],[94,12,89,10],[94,13,89,11,"config"],[94,19,89,17],[94,20,89,18,"failOffsetXStart"],[94,36,89,34],[94,39,89,37,"offset"],[94,45,89,43],[94,46,89,44],[94,47,89,45],[94,48,89,46],[95,8,90,6],[95,12,90,10],[95,13,90,11,"config"],[95,19,90,17],[95,20,90,18,"failOffsetXEnd"],[95,34,90,32],[95,37,90,35,"offset"],[95,43,90,41],[95,44,90,42],[95,45,90,43],[95,46,90,44],[96,6,91,4],[96,7,91,5],[96,13,91,11],[96,17,91,15,"offset"],[96,23,91,21],[96,26,91,24],[96,27,91,25],[96,29,91,27],[97,8,92,6],[97,12,92,10],[97,13,92,11,"config"],[97,19,92,17],[97,20,92,18,"failOffsetXStart"],[97,36,92,34],[97,39,92,37,"offset"],[97,45,92,43],[98,6,93,4],[98,7,93,5],[98,13,93,11],[99,8,94,6],[99,12,94,10],[99,13,94,11,"config"],[99,19,94,17],[99,20,94,18,"failOffsetXEnd"],[99,34,94,32],[99,37,94,35,"offset"],[99,43,94,41],[100,6,95,4],[101,6,96,4],[101,13,96,11],[101,17,96,15],[102,4,97,2],[104,4,99,2],[105,0,100,0],[106,0,101,0],[107,0,102,0],[108,4,103,2,"minPointers"],[108,15,103,13,"minPointers"],[108,16,103,14,"minPointers"],[108,27,103,25],[108,29,103,27],[109,6,104,4],[109,10,104,8],[109,11,104,9,"config"],[109,17,104,15],[109,18,104,16,"minPointers"],[109,29,104,27],[109,32,104,30,"minPointers"],[109,43,104,41],[110,6,105,4],[110,13,105,11],[110,17,105,15],[111,4,106,2],[113,4,108,2],[114,0,109,0],[115,0,110,0],[116,0,111,0],[117,0,112,0],[118,4,113,2,"maxPointers"],[118,15,113,13,"maxPointers"],[118,16,113,14,"maxPointers"],[118,27,113,25],[118,29,113,27],[119,6,114,4],[119,10,114,8],[119,11,114,9,"config"],[119,17,114,15],[119,18,114,16,"maxPointers"],[119,29,114,27],[119,32,114,30,"maxPointers"],[119,43,114,41],[120,6,115,4],[120,13,115,11],[120,17,115,15],[121,4,116,2],[123,4,118,2],[124,0,119,0],[125,0,120,0],[126,0,121,0],[127,0,122,0],[128,4,123,2,"minDistance"],[128,15,123,13,"minDistance"],[128,16,123,14,"distance"],[128,24,123,22],[128,26,123,24],[129,6,124,4],[129,10,124,8],[129,11,124,9,"config"],[129,17,124,15],[129,18,124,16,"minDist"],[129,25,124,23],[129,28,124,26,"distance"],[129,36,124,34],[130,6,125,4],[130,13,125,11],[130,17,125,15],[131,4,126,2],[133,4,128,2],[134,0,129,0],[135,0,130,0],[136,0,131,0],[137,4,132,2,"minVelocity"],[137,15,132,13,"minVelocity"],[137,16,132,14,"velocity"],[137,24,132,22],[137,26,132,24],[138,6,133,4],[138,10,133,8],[138,11,133,9,"config"],[138,17,133,15],[138,18,133,16,"minVelocity"],[138,29,133,27],[138,32,133,30,"velocity"],[138,40,133,38],[139,6,134,4],[139,13,134,11],[139,17,134,15],[140,4,135,2],[142,4,137,2],[143,0,138,0],[144,0,139,0],[145,0,140,0],[146,4,141,2,"minVelocityX"],[146,16,141,14,"minVelocityX"],[146,17,141,15,"velocity"],[146,25,141,23],[146,27,141,25],[147,6,142,4],[147,10,142,8],[147,11,142,9,"config"],[147,17,142,15],[147,18,142,16,"minVelocityX"],[147,30,142,28],[147,33,142,31,"velocity"],[147,41,142,39],[148,6,143,4],[148,13,143,11],[148,17,143,15],[149,4,144,2],[151,4,146,2],[152,0,147,0],[153,0,148,0],[154,0,149,0],[155,4,150,2,"minVelocityY"],[155,16,150,14,"minVelocityY"],[155,17,150,15,"velocity"],[155,25,150,23],[155,27,150,25],[156,6,151,4],[156,10,151,8],[156,11,151,9,"config"],[156,17,151,15],[156,18,151,16,"minVelocityY"],[156,30,151,28],[156,33,151,31,"velocity"],[156,41,151,39],[157,6,152,4],[157,13,152,11],[157,17,152,15],[158,4,153,2],[160,4,155,2],[161,0,156,0],[162,0,157,0],[163,0,158,0],[164,0,159,0],[165,0,160,0],[166,4,161,2,"averageTouches"],[166,18,161,16,"averageTouches"],[166,19,161,17,"value"],[166,24,161,22],[166,26,161,24],[167,6,162,4],[167,10,162,8],[167,11,162,9,"config"],[167,17,162,15],[167,18,162,16,"avgTouches"],[167,28,162,26],[167,31,162,29,"value"],[167,36,162,34],[168,6,163,4],[168,13,163,11],[168,17,163,15],[169,4,164,2],[171,4,166,2],[172,0,167,0],[173,0,168,0],[174,0,169,0],[175,0,170,0],[176,0,171,0],[177,4,172,2,"enableTrackpadTwoFingerGesture"],[177,34,172,32,"enableTrackpadTwoFingerGesture"],[177,35,172,33,"value"],[177,40,172,38],[177,42,172,40],[178,6,173,4],[178,10,173,8],[178,11,173,9,"config"],[178,17,173,15],[178,18,173,16,"enableTrackpadTwoFingerGesture"],[178,48,173,46],[178,51,173,49,"value"],[178,56,173,54],[179,6,174,4],[179,13,174,11],[179,17,174,15],[180,4,175,2],[182,4,177,2],[183,0,178,0],[184,0,179,0],[185,0,180,0],[186,0,181,0],[187,4,182,2,"activateAfterLongPress"],[187,26,182,24,"activateAfterLongPress"],[187,27,182,25,"duration"],[187,35,182,33],[187,37,182,35],[188,6,183,4],[188,10,183,8],[188,11,183,9,"config"],[188,17,183,15],[188,18,183,16,"activateAfterLongPress"],[188,40,183,38],[188,43,183,41,"duration"],[188,51,183,49],[189,6,184,4],[189,13,184,11],[189,17,184,15],[190,4,185,2],[191,4,186,2,"onChange"],[191,12,186,10,"onChange"],[191,13,186,11,"callback"],[191,21,186,19],[191,23,186,21],[192,6,187,4],[193,6,188,4],[193,10,188,8],[193,11,188,9,"handlers"],[193,19,188,17],[193,20,188,18,"changeEventCalculator"],[193,41,188,39],[193,44,188,42,"changeEventCalculator"],[193,65,188,63],[194,6,189,4],[194,13,189,11],[194,18,189,16],[194,19,189,17,"onChange"],[194,27,189,25],[194,28,189,26,"callback"],[194,36,189,34],[194,37,189,35],[195,4,190,2],[196,2,191,0],[197,2,191,1,"exports"],[197,9,191,1],[197,10,191,1,"PanGesture"],[197,20,191,1],[197,23,191,1,"PanGesture"],[197,33,191,1],[198,0,191,1],[198,3]],"functionMap":{"names":["<global>","changeEventCalculator","PanGesture","PanGesture#constructor","PanGesture#activeOffsetY","PanGesture#activeOffsetX","PanGesture#failOffsetY","PanGesture#failOffsetX","PanGesture#minPointers","PanGesture#maxPointers","PanGesture#minDistance","PanGesture#minVelocity","PanGesture#minVelocityX","PanGesture#minVelocityY","PanGesture#averageTouches","PanGesture#enableTrackpadTwoFingerGesture","PanGesture#activateAfterLongPress","PanGesture#onChange"],"mappings":"AAA;ACG;CDmB;OEC;ECE;GDG;EEO;GFU;EGO;GHU;EIO;GJU;EKO;GLU;EMM;GNG;EOO;GPG;EQO;GRG;ESM;GTG;EUM;GVG;EWM;GXG;EYQ;GZG;EaQ;GbG;EcO;GdG;EeC;GfI;CFC"}},"type":"js/module"}]}