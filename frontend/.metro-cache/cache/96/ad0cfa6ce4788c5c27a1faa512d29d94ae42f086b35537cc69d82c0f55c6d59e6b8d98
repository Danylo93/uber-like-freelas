{"dependencies":[{"name":"buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":13,"index":142},"end":{"line":3,"column":30,"index":159}}],"key":"kYC7RadcB7k9ZEYd5zOmBbv1F14=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n  /* eslint-disable node/no-deprecated-api */\n  var buffer = require(_dependencyMap[0], \"buffer\");\n  var Buffer = buffer.Buffer;\n\n  // alternative to using Object.keys for old browsers\n  function copyProps(src, dst) {\n    for (var key in src) {\n      dst[key] = src[key];\n    }\n  }\n  if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n    module.exports = buffer;\n  } else {\n    // Copy properties from require('buffer')\n    copyProps(buffer, exports);\n    exports.Buffer = SafeBuffer;\n  }\n  function SafeBuffer(arg, encodingOrOffset, length) {\n    return Buffer(arg, encodingOrOffset, length);\n  }\n  SafeBuffer.prototype = Object.create(Buffer.prototype);\n\n  // Copy static methods from Buffer\n  copyProps(Buffer, SafeBuffer);\n  SafeBuffer.from = function (arg, encodingOrOffset, length) {\n    if (typeof arg === 'number') {\n      throw new TypeError('Argument must not be a number');\n    }\n    return Buffer(arg, encodingOrOffset, length);\n  };\n  SafeBuffer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    var buf = Buffer(size);\n    if (fill !== undefined) {\n      if (typeof encoding === 'string') {\n        buf.fill(fill, encoding);\n      } else {\n        buf.fill(fill);\n      }\n    } else {\n      buf.fill(0);\n    }\n    return buf;\n  };\n  SafeBuffer.allocUnsafe = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    return Buffer(size);\n  };\n  SafeBuffer.allocUnsafeSlow = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    return buffer.SlowBuffer(size);\n  };\n});","lineCount":61,"map":[[2,2,1,0],[3,2,2,0],[4,2,3,0],[4,6,3,4,"buffer"],[4,12,3,10],[4,15,3,13,"require"],[4,22,3,20],[4,23,3,20,"_dependencyMap"],[4,37,3,20],[4,50,3,29],[4,51,3,30],[5,2,4,0],[5,6,4,4,"Buffer"],[5,12,4,10],[5,15,4,13,"buffer"],[5,21,4,19],[5,22,4,20,"Buffer"],[5,28,4,26],[7,2,6,0],[8,2,7,0],[8,11,7,9,"copyProps"],[8,20,7,18,"copyProps"],[8,21,7,20,"src"],[8,24,7,23],[8,26,7,25,"dst"],[8,29,7,28],[8,31,7,30],[9,4,8,2],[9,9,8,7],[9,13,8,11,"key"],[9,16,8,14],[9,20,8,18,"src"],[9,23,8,21],[9,25,8,23],[10,6,9,4,"dst"],[10,9,9,7],[10,10,9,8,"key"],[10,13,9,11],[10,14,9,12],[10,17,9,15,"src"],[10,20,9,18],[10,21,9,19,"key"],[10,24,9,22],[10,25,9,23],[11,4,10,2],[12,2,11,0],[13,2,12,0],[13,6,12,4,"Buffer"],[13,12,12,10],[13,13,12,11,"from"],[13,17,12,15],[13,21,12,19,"Buffer"],[13,27,12,25],[13,28,12,26,"alloc"],[13,33,12,31],[13,37,12,35,"Buffer"],[13,43,12,41],[13,44,12,42,"allocUnsafe"],[13,55,12,53],[13,59,12,57,"Buffer"],[13,65,12,63],[13,66,12,64,"allocUnsafeSlow"],[13,81,12,79],[13,83,12,81],[14,4,13,2,"module"],[14,10,13,8],[14,11,13,9,"exports"],[14,18,13,16],[14,21,13,19,"buffer"],[14,27,13,25],[15,2,14,0],[15,3,14,1],[15,9,14,7],[16,4,15,2],[17,4,16,2,"copyProps"],[17,13,16,11],[17,14,16,12,"buffer"],[17,20,16,18],[17,22,16,20,"exports"],[17,29,16,27],[17,30,16,28],[18,4,17,2,"exports"],[18,11,17,9],[18,12,17,10,"Buffer"],[18,18,17,16],[18,21,17,19,"SafeBuffer"],[18,31,17,29],[19,2,18,0],[20,2,20,0],[20,11,20,9,"SafeBuffer"],[20,21,20,19,"SafeBuffer"],[20,22,20,21,"arg"],[20,25,20,24],[20,27,20,26,"encodingOrOffset"],[20,43,20,42],[20,45,20,44,"length"],[20,51,20,50],[20,53,20,52],[21,4,21,2],[21,11,21,9,"Buffer"],[21,17,21,15],[21,18,21,16,"arg"],[21,21,21,19],[21,23,21,21,"encodingOrOffset"],[21,39,21,37],[21,41,21,39,"length"],[21,47,21,45],[21,48,21,46],[22,2,22,0],[23,2,24,0,"SafeBuffer"],[23,12,24,10],[23,13,24,11,"prototype"],[23,22,24,20],[23,25,24,23,"Object"],[23,31,24,29],[23,32,24,30,"create"],[23,38,24,36],[23,39,24,37,"Buffer"],[23,45,24,43],[23,46,24,44,"prototype"],[23,55,24,53],[23,56,24,54],[25,2,26,0],[26,2,27,0,"copyProps"],[26,11,27,9],[26,12,27,10,"Buffer"],[26,18,27,16],[26,20,27,18,"SafeBuffer"],[26,30,27,28],[26,31,27,29],[27,2,29,0,"SafeBuffer"],[27,12,29,10],[27,13,29,11,"from"],[27,17,29,15],[27,20,29,18],[27,30,29,28,"arg"],[27,33,29,31],[27,35,29,33,"encodingOrOffset"],[27,51,29,49],[27,53,29,51,"length"],[27,59,29,57],[27,61,29,59],[28,4,30,2],[28,8,30,6],[28,15,30,13,"arg"],[28,18,30,16],[28,23,30,21],[28,31,30,29],[28,33,30,31],[29,6,31,4],[29,12,31,10],[29,16,31,14,"TypeError"],[29,25,31,23],[29,26,31,24],[29,57,31,55],[29,58,31,56],[30,4,32,2],[31,4,33,2],[31,11,33,9,"Buffer"],[31,17,33,15],[31,18,33,16,"arg"],[31,21,33,19],[31,23,33,21,"encodingOrOffset"],[31,39,33,37],[31,41,33,39,"length"],[31,47,33,45],[31,48,33,46],[32,2,34,0],[32,3,34,1],[33,2,36,0,"SafeBuffer"],[33,12,36,10],[33,13,36,11,"alloc"],[33,18,36,16],[33,21,36,19],[33,31,36,29,"size"],[33,35,36,33],[33,37,36,35,"fill"],[33,41,36,39],[33,43,36,41,"encoding"],[33,51,36,49],[33,53,36,51],[34,4,37,2],[34,8,37,6],[34,15,37,13,"size"],[34,19,37,17],[34,24,37,22],[34,32,37,30],[34,34,37,32],[35,6,38,4],[35,12,38,10],[35,16,38,14,"TypeError"],[35,25,38,23],[35,26,38,24],[35,53,38,51],[35,54,38,52],[36,4,39,2],[37,4,40,2],[37,8,40,6,"buf"],[37,11,40,9],[37,14,40,12,"Buffer"],[37,20,40,18],[37,21,40,19,"size"],[37,25,40,23],[37,26,40,24],[38,4,41,2],[38,8,41,6,"fill"],[38,12,41,10],[38,17,41,15,"undefined"],[38,26,41,24],[38,28,41,26],[39,6,42,4],[39,10,42,8],[39,17,42,15,"encoding"],[39,25,42,23],[39,30,42,28],[39,38,42,36],[39,40,42,38],[40,8,43,6,"buf"],[40,11,43,9],[40,12,43,10,"fill"],[40,16,43,14],[40,17,43,15,"fill"],[40,21,43,19],[40,23,43,21,"encoding"],[40,31,43,29],[40,32,43,30],[41,6,44,4],[41,7,44,5],[41,13,44,11],[42,8,45,6,"buf"],[42,11,45,9],[42,12,45,10,"fill"],[42,16,45,14],[42,17,45,15,"fill"],[42,21,45,19],[42,22,45,20],[43,6,46,4],[44,4,47,2],[44,5,47,3],[44,11,47,9],[45,6,48,4,"buf"],[45,9,48,7],[45,10,48,8,"fill"],[45,14,48,12],[45,15,48,13],[45,16,48,14],[45,17,48,15],[46,4,49,2],[47,4,50,2],[47,11,50,9,"buf"],[47,14,50,12],[48,2,51,0],[48,3,51,1],[49,2,53,0,"SafeBuffer"],[49,12,53,10],[49,13,53,11,"allocUnsafe"],[49,24,53,22],[49,27,53,25],[49,37,53,35,"size"],[49,41,53,39],[49,43,53,41],[50,4,54,2],[50,8,54,6],[50,15,54,13,"size"],[50,19,54,17],[50,24,54,22],[50,32,54,30],[50,34,54,32],[51,6,55,4],[51,12,55,10],[51,16,55,14,"TypeError"],[51,25,55,23],[51,26,55,24],[51,53,55,51],[51,54,55,52],[52,4,56,2],[53,4,57,2],[53,11,57,9,"Buffer"],[53,17,57,15],[53,18,57,16,"size"],[53,22,57,20],[53,23,57,21],[54,2,58,0],[54,3,58,1],[55,2,60,0,"SafeBuffer"],[55,12,60,10],[55,13,60,11,"allocUnsafeSlow"],[55,28,60,26],[55,31,60,29],[55,41,60,39,"size"],[55,45,60,43],[55,47,60,45],[56,4,61,2],[56,8,61,6],[56,15,61,13,"size"],[56,19,61,17],[56,24,61,22],[56,32,61,30],[56,34,61,32],[57,6,62,4],[57,12,62,10],[57,16,62,14,"TypeError"],[57,25,62,23],[57,26,62,24],[57,53,62,51],[57,54,62,52],[58,4,63,2],[59,4,64,2],[59,11,64,9,"buffer"],[59,17,64,15],[59,18,64,16,"SlowBuffer"],[59,28,64,26],[59,29,64,27,"size"],[59,33,64,31],[59,34,64,32],[60,2,65,0],[60,3,65,1],[61,0,65,1],[61,3]],"functionMap":{"names":["<global>","copyProps","SafeBuffer","SafeBuffer.from","SafeBuffer.alloc","SafeBuffer.allocUnsafe","SafeBuffer.allocUnsafeSlow"],"mappings":"AAA;ACM;CDI;AES;CFE;kBGO;CHK;mBIE;CJe;yBKE;CLK;6BME;CNK"}},"type":"js/module"}]}