{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":36,"index":51}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":52},"end":{"line":4,"column":108,"index":160}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"]}},{"name":"./DraggingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":161},"end":{"line":5,"column":62,"index":223}}],"key":"veIIVtZ+Znwl7KqPaA+sdGzF8LE=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":224},"end":{"line":6,"column":80,"index":304}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":305},"end":{"line":7,"column":33,"index":338}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _hammerjs = _interopRequireDefault(require(_dependencyMap[1], \"@egjs/hammerjs\"));\n  var _constants = require(_dependencyMap[2], \"./constants\");\n  var _DraggingGestureHandler = _interopRequireDefault(require(_dependencyMap[3], \"./DraggingGestureHandler\"));\n  var _utils = require(_dependencyMap[4], \"./utils\");\n  var _State = require(_dependencyMap[5], \"../State\");\n  class PanGestureHandler extends _DraggingGestureHandler.default {\n    get name() {\n      return 'pan';\n    }\n    get NativeGestureClass() {\n      return _hammerjs.default.Pan;\n    }\n    getHammerConfig() {\n      return {\n        ...super.getHammerConfig(),\n        direction: this.getDirection()\n      };\n    }\n    getState(type) {\n      const nextState = super.getState(type);\n      // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n      if (this.previousState === _State.State.UNDETERMINED && nextState === _State.State.ACTIVE) {\n        return _State.State.BEGAN;\n      }\n      return nextState;\n    }\n    getDirection() {\n      const config = this.getConfig();\n      const {\n        activeOffsetXStart,\n        activeOffsetXEnd,\n        activeOffsetYStart,\n        activeOffsetYEnd,\n        minDist\n      } = config;\n      let directions = [];\n      let horizontalDirections = [];\n      if (!(0, _utils.isnan)(minDist)) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n      if (!(0, _utils.isnan)(activeOffsetXStart)) {\n        horizontalDirections.push(_hammerjs.default.DIRECTION_LEFT);\n      }\n      if (!(0, _utils.isnan)(activeOffsetXEnd)) {\n        horizontalDirections.push(_hammerjs.default.DIRECTION_RIGHT);\n      }\n      if (horizontalDirections.length === 2) {\n        horizontalDirections = [_hammerjs.default.DIRECTION_HORIZONTAL];\n      }\n      directions = directions.concat(horizontalDirections);\n      let verticalDirections = [];\n      if (!(0, _utils.isnan)(activeOffsetYStart)) {\n        verticalDirections.push(_hammerjs.default.DIRECTION_UP);\n      }\n      if (!(0, _utils.isnan)(activeOffsetYEnd)) {\n        verticalDirections.push(_hammerjs.default.DIRECTION_DOWN);\n      }\n      if (verticalDirections.length === 2) {\n        verticalDirections = [_hammerjs.default.DIRECTION_VERTICAL];\n      }\n      directions = directions.concat(verticalDirections);\n      if (!directions.length) {\n        return _hammerjs.default.DIRECTION_NONE;\n      }\n      if (directions[0] === _hammerjs.default.DIRECTION_HORIZONTAL && directions[1] === _hammerjs.default.DIRECTION_VERTICAL) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n      if (horizontalDirections.length && verticalDirections.length) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n      return directions[0];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          minDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    shouldFailUnderCustomCriteria({\n      deltaX,\n      deltaY\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !(0, _utils.isnan)(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !(0, _utils.isnan)(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !(0, _utils.isnan)(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n    }\n    shouldActivateUnderCustomCriteria({\n      deltaX,\n      deltaY,\n      velocity\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !(0, _utils.isnan)(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !(0, _utils.isnan)(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !(0, _utils.isnan)(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)({\n        x: deltaX,\n        y: deltaY\n      }), criteria.minDistSq) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.x, criteria.minVelocityX) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.y, criteria.minVelocityY) || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)(velocity), criteria.minVelocitySq);\n    }\n    shouldMultiFingerPanFail({\n      pointerLength,\n      scale,\n      deltaRotation\n    }) {\n      if (pointerLength <= 1) {\n        return false;\n      }\n\n      // Test if the pan had too much pinching or rotating.\n      const deltaScale = Math.abs(scale - 1);\n      const absDeltaRotation = Math.abs(deltaRotation);\n      if (deltaScale > _constants.MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      if (absDeltaRotation > _constants.MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      return false;\n    }\n    updateHasCustomActivationCriteria(criteria) {\n      return (0, _utils.isValidNumber)(criteria.minDistSq) || (0, _utils.isValidNumber)(criteria.minVelocityX) || (0, _utils.isValidNumber)(criteria.minVelocityY) || (0, _utils.isValidNumber)(criteria.minVelocitySq) || (0, _utils.isValidNumber)(criteria.activeOffsetXStart) || (0, _utils.isValidNumber)(criteria.activeOffsetXEnd) || (0, _utils.isValidNumber)(criteria.activeOffsetYStart) || (0, _utils.isValidNumber)(criteria.activeOffsetYEnd);\n    }\n    isGestureEnabledForEvent(props, _recognizer, inputData) {\n      if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n        return {\n          failed: true\n        };\n      }\n      const velocity = {\n        x: inputData.velocityX,\n        y: inputData.velocityY\n      };\n      if (this.hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n        deltaX: inputData.deltaX,\n        deltaY: inputData.deltaY,\n        velocity\n      }, props)) {\n        if (this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation\n        })) {\n          return {\n            failed: true\n          };\n        }\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false\n      };\n    }\n  }\n  var _default = exports.default = PanGestureHandler;\n});","lineCount":168,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[9,2,3,0],[9,6,3,0,"_hammerjs"],[9,15,3,0],[9,18,3,0,"_interopRequireDefault"],[9,40,3,0],[9,41,3,0,"require"],[9,48,3,0],[9,49,3,0,"_dependencyMap"],[9,63,3,0],[10,2,4,0],[10,6,4,0,"_constants"],[10,16,4,0],[10,19,4,0,"require"],[10,26,4,0],[10,27,4,0,"_dependencyMap"],[10,41,4,0],[11,2,5,0],[11,6,5,0,"_DraggingGestureHandler"],[11,29,5,0],[11,32,5,0,"_interopRequireDefault"],[11,54,5,0],[11,55,5,0,"require"],[11,62,5,0],[11,63,5,0,"_dependencyMap"],[11,77,5,0],[12,2,6,0],[12,6,6,0,"_utils"],[12,12,6,0],[12,15,6,0,"require"],[12,22,6,0],[12,23,6,0,"_dependencyMap"],[12,37,6,0],[13,2,7,0],[13,6,7,0,"_State"],[13,12,7,0],[13,15,7,0,"require"],[13,22,7,0],[13,23,7,0,"_dependencyMap"],[13,37,7,0],[14,2,8,0],[14,8,8,6,"PanGestureHandler"],[14,25,8,23],[14,34,8,32,"DraggingGestureHandler"],[14,65,8,54],[14,66,8,55],[15,4,9,2],[15,8,9,6,"name"],[15,12,9,10,"name"],[15,13,9,10],[15,15,9,13],[16,6,10,4],[16,13,10,11],[16,18,10,16],[17,4,11,2],[18,4,12,2],[18,8,12,6,"NativeGestureClass"],[18,26,12,24,"NativeGestureClass"],[18,27,12,24],[18,29,12,27],[19,6,13,4],[19,13,13,11,"Hammer"],[19,30,13,17],[19,31,13,18,"Pan"],[19,34,13,21],[20,4,14,2],[21,4,15,2,"getHammerConfig"],[21,19,15,17,"getHammerConfig"],[21,20,15,17],[21,22,15,20],[22,6,16,4],[22,13,16,11],[23,8,17,6],[23,11,17,9],[23,16,17,14],[23,17,17,15,"getHammerConfig"],[23,32,17,30],[23,33,17,31],[23,34,17,32],[24,8,18,6,"direction"],[24,17,18,15],[24,19,18,17],[24,23,18,21],[24,24,18,22,"getDirection"],[24,36,18,34],[24,37,18,35],[25,6,19,4],[25,7,19,5],[26,4,20,2],[27,4,21,2,"getState"],[27,12,21,10,"getState"],[27,13,21,11,"type"],[27,17,21,15],[27,19,21,17],[28,6,22,4],[28,12,22,10,"nextState"],[28,21,22,19],[28,24,22,22],[28,29,22,27],[28,30,22,28,"getState"],[28,38,22,36],[28,39,22,37,"type"],[28,43,22,41],[28,44,22,42],[29,6,23,4],[30,6,24,4],[30,10,24,8],[30,14,24,12],[30,15,24,13,"previousState"],[30,28,24,26],[30,33,24,31,"State"],[30,45,24,36],[30,46,24,37,"UNDETERMINED"],[30,58,24,49],[30,62,24,53,"nextState"],[30,71,24,62],[30,76,24,67,"State"],[30,88,24,72],[30,89,24,73,"ACTIVE"],[30,95,24,79],[30,97,24,81],[31,8,25,6],[31,15,25,13,"State"],[31,27,25,18],[31,28,25,19,"BEGAN"],[31,33,25,24],[32,6,26,4],[33,6,27,4],[33,13,27,11,"nextState"],[33,22,27,20],[34,4,28,2],[35,4,29,2,"getDirection"],[35,16,29,14,"getDirection"],[35,17,29,14],[35,19,29,17],[36,6,30,4],[36,12,30,10,"config"],[36,18,30,16],[36,21,30,19],[36,25,30,23],[36,26,30,24,"getConfig"],[36,35,30,33],[36,36,30,34],[36,37,30,35],[37,6,31,4],[37,12,31,10],[38,8,32,6,"activeOffsetXStart"],[38,26,32,24],[39,8,33,6,"activeOffsetXEnd"],[39,24,33,22],[40,8,34,6,"activeOffsetYStart"],[40,26,34,24],[41,8,35,6,"activeOffsetYEnd"],[41,24,35,22],[42,8,36,6,"minDist"],[43,6,37,4],[43,7,37,5],[43,10,37,8,"config"],[43,16,37,14],[44,6,38,4],[44,10,38,8,"directions"],[44,20,38,18],[44,23,38,21],[44,25,38,23],[45,6,39,4],[45,10,39,8,"horizontalDirections"],[45,30,39,28],[45,33,39,31],[45,35,39,33],[46,6,40,4],[46,10,40,8],[46,11,40,9],[46,15,40,9,"isnan"],[46,27,40,14],[46,29,40,15,"minDist"],[46,36,40,22],[46,37,40,23],[46,39,40,25],[47,8,41,6],[47,15,41,13,"Hammer"],[47,32,41,19],[47,33,41,20,"DIRECTION_ALL"],[47,46,41,33],[48,6,42,4],[49,6,43,4],[49,10,43,8],[49,11,43,9],[49,15,43,9,"isnan"],[49,27,43,14],[49,29,43,15,"activeOffsetXStart"],[49,47,43,33],[49,48,43,34],[49,50,43,36],[50,8,44,6,"horizontalDirections"],[50,28,44,26],[50,29,44,27,"push"],[50,33,44,31],[50,34,44,32,"Hammer"],[50,51,44,38],[50,52,44,39,"DIRECTION_LEFT"],[50,66,44,53],[50,67,44,54],[51,6,45,4],[52,6,46,4],[52,10,46,8],[52,11,46,9],[52,15,46,9,"isnan"],[52,27,46,14],[52,29,46,15,"activeOffsetXEnd"],[52,45,46,31],[52,46,46,32],[52,48,46,34],[53,8,47,6,"horizontalDirections"],[53,28,47,26],[53,29,47,27,"push"],[53,33,47,31],[53,34,47,32,"Hammer"],[53,51,47,38],[53,52,47,39,"DIRECTION_RIGHT"],[53,67,47,54],[53,68,47,55],[54,6,48,4],[55,6,49,4],[55,10,49,8,"horizontalDirections"],[55,30,49,28],[55,31,49,29,"length"],[55,37,49,35],[55,42,49,40],[55,43,49,41],[55,45,49,43],[56,8,50,6,"horizontalDirections"],[56,28,50,26],[56,31,50,29],[56,32,50,30,"Hammer"],[56,49,50,36],[56,50,50,37,"DIRECTION_HORIZONTAL"],[56,70,50,57],[56,71,50,58],[57,6,51,4],[58,6,52,4,"directions"],[58,16,52,14],[58,19,52,17,"directions"],[58,29,52,27],[58,30,52,28,"concat"],[58,36,52,34],[58,37,52,35,"horizontalDirections"],[58,57,52,55],[58,58,52,56],[59,6,53,4],[59,10,53,8,"verticalDirections"],[59,28,53,26],[59,31,53,29],[59,33,53,31],[60,6,54,4],[60,10,54,8],[60,11,54,9],[60,15,54,9,"isnan"],[60,27,54,14],[60,29,54,15,"activeOffsetYStart"],[60,47,54,33],[60,48,54,34],[60,50,54,36],[61,8,55,6,"verticalDirections"],[61,26,55,24],[61,27,55,25,"push"],[61,31,55,29],[61,32,55,30,"Hammer"],[61,49,55,36],[61,50,55,37,"DIRECTION_UP"],[61,62,55,49],[61,63,55,50],[62,6,56,4],[63,6,57,4],[63,10,57,8],[63,11,57,9],[63,15,57,9,"isnan"],[63,27,57,14],[63,29,57,15,"activeOffsetYEnd"],[63,45,57,31],[63,46,57,32],[63,48,57,34],[64,8,58,6,"verticalDirections"],[64,26,58,24],[64,27,58,25,"push"],[64,31,58,29],[64,32,58,30,"Hammer"],[64,49,58,36],[64,50,58,37,"DIRECTION_DOWN"],[64,64,58,51],[64,65,58,52],[65,6,59,4],[66,6,60,4],[66,10,60,8,"verticalDirections"],[66,28,60,26],[66,29,60,27,"length"],[66,35,60,33],[66,40,60,38],[66,41,60,39],[66,43,60,41],[67,8,61,6,"verticalDirections"],[67,26,61,24],[67,29,61,27],[67,30,61,28,"Hammer"],[67,47,61,34],[67,48,61,35,"DIRECTION_VERTICAL"],[67,66,61,53],[67,67,61,54],[68,6,62,4],[69,6,63,4,"directions"],[69,16,63,14],[69,19,63,17,"directions"],[69,29,63,27],[69,30,63,28,"concat"],[69,36,63,34],[69,37,63,35,"verticalDirections"],[69,55,63,53],[69,56,63,54],[70,6,64,4],[70,10,64,8],[70,11,64,9,"directions"],[70,21,64,19],[70,22,64,20,"length"],[70,28,64,26],[70,30,64,28],[71,8,65,6],[71,15,65,13,"Hammer"],[71,32,65,19],[71,33,65,20,"DIRECTION_NONE"],[71,47,65,34],[72,6,66,4],[73,6,67,4],[73,10,67,8,"directions"],[73,20,67,18],[73,21,67,19],[73,22,67,20],[73,23,67,21],[73,28,67,26,"Hammer"],[73,45,67,32],[73,46,67,33,"DIRECTION_HORIZONTAL"],[73,66,67,53],[73,70,67,57,"directions"],[73,80,67,67],[73,81,67,68],[73,82,67,69],[73,83,67,70],[73,88,67,75,"Hammer"],[73,105,67,81],[73,106,67,82,"DIRECTION_VERTICAL"],[73,124,67,100],[73,126,67,102],[74,8,68,6],[74,15,68,13,"Hammer"],[74,32,68,19],[74,33,68,20,"DIRECTION_ALL"],[74,46,68,33],[75,6,69,4],[76,6,70,4],[76,10,70,8,"horizontalDirections"],[76,30,70,28],[76,31,70,29,"length"],[76,37,70,35],[76,41,70,39,"verticalDirections"],[76,59,70,57],[76,60,70,58,"length"],[76,66,70,64],[76,68,70,66],[77,8,71,6],[77,15,71,13,"Hammer"],[77,32,71,19],[77,33,71,20,"DIRECTION_ALL"],[77,46,71,33],[78,6,72,4],[79,6,73,4],[79,13,73,11,"directions"],[79,23,73,21],[79,24,73,22],[79,25,73,23],[79,26,73,24],[80,4,74,2],[81,4,75,2,"getConfig"],[81,13,75,11,"getConfig"],[81,14,75,11],[81,16,75,14],[82,6,76,4],[82,10,76,8],[82,11,76,9],[82,15,76,13],[82,16,76,14,"hasCustomActivationCriteria"],[82,43,76,41],[82,45,76,43],[83,8,77,6],[84,8,78,6],[85,8,79,6],[85,15,79,13],[86,10,80,8,"minDistSq"],[86,19,80,17],[86,21,80,19],[87,8,81,6],[87,9,81,7],[88,6,82,4],[89,6,83,4],[89,13,83,11],[89,17,83,15],[89,18,83,16,"config"],[89,24,83,22],[90,4,84,2],[91,4,85,2,"shouldFailUnderCustomCriteria"],[91,33,85,31,"shouldFailUnderCustomCriteria"],[91,34,85,32],[92,6,86,4,"deltaX"],[92,12,86,10],[93,6,87,4,"deltaY"],[94,4,88,2],[94,5,88,3],[94,7,88,5,"criteria"],[94,15,88,13],[94,17,88,15],[95,6,89,4],[95,13,89,11],[95,14,89,12],[95,18,89,12,"isnan"],[95,30,89,17],[95,32,89,18,"criteria"],[95,40,89,26],[95,41,89,27,"failOffsetXStart"],[95,57,89,43],[95,58,89,44],[95,62,89,48,"deltaX"],[95,68,89,54],[95,71,89,57,"criteria"],[95,79,89,65],[95,80,89,66,"failOffsetXStart"],[95,96,89,82],[95,100,89,86],[95,101,89,87],[95,105,89,87,"isnan"],[95,117,89,92],[95,119,89,93,"criteria"],[95,127,89,101],[95,128,89,102,"failOffsetXEnd"],[95,142,89,116],[95,143,89,117],[95,147,89,121,"deltaX"],[95,153,89,127],[95,156,89,130,"criteria"],[95,164,89,138],[95,165,89,139,"failOffsetXEnd"],[95,179,89,153],[95,183,89,157],[95,184,89,158],[95,188,89,158,"isnan"],[95,200,89,163],[95,202,89,164,"criteria"],[95,210,89,172],[95,211,89,173,"failOffsetYStart"],[95,227,89,189],[95,228,89,190],[95,232,89,194,"deltaY"],[95,238,89,200],[95,241,89,203,"criteria"],[95,249,89,211],[95,250,89,212,"failOffsetYStart"],[95,266,89,228],[95,270,89,232],[95,271,89,233],[95,275,89,233,"isnan"],[95,287,89,238],[95,289,89,239,"criteria"],[95,297,89,247],[95,298,89,248,"failOffsetYEnd"],[95,312,89,262],[95,313,89,263],[95,317,89,267,"deltaY"],[95,323,89,273],[95,326,89,276,"criteria"],[95,334,89,284],[95,335,89,285,"failOffsetYEnd"],[95,349,89,299],[96,4,90,2],[97,4,91,2,"shouldActivateUnderCustomCriteria"],[97,37,91,35,"shouldActivateUnderCustomCriteria"],[97,38,91,36],[98,6,92,4,"deltaX"],[98,12,92,10],[99,6,93,4,"deltaY"],[99,12,93,10],[100,6,94,4,"velocity"],[101,4,95,2],[101,5,95,3],[101,7,95,5,"criteria"],[101,15,95,13],[101,17,95,15],[102,6,96,4],[102,13,96,11],[102,14,96,12],[102,18,96,12,"isnan"],[102,30,96,17],[102,32,96,18,"criteria"],[102,40,96,26],[102,41,96,27,"activeOffsetXStart"],[102,59,96,45],[102,60,96,46],[102,64,96,50,"deltaX"],[102,70,96,56],[102,73,96,59,"criteria"],[102,81,96,67],[102,82,96,68,"activeOffsetXStart"],[102,100,96,86],[102,104,96,90],[102,105,96,91],[102,109,96,91,"isnan"],[102,121,96,96],[102,123,96,97,"criteria"],[102,131,96,105],[102,132,96,106,"activeOffsetXEnd"],[102,148,96,122],[102,149,96,123],[102,153,96,127,"deltaX"],[102,159,96,133],[102,162,96,136,"criteria"],[102,170,96,144],[102,171,96,145,"activeOffsetXEnd"],[102,187,96,161],[102,191,96,165],[102,192,96,166],[102,196,96,166,"isnan"],[102,208,96,171],[102,210,96,172,"criteria"],[102,218,96,180],[102,219,96,181,"activeOffsetYStart"],[102,237,96,199],[102,238,96,200],[102,242,96,204,"deltaY"],[102,248,96,210],[102,251,96,213,"criteria"],[102,259,96,221],[102,260,96,222,"activeOffsetYStart"],[102,278,96,240],[102,282,96,244],[102,283,96,245],[102,287,96,245,"isnan"],[102,299,96,250],[102,301,96,251,"criteria"],[102,309,96,259],[102,310,96,260,"activeOffsetYEnd"],[102,326,96,276],[102,327,96,277],[102,331,96,281,"deltaY"],[102,337,96,287],[102,340,96,290,"criteria"],[102,348,96,298],[102,349,96,299,"activeOffsetYEnd"],[102,365,96,315],[102,369,96,319],[102,373,96,319,"TEST_MIN_IF_NOT_NAN"],[102,399,96,338],[102,401,96,339],[102,405,96,339,"VEC_LEN_SQ"],[102,422,96,349],[102,424,96,350],[103,8,97,6,"x"],[103,9,97,7],[103,11,97,9,"deltaX"],[103,17,97,15],[104,8,98,6,"y"],[104,9,98,7],[104,11,98,9,"deltaY"],[105,6,99,4],[105,7,99,5],[105,8,99,6],[105,10,99,8,"criteria"],[105,18,99,16],[105,19,99,17,"minDistSq"],[105,28,99,26],[105,29,99,27],[105,33,99,31],[105,37,99,31,"TEST_MIN_IF_NOT_NAN"],[105,63,99,50],[105,65,99,51,"velocity"],[105,73,99,59],[105,74,99,60,"x"],[105,75,99,61],[105,77,99,63,"criteria"],[105,85,99,71],[105,86,99,72,"minVelocityX"],[105,98,99,84],[105,99,99,85],[105,103,99,89],[105,107,99,89,"TEST_MIN_IF_NOT_NAN"],[105,133,99,108],[105,135,99,109,"velocity"],[105,143,99,117],[105,144,99,118,"y"],[105,145,99,119],[105,147,99,121,"criteria"],[105,155,99,129],[105,156,99,130,"minVelocityY"],[105,168,99,142],[105,169,99,143],[105,173,99,147],[105,177,99,147,"TEST_MIN_IF_NOT_NAN"],[105,203,99,166],[105,205,99,167],[105,209,99,167,"VEC_LEN_SQ"],[105,226,99,177],[105,228,99,178,"velocity"],[105,236,99,186],[105,237,99,187],[105,239,99,189,"criteria"],[105,247,99,197],[105,248,99,198,"minVelocitySq"],[105,261,99,211],[105,262,99,212],[106,4,100,2],[107,4,101,2,"shouldMultiFingerPanFail"],[107,28,101,26,"shouldMultiFingerPanFail"],[107,29,101,27],[108,6,102,4,"pointerLength"],[108,19,102,17],[109,6,103,4,"scale"],[109,11,103,9],[110,6,104,4,"deltaRotation"],[111,4,105,2],[111,5,105,3],[111,7,105,5],[112,6,106,4],[112,10,106,8,"pointerLength"],[112,23,106,21],[112,27,106,25],[112,28,106,26],[112,30,106,28],[113,8,107,6],[113,15,107,13],[113,20,107,18],[114,6,108,4],[116,6,110,4],[117,6,111,4],[117,12,111,10,"deltaScale"],[117,22,111,20],[117,25,111,23,"Math"],[117,29,111,27],[117,30,111,28,"abs"],[117,33,111,31],[117,34,111,32,"scale"],[117,39,111,37],[117,42,111,40],[117,43,111,41],[117,44,111,42],[118,6,112,4],[118,12,112,10,"absDeltaRotation"],[118,28,112,26],[118,31,112,29,"Math"],[118,35,112,33],[118,36,112,34,"abs"],[118,39,112,37],[118,40,112,38,"deltaRotation"],[118,53,112,51],[118,54,112,52],[119,6,113,4],[119,10,113,8,"deltaScale"],[119,20,113,18],[119,23,113,21,"MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD"],[119,70,113,57],[119,72,113,59],[120,8,114,6],[121,8,115,6],[122,8,116,6],[122,15,116,13],[122,19,116,17],[123,6,117,4],[124,6,118,4],[124,10,118,8,"absDeltaRotation"],[124,26,118,24],[124,29,118,27,"MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD"],[124,79,118,66],[124,81,118,68],[125,8,119,6],[126,8,120,6],[127,8,121,6],[127,15,121,13],[127,19,121,17],[128,6,122,4],[129,6,123,4],[129,13,123,11],[129,18,123,16],[130,4,124,2],[131,4,125,2,"updateHasCustomActivationCriteria"],[131,37,125,35,"updateHasCustomActivationCriteria"],[131,38,125,36,"criteria"],[131,46,125,44],[131,48,125,46],[132,6,126,4],[132,13,126,11],[132,17,126,11,"isValidNumber"],[132,37,126,24],[132,39,126,25,"criteria"],[132,47,126,33],[132,48,126,34,"minDistSq"],[132,57,126,43],[132,58,126,44],[132,62,126,48],[132,66,126,48,"isValidNumber"],[132,86,126,61],[132,88,126,62,"criteria"],[132,96,126,70],[132,97,126,71,"minVelocityX"],[132,109,126,83],[132,110,126,84],[132,114,126,88],[132,118,126,88,"isValidNumber"],[132,138,126,101],[132,140,126,102,"criteria"],[132,148,126,110],[132,149,126,111,"minVelocityY"],[132,161,126,123],[132,162,126,124],[132,166,126,128],[132,170,126,128,"isValidNumber"],[132,190,126,141],[132,192,126,142,"criteria"],[132,200,126,150],[132,201,126,151,"minVelocitySq"],[132,214,126,164],[132,215,126,165],[132,219,126,169],[132,223,126,169,"isValidNumber"],[132,243,126,182],[132,245,126,183,"criteria"],[132,253,126,191],[132,254,126,192,"activeOffsetXStart"],[132,272,126,210],[132,273,126,211],[132,277,126,215],[132,281,126,215,"isValidNumber"],[132,301,126,228],[132,303,126,229,"criteria"],[132,311,126,237],[132,312,126,238,"activeOffsetXEnd"],[132,328,126,254],[132,329,126,255],[132,333,126,259],[132,337,126,259,"isValidNumber"],[132,357,126,272],[132,359,126,273,"criteria"],[132,367,126,281],[132,368,126,282,"activeOffsetYStart"],[132,386,126,300],[132,387,126,301],[132,391,126,305],[132,395,126,305,"isValidNumber"],[132,415,126,318],[132,417,126,319,"criteria"],[132,425,126,327],[132,426,126,328,"activeOffsetYEnd"],[132,442,126,344],[132,443,126,345],[133,4,127,2],[134,4,128,2,"isGestureEnabledForEvent"],[134,28,128,26,"isGestureEnabledForEvent"],[134,29,128,27,"props"],[134,34,128,32],[134,36,128,34,"_recognizer"],[134,47,128,45],[134,49,128,47,"inputData"],[134,58,128,56],[134,60,128,58],[135,6,129,4],[135,10,129,8],[135,14,129,12],[135,15,129,13,"shouldFailUnderCustomCriteria"],[135,44,129,42],[135,45,129,43,"inputData"],[135,54,129,52],[135,56,129,54,"props"],[135,61,129,59],[135,62,129,60],[135,64,129,62],[136,8,130,6],[136,15,130,13],[137,10,131,8,"failed"],[137,16,131,14],[137,18,131,16],[138,8,132,6],[138,9,132,7],[139,6,133,4],[140,6,134,4],[140,12,134,10,"velocity"],[140,20,134,18],[140,23,134,21],[141,8,135,6,"x"],[141,9,135,7],[141,11,135,9,"inputData"],[141,20,135,18],[141,21,135,19,"velocityX"],[141,30,135,28],[142,8,136,6,"y"],[142,9,136,7],[142,11,136,9,"inputData"],[142,20,136,18],[142,21,136,19,"velocityY"],[143,6,137,4],[143,7,137,5],[144,6,138,4],[144,10,138,8],[144,14,138,12],[144,15,138,13,"hasCustomActivationCriteria"],[144,42,138,40],[144,46,138,44],[144,50,138,48],[144,51,138,49,"shouldActivateUnderCustomCriteria"],[144,84,138,82],[144,85,138,83],[145,8,139,6,"deltaX"],[145,14,139,12],[145,16,139,14,"inputData"],[145,25,139,23],[145,26,139,24,"deltaX"],[145,32,139,30],[146,8,140,6,"deltaY"],[146,14,140,12],[146,16,140,14,"inputData"],[146,25,140,23],[146,26,140,24,"deltaY"],[146,32,140,30],[147,8,141,6,"velocity"],[148,6,142,4],[148,7,142,5],[148,9,142,7,"props"],[148,14,142,12],[148,15,142,13],[148,17,142,15],[149,8,143,6],[149,12,143,10],[149,16,143,14],[149,17,143,15,"shouldMultiFingerPanFail"],[149,41,143,39],[149,42,143,40],[150,10,144,8,"pointerLength"],[150,23,144,21],[150,25,144,23,"inputData"],[150,34,144,32],[150,35,144,33,"maxPointers"],[150,46,144,44],[151,10,145,8,"scale"],[151,15,145,13],[151,17,145,15,"inputData"],[151,26,145,24],[151,27,145,25,"scale"],[151,32,145,30],[152,10,146,8,"deltaRotation"],[152,23,146,21],[152,25,146,23,"inputData"],[152,34,146,32],[152,35,146,33,"deltaRotation"],[153,8,147,6],[153,9,147,7],[153,10,147,8],[153,12,147,10],[154,10,148,8],[154,17,148,15],[155,12,149,10,"failed"],[155,18,149,16],[155,20,149,18],[156,10,150,8],[156,11,150,9],[157,8,151,6],[158,8,152,6],[158,15,152,13],[159,10,153,8,"success"],[159,17,153,15],[159,19,153,17],[160,8,154,6],[160,9,154,7],[161,6,155,4],[162,6,156,4],[162,13,156,11],[163,8,157,6,"success"],[163,15,157,13],[163,17,157,15],[164,6,158,4],[164,7,158,5],[165,4,159,2],[166,2,160,0],[167,2,160,1],[167,6,160,1,"_default"],[167,14,160,1],[167,17,160,1,"exports"],[167,24,160,1],[167,25,160,1,"default"],[167,32,160,1],[167,35,161,15,"PanGestureHandler"],[167,52,161,32],[168,0,161,32],[168,3]],"functionMap":{"names":["<global>","PanGestureHandler","get__name","get__NativeGestureClass","getHammerConfig","getState","getDirection","getConfig","shouldFailUnderCustomCriteria","shouldActivateUnderCustomCriteria","shouldMultiFingerPanFail","updateHasCustomActivationCriteria","isGestureEnabledForEvent"],"mappings":"AAA;ACO;ECC;GDE;EEC;GFE;EGC;GHK;EIC;GJO;EKC;GL6C;EMC;GNS;EOC;GPK;EQC;GRS;ESC;GTuB;EUC;GVE;EWC;GX+B;CDC"}},"type":"js/module"}]}