{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"../../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":41},"end":{"line":2,"column":36,"index":77}}],"key":"WEWPBXLBFeeryzJLF/iqxrLBTrA=","exportNames":["*"]}},{"name":"../constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":78},"end":{"line":3,"column":50,"index":128}}],"key":"eTOOXVNPpMK2U8dOAmBWjbEJ4yE=","exportNames":["*"]}},{"name":"./GestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":184},"end":{"line":6,"column":46,"index":230}}],"key":"0oKNSZn0AMFFw0m17+cJMO/YqLM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\"));\n  var _State = require(_dependencyMap[3], \"../../State\");\n  var _constants = require(_dependencyMap[4], \"../constants\");\n  var _GestureHandler = _interopRequireDefault(require(_dependencyMap[5], \"./GestureHandler\"));\n  const _excluded = [\"enabled\"];\n  class NativeViewGestureHandler extends _GestureHandler.default {\n    // TODO: Implement logic for activation on start\n    // @ts-ignore Logic yet to be implemented\n    shouldActivateOnStart = false;\n    disallowInterruption = false;\n    startX = 0;\n    startY = 0;\n    minDistSq = _constants.DEFAULT_TOUCH_SLOP * _constants.DEFAULT_TOUCH_SLOP;\n    init(ref, propsRef) {\n      super.init(ref, propsRef);\n      this.shouldCancelWhenOutside = true;\n      if (_Platform.default.OS !== 'web') {\n        return;\n      }\n      const view = this.delegate.view;\n      this.restoreViewStyles(view);\n      this.buttonRole = view.getAttribute('role') === 'button';\n    }\n    updateGestureConfig(_ref) {\n      let {\n          enabled = true\n        } = _ref,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n      super.updateGestureConfig(Object.assign({\n        enabled: enabled\n      }, props));\n      if (this.config.shouldActivateOnStart !== undefined) {\n        this.shouldActivateOnStart = this.config.shouldActivateOnStart;\n      }\n      if (this.config.disallowInterruption !== undefined) {\n        this.disallowInterruption = this.config.disallowInterruption;\n      }\n      const view = this.delegate.view;\n      this.restoreViewStyles(view);\n    }\n    restoreViewStyles(view) {\n      if (!view) {\n        return;\n      }\n      view.style['touchAction'] = 'auto';\n      // @ts-ignore Turns on defualt touch behavior on Safari\n      view.style['WebkitTouchCallout'] = 'auto';\n    }\n    onPointerDown(event) {\n      this.tracker.addToTracker(event);\n      super.onPointerDown(event);\n      this.newPointerAction();\n      this.tryToSendTouchEvent(event);\n    }\n    onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n      super.onPointerAdd(event);\n      this.newPointerAction();\n    }\n    newPointerAction() {\n      const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n      this.startX = lastCoords.x;\n      this.startY = lastCoords.y;\n      if (this.state !== _State.State.UNDETERMINED) {\n        return;\n      }\n      this.begin();\n      const view = this.delegate.view;\n      const isRNGHText = view.hasAttribute('rnghtext');\n      if (this.buttonRole || isRNGHText) {\n        this.activate();\n      }\n    }\n    onPointerMove(event) {\n      this.tracker.track(event);\n      const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n      const dx = this.startX - lastCoords.x;\n      const dy = this.startY - lastCoords.y;\n      const distSq = dx * dx + dy * dy;\n      if (distSq >= this.minDistSq) {\n        if (this.buttonRole && this.state === _State.State.ACTIVE) {\n          this.cancel();\n        } else if (!this.buttonRole && this.state === _State.State.BEGAN) {\n          this.activate();\n        }\n      }\n    }\n    onPointerLeave() {\n      if (this.state === _State.State.BEGAN || this.state === _State.State.ACTIVE) {\n        this.cancel();\n      }\n    }\n    onPointerUp(event) {\n      super.onPointerUp(event);\n      this.onUp(event);\n    }\n    onPointerRemove(event) {\n      super.onPointerRemove(event);\n      this.onUp(event);\n    }\n    onUp(event) {\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.tracker.trackedPointersCount === 0) {\n        if (this.state === _State.State.ACTIVE) {\n          this.end();\n        } else {\n          this.fail();\n        }\n      }\n    }\n    shouldRecognizeSimultaneously(handler) {\n      if (super.shouldRecognizeSimultaneously(handler)) {\n        return true;\n      }\n      if (handler instanceof NativeViewGestureHandler && handler.state === _State.State.ACTIVE && handler.disallowsInterruption()) {\n        return false;\n      }\n      const canBeInterrupted = !this.disallowInterruption;\n      if (this.state === _State.State.ACTIVE && handler.state === _State.State.ACTIVE && canBeInterrupted) {\n        return false;\n      }\n      return this.state === _State.State.ACTIVE && canBeInterrupted && handler.handlerTag > 0;\n    }\n    shouldBeCancelledByOther(_handler) {\n      return !this.disallowInterruption;\n    }\n    disallowsInterruption() {\n      return this.disallowInterruption;\n    }\n    isButton() {\n      return this.buttonRole;\n    }\n  }\n  exports.default = NativeViewGestureHandler;\n});","lineCount":142,"map":[[9,2,2,0],[9,6,2,0,"_State"],[9,12,2,0],[9,15,2,0,"require"],[9,22,2,0],[9,23,2,0,"_dependencyMap"],[9,37,2,0],[10,2,3,0],[10,6,3,0,"_constants"],[10,16,3,0],[10,19,3,0,"require"],[10,26,3,0],[10,27,3,0,"_dependencyMap"],[10,41,3,0],[11,2,6,0],[11,6,6,0,"_GestureHandler"],[11,21,6,0],[11,24,6,0,"_interopRequireDefault"],[11,46,6,0],[11,47,6,0,"require"],[11,54,6,0],[11,55,6,0,"_dependencyMap"],[11,69,6,0],[12,2,6,46],[12,8,6,46,"_excluded"],[12,17,6,46],[13,2,7,15],[13,8,7,21,"NativeViewGestureHandler"],[13,32,7,45],[13,41,7,54,"GestureHandler"],[13,64,7,68],[13,65,7,69],[14,4,10,2],[15,4,11,2],[16,4,12,10,"shouldActivateOnStart"],[16,25,12,31],[16,28,12,34],[16,33,12,39],[17,4,13,10,"disallowInterruption"],[17,24,13,30],[17,27,13,33],[17,32,13,38],[18,4,15,10,"startX"],[18,10,15,16],[18,13,15,19],[18,14,15,20],[19,4,16,10,"startY"],[19,10,16,16],[19,13,16,19],[19,14,16,20],[20,4,17,10,"minDistSq"],[20,13,17,19],[20,16,17,22,"DEFAULT_TOUCH_SLOP"],[20,45,17,40],[20,48,17,43,"DEFAULT_TOUCH_SLOP"],[20,77,17,61],[21,4,19,9,"init"],[21,8,19,13,"init"],[21,9,19,14,"ref"],[21,12,19,25],[21,14,19,27,"propsRef"],[21,22,19,61],[21,24,19,69],[22,6,20,4],[22,11,20,9],[22,12,20,10,"init"],[22,16,20,14],[22,17,20,15,"ref"],[22,20,20,18],[22,22,20,20,"propsRef"],[22,30,20,28],[22,31,20,29],[23,6,22,4],[23,10,22,8],[23,11,22,9,"shouldCancelWhenOutside"],[23,34,22,32],[23,37,22,35],[23,41,22,39],[24,6,24,4],[24,10,24,8,"Platform"],[24,27,24,16],[24,28,24,17,"OS"],[24,30,24,19],[24,35,24,24],[24,40,24,29],[24,42,24,31],[25,8,25,6],[26,6,26,4],[27,6,28,4],[27,12,28,10,"view"],[27,16,28,14],[27,19,28,17],[27,23,28,21],[27,24,28,22,"delegate"],[27,32,28,30],[27,33,28,31,"view"],[27,37,28,50],[28,6,30,4],[28,10,30,8],[28,11,30,9,"restoreViewStyles"],[28,28,30,26],[28,29,30,27,"view"],[28,33,30,31],[28,34,30,32],[29,6,31,4],[29,10,31,8],[29,11,31,9,"buttonRole"],[29,21,31,19],[29,24,31,22,"view"],[29,28,31,26],[29,29,31,27,"getAttribute"],[29,41,31,39],[29,42,31,40],[29,48,31,46],[29,49,31,47],[29,54,31,52],[29,62,31,60],[30,4,32,2],[31,4,34,9,"updateGestureConfig"],[31,23,34,28,"updateGestureConfig"],[31,24,34,28,"_ref"],[31,28,34,28],[31,30,34,73],[32,6,34,73],[32,10,34,29],[33,10,34,31,"enabled"],[33,17,34,38],[33,20,34,41],[34,8,34,64],[34,9,34,65],[34,12,34,65,"_ref"],[34,16,34,65],[35,8,34,50,"props"],[35,13,34,55],[35,20,34,55,"_objectWithoutPropertiesLoose2"],[35,50,34,55],[35,51,34,55,"default"],[35,58,34,55],[35,60,34,55,"_ref"],[35,64,34,55],[35,66,34,55,"_excluded"],[35,75,34,55],[36,6,35,4],[36,11,35,9],[36,12,35,10,"updateGestureConfig"],[36,31,35,29],[36,32,35,29,"Object"],[36,38,35,29],[36,39,35,29,"assign"],[36,45,35,29],[37,8,35,32,"enabled"],[37,15,35,39],[37,17,35,41,"enabled"],[38,6,35,48],[38,9,35,53,"props"],[38,14,35,58],[38,15,35,60],[38,16,35,61],[39,6,37,4],[39,10,37,8],[39,14,37,12],[39,15,37,13,"config"],[39,21,37,19],[39,22,37,20,"shouldActivateOnStart"],[39,43,37,41],[39,48,37,46,"undefined"],[39,57,37,55],[39,59,37,57],[40,8,38,6],[40,12,38,10],[40,13,38,11,"shouldActivateOnStart"],[40,34,38,32],[40,37,38,35],[40,41,38,39],[40,42,38,40,"config"],[40,48,38,46],[40,49,38,47,"shouldActivateOnStart"],[40,70,38,68],[41,6,39,4],[42,6,40,4],[42,10,40,8],[42,14,40,12],[42,15,40,13,"config"],[42,21,40,19],[42,22,40,20,"disallowInterruption"],[42,42,40,40],[42,47,40,45,"undefined"],[42,56,40,54],[42,58,40,56],[43,8,41,6],[43,12,41,10],[43,13,41,11,"disallowInterruption"],[43,33,41,31],[43,36,41,34],[43,40,41,38],[43,41,41,39,"config"],[43,47,41,45],[43,48,41,46,"disallowInterruption"],[43,68,41,66],[44,6,42,4],[45,6,44,4],[45,12,44,10,"view"],[45,16,44,14],[45,19,44,17],[45,23,44,21],[45,24,44,22,"delegate"],[45,32,44,30],[45,33,44,31,"view"],[45,37,44,50],[46,6,45,4],[46,10,45,8],[46,11,45,9,"restoreViewStyles"],[46,28,45,26],[46,29,45,27,"view"],[46,33,45,31],[46,34,45,32],[47,4,46,2],[48,4,48,10,"restoreViewStyles"],[48,21,48,27,"restoreViewStyles"],[48,22,48,28,"view"],[48,26,48,45],[48,28,48,47],[49,6,49,4],[49,10,49,8],[49,11,49,9,"view"],[49,15,49,13],[49,17,49,15],[50,8,50,6],[51,6,51,4],[52,6,53,4,"view"],[52,10,53,8],[52,11,53,9,"style"],[52,16,53,14],[52,17,53,15],[52,30,53,28],[52,31,53,29],[52,34,53,32],[52,40,53,38],[53,6,54,4],[54,6,55,4,"view"],[54,10,55,8],[54,11,55,9,"style"],[54,16,55,14],[54,17,55,15],[54,37,55,35],[54,38,55,36],[54,41,55,39],[54,47,55,45],[55,4,56,2],[56,4,58,12,"onPointerDown"],[56,17,58,25,"onPointerDown"],[56,18,58,26,"event"],[56,23,58,45],[56,25,58,53],[57,6,59,4],[57,10,59,8],[57,11,59,9,"tracker"],[57,18,59,16],[57,19,59,17,"addToTracker"],[57,31,59,29],[57,32,59,30,"event"],[57,37,59,35],[57,38,59,36],[58,6,60,4],[58,11,60,9],[58,12,60,10,"onPointerDown"],[58,25,60,23],[58,26,60,24,"event"],[58,31,60,29],[58,32,60,30],[59,6,61,4],[59,10,61,8],[59,11,61,9,"newPointerAction"],[59,27,61,25],[59,28,61,26],[59,29,61,27],[60,6,63,4],[60,10,63,8],[60,11,63,9,"tryToSendTouchEvent"],[60,30,63,28],[60,31,63,29,"event"],[60,36,63,34],[60,37,63,35],[61,4,64,2],[62,4,66,12,"onPointerAdd"],[62,16,66,24,"onPointerAdd"],[62,17,66,25,"event"],[62,22,66,44],[62,24,66,52],[63,6,67,4],[63,10,67,8],[63,11,67,9,"tracker"],[63,18,67,16],[63,19,67,17,"addToTracker"],[63,31,67,29],[63,32,67,30,"event"],[63,37,67,35],[63,38,67,36],[64,6,68,4],[64,11,68,9],[64,12,68,10,"onPointerAdd"],[64,24,68,22],[64,25,68,23,"event"],[64,30,68,28],[64,31,68,29],[65,6,69,4],[65,10,69,8],[65,11,69,9,"newPointerAction"],[65,27,69,25],[65,28,69,26],[65,29,69,27],[66,4,70,2],[67,4,72,10,"newPointerAction"],[67,20,72,26,"newPointerAction"],[67,21,72,26],[67,23,72,35],[68,6,73,4],[68,12,73,10,"lastCoords"],[68,22,73,20],[68,25,73,23],[68,29,73,27],[68,30,73,28,"tracker"],[68,37,73,35],[68,38,73,36,"getAbsoluteCoordsAverage"],[68,62,73,60],[68,63,73,61],[68,64,73,62],[69,6,74,4],[69,10,74,8],[69,11,74,9,"startX"],[69,17,74,15],[69,20,74,18,"lastCoords"],[69,30,74,28],[69,31,74,29,"x"],[69,32,74,30],[70,6,75,4],[70,10,75,8],[70,11,75,9,"startY"],[70,17,75,15],[70,20,75,18,"lastCoords"],[70,30,75,28],[70,31,75,29,"y"],[70,32,75,30],[71,6,77,4],[71,10,77,8],[71,14,77,12],[71,15,77,13,"state"],[71,20,77,18],[71,25,77,23,"State"],[71,37,77,28],[71,38,77,29,"UNDETERMINED"],[71,50,77,41],[71,52,77,43],[72,8,78,6],[73,6,79,4],[74,6,81,4],[74,10,81,8],[74,11,81,9,"begin"],[74,16,81,14],[74,17,81,15],[74,18,81,16],[75,6,83,4],[75,12,83,10,"view"],[75,16,83,14],[75,19,83,17],[75,23,83,21],[75,24,83,22,"delegate"],[75,32,83,30],[75,33,83,31,"view"],[75,37,83,50],[76,6,84,4],[76,12,84,10,"isRNGHText"],[76,22,84,20],[76,25,84,23,"view"],[76,29,84,27],[76,30,84,28,"hasAttribute"],[76,42,84,40],[76,43,84,41],[76,53,84,51],[76,54,84,52],[77,6,86,4],[77,10,86,8],[77,14,86,12],[77,15,86,13,"buttonRole"],[77,25,86,23],[77,29,86,27,"isRNGHText"],[77,39,86,37],[77,41,86,39],[78,8,87,6],[78,12,87,10],[78,13,87,11,"activate"],[78,21,87,19],[78,22,87,20],[78,23,87,21],[79,6,88,4],[80,4,89,2],[81,4,91,12,"onPointerMove"],[81,17,91,25,"onPointerMove"],[81,18,91,26,"event"],[81,23,91,45],[81,25,91,53],[82,6,92,4],[82,10,92,8],[82,11,92,9,"tracker"],[82,18,92,16],[82,19,92,17,"track"],[82,24,92,22],[82,25,92,23,"event"],[82,30,92,28],[82,31,92,29],[83,6,94,4],[83,12,94,10,"lastCoords"],[83,22,94,20],[83,25,94,23],[83,29,94,27],[83,30,94,28,"tracker"],[83,37,94,35],[83,38,94,36,"getAbsoluteCoordsAverage"],[83,62,94,60],[83,63,94,61],[83,64,94,62],[84,6,95,4],[84,12,95,10,"dx"],[84,14,95,12],[84,17,95,15],[84,21,95,19],[84,22,95,20,"startX"],[84,28,95,26],[84,31,95,29,"lastCoords"],[84,41,95,39],[84,42,95,40,"x"],[84,43,95,41],[85,6,96,4],[85,12,96,10,"dy"],[85,14,96,12],[85,17,96,15],[85,21,96,19],[85,22,96,20,"startY"],[85,28,96,26],[85,31,96,29,"lastCoords"],[85,41,96,39],[85,42,96,40,"y"],[85,43,96,41],[86,6,97,4],[86,12,97,10,"distSq"],[86,18,97,16],[86,21,97,19,"dx"],[86,23,97,21],[86,26,97,24,"dx"],[86,28,97,26],[86,31,97,29,"dy"],[86,33,97,31],[86,36,97,34,"dy"],[86,38,97,36],[87,6,99,4],[87,10,99,8,"distSq"],[87,16,99,14],[87,20,99,18],[87,24,99,22],[87,25,99,23,"minDistSq"],[87,34,99,32],[87,36,99,34],[88,8,100,6],[88,12,100,10],[88,16,100,14],[88,17,100,15,"buttonRole"],[88,27,100,25],[88,31,100,29],[88,35,100,33],[88,36,100,34,"state"],[88,41,100,39],[88,46,100,44,"State"],[88,58,100,49],[88,59,100,50,"ACTIVE"],[88,65,100,56],[88,67,100,58],[89,10,101,8],[89,14,101,12],[89,15,101,13,"cancel"],[89,21,101,19],[89,22,101,20],[89,23,101,21],[90,8,102,6],[90,9,102,7],[90,15,102,13],[90,19,102,17],[90,20,102,18],[90,24,102,22],[90,25,102,23,"buttonRole"],[90,35,102,33],[90,39,102,37],[90,43,102,41],[90,44,102,42,"state"],[90,49,102,47],[90,54,102,52,"State"],[90,66,102,57],[90,67,102,58,"BEGAN"],[90,72,102,63],[90,74,102,65],[91,10,103,8],[91,14,103,12],[91,15,103,13,"activate"],[91,23,103,21],[91,24,103,22],[91,25,103,23],[92,8,104,6],[93,6,105,4],[94,4,106,2],[95,4,108,12,"onPointerLeave"],[95,18,108,26,"onPointerLeave"],[95,19,108,26],[95,21,108,35],[96,6,109,4],[96,10,109,8],[96,14,109,12],[96,15,109,13,"state"],[96,20,109,18],[96,25,109,23,"State"],[96,37,109,28],[96,38,109,29,"BEGAN"],[96,43,109,34],[96,47,109,38],[96,51,109,42],[96,52,109,43,"state"],[96,57,109,48],[96,62,109,53,"State"],[96,74,109,58],[96,75,109,59,"ACTIVE"],[96,81,109,65],[96,83,109,67],[97,8,110,6],[97,12,110,10],[97,13,110,11,"cancel"],[97,19,110,17],[97,20,110,18],[97,21,110,19],[98,6,111,4],[99,4,112,2],[100,4,114,12,"onPointerUp"],[100,15,114,23,"onPointerUp"],[100,16,114,24,"event"],[100,21,114,43],[100,23,114,51],[101,6,115,4],[101,11,115,9],[101,12,115,10,"onPointerUp"],[101,23,115,21],[101,24,115,22,"event"],[101,29,115,27],[101,30,115,28],[102,6,116,4],[102,10,116,8],[102,11,116,9,"onUp"],[102,15,116,13],[102,16,116,14,"event"],[102,21,116,19],[102,22,116,20],[103,4,117,2],[104,4,119,12,"onPointerRemove"],[104,19,119,27,"onPointerRemove"],[104,20,119,28,"event"],[104,25,119,47],[104,27,119,55],[105,6,120,4],[105,11,120,9],[105,12,120,10,"onPointerRemove"],[105,27,120,25],[105,28,120,26,"event"],[105,33,120,31],[105,34,120,32],[106,6,121,4],[106,10,121,8],[106,11,121,9,"onUp"],[106,15,121,13],[106,16,121,14,"event"],[106,21,121,19],[106,22,121,20],[107,4,122,2],[108,4,124,10,"onUp"],[108,8,124,14,"onUp"],[108,9,124,15,"event"],[108,14,124,34],[108,16,124,42],[109,6,125,4],[109,10,125,8],[109,11,125,9,"tracker"],[109,18,125,16],[109,19,125,17,"removeFromTracker"],[109,36,125,34],[109,37,125,35,"event"],[109,42,125,40],[109,43,125,41,"pointerId"],[109,52,125,50],[109,53,125,51],[110,6,127,4],[110,10,127,8],[110,14,127,12],[110,15,127,13,"tracker"],[110,22,127,20],[110,23,127,21,"trackedPointersCount"],[110,43,127,41],[110,48,127,46],[110,49,127,47],[110,51,127,49],[111,8,128,6],[111,12,128,10],[111,16,128,14],[111,17,128,15,"state"],[111,22,128,20],[111,27,128,25,"State"],[111,39,128,30],[111,40,128,31,"ACTIVE"],[111,46,128,37],[111,48,128,39],[112,10,129,8],[112,14,129,12],[112,15,129,13,"end"],[112,18,129,16],[112,19,129,17],[112,20,129,18],[113,8,130,6],[113,9,130,7],[113,15,130,13],[114,10,131,8],[114,14,131,12],[114,15,131,13,"fail"],[114,19,131,17],[114,20,131,18],[114,21,131,19],[115,8,132,6],[116,6,133,4],[117,4,134,2],[118,4,136,9,"shouldRecognizeSimultaneously"],[118,33,136,38,"shouldRecognizeSimultaneously"],[118,34,136,39,"handler"],[118,41,136,62],[118,43,136,73],[119,6,137,4],[119,10,137,8],[119,15,137,13],[119,16,137,14,"shouldRecognizeSimultaneously"],[119,45,137,43],[119,46,137,44,"handler"],[119,53,137,51],[119,54,137,52],[119,56,137,54],[120,8,138,6],[120,15,138,13],[120,19,138,17],[121,6,139,4],[122,6,141,4],[122,10,142,6,"handler"],[122,17,142,13],[122,29,142,25,"NativeViewGestureHandler"],[122,53,142,49],[122,57,143,6,"handler"],[122,64,143,13],[122,65,143,14,"state"],[122,70,143,19],[122,75,143,24,"State"],[122,87,143,29],[122,88,143,30,"ACTIVE"],[122,94,143,36],[122,98,144,6,"handler"],[122,105,144,13],[122,106,144,14,"disallowsInterruption"],[122,127,144,35],[122,128,144,36],[122,129,144,37],[122,131,145,6],[123,8,146,6],[123,15,146,13],[123,20,146,18],[124,6,147,4],[125,6,149,4],[125,12,149,10,"canBeInterrupted"],[125,28,149,26],[125,31,149,29],[125,32,149,30],[125,36,149,34],[125,37,149,35,"disallowInterruption"],[125,57,149,55],[126,6,151,4],[126,10,152,6],[126,14,152,10],[126,15,152,11,"state"],[126,20,152,16],[126,25,152,21,"State"],[126,37,152,26],[126,38,152,27,"ACTIVE"],[126,44,152,33],[126,48,153,6,"handler"],[126,55,153,13],[126,56,153,14,"state"],[126,61,153,19],[126,66,153,24,"State"],[126,78,153,29],[126,79,153,30,"ACTIVE"],[126,85,153,36],[126,89,154,6,"canBeInterrupted"],[126,105,154,22],[126,107,155,6],[127,8,156,6],[127,15,156,13],[127,20,156,18],[128,6,157,4],[129,6,159,4],[129,13,160,6],[129,17,160,10],[129,18,160,11,"state"],[129,23,160,16],[129,28,160,21,"State"],[129,40,160,26],[129,41,160,27,"ACTIVE"],[129,47,160,33],[129,51,160,37,"canBeInterrupted"],[129,67,160,53],[129,71,160,57,"handler"],[129,78,160,64],[129,79,160,65,"handlerTag"],[129,89,160,75],[129,92,160,78],[129,93,160,79],[130,4,162,2],[131,4,164,9,"shouldBeCancelledByOther"],[131,28,164,33,"shouldBeCancelledByOther"],[131,29,164,34,"_handler"],[131,37,164,58],[131,39,164,69],[132,6,165,4],[132,13,165,11],[132,14,165,12],[132,18,165,16],[132,19,165,17,"disallowInterruption"],[132,39,165,37],[133,4,166,2],[134,4,168,9,"disallowsInterruption"],[134,25,168,30,"disallowsInterruption"],[134,26,168,30],[134,28,168,42],[135,6,169,4],[135,13,169,11],[135,17,169,15],[135,18,169,16,"disallowInterruption"],[135,38,169,36],[136,4,170,2],[137,4,172,9,"isButton"],[137,12,172,17,"isButton"],[137,13,172,17],[137,15,172,29],[138,6,173,4],[138,13,173,11],[138,17,173,15],[138,18,173,16,"buttonRole"],[138,28,173,26],[139,4,174,2],[140,2,175,0],[141,2,175,1,"exports"],[141,9,175,1],[141,10,175,1,"default"],[141,17,175,1],[141,20,175,1,"NativeViewGestureHandler"],[141,44,175,1],[142,0,175,1],[142,3]],"functionMap":{"names":["<global>","NativeViewGestureHandler","init","updateGestureConfig","restoreViewStyles","onPointerDown","onPointerAdd","newPointerAction","onPointerMove","onPointerLeave","onPointerUp","onPointerRemove","onUp","shouldRecognizeSimultaneously","shouldBeCancelledByOther","disallowsInterruption","isButton"],"mappings":"AAA;eCM;ECY;GDa;EEE;GFY;EGE;GHQ;EIE;GJM;EKE;GLI;EME;GNiB;EOE;GPe;EQE;GRI;ESE;GTG;EUE;GVG;EWE;GXU;EYE;GZ0B;EaE;GbE;EcE;GdE;EeE;GfE;CDC"}},"type":"js/module"}]}