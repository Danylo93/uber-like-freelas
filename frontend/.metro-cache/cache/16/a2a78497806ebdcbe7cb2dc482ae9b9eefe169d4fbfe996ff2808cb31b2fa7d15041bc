{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Alert","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"PEUC6jrQVoAGZ2qYkvimljMOyJI=","exportNames":["*"]}},{"name":"../services/api","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":128},"end":{"line":3,"column":45,"index":173}}],"key":"Pr5/EB33W7mJGi+ygccy+pUf1E8=","exportNames":["*"]}},{"name":"./AuthContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":174},"end":{"line":4,"column":40,"index":214}}],"key":"YmpzODa+dVz64UAAYTI+RwJeEt0=","exportNames":["*"]}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useChat = exports.ChatProvider = void 0;\n  var _react = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var _Alert = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/Alert\"));\n  var _api = require(_dependencyMap[3], \"../services/api\");\n  var _AuthContext = require(_dependencyMap[4], \"./AuthContext\");\n  var _jsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"/app/frontend/src/contexts/ChatContext.tsx\";\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const ChatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const ChatProvider = ({\n    children\n  }) => {\n    const {\n      user\n    } = (0, _AuthContext.useAuth)();\n    const [chats, setChats] = (0, _react.useState)([]);\n    const [messages, setMessages] = (0, _react.useState)({});\n    const [isLoading, setIsLoading] = (0, _react.useState)(false);\n    (0, _react.useEffect)(() => {\n      if (user) {\n        refreshChats();\n      }\n    }, [user]);\n    const refreshChats = async () => {\n      if (!user) return;\n      try {\n        setIsLoading(true);\n\n        // In a real app, this would call a backend API to get user's chats\n        // For now, we'll get chats based on service requests\n        const serviceRequests = await _api.apiService.getServiceRequests();\n        const offers = await _api.apiService.getOffers();\n        const chatMap = new Map();\n\n        // Create chats from service requests (for clients)\n        if (user.role === 'client') {\n          serviceRequests.forEach(request => {\n            if (request.provider_id) {\n              const chatId = `service_${request.id}`;\n              chatMap.set(chatId, {\n                id: chatId,\n                participants: [user.id, request.provider_id],\n                serviceRequestId: request.id,\n                unreadCount: 0,\n                participantNames: {\n                  [user.id]: user.name,\n                  [request.provider_id]: 'Prestador' // Would get real name from API\n                }\n              });\n            }\n          });\n        }\n\n        // Create chats from offers (for providers)\n        if (user.role === 'provider') {\n          offers.forEach(offer => {\n            // Get the service request to find the client\n            const request = serviceRequests.find(r => r.id === offer.service_request_id);\n            if (request) {\n              const chatId = `service_${request.id}`;\n              chatMap.set(chatId, {\n                id: chatId,\n                participants: [user.id, request.client_id],\n                serviceRequestId: request.id,\n                unreadCount: 0,\n                participantNames: {\n                  [user.id]: user.name,\n                  [request.client_id]: 'Cliente' // Would get real name from API\n                }\n              });\n            }\n          });\n        }\n        setChats(Array.from(chatMap.values()));\n      } catch (error) {\n        console.error('Error refreshing chats:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loadMessages = async chatId => {\n      try {\n        // In a real app, this would load messages from backend/Firebase\n        // For now, return empty array since we removed mocks\n        setMessages(prev => ({\n          ...prev,\n          [chatId]: []\n        }));\n      } catch (error) {\n        console.error('Error loading messages:', error);\n      }\n    };\n    const sendMessage = async (chatId, content, type = 'text') => {\n      if (!user) return;\n      try {\n        setIsLoading(true);\n        const chat = chats.find(c => c.id === chatId);\n        if (!chat) return;\n        const receiverId = chat.participants.find(p => p !== user.id) || '';\n        const newMessage = {\n          id: `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          senderId: user.id,\n          receiverId,\n          content,\n          timestamp: new Date(),\n          read: false,\n          type,\n          serviceRequestId: chat.serviceRequestId\n        };\n\n        // Update local messages immediately (optimistic update)\n        setMessages(prev => ({\n          ...prev,\n          [chatId]: [...(prev[chatId] || []), newMessage]\n        }));\n\n        // Update chat last message\n        setChats(prev => prev.map(c => c.id === chatId ? {\n          ...c,\n          lastMessage: newMessage\n        } : c));\n\n        // In a real app, send to backend/Firebase here\n        // await apiService.sendMessage({ chatId, content, type, receiverId });\n\n        console.log('Message sent:', newMessage);\n      } catch (error) {\n        console.error('Error sending message:', error);\n        _Alert.default.alert('Erro', 'Não foi possível enviar a mensagem');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const markAsRead = async chatId => {\n      if (!user) return;\n      try {\n        // Mark all messages as read\n        setMessages(prev => ({\n          ...prev,\n          [chatId]: prev[chatId]?.map(msg => msg.receiverId === user.id ? {\n            ...msg,\n            read: true\n          } : msg) || []\n        }));\n\n        // Update unread count\n        setChats(prev => prev.map(chat => chat.id === chatId ? {\n          ...chat,\n          unreadCount: 0\n        } : chat));\n\n        // In a real app, send to backend here\n        // await apiService.markMessagesAsRead(chatId);\n      } catch (error) {\n        console.error('Error marking as read:', error);\n      }\n    };\n    const createChat = async (participantId, participantName, serviceRequestId) => {\n      if (!user) throw new Error('User not authenticated');\n      try {\n        setIsLoading(true);\n        const chatId = serviceRequestId ? `service_${serviceRequestId}` : `chat_${Date.now()}`;\n        const newChat = {\n          id: chatId,\n          participants: [user.id, participantId],\n          unreadCount: 0,\n          serviceRequestId,\n          participantNames: {\n            [user.id]: user.name,\n            [participantId]: participantName\n          }\n        };\n        setChats(prev => [...prev, newChat]);\n        setMessages(prev => ({\n          ...prev,\n          [chatId]: []\n        }));\n\n        // In a real app, create chat in backend here\n        // await apiService.createChat({ participantId, serviceRequestId });\n\n        return chatId;\n      } catch (error) {\n        console.error('Error creating chat:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const value = {\n      chats,\n      messages,\n      sendMessage,\n      markAsRead,\n      createChat,\n      refreshChats,\n      loadMessages,\n      isLoading\n    };\n    return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(ChatContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }, this);\n  };\n  exports.ChatProvider = ChatProvider;\n  const useChat = () => {\n    const context = (0, _react.useContext)(ChatContext);\n    if (!context) {\n      throw new Error('useChat must be used within a ChatProvider');\n    }\n    return context;\n  };\n  exports.useChat = useChat;\n});","lineCount":223,"map":[[7,2,1,0],[7,6,1,0,"_react"],[7,12,1,0],[7,15,1,0,"_interopRequireWildcard"],[7,38,1,0],[7,39,1,0,"require"],[7,46,1,0],[7,47,1,0,"_dependencyMap"],[7,61,1,0],[8,2,1,89],[8,6,1,89,"_Alert"],[8,12,1,89],[8,15,1,89,"_interopRequireDefault"],[8,37,1,89],[8,38,1,89,"require"],[8,45,1,89],[8,46,1,89,"_dependencyMap"],[8,60,1,89],[9,2,3,0],[9,6,3,0,"_api"],[9,10,3,0],[9,13,3,0,"require"],[9,20,3,0],[9,21,3,0,"_dependencyMap"],[9,35,3,0],[10,2,4,0],[10,6,4,0,"_AuthContext"],[10,18,4,0],[10,21,4,0,"require"],[10,28,4,0],[10,29,4,0,"_dependencyMap"],[10,43,4,0],[11,2,4,40],[11,6,4,40,"_jsxDevRuntime"],[11,20,4,40],[11,23,4,40,"require"],[11,30,4,40],[11,31,4,40,"_dependencyMap"],[11,45,4,40],[12,2,4,40],[12,6,4,40,"_jsxFileName"],[12,18,4,40],[13,2,4,40],[13,11,4,40,"_interopRequireWildcard"],[13,35,4,40,"e"],[13,36,4,40],[13,38,4,40,"t"],[13,39,4,40],[13,68,4,40,"WeakMap"],[13,75,4,40],[13,81,4,40,"r"],[13,82,4,40],[13,89,4,40,"WeakMap"],[13,96,4,40],[13,100,4,40,"n"],[13,101,4,40],[13,108,4,40,"WeakMap"],[13,115,4,40],[13,127,4,40,"_interopRequireWildcard"],[13,150,4,40],[13,162,4,40,"_interopRequireWildcard"],[13,163,4,40,"e"],[13,164,4,40],[13,166,4,40,"t"],[13,167,4,40],[13,176,4,40,"t"],[13,177,4,40],[13,181,4,40,"e"],[13,182,4,40],[13,186,4,40,"e"],[13,187,4,40],[13,188,4,40,"__esModule"],[13,198,4,40],[13,207,4,40,"e"],[13,208,4,40],[13,214,4,40,"o"],[13,215,4,40],[13,217,4,40,"i"],[13,218,4,40],[13,220,4,40,"f"],[13,221,4,40],[13,226,4,40,"__proto__"],[13,235,4,40],[13,243,4,40,"default"],[13,250,4,40],[13,252,4,40,"e"],[13,253,4,40],[13,270,4,40,"e"],[13,271,4,40],[13,294,4,40,"e"],[13,295,4,40],[13,320,4,40,"e"],[13,321,4,40],[13,330,4,40,"f"],[13,331,4,40],[13,337,4,40,"o"],[13,338,4,40],[13,341,4,40,"t"],[13,342,4,40],[13,345,4,40,"n"],[13,346,4,40],[13,349,4,40,"r"],[13,350,4,40],[13,358,4,40,"o"],[13,359,4,40],[13,360,4,40,"has"],[13,363,4,40],[13,364,4,40,"e"],[13,365,4,40],[13,375,4,40,"o"],[13,376,4,40],[13,377,4,40,"get"],[13,380,4,40],[13,381,4,40,"e"],[13,382,4,40],[13,385,4,40,"o"],[13,386,4,40],[13,387,4,40,"set"],[13,390,4,40],[13,391,4,40,"e"],[13,392,4,40],[13,394,4,40,"f"],[13,395,4,40],[13,411,4,40,"t"],[13,412,4,40],[13,416,4,40,"e"],[13,417,4,40],[13,433,4,40,"t"],[13,434,4,40],[13,441,4,40,"hasOwnProperty"],[13,455,4,40],[13,456,4,40,"call"],[13,460,4,40],[13,461,4,40,"e"],[13,462,4,40],[13,464,4,40,"t"],[13,465,4,40],[13,472,4,40,"i"],[13,473,4,40],[13,477,4,40,"o"],[13,478,4,40],[13,481,4,40,"Object"],[13,487,4,40],[13,488,4,40,"defineProperty"],[13,502,4,40],[13,507,4,40,"Object"],[13,513,4,40],[13,514,4,40,"getOwnPropertyDescriptor"],[13,538,4,40],[13,539,4,40,"e"],[13,540,4,40],[13,542,4,40,"t"],[13,543,4,40],[13,550,4,40,"i"],[13,551,4,40],[13,552,4,40,"get"],[13,555,4,40],[13,559,4,40,"i"],[13,560,4,40],[13,561,4,40,"set"],[13,564,4,40],[13,568,4,40,"o"],[13,569,4,40],[13,570,4,40,"f"],[13,571,4,40],[13,573,4,40,"t"],[13,574,4,40],[13,576,4,40,"i"],[13,577,4,40],[13,581,4,40,"f"],[13,582,4,40],[13,583,4,40,"t"],[13,584,4,40],[13,588,4,40,"e"],[13,589,4,40],[13,590,4,40,"t"],[13,591,4,40],[13,602,4,40,"f"],[13,603,4,40],[13,608,4,40,"e"],[13,609,4,40],[13,611,4,40,"t"],[13,612,4,40],[14,2,37,0],[14,8,37,6,"ChatContext"],[14,19,37,17],[14,35,37,20],[14,39,37,20,"createContext"],[14,59,37,33],[14,61,37,63,"undefined"],[14,70,37,72],[14,71,37,73],[15,2,43,7],[15,8,43,13,"ChatProvider"],[15,20,43,54],[15,23,43,57,"ChatProvider"],[15,24,43,58],[16,4,43,60,"children"],[17,2,43,69],[17,3,43,70],[17,8,43,75],[18,4,44,2],[18,10,44,8],[19,6,44,10,"user"],[20,4,44,15],[20,5,44,16],[20,8,44,19],[20,12,44,19,"useAuth"],[20,32,44,26],[20,34,44,27],[20,35,44,28],[21,4,45,2],[21,10,45,8],[21,11,45,9,"chats"],[21,16,45,14],[21,18,45,16,"setChats"],[21,26,45,24],[21,27,45,25],[21,30,45,28],[21,34,45,28,"useState"],[21,49,45,36],[21,51,45,45],[21,53,45,47],[21,54,45,48],[22,4,46,2],[22,10,46,8],[22,11,46,9,"messages"],[22,19,46,17],[22,21,46,19,"setMessages"],[22,32,46,30],[22,33,46,31],[22,36,46,34],[22,40,46,34,"useState"],[22,55,46,42],[22,57,46,70],[22,58,46,71],[22,59,46,72],[22,60,46,73],[23,4,47,2],[23,10,47,8],[23,11,47,9,"isLoading"],[23,20,47,18],[23,22,47,20,"setIsLoading"],[23,34,47,32],[23,35,47,33],[23,38,47,36],[23,42,47,36,"useState"],[23,57,47,44],[23,59,47,45],[23,64,47,50],[23,65,47,51],[24,4,49,2],[24,8,49,2,"useEffect"],[24,24,49,11],[24,26,49,12],[24,32,49,18],[25,6,50,4],[25,10,50,8,"user"],[25,14,50,12],[25,16,50,14],[26,8,51,6,"refreshChats"],[26,20,51,18],[26,21,51,19],[26,22,51,20],[27,6,52,4],[28,4,53,2],[28,5,53,3],[28,7,53,5],[28,8,53,6,"user"],[28,12,53,10],[28,13,53,11],[28,14,53,12],[29,4,55,2],[29,10,55,8,"refreshChats"],[29,22,55,20],[29,25,55,23],[29,31,55,23,"refreshChats"],[29,32,55,23],[29,37,55,35],[30,6,56,4],[30,10,56,8],[30,11,56,9,"user"],[30,15,56,13],[30,17,56,15],[31,6,58,4],[31,10,58,8],[32,8,59,6,"setIsLoading"],[32,20,59,18],[32,21,59,19],[32,25,59,23],[32,26,59,24],[34,8,61,6],[35,8,62,6],[36,8,63,6],[36,14,63,12,"serviceRequests"],[36,29,63,27],[36,32,63,30],[36,38,63,36,"apiService"],[36,53,63,46],[36,54,63,47,"getServiceRequests"],[36,72,63,65],[36,73,63,66],[36,74,63,67],[37,8,64,6],[37,14,64,12,"offers"],[37,20,64,18],[37,23,64,21],[37,29,64,27,"apiService"],[37,44,64,37],[37,45,64,38,"getOffers"],[37,54,64,47],[37,55,64,48],[37,56,64,49],[38,8,66,6],[38,14,66,12,"chatMap"],[38,21,66,19],[38,24,66,22],[38,28,66,26,"Map"],[38,31,66,29],[38,32,66,44],[38,33,66,45],[40,8,68,6],[41,8,69,6],[41,12,69,10,"user"],[41,16,69,14],[41,17,69,15,"role"],[41,21,69,19],[41,26,69,24],[41,34,69,32],[41,36,69,34],[42,10,70,8,"serviceRequests"],[42,25,70,23],[42,26,70,24,"forEach"],[42,33,70,31],[42,34,70,32,"request"],[42,41,70,39],[42,45,70,43],[43,12,71,10],[43,16,71,14,"request"],[43,23,71,21],[43,24,71,22,"provider_id"],[43,35,71,33],[43,37,71,35],[44,14,72,12],[44,20,72,18,"chatId"],[44,26,72,24],[44,29,72,27],[44,40,72,38,"request"],[44,47,72,45],[44,48,72,46,"id"],[44,50,72,48],[44,52,72,50],[45,14,73,12,"chatMap"],[45,21,73,19],[45,22,73,20,"set"],[45,25,73,23],[45,26,73,24,"chatId"],[45,32,73,30],[45,34,73,32],[46,16,74,14,"id"],[46,18,74,16],[46,20,74,18,"chatId"],[46,26,74,24],[47,16,75,14,"participants"],[47,28,75,26],[47,30,75,28],[47,31,75,29,"user"],[47,35,75,33],[47,36,75,34,"id"],[47,38,75,36],[47,40,75,38,"request"],[47,47,75,45],[47,48,75,46,"provider_id"],[47,59,75,57],[47,60,75,58],[48,16,76,14,"serviceRequestId"],[48,32,76,30],[48,34,76,32,"request"],[48,41,76,39],[48,42,76,40,"id"],[48,44,76,42],[49,16,77,14,"unreadCount"],[49,27,77,25],[49,29,77,27],[49,30,77,28],[50,16,78,14,"participantNames"],[50,32,78,30],[50,34,78,32],[51,18,79,16],[51,19,79,17,"user"],[51,23,79,21],[51,24,79,22,"id"],[51,26,79,24],[51,29,79,27,"user"],[51,33,79,31],[51,34,79,32,"name"],[51,38,79,36],[52,18,80,16],[52,19,80,17,"request"],[52,26,80,24],[52,27,80,25,"provider_id"],[52,38,80,36],[52,41,80,39],[52,52,80,50],[52,53,80,52],[53,16,81,14],[54,14,82,12],[54,15,82,13],[54,16,82,14],[55,12,83,10],[56,10,84,8],[56,11,84,9],[56,12,84,10],[57,8,85,6],[59,8,87,6],[60,8,88,6],[60,12,88,10,"user"],[60,16,88,14],[60,17,88,15,"role"],[60,21,88,19],[60,26,88,24],[60,36,88,34],[60,38,88,36],[61,10,89,8,"offers"],[61,16,89,14],[61,17,89,15,"forEach"],[61,24,89,22],[61,25,89,23,"offer"],[61,30,89,28],[61,34,89,32],[62,12,90,10],[63,12,91,10],[63,18,91,16,"request"],[63,25,91,23],[63,28,91,26,"serviceRequests"],[63,43,91,41],[63,44,91,42,"find"],[63,48,91,46],[63,49,91,47,"r"],[63,50,91,48],[63,54,91,52,"r"],[63,55,91,53],[63,56,91,54,"id"],[63,58,91,56],[63,63,91,61,"offer"],[63,68,91,66],[63,69,91,67,"service_request_id"],[63,87,91,85],[63,88,91,86],[64,12,92,10],[64,16,92,14,"request"],[64,23,92,21],[64,25,92,23],[65,14,93,12],[65,20,93,18,"chatId"],[65,26,93,24],[65,29,93,27],[65,40,93,38,"request"],[65,47,93,45],[65,48,93,46,"id"],[65,50,93,48],[65,52,93,50],[66,14,94,12,"chatMap"],[66,21,94,19],[66,22,94,20,"set"],[66,25,94,23],[66,26,94,24,"chatId"],[66,32,94,30],[66,34,94,32],[67,16,95,14,"id"],[67,18,95,16],[67,20,95,18,"chatId"],[67,26,95,24],[68,16,96,14,"participants"],[68,28,96,26],[68,30,96,28],[68,31,96,29,"user"],[68,35,96,33],[68,36,96,34,"id"],[68,38,96,36],[68,40,96,38,"request"],[68,47,96,45],[68,48,96,46,"client_id"],[68,57,96,55],[68,58,96,56],[69,16,97,14,"serviceRequestId"],[69,32,97,30],[69,34,97,32,"request"],[69,41,97,39],[69,42,97,40,"id"],[69,44,97,42],[70,16,98,14,"unreadCount"],[70,27,98,25],[70,29,98,27],[70,30,98,28],[71,16,99,14,"participantNames"],[71,32,99,30],[71,34,99,32],[72,18,100,16],[72,19,100,17,"user"],[72,23,100,21],[72,24,100,22,"id"],[72,26,100,24],[72,29,100,27,"user"],[72,33,100,31],[72,34,100,32,"name"],[72,38,100,36],[73,18,101,16],[73,19,101,17,"request"],[73,26,101,24],[73,27,101,25,"client_id"],[73,36,101,34],[73,39,101,37],[73,48,101,46],[73,49,101,48],[74,16,102,14],[75,14,103,12],[75,15,103,13],[75,16,103,14],[76,12,104,10],[77,10,105,8],[77,11,105,9],[77,12,105,10],[78,8,106,6],[79,8,108,6,"setChats"],[79,16,108,14],[79,17,108,15,"Array"],[79,22,108,20],[79,23,108,21,"from"],[79,27,108,25],[79,28,108,26,"chatMap"],[79,35,108,33],[79,36,108,34,"values"],[79,42,108,40],[79,43,108,41],[79,44,108,42],[79,45,108,43],[79,46,108,44],[80,6,110,4],[80,7,110,5],[80,8,110,6],[80,15,110,13,"error"],[80,20,110,18],[80,22,110,20],[81,8,111,6,"console"],[81,15,111,13],[81,16,111,14,"error"],[81,21,111,19],[81,22,111,20],[81,47,111,45],[81,49,111,47,"error"],[81,54,111,52],[81,55,111,53],[82,6,112,4],[82,7,112,5],[82,16,112,14],[83,8,113,6,"setIsLoading"],[83,20,113,18],[83,21,113,19],[83,26,113,24],[83,27,113,25],[84,6,114,4],[85,4,115,2],[85,5,115,3],[86,4,117,2],[86,10,117,8,"loadMessages"],[86,22,117,20],[86,25,117,23],[86,31,117,30,"chatId"],[86,37,117,44],[86,41,117,49],[87,6,118,4],[87,10,118,8],[88,8,119,6],[89,8,120,6],[90,8,121,6,"setMessages"],[90,19,121,17],[90,20,121,18,"prev"],[90,24,121,22],[90,29,121,27],[91,10,122,8],[91,13,122,11,"prev"],[91,17,122,15],[92,10,123,8],[92,11,123,9,"chatId"],[92,17,123,15],[92,20,123,18],[93,8,124,6],[93,9,124,7],[93,10,124,8],[93,11,124,9],[94,6,125,4],[94,7,125,5],[94,8,125,6],[94,15,125,13,"error"],[94,20,125,18],[94,22,125,20],[95,8,126,6,"console"],[95,15,126,13],[95,16,126,14,"error"],[95,21,126,19],[95,22,126,20],[95,47,126,45],[95,49,126,47,"error"],[95,54,126,52],[95,55,126,53],[96,6,127,4],[97,4,128,2],[97,5,128,3],[98,4,130,2],[98,10,130,8,"sendMessage"],[98,21,130,19],[98,24,130,22],[98,30,130,22,"sendMessage"],[98,31,130,29,"chatId"],[98,37,130,43],[98,39,130,45,"content"],[98,46,130,60],[98,48,130,62,"type"],[98,52,130,97],[98,55,130,100],[98,61,130,106],[98,66,130,111],[99,6,131,4],[99,10,131,8],[99,11,131,9,"user"],[99,15,131,13],[99,17,131,15],[100,6,133,4],[100,10,133,8],[101,8,134,6,"setIsLoading"],[101,20,134,18],[101,21,134,19],[101,25,134,23],[101,26,134,24],[102,8,136,6],[102,14,136,12,"chat"],[102,18,136,16],[102,21,136,19,"chats"],[102,26,136,24],[102,27,136,25,"find"],[102,31,136,29],[102,32,136,30,"c"],[102,33,136,31],[102,37,136,35,"c"],[102,38,136,36],[102,39,136,37,"id"],[102,41,136,39],[102,46,136,44,"chatId"],[102,52,136,50],[102,53,136,51],[103,8,137,6],[103,12,137,10],[103,13,137,11,"chat"],[103,17,137,15],[103,19,137,17],[104,8,139,6],[104,14,139,12,"receiverId"],[104,24,139,22],[104,27,139,25,"chat"],[104,31,139,29],[104,32,139,30,"participants"],[104,44,139,42],[104,45,139,43,"find"],[104,49,139,47],[104,50,139,48,"p"],[104,51,139,49],[104,55,139,53,"p"],[104,56,139,54],[104,61,139,59,"user"],[104,65,139,63],[104,66,139,64,"id"],[104,68,139,66],[104,69,139,67],[104,73,139,71],[104,75,139,73],[105,8,141,6],[105,14,141,12,"newMessage"],[105,24,141,31],[105,27,141,34],[106,10,142,8,"id"],[106,12,142,10],[106,14,142,12],[106,21,142,19,"Date"],[106,25,142,23],[106,26,142,24,"now"],[106,29,142,27],[106,30,142,28],[106,31,142,29],[106,35,142,33,"Math"],[106,39,142,37],[106,40,142,38,"random"],[106,46,142,44],[106,47,142,45],[106,48,142,46],[106,49,142,47,"toString"],[106,57,142,55],[106,58,142,56],[106,60,142,58],[106,61,142,59],[106,62,142,60,"substr"],[106,68,142,66],[106,69,142,67],[106,70,142,68],[106,72,142,70],[106,73,142,71],[106,74,142,72],[106,76,142,74],[107,10,143,8,"senderId"],[107,18,143,16],[107,20,143,18,"user"],[107,24,143,22],[107,25,143,23,"id"],[107,27,143,25],[108,10,144,8,"receiverId"],[108,20,144,18],[109,10,145,8,"content"],[109,17,145,15],[110,10,146,8,"timestamp"],[110,19,146,17],[110,21,146,19],[110,25,146,23,"Date"],[110,29,146,27],[110,30,146,28],[110,31,146,29],[111,10,147,8,"read"],[111,14,147,12],[111,16,147,14],[111,21,147,19],[112,10,148,8,"type"],[112,14,148,12],[113,10,149,8,"serviceRequestId"],[113,26,149,24],[113,28,149,26,"chat"],[113,32,149,30],[113,33,149,31,"serviceRequestId"],[114,8,150,6],[114,9,150,7],[116,8,152,6],[117,8,153,6,"setMessages"],[117,19,153,17],[117,20,153,18,"prev"],[117,24,153,22],[117,29,153,27],[118,10,154,8],[118,13,154,11,"prev"],[118,17,154,15],[119,10,155,8],[119,11,155,9,"chatId"],[119,17,155,15],[119,20,155,18],[119,21,155,19],[119,25,155,23,"prev"],[119,29,155,27],[119,30,155,28,"chatId"],[119,36,155,34],[119,37,155,35],[119,41,155,39],[119,43,155,41],[119,44,155,42],[119,46,155,44,"newMessage"],[119,56,155,54],[120,8,156,6],[120,9,156,7],[120,10,156,8],[120,11,156,9],[122,8,158,6],[123,8,159,6,"setChats"],[123,16,159,14],[123,17,159,15,"prev"],[123,21,159,19],[123,25,160,8,"prev"],[123,29,160,12],[123,30,160,13,"map"],[123,33,160,16],[123,34,160,17,"c"],[123,35,160,18],[123,39,161,10,"c"],[123,40,161,11],[123,41,161,12,"id"],[123,43,161,14],[123,48,161,19,"chatId"],[123,54,161,25],[123,57,162,14],[124,10,162,16],[124,13,162,19,"c"],[124,14,162,20],[125,10,162,22,"lastMessage"],[125,21,162,33],[125,23,162,35,"newMessage"],[126,8,162,46],[126,9,162,47],[126,12,163,14,"c"],[126,13,164,8],[126,14,165,6],[126,15,165,7],[128,8,167,6],[129,8,168,6],[131,8,170,6,"console"],[131,15,170,13],[131,16,170,14,"log"],[131,19,170,17],[131,20,170,18],[131,35,170,33],[131,37,170,35,"newMessage"],[131,47,170,45],[131,48,170,46],[132,6,172,4],[132,7,172,5],[132,8,172,6],[132,15,172,13,"error"],[132,20,172,18],[132,22,172,20],[133,8,173,6,"console"],[133,15,173,13],[133,16,173,14,"error"],[133,21,173,19],[133,22,173,20],[133,46,173,44],[133,48,173,46,"error"],[133,53,173,51],[133,54,173,52],[134,8,174,6,"Alert"],[134,22,174,11],[134,23,174,12,"alert"],[134,28,174,17],[134,29,174,18],[134,35,174,24],[134,37,174,26],[134,73,174,62],[134,74,174,63],[135,6,175,4],[135,7,175,5],[135,16,175,14],[136,8,176,6,"setIsLoading"],[136,20,176,18],[136,21,176,19],[136,26,176,24],[136,27,176,25],[137,6,177,4],[138,4,178,2],[138,5,178,3],[139,4,180,2],[139,10,180,8,"markAsRead"],[139,20,180,18],[139,23,180,21],[139,29,180,28,"chatId"],[139,35,180,42],[139,39,180,47],[140,6,181,4],[140,10,181,8],[140,11,181,9,"user"],[140,15,181,13],[140,17,181,15],[141,6,183,4],[141,10,183,8],[142,8,184,6],[143,8,185,6,"setMessages"],[143,19,185,17],[143,20,185,18,"prev"],[143,24,185,22],[143,29,185,27],[144,10,186,8],[144,13,186,11,"prev"],[144,17,186,15],[145,10,187,8],[145,11,187,9,"chatId"],[145,17,187,15],[145,20,187,18,"prev"],[145,24,187,22],[145,25,187,23,"chatId"],[145,31,187,29],[145,32,187,30],[145,34,187,32,"map"],[145,37,187,35],[145,38,187,36,"msg"],[145,41,187,39],[145,45,188,10,"msg"],[145,48,188,13],[145,49,188,14,"receiverId"],[145,59,188,24],[145,64,188,29,"user"],[145,68,188,33],[145,69,188,34,"id"],[145,71,188,36],[145,74,188,39],[146,12,188,41],[146,15,188,44,"msg"],[146,18,188,47],[147,12,188,49,"read"],[147,16,188,53],[147,18,188,55],[148,10,188,60],[148,11,188,61],[148,14,188,64,"msg"],[148,17,189,8],[148,18,189,9],[148,22,189,13],[149,8,190,6],[149,9,190,7],[149,10,190,8],[149,11,190,9],[151,8,192,6],[152,8,193,6,"setChats"],[152,16,193,14],[152,17,193,15,"prev"],[152,21,193,19],[152,25,194,8,"prev"],[152,29,194,12],[152,30,194,13,"map"],[152,33,194,16],[152,34,194,17,"chat"],[152,38,194,21],[152,42,195,10,"chat"],[152,46,195,14],[152,47,195,15,"id"],[152,49,195,17],[152,54,195,22,"chatId"],[152,60,195,28],[152,63,196,14],[153,10,196,16],[153,13,196,19,"chat"],[153,17,196,23],[154,10,196,25,"unreadCount"],[154,21,196,36],[154,23,196,38],[155,8,196,40],[155,9,196,41],[155,12,197,14,"chat"],[155,16,198,8],[155,17,199,6],[155,18,199,7],[157,8,201,6],[158,8,202,6],[159,6,204,4],[159,7,204,5],[159,8,204,6],[159,15,204,13,"error"],[159,20,204,18],[159,22,204,20],[160,8,205,6,"console"],[160,15,205,13],[160,16,205,14,"error"],[160,21,205,19],[160,22,205,20],[160,46,205,44],[160,48,205,46,"error"],[160,53,205,51],[160,54,205,52],[161,6,206,4],[162,4,207,2],[162,5,207,3],[163,4,209,2],[163,10,209,8,"createChat"],[163,20,209,18],[163,23,209,21],[163,29,209,21,"createChat"],[163,30,209,28,"participantId"],[163,43,209,49],[163,45,209,51,"participantName"],[163,60,209,74],[163,62,209,76,"serviceRequestId"],[163,78,209,101],[163,83,209,123],[164,6,210,4],[164,10,210,8],[164,11,210,9,"user"],[164,15,210,13],[164,17,210,15],[164,23,210,21],[164,27,210,25,"Error"],[164,32,210,30],[164,33,210,31],[164,57,210,55],[164,58,210,56],[165,6,212,4],[165,10,212,8],[166,8,213,6,"setIsLoading"],[166,20,213,18],[166,21,213,19],[166,25,213,23],[166,26,213,24],[167,8,215,6],[167,14,215,12,"chatId"],[167,20,215,18],[167,23,215,21,"serviceRequestId"],[167,39,215,37],[167,42,215,40],[167,53,215,51,"serviceRequestId"],[167,69,215,67],[167,71,215,69],[167,74,215,72],[167,82,215,80,"Date"],[167,86,215,84],[167,87,215,85,"now"],[167,90,215,88],[167,91,215,89],[167,92,215,90],[167,94,215,92],[168,8,217,6],[168,14,217,12,"newChat"],[168,21,217,25],[168,24,217,28],[169,10,218,8,"id"],[169,12,218,10],[169,14,218,12,"chatId"],[169,20,218,18],[170,10,219,8,"participants"],[170,22,219,20],[170,24,219,22],[170,25,219,23,"user"],[170,29,219,27],[170,30,219,28,"id"],[170,32,219,30],[170,34,219,32,"participantId"],[170,47,219,45],[170,48,219,46],[171,10,220,8,"unreadCount"],[171,21,220,19],[171,23,220,21],[171,24,220,22],[172,10,221,8,"serviceRequestId"],[172,26,221,24],[173,10,222,8,"participantNames"],[173,26,222,24],[173,28,222,26],[174,12,223,10],[174,13,223,11,"user"],[174,17,223,15],[174,18,223,16,"id"],[174,20,223,18],[174,23,223,21,"user"],[174,27,223,25],[174,28,223,26,"name"],[174,32,223,30],[175,12,224,10],[175,13,224,11,"participantId"],[175,26,224,24],[175,29,224,27,"participantName"],[176,10,225,8],[177,8,226,6],[177,9,226,7],[178,8,228,6,"setChats"],[178,16,228,14],[178,17,228,15,"prev"],[178,21,228,19],[178,25,228,23],[178,26,228,24],[178,29,228,27,"prev"],[178,33,228,31],[178,35,228,33,"newChat"],[178,42,228,40],[178,43,228,41],[178,44,228,42],[179,8,229,6,"setMessages"],[179,19,229,17],[179,20,229,18,"prev"],[179,24,229,22],[179,29,229,27],[180,10,229,29],[180,13,229,32,"prev"],[180,17,229,36],[181,10,229,38],[181,11,229,39,"chatId"],[181,17,229,45],[181,20,229,48],[182,8,229,51],[182,9,229,52],[182,10,229,53],[182,11,229,54],[184,8,231,6],[185,8,232,6],[187,8,234,6],[187,15,234,13,"chatId"],[187,21,234,19],[188,6,236,4],[188,7,236,5],[188,8,236,6],[188,15,236,13,"error"],[188,20,236,18],[188,22,236,20],[189,8,237,6,"console"],[189,15,237,13],[189,16,237,14,"error"],[189,21,237,19],[189,22,237,20],[189,44,237,42],[189,46,237,44,"error"],[189,51,237,49],[189,52,237,50],[190,8,238,6],[190,14,238,12,"error"],[190,19,238,17],[191,6,239,4],[191,7,239,5],[191,16,239,14],[192,8,240,6,"setIsLoading"],[192,20,240,18],[192,21,240,19],[192,26,240,24],[192,27,240,25],[193,6,241,4],[194,4,242,2],[194,5,242,3],[195,4,244,2],[195,10,244,8,"value"],[195,15,244,30],[195,18,244,33],[196,6,245,4,"chats"],[196,11,245,9],[197,6,246,4,"messages"],[197,14,246,12],[198,6,247,4,"sendMessage"],[198,17,247,15],[199,6,248,4,"markAsRead"],[199,16,248,14],[200,6,249,4,"createChat"],[200,16,249,14],[201,6,250,4,"refreshChats"],[201,18,250,16],[202,6,251,4,"loadMessages"],[202,18,251,16],[203,6,252,4,"isLoading"],[204,4,253,2],[204,5,253,3],[205,4,255,2],[205,24,256,4],[205,28,256,4,"_jsxDevRuntime"],[205,42,256,4],[205,43,256,4,"jsxDEV"],[205,49,256,4],[205,51,256,5,"ChatContext"],[205,62,256,16],[205,63,256,17,"Provider"],[205,71,256,25],[206,6,256,26,"value"],[206,11,256,31],[206,13,256,33,"value"],[206,18,256,39],[207,6,256,39,"children"],[207,14,256,39],[207,16,257,7,"children"],[208,4,257,15],[209,6,257,15,"fileName"],[209,14,257,15],[209,16,257,15,"_jsxFileName"],[209,28,257,15],[210,6,257,15,"lineNumber"],[210,16,257,15],[211,6,257,15,"columnNumber"],[211,18,257,15],[212,4,257,15],[212,11,258,26],[212,12,258,27],[213,2,260,0],[213,3,260,1],[214,2,260,2,"exports"],[214,9,260,2],[214,10,260,2,"ChatProvider"],[214,22,260,2],[214,25,260,2,"ChatProvider"],[214,37,260,2],[215,2,262,7],[215,8,262,13,"useChat"],[215,15,262,20],[215,18,262,23,"useChat"],[215,19,262,23],[215,24,262,46],[216,4,263,2],[216,10,263,8,"context"],[216,17,263,15],[216,20,263,18],[216,24,263,18,"useContext"],[216,41,263,28],[216,43,263,29,"ChatContext"],[216,54,263,40],[216,55,263,41],[217,4,264,2],[217,8,264,6],[217,9,264,7,"context"],[217,16,264,14],[217,18,264,16],[218,6,265,4],[218,12,265,10],[218,16,265,14,"Error"],[218,21,265,19],[218,22,265,20],[218,66,265,64],[218,67,265,65],[219,4,266,2],[220,4,267,2],[220,11,267,9,"context"],[220,18,267,16],[221,2,268,0],[221,3,268,1],[222,2,268,2,"exports"],[222,9,268,2],[222,10,268,2,"useChat"],[222,17,268,2],[222,20,268,2,"useChat"],[222,27,268,2],[223,0,268,2],[223,3]],"functionMap":{"names":["<global>","ChatProvider","useEffect$argument_0","refreshChats","serviceRequests.forEach$argument_0","offers.forEach$argument_0","serviceRequests.find$argument_0","loadMessages","setMessages$argument_0","sendMessage","chats.find$argument_0","chat.participants.find$argument_0","setChats$argument_0","prev.map$argument_0","markAsRead","prev.chatId.map$argument_0","createChat","useChat"],"mappings":"AAA;yDC0C;YCM;GDI;uBEE;gCCe;SDc;uBEK;+CCE,sCD;SFc;GFU;uBME;kBCI;QDG;GNI;sBQE;8BCM,oBD;gDEG,kBF;kBDc;QCG;eGG;iBCC;eDG;SHC;GRc;qBaE;kBNK;oCOE;mEPC;QME;eFG;iBCC;kBDG;SEC;GbS;qBeE;eJmB,0BI;kBRC,mCQ;Gfa;CDkB;uBiBE;CjBM"}},"type":"js/module"}]}