{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"]}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":36,"index":51}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":52},"end":{"line":4,"column":33,"index":85}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":86},"end":{"line":5,"column":89,"index":175}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"]}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":176},"end":{"line":6,"column":62,"index":238}}],"key":"dpOMqAtzFjjUQychI3TYNsYmXQE=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":239},"end":{"line":7,"column":66,"index":305}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var _hammerjs = _interopRequireDefault(require(_dependencyMap[2], \"@egjs/hammerjs\"));\n  var _State = require(_dependencyMap[3], \"../State\");\n  var _constants = require(_dependencyMap[4], \"./constants\");\n  var _DiscreteGestureHandler = _interopRequireDefault(require(_dependencyMap[5], \"./DiscreteGestureHandler\"));\n  var _utils = require(_dependencyMap[6], \"./utils\");\n  const _excluded = [\"shouldActivateOnStart\", \"disallowInterruption\", \"shouldCancelWhenOutside\", \"minDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"];\n  class PressGestureHandler extends _DiscreteGestureHandler.default {\n    initialEvent = null;\n    get name() {\n      return 'press';\n    }\n    get minDurationMs() {\n      // @ts-ignore FIXME(TS)\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n    get maxDist() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n    get NativeGestureClass() {\n      return _hammerjs.default.Press;\n    }\n    shouldDelayTouches = true;\n    simulateCancelEvent(inputData) {\n      // Long press never starts so we can't rely on the running event boolean.\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n    updateHasCustomActivationCriteria({\n      shouldCancelWhenOutside,\n      maxDistSq\n    }) {\n      return shouldCancelWhenOutside || !(0, _utils.isValidNumber)(maxDistSq);\n    }\n    getState(type) {\n      return {\n        [_hammerjs.default.INPUT_START]: _State.State.BEGAN,\n        [_hammerjs.default.INPUT_MOVE]: _State.State.ACTIVE,\n        [_hammerjs.default.INPUT_END]: _State.State.END,\n        [_hammerjs.default.INPUT_CANCEL]: _State.State.CANCELLED\n      }[type];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    getHammerConfig() {\n      return Object.assign({}, super.getHammerConfig(), {\n        // threshold: this.maxDist,\n        time: this.minDurationMs\n      });\n    }\n    onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n    shouldDelayTouchForEvent({\n      pointerType\n    }) {\n      // Don't disable event for mouse input\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n    onGestureStart(ev) {\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = (0, _utils.fireAfterInterval)(() => {\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && _constants.CONTENT_TOUCHES_DELAY);\n    }\n    sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent(Object.assign({}, ev, {\n        eventType: _hammerjs.default.INPUT_MOVE,\n        isFirst: true\n      }));\n    }\n    forceInvalidate(event) {\n      super.forceInvalidate(event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.isGestureRunning) {\n        if (ev.isFinal) {\n          let timeout;\n          if (this.visualFeedbackTimer) {\n            // Aesthetic timing for a quick tap.\n            // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n            // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n            timeout = _constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n            this.sendGestureStartedEvent(this.initialEvent);\n            this.initialEvent = null;\n          }\n          (0, _utils.fireAfterInterval)(() => {\n            this.sendEvent(Object.assign({}, ev, {\n              eventType: _hammerjs.default.INPUT_END,\n              isFinal: true\n            }));\n            // @ts-ignore -- this should explicitly support undefined\n            this.onGestureEnded();\n          }, timeout);\n        } else {\n          this.sendEvent(Object.assign({}, ev, {\n            eventType: _hammerjs.default.INPUT_MOVE,\n            isFinal: false\n          }));\n        }\n      }\n    }\n    updateGestureConfig(_ref) {\n      let {\n          shouldActivateOnStart = false,\n          disallowInterruption = false,\n          shouldCancelWhenOutside = true,\n          minDurationMs = Number.NaN,\n          maxDist = Number.NaN,\n          minPointers = 1,\n          maxPointers = 1\n        } = _ref,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n      return super.updateGestureConfig(Object.assign({\n        shouldActivateOnStart,\n        disallowInterruption,\n        shouldCancelWhenOutside,\n        minDurationMs,\n        maxDist,\n        minPointers,\n        maxPointers\n      }, props));\n    }\n  }\n  var _default = exports.default = PressGestureHandler;\n});","lineCount":152,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[9,2,1,13],[9,6,1,13,"_objectWithoutPropertiesLoose2"],[9,36,1,13],[9,39,1,13,"_interopRequireDefault"],[9,61,1,13],[9,62,1,13,"require"],[9,69,1,13],[9,70,1,13,"_dependencyMap"],[9,84,1,13],[10,2,3,0],[10,6,3,0,"_hammerjs"],[10,15,3,0],[10,18,3,0,"_interopRequireDefault"],[10,40,3,0],[10,41,3,0,"require"],[10,48,3,0],[10,49,3,0,"_dependencyMap"],[10,63,3,0],[11,2,4,0],[11,6,4,0,"_State"],[11,12,4,0],[11,15,4,0,"require"],[11,22,4,0],[11,23,4,0,"_dependencyMap"],[11,37,4,0],[12,2,5,0],[12,6,5,0,"_constants"],[12,16,5,0],[12,19,5,0,"require"],[12,26,5,0],[12,27,5,0,"_dependencyMap"],[12,41,5,0],[13,2,6,0],[13,6,6,0,"_DiscreteGestureHandler"],[13,29,6,0],[13,32,6,0,"_interopRequireDefault"],[13,54,6,0],[13,55,6,0,"require"],[13,62,6,0],[13,63,6,0,"_dependencyMap"],[13,77,6,0],[14,2,7,0],[14,6,7,0,"_utils"],[14,12,7,0],[14,15,7,0,"require"],[14,22,7,0],[14,23,7,0,"_dependencyMap"],[14,37,7,0],[15,2,7,66],[15,8,7,66,"_excluded"],[15,17,7,66],[16,2,8,0],[16,8,8,6,"PressGestureHandler"],[16,27,8,25],[16,36,8,34,"DiscreteGestureHandler"],[16,67,8,56],[16,68,8,57],[17,4,9,2,"initialEvent"],[17,16,9,14],[17,19,9,17],[17,23,9,21],[18,4,10,2],[18,8,10,6,"name"],[18,12,10,10,"name"],[18,13,10,10],[18,15,10,13],[19,6,11,4],[19,13,11,11],[19,20,11,18],[20,4,12,2],[21,4,13,2],[21,8,13,6,"minDurationMs"],[21,21,13,19,"minDurationMs"],[21,22,13,19],[21,24,13,22],[22,6,14,4],[23,6,15,4],[23,13,15,11],[23,17,15,11,"isnan"],[23,29,15,16],[23,31,15,17],[23,35,15,21],[23,36,15,22,"config"],[23,42,15,28],[23,43,15,29,"minDurationMs"],[23,56,15,42],[23,57,15,43],[23,60,15,46],[23,61,15,47],[23,64,15,50],[23,68,15,54],[23,69,15,55,"config"],[23,75,15,61],[23,76,15,62,"minDurationMs"],[23,89,15,75],[24,4,16,2],[25,4,17,2],[25,8,17,6,"maxDist"],[25,15,17,13,"maxDist"],[25,16,17,13],[25,18,17,16],[26,6,18,4],[26,13,18,11],[26,17,18,11,"isnan"],[26,29,18,16],[26,31,18,17],[26,35,18,21],[26,36,18,22,"config"],[26,42,18,28],[26,43,18,29,"maxDist"],[26,50,18,36],[26,51,18,37],[26,54,18,40],[26,55,18,41],[26,58,18,44],[26,62,18,48],[26,63,18,49,"config"],[26,69,18,55],[26,70,18,56,"maxDist"],[26,77,18,63],[27,4,19,2],[28,4,20,2],[28,8,20,6,"NativeGestureClass"],[28,26,20,24,"NativeGestureClass"],[28,27,20,24],[28,29,20,27],[29,6,21,4],[29,13,21,11,"Hammer"],[29,30,21,17],[29,31,21,18,"Press"],[29,36,21,23],[30,4,22,2],[31,4,23,2,"shouldDelayTouches"],[31,22,23,20],[31,25,23,23],[31,29,23,27],[32,4,24,2,"simulateCancelEvent"],[32,23,24,21,"simulateCancelEvent"],[32,24,24,22,"inputData"],[32,33,24,31],[32,35,24,33],[33,6,25,4],[34,6,26,4],[34,10,26,8],[34,11,26,9,"hasGestureFailed"],[34,27,26,25],[34,30,26,28],[34,34,26,32],[35,6,27,4],[35,10,27,8],[35,11,27,9,"cancelEvent"],[35,22,27,20],[35,23,27,21,"inputData"],[35,32,27,30],[35,33,27,31],[36,4,28,2],[37,4,29,2,"updateHasCustomActivationCriteria"],[37,37,29,35,"updateHasCustomActivationCriteria"],[37,38,29,36],[38,6,30,4,"shouldCancelWhenOutside"],[38,29,30,27],[39,6,31,4,"maxDistSq"],[40,4,32,2],[40,5,32,3],[40,7,32,5],[41,6,33,4],[41,13,33,11,"shouldCancelWhenOutside"],[41,36,33,34],[41,40,33,38],[41,41,33,39],[41,45,33,39,"isValidNumber"],[41,65,33,52],[41,67,33,53,"maxDistSq"],[41,76,33,62],[41,77,33,63],[42,4,34,2],[43,4,35,2,"getState"],[43,12,35,10,"getState"],[43,13,35,11,"type"],[43,17,35,15],[43,19,35,17],[44,6,36,4],[44,13,36,11],[45,8,37,6],[45,9,37,7,"Hammer"],[45,26,37,13],[45,27,37,14,"INPUT_START"],[45,38,37,25],[45,41,37,28,"State"],[45,53,37,33],[45,54,37,34,"BEGAN"],[45,59,37,39],[46,8,38,6],[46,9,38,7,"Hammer"],[46,26,38,13],[46,27,38,14,"INPUT_MOVE"],[46,37,38,24],[46,40,38,27,"State"],[46,52,38,32],[46,53,38,33,"ACTIVE"],[46,59,38,39],[47,8,39,6],[47,9,39,7,"Hammer"],[47,26,39,13],[47,27,39,14,"INPUT_END"],[47,36,39,23],[47,39,39,26,"State"],[47,51,39,31],[47,52,39,32,"END"],[47,55,39,35],[48,8,40,6],[48,9,40,7,"Hammer"],[48,26,40,13],[48,27,40,14,"INPUT_CANCEL"],[48,39,40,26],[48,42,40,29,"State"],[48,54,40,34],[48,55,40,35,"CANCELLED"],[49,6,41,4],[49,7,41,5],[49,8,41,6,"type"],[49,12,41,10],[49,13,41,11],[50,4,42,2],[51,4,43,2,"getConfig"],[51,13,43,11,"getConfig"],[51,14,43,11],[51,16,43,14],[52,6,44,4],[52,10,44,8],[52,11,44,9],[52,15,44,13],[52,16,44,14,"hasCustomActivationCriteria"],[52,43,44,41],[52,45,44,43],[53,8,45,6],[54,8,46,6],[55,8,47,6],[55,15,47,13],[56,10,48,8,"shouldCancelWhenOutside"],[56,33,48,31],[56,35,48,33],[56,39,48,37],[57,10,49,8,"maxDistSq"],[57,19,49,17],[57,21,49,19],[58,8,50,6],[58,9,50,7],[59,6,51,4],[60,6,52,4],[60,13,52,11],[60,17,52,15],[60,18,52,16,"config"],[60,24,52,22],[61,4,53,2],[62,4,54,2,"getHammerConfig"],[62,19,54,17,"getHammerConfig"],[62,20,54,17],[62,22,54,20],[63,6,55,4],[63,13,55,4,"Object"],[63,19,55,4],[63,20,55,4,"assign"],[63,26,55,4],[63,31,56,9],[63,36,56,14],[63,37,56,15,"getHammerConfig"],[63,52,56,30],[63,53,56,31],[63,54,56,32],[64,8,57,6],[65,8,58,6,"time"],[65,12,58,10],[65,14,58,12],[65,18,58,16],[65,19,58,17,"minDurationMs"],[66,6,58,30],[67,4,60,2],[68,4,61,2,"onGestureActivated"],[68,22,61,20,"onGestureActivated"],[68,23,61,21,"ev"],[68,25,61,23],[68,27,61,25],[69,6,62,4],[69,10,62,8],[69,11,62,9,"onGestureStart"],[69,25,62,23],[69,26,62,24,"ev"],[69,28,62,26],[69,29,62,27],[70,4,63,2],[71,4,64,2,"shouldDelayTouchForEvent"],[71,28,64,26,"shouldDelayTouchForEvent"],[71,29,64,27],[72,6,65,4,"pointerType"],[73,4,66,2],[73,5,66,3],[73,7,66,5],[74,6,67,4],[75,6,68,4],[75,13,68,11],[75,17,68,15],[75,18,68,16,"shouldDelayTouches"],[75,36,68,34],[75,40,68,38,"pointerType"],[75,51,68,49],[75,56,68,54],[75,63,68,61],[76,4,69,2],[77,4,70,2,"onGestureStart"],[77,18,70,16,"onGestureStart"],[77,19,70,17,"ev"],[77,21,70,19],[77,23,70,21],[78,6,71,4],[78,10,71,8],[78,11,71,9,"isGestureRunning"],[78,27,71,25],[78,30,71,28],[78,34,71,32],[79,6,72,4,"clearTimeout"],[79,18,72,16],[79,19,72,17],[79,23,72,21],[79,24,72,22,"visualFeedbackTimer"],[79,43,72,41],[79,44,72,42],[80,6,73,4],[80,10,73,8],[80,11,73,9,"initialEvent"],[80,23,73,21],[80,26,73,24,"ev"],[80,28,73,26],[81,6,74,4],[81,10,74,8],[81,11,74,9,"visualFeedbackTimer"],[81,30,74,28],[81,33,74,31],[81,37,74,31,"fireAfterInterval"],[81,61,74,48],[81,63,74,49],[81,69,74,55],[82,8,75,6],[82,12,75,10],[82,13,75,11,"sendGestureStartedEvent"],[82,36,75,34],[82,37,75,35],[82,41,75,39],[82,42,75,40,"initialEvent"],[82,54,75,52],[82,55,75,53],[83,8,76,6],[83,12,76,10],[83,13,76,11,"initialEvent"],[83,25,76,23],[83,28,76,26],[83,32,76,30],[84,6,77,4],[84,7,77,5],[84,9,77,7],[84,13,77,11],[84,14,77,12,"shouldDelayTouchForEvent"],[84,38,77,36],[84,39,77,37,"ev"],[84,41,77,39],[84,42,77,40],[84,46,77,44,"CONTENT_TOUCHES_DELAY"],[84,78,77,65],[84,79,77,66],[85,4,78,2],[86,4,79,2,"sendGestureStartedEvent"],[86,27,79,25,"sendGestureStartedEvent"],[86,28,79,26,"ev"],[86,30,79,28],[86,32,79,30],[87,6,80,4,"clearTimeout"],[87,18,80,16],[87,19,80,17],[87,23,80,21],[87,24,80,22,"visualFeedbackTimer"],[87,43,80,41],[87,44,80,42],[88,6,81,4],[88,10,81,8],[88,11,81,9,"visualFeedbackTimer"],[88,30,81,28],[88,33,81,31],[88,37,81,35],[89,6,82,4],[89,10,82,8],[89,11,82,9,"sendEvent"],[89,20,82,18],[89,21,82,18,"Object"],[89,27,82,18],[89,28,82,18,"assign"],[89,34,82,18],[89,39,83,9,"ev"],[89,41,83,11],[90,8,84,6,"eventType"],[90,17,84,15],[90,19,84,17,"Hammer"],[90,36,84,23],[90,37,84,24,"INPUT_MOVE"],[90,47,84,34],[91,8,85,6,"isFirst"],[91,15,85,13],[91,17,85,15],[92,6,85,19],[92,8,86,5],[92,9,86,6],[93,4,87,2],[94,4,88,2,"forceInvalidate"],[94,19,88,17,"forceInvalidate"],[94,20,88,18,"event"],[94,25,88,23],[94,27,88,25],[95,6,89,4],[95,11,89,9],[95,12,89,10,"forceInvalidate"],[95,27,89,25],[95,28,89,26,"event"],[95,33,89,31],[95,34,89,32],[96,6,90,4,"clearTimeout"],[96,18,90,16],[96,19,90,17],[96,23,90,21],[96,24,90,22,"visualFeedbackTimer"],[96,43,90,41],[96,44,90,42],[97,6,91,4],[97,10,91,8],[97,11,91,9,"visualFeedbackTimer"],[97,30,91,28],[97,33,91,31],[97,37,91,35],[98,6,92,4],[98,10,92,8],[98,11,92,9,"initialEvent"],[98,23,92,21],[98,26,92,24],[98,30,92,28],[99,4,93,2],[100,4,94,2,"onRawEvent"],[100,14,94,12,"onRawEvent"],[100,15,94,13,"ev"],[100,17,94,15],[100,19,94,17],[101,6,95,4],[101,11,95,9],[101,12,95,10,"onRawEvent"],[101,22,95,20],[101,23,95,21,"ev"],[101,25,95,23],[101,26,95,24],[102,6,96,4],[102,10,96,8],[102,14,96,12],[102,15,96,13,"isGestureRunning"],[102,31,96,29],[102,33,96,31],[103,8,97,6],[103,12,97,10,"ev"],[103,14,97,12],[103,15,97,13,"isFinal"],[103,22,97,20],[103,24,97,22],[104,10,98,8],[104,14,98,12,"timeout"],[104,21,98,19],[105,10,99,8],[105,14,99,12],[105,18,99,16],[105,19,99,17,"visualFeedbackTimer"],[105,38,99,36],[105,40,99,38],[106,12,100,10],[107,12,101,10],[108,12,102,10],[109,12,103,10,"timeout"],[109,19,103,17],[109,22,103,20,"CONTENT_TOUCHES_QUICK_TAP_END_DELAY"],[109,68,103,55],[110,12,104,10],[110,16,104,14],[110,17,104,15,"sendGestureStartedEvent"],[110,40,104,38],[110,41,104,39],[110,45,104,43],[110,46,104,44,"initialEvent"],[110,58,104,56],[110,59,104,57],[111,12,105,10],[111,16,105,14],[111,17,105,15,"initialEvent"],[111,29,105,27],[111,32,105,30],[111,36,105,34],[112,10,106,8],[113,10,107,8],[113,14,107,8,"fireAfterInterval"],[113,38,107,25],[113,40,107,26],[113,46,107,32],[114,12,108,10],[114,16,108,14],[114,17,108,15,"sendEvent"],[114,26,108,24],[114,27,108,24,"Object"],[114,33,108,24],[114,34,108,24,"assign"],[114,40,108,24],[114,45,109,15,"ev"],[114,47,109,17],[115,14,110,12,"eventType"],[115,23,110,21],[115,25,110,23,"Hammer"],[115,42,110,29],[115,43,110,30,"INPUT_END"],[115,52,110,39],[116,14,111,12,"isFinal"],[116,21,111,19],[116,23,111,21],[117,12,111,25],[117,14,112,11],[117,15,112,12],[118,12,113,10],[119,12,114,10],[119,16,114,14],[119,17,114,15,"onGestureEnded"],[119,31,114,29],[119,32,114,30],[119,33,114,31],[120,10,115,8],[120,11,115,9],[120,13,115,11,"timeout"],[120,20,115,18],[120,21,115,19],[121,8,116,6],[121,9,116,7],[121,15,116,13],[122,10,117,8],[122,14,117,12],[122,15,117,13,"sendEvent"],[122,24,117,22],[122,25,117,22,"Object"],[122,31,117,22],[122,32,117,22,"assign"],[122,38,117,22],[122,43,118,13,"ev"],[122,45,118,15],[123,12,119,10,"eventType"],[123,21,119,19],[123,23,119,21,"Hammer"],[123,40,119,27],[123,41,119,28,"INPUT_MOVE"],[123,51,119,38],[124,12,120,10,"isFinal"],[124,19,120,17],[124,21,120,19],[125,10,120,24],[125,12,121,9],[125,13,121,10],[126,8,122,6],[127,6,123,4],[128,4,124,2],[129,4,125,2,"updateGestureConfig"],[129,23,125,21,"updateGestureConfig"],[129,24,125,21,"_ref"],[129,28,125,21],[129,30,134,5],[130,6,134,5],[130,10,125,22],[131,10,126,4,"shouldActivateOnStart"],[131,31,126,25],[131,34,126,28],[131,39,126,33],[132,10,127,4,"disallowInterruption"],[132,30,127,24],[132,33,127,27],[132,38,127,32],[133,10,128,4,"shouldCancelWhenOutside"],[133,33,128,27],[133,36,128,30],[133,40,128,34],[134,10,129,4,"minDurationMs"],[134,23,129,17],[134,26,129,20,"Number"],[134,32,129,26],[134,33,129,27,"NaN"],[134,36,129,30],[135,10,130,4,"maxDist"],[135,17,130,11],[135,20,130,14,"Number"],[135,26,130,20],[135,27,130,21,"NaN"],[135,30,130,24],[136,10,131,4,"minPointers"],[136,21,131,15],[136,24,131,18],[136,25,131,19],[137,10,132,4,"maxPointers"],[137,21,132,15],[137,24,132,18],[138,8,134,2],[138,9,134,3],[138,12,134,3,"_ref"],[138,16,134,3],[139,8,133,7,"props"],[139,13,133,12],[139,20,133,12,"_objectWithoutPropertiesLoose2"],[139,50,133,12],[139,51,133,12,"default"],[139,58,133,12],[139,60,133,12,"_ref"],[139,64,133,12],[139,66,133,12,"_excluded"],[139,75,133,12],[140,6,135,4],[140,13,135,11],[140,18,135,16],[140,19,135,17,"updateGestureConfig"],[140,38,135,36],[140,39,135,36,"Object"],[140,45,135,36],[140,46,135,36,"assign"],[140,52,135,36],[141,8,136,6,"shouldActivateOnStart"],[141,29,136,27],[142,8,137,6,"disallowInterruption"],[142,28,137,26],[143,8,138,6,"shouldCancelWhenOutside"],[143,31,138,29],[144,8,139,6,"minDurationMs"],[144,21,139,19],[145,8,140,6,"maxDist"],[145,15,140,13],[146,8,141,6,"minPointers"],[146,19,141,17],[147,8,142,6,"maxPointers"],[148,6,142,17],[148,9,143,9,"props"],[148,14,143,14],[148,15,144,5],[148,16,144,6],[149,4,145,2],[150,2,146,0],[151,2,146,1],[151,6,146,1,"_default"],[151,14,146,1],[151,17,146,1,"exports"],[151,24,146,1],[151,25,146,1,"default"],[151,32,146,1],[151,35,147,15,"PressGestureHandler"],[151,54,147,34],[152,0,147,34],[152,3]],"functionMap":{"names":["<global>","PressGestureHandler","get__name","get__minDurationMs","get__maxDist","get__NativeGestureClass","simulateCancelEvent","updateHasCustomActivationCriteria","getState","getConfig","getHammerConfig","onGestureActivated","shouldDelayTouchForEvent","onGestureStart","fireAfterInterval$argument_0","sendGestureStartedEvent","forceInvalidate","onRawEvent","updateGestureConfig"],"mappings":"AAA;ACO;ECE;GDE;EEC;GFG;EGC;GHE;EIC;GJE;EKE;GLI;EMC;GNK;EOC;GPO;EQC;GRU;ESC;GTM;EUC;GVE;EWC;GXK;EYC;iDCI;KDG;GZC;EcC;GdQ;EeC;GfK;EgBC;0BHa;SGQ;GhBS;EiBC;GjBoB;CDC"}},"type":"js/module"}]}