{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/UIManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"7C1XCUhVWjU661dof+/eeoL/fDY=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"]}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":119},"end":{"line":5,"column":66,"index":185}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"]}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":186},"end":{"line":6,"column":63,"index":249}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":250},"end":{"line":7,"column":33,"index":283}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":284},"end":{"line":8,"column":108,"index":392}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"]}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":393},"end":{"line":9,"column":56,"index":449}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":450},"end":{"line":10,"column":64,"index":514}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":515},"end":{"line":11,"column":47,"index":562}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":563},"end":{"line":12,"column":81,"index":644}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":645},"end":{"line":13,"column":43,"index":688}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"]}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":689},"end":{"line":14,"column":64,"index":753}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"]}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":754},"end":{"line":15,"column":77,"index":831}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"]}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":832},"end":{"line":16,"column":55,"index":887}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"]}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":888},"end":{"line":17,"column":49,"index":937}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":938},"end":{"line":18,"column":48,"index":986}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var React = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\"));\n  var _UIManager = _interopRequireDefault(require(_dependencyMap[3], \"react-native-web/dist/exports/UIManager\"));\n  var _DeviceEventEmitter = _interopRequireDefault(require(_dependencyMap[4], \"react-native-web/dist/exports/DeviceEventEmitter\"));\n  var _customDirectEventTypes = require(_dependencyMap[5], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[6], \"../RNGestureHandlerModule\"));\n  var _State = require(_dependencyMap[7], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[8], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[9], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[10], \"./utils\");\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[11], \"../findNodeHandle\"));\n  var _utils2 = require(_dependencyMap[12], \"../utils\");\n  var _ActionType = require(_dependencyMap[13], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[14], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = _interopRequireDefault(require(_dependencyMap[15], \"../GestureHandlerRootViewContext\"));\n  var _ghQueueMicrotask = require(_dependencyMap[16], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[17], \"../mountRegistry\");\n  var _jsxRuntime = require(_dependencyMap[18], \"react/jsx-runtime\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const UIManagerAny = _UIManager.default;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  const customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  const customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && _Platform.default.OS === 'android' && customGHEventsConfigFabricAndroid)\n  };\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n  const UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants');\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  const {\n    setJSResponder: oldSetJSResponder = () => {\n      // no-op\n    },\n    clearJSResponder: oldClearJSResponder = () => {\n      // no-op\n    }\n  } = UIManagerAny;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  let allowTouches = true;\n  const DEV_ON_ANDROID = __DEV__ && _Platform.default.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    const extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  const stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  const UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler({\n    name,\n    allowedProps = [],\n    config = {},\n    transformProps,\n    customNativeProps = []\n  }) {\n    class Handler extends React.Component {\n      static displayName = name;\n      static contextType = _GestureHandlerRootViewContext.default;\n      handlerTag = -1;\n      constructor(props) {\n        super(props);\n        this.config = {};\n        this.propsRef = /*#__PURE__*/React.createRef();\n        this.isMountedRef = /*#__PURE__*/React.createRef();\n        this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = this.handlerTag;\n        }\n      }\n      componentDidMount() {\n        const props = this.props;\n        this.isMountedRef.current = true;\n        if (DEV_ON_ANDROID) {\n          this.inspectorToggleListener = _DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n            this.setState(_ => ({\n              allowTouches\n            }));\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        if (hasUnresolvedRefs(props)) {\n          // If there are unresolved refs (e.g. \".current\" has not yet been set)\n          // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n          // _update method that will try to update native handler props using\n          // queueMicrotask. This makes it so update() function gets called after all\n          // react components are mounted and we expect the missing ref object to\n          // be resolved by then.\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n        if (!this.viewNode) {\n          throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n        }\n        this.attachGestureHandler((0, _findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n      }\n      componentDidUpdate() {\n        const viewTag = (0, _findNodeHandle.default)(this.viewNode);\n        if (this.viewTag !== viewTag) {\n          this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n        }\n        this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n      }\n      componentWillUnmount() {\n        this.inspectorToggleListener?.remove();\n        this.isMountedRef.current = false;\n        if (_Platform.default.OS !== 'web') {\n          (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n        }\n        _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n        (0, _utils.scheduleFlushOperations)();\n        // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n        const handlerID = this.props.id;\n        if (handlerID) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete _handlersRegistry.handlerIDToTag[handlerID];\n        }\n        _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n      }\n      onGestureHandlerEvent = event => {\n        if (event.nativeEvent.handlerTag === this.handlerTag) {\n          if (typeof this.props.onGestureEvent === 'function') {\n            this.props.onGestureEvent?.(event);\n          }\n        } else {\n          this.props.onGestureHandlerEvent?.(event);\n        }\n      };\n\n      // TODO(TS) - make sure this is right type for event\n      onGestureHandlerStateChange = event => {\n        if (event.nativeEvent.handlerTag === this.handlerTag) {\n          if (typeof this.props.onHandlerStateChange === 'function') {\n            this.props.onHandlerStateChange?.(event);\n          }\n          const state = event.nativeEvent.state;\n          const stateEventName = stateToPropMappings[state];\n          const eventHandler = stateEventName && this.props[stateEventName];\n          if (eventHandler && typeof eventHandler === 'function') {\n            eventHandler(event);\n          }\n        } else {\n          this.props.onGestureHandlerStateChange?.(event);\n        }\n      };\n      refHandler = node => {\n        this.viewNode = node;\n        const child = React.Children.only(this.props.children);\n        // @ts-ignore Since React 19 ref is accessible as standard prop\n        // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n        const ref = (0, _utils2.isReact19)() ? child.props?.ref : child?.ref;\n        if (!ref) {\n          return;\n        }\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      };\n      createGestureHandler = newConfig => {\n        this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        this.config = newConfig;\n        _RNGestureHandlerModule.default.createGestureHandler(name, this.handlerTag, newConfig);\n      };\n      attachGestureHandler = newViewTag => {\n        this.viewTag = newViewTag;\n        if (_Platform.default.OS === 'web') {\n          // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n          _RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n          // ignored on web\n          this.propsRef);\n        } else {\n          (0, _handlersRegistry.registerOldGestureHandler)(this.handlerTag, {\n            onGestureEvent: this.onGestureHandlerEvent,\n            onGestureStateChange: this.onGestureHandlerStateChange\n          });\n          const actionType = (() => {\n            const onGestureEvent = this.props?.onGestureEvent;\n            const isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n            const onHandlerStateChange = this.props?.onHandlerStateChange;\n            const isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n            const isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n            if (isReanimatedHandler) {\n              // Reanimated worklet\n              return _ActionType.ActionType.REANIMATED_WORKLET;\n            } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n              // Animated.event with useNativeDriver: true\n              return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n            } else {\n              // JS callback or Animated.event with useNativeDriver: false\n              return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n            }\n          })();\n          _RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, actionType);\n        }\n        (0, _utils.scheduleFlushOperations)();\n        (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n          _mountRegistry.MountRegistry.gestureHandlerWillMount(this);\n        });\n      };\n      updateGestureHandler = newConfig => {\n        this.config = newConfig;\n        _RNGestureHandlerModule.default.updateGestureHandler(this.handlerTag, newConfig);\n        (0, _utils.scheduleFlushOperations)();\n      };\n      update(remainingTries) {\n        if (!this.isMountedRef.current) {\n          return;\n        }\n        const props = this.props;\n\n        // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n        // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n        // again is easy enough fix.\n        if (hasUnresolvedRefs(props) && remainingTries > 0) {\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(remainingTries - 1);\n          });\n        } else {\n          const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n          if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }\n\n      // eslint-disable-next-line @eslint-react/no-unused-class-component-members\n      setNativeProps(updates) {\n        const mergedProps = {\n          ...this.props,\n          ...updates\n        };\n        const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n        this.updateGestureHandler(newConfig);\n      }\n      render() {\n        if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && _Platform.default.OS !== 'web') {\n          throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/installation for more details.');\n        }\n        let gestureEventHandler = this.onGestureHandlerEvent;\n        // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onGestureEvent,\n          onGestureHandlerEvent\n        } = this.props;\n        if (onGestureEvent && typeof onGestureEvent !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerEvent) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureEventHandler = onGestureEvent;\n        } else {\n          if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        let gestureStateEventHandler = this.onGestureHandlerStateChange;\n        // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onHandlerStateChange,\n          onGestureHandlerStateChange\n        } = this.props;\n        if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerStateChange) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureStateEventHandler = onHandlerStateChange;\n        } else {\n          if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        const events = {\n          onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n          onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n        };\n        this.propsRef.current = events;\n        let child = null;\n        try {\n          child = React.Children.only(this.props.children);\n        } catch (e) {\n          throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n        }\n        let grandChildren = child.props.children;\n        if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n          grandChildren = React.Children.toArray(grandChildren);\n          grandChildren.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_PressabilityDebugView.PressabilityDebugView, {\n            color: \"mediumspringgreen\",\n            hitSlop: child.props.hitSlop\n          }, \"pressabilityDebugView\"));\n        }\n        return /*#__PURE__*/React.cloneElement(child, {\n          ref: this.refHandler,\n          collapsable: false,\n          ...((0, _utils2.isTestEnv)() ? {\n            handlerType: name,\n            handlerTag: this.handlerTag,\n            enabled: this.props.enabled\n          } : {}),\n          testID: this.props.testID ?? child.props.testID,\n          ...events\n        }, grandChildren);\n      }\n    }\n    return Handler;\n  }\n});","lineCount":396,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[8,20,1,13,"createHandler"],[8,33,1,13],[9,2,3,0],[9,6,3,0,"React"],[9,11,3,0],[9,14,3,0,"_interopRequireWildcard"],[9,37,3,0],[9,38,3,0,"require"],[9,45,3,0],[9,46,3,0,"_dependencyMap"],[9,60,3,0],[10,2,3,31],[10,6,3,31,"_Platform"],[10,15,3,31],[10,18,3,31,"_interopRequireDefault"],[10,40,3,31],[10,41,3,31,"require"],[10,48,3,31],[10,49,3,31,"_dependencyMap"],[10,63,3,31],[11,2,3,31],[11,6,3,31,"_UIManager"],[11,16,3,31],[11,19,3,31,"_interopRequireDefault"],[11,41,3,31],[11,42,3,31,"require"],[11,49,3,31],[11,50,3,31,"_dependencyMap"],[11,64,3,31],[12,2,3,31],[12,6,3,31,"_DeviceEventEmitter"],[12,25,3,31],[12,28,3,31,"_interopRequireDefault"],[12,50,3,31],[12,51,3,31,"require"],[12,58,3,31],[12,59,3,31,"_dependencyMap"],[12,73,3,31],[13,2,5,0],[13,6,5,0,"_customDirectEventTypes"],[13,29,5,0],[13,32,5,0,"require"],[13,39,5,0],[13,40,5,0,"_dependencyMap"],[13,54,5,0],[14,2,6,0],[14,6,6,0,"_RNGestureHandlerModule"],[14,29,6,0],[14,32,6,0,"_interopRequireDefault"],[14,54,6,0],[14,55,6,0,"require"],[14,62,6,0],[14,63,6,0,"_dependencyMap"],[14,77,6,0],[15,2,7,0],[15,6,7,0,"_State"],[15,12,7,0],[15,15,7,0,"require"],[15,22,7,0],[15,23,7,0,"_dependencyMap"],[15,37,7,0],[16,2,8,0],[16,6,8,0,"_handlersRegistry"],[16,23,8,0],[16,26,8,0,"require"],[16,33,8,0],[16,34,8,0,"_dependencyMap"],[16,48,8,0],[17,2,9,0],[17,6,9,0,"_getNextHandlerTag"],[17,24,9,0],[17,27,9,0,"require"],[17,34,9,0],[17,35,9,0,"_dependencyMap"],[17,49,9,0],[18,2,10,0],[18,6,10,0,"_utils"],[18,12,10,0],[18,15,10,0,"require"],[18,22,10,0],[18,23,10,0,"_dependencyMap"],[18,37,10,0],[19,2,11,0],[19,6,11,0,"_findNodeHandle"],[19,21,11,0],[19,24,11,0,"_interopRequireDefault"],[19,46,11,0],[19,47,11,0,"require"],[19,54,11,0],[19,55,11,0,"_dependencyMap"],[19,69,11,0],[20,2,12,0],[20,6,12,0,"_utils2"],[20,13,12,0],[20,16,12,0,"require"],[20,23,12,0],[20,24,12,0,"_dependencyMap"],[20,38,12,0],[21,2,13,0],[21,6,13,0,"_ActionType"],[21,17,13,0],[21,20,13,0,"require"],[21,27,13,0],[21,28,13,0,"_dependencyMap"],[21,42,13,0],[22,2,14,0],[22,6,14,0,"_PressabilityDebugView"],[22,28,14,0],[22,31,14,0,"require"],[22,38,14,0],[22,39,14,0,"_dependencyMap"],[22,53,14,0],[23,2,15,0],[23,6,15,0,"_GestureHandlerRootViewContext"],[23,36,15,0],[23,39,15,0,"_interopRequireDefault"],[23,61,15,0],[23,62,15,0,"require"],[23,69,15,0],[23,70,15,0,"_dependencyMap"],[23,84,15,0],[24,2,16,0],[24,6,16,0,"_ghQueueMicrotask"],[24,23,16,0],[24,26,16,0,"require"],[24,33,16,0],[24,34,16,0,"_dependencyMap"],[24,48,16,0],[25,2,17,0],[25,6,17,0,"_mountRegistry"],[25,20,17,0],[25,23,17,0,"require"],[25,30,17,0],[25,31,17,0,"_dependencyMap"],[25,45,17,0],[26,2,18,0],[26,6,18,0,"_jsxRuntime"],[26,17,18,0],[26,20,18,0,"require"],[26,27,18,0],[26,28,18,0,"_dependencyMap"],[26,42,18,0],[27,2,18,48],[27,11,18,48,"_interopRequireWildcard"],[27,35,18,48,"e"],[27,36,18,48],[27,38,18,48,"t"],[27,39,18,48],[27,68,18,48,"WeakMap"],[27,75,18,48],[27,81,18,48,"r"],[27,82,18,48],[27,89,18,48,"WeakMap"],[27,96,18,48],[27,100,18,48,"n"],[27,101,18,48],[27,108,18,48,"WeakMap"],[27,115,18,48],[27,127,18,48,"_interopRequireWildcard"],[27,150,18,48],[27,162,18,48,"_interopRequireWildcard"],[27,163,18,48,"e"],[27,164,18,48],[27,166,18,48,"t"],[27,167,18,48],[27,176,18,48,"t"],[27,177,18,48],[27,181,18,48,"e"],[27,182,18,48],[27,186,18,48,"e"],[27,187,18,48],[27,188,18,48,"__esModule"],[27,198,18,48],[27,207,18,48,"e"],[27,208,18,48],[27,214,18,48,"o"],[27,215,18,48],[27,217,18,48,"i"],[27,218,18,48],[27,220,18,48,"f"],[27,221,18,48],[27,226,18,48,"__proto__"],[27,235,18,48],[27,243,18,48,"default"],[27,250,18,48],[27,252,18,48,"e"],[27,253,18,48],[27,270,18,48,"e"],[27,271,18,48],[27,294,18,48,"e"],[27,295,18,48],[27,320,18,48,"e"],[27,321,18,48],[27,330,18,48,"f"],[27,331,18,48],[27,337,18,48,"o"],[27,338,18,48],[27,341,18,48,"t"],[27,342,18,48],[27,345,18,48,"n"],[27,346,18,48],[27,349,18,48,"r"],[27,350,18,48],[27,358,18,48,"o"],[27,359,18,48],[27,360,18,48,"has"],[27,363,18,48],[27,364,18,48,"e"],[27,365,18,48],[27,375,18,48,"o"],[27,376,18,48],[27,377,18,48,"get"],[27,380,18,48],[27,381,18,48,"e"],[27,382,18,48],[27,385,18,48,"o"],[27,386,18,48],[27,387,18,48,"set"],[27,390,18,48],[27,391,18,48,"e"],[27,392,18,48],[27,394,18,48,"f"],[27,395,18,48],[27,411,18,48,"t"],[27,412,18,48],[27,416,18,48,"e"],[27,417,18,48],[27,433,18,48,"t"],[27,434,18,48],[27,441,18,48,"hasOwnProperty"],[27,455,18,48],[27,456,18,48,"call"],[27,460,18,48],[27,461,18,48,"e"],[27,462,18,48],[27,464,18,48,"t"],[27,465,18,48],[27,472,18,48,"i"],[27,473,18,48],[27,477,18,48,"o"],[27,478,18,48],[27,481,18,48,"Object"],[27,487,18,48],[27,488,18,48,"defineProperty"],[27,502,18,48],[27,507,18,48,"Object"],[27,513,18,48],[27,514,18,48,"getOwnPropertyDescriptor"],[27,538,18,48],[27,539,18,48,"e"],[27,540,18,48],[27,542,18,48,"t"],[27,543,18,48],[27,550,18,48,"i"],[27,551,18,48],[27,552,18,48,"get"],[27,555,18,48],[27,559,18,48,"i"],[27,560,18,48],[27,561,18,48,"set"],[27,564,18,48],[27,568,18,48,"o"],[27,569,18,48],[27,570,18,48,"f"],[27,571,18,48],[27,573,18,48,"t"],[27,574,18,48],[27,576,18,48,"i"],[27,577,18,48],[27,581,18,48,"f"],[27,582,18,48],[27,583,18,48,"t"],[27,584,18,48],[27,588,18,48,"e"],[27,589,18,48],[27,590,18,48,"t"],[27,591,18,48],[27,602,18,48,"f"],[27,603,18,48],[27,608,18,48,"e"],[27,609,18,48],[27,611,18,48,"t"],[27,612,18,48],[28,2,19,0],[28,8,19,6,"UIManagerAny"],[28,20,19,18],[28,23,19,21,"UIManager"],[28,41,19,30],[29,2,20,0,"customDirectEventTypes"],[29,48,20,22],[29,49,20,23,"topGestureHandlerEvent"],[29,71,20,45],[29,74,20,48],[30,4,21,2,"registrationName"],[30,20,21,18],[30,22,21,20],[31,2,22,0],[31,3,22,1],[32,2,23,0],[32,8,23,6,"customGHEventsConfigFabricAndroid"],[32,41,23,39],[32,44,23,42],[33,4,24,2,"topOnGestureHandlerEvent"],[33,28,24,26],[33,30,24,28],[34,6,25,4,"registrationName"],[34,22,25,20],[34,24,25,22],[35,4,26,2],[35,5,26,3],[36,4,27,2,"topOnGestureHandlerStateChange"],[36,34,27,32],[36,36,27,34],[37,6,28,4,"registrationName"],[37,22,28,20],[37,24,28,22],[38,4,29,2],[39,2,30,0],[39,3,30,1],[40,2,31,0],[40,8,31,6,"customGHEventsConfig"],[40,28,31,26],[40,31,31,29],[41,4,32,2,"onGestureHandlerEvent"],[41,25,32,23],[41,27,32,25],[42,6,33,4,"registrationName"],[42,22,33,20],[42,24,33,22],[43,4,34,2],[43,5,34,3],[44,4,35,2,"onGestureHandlerStateChange"],[44,31,35,29],[44,33,35,31],[45,6,36,4,"registrationName"],[45,22,36,20],[45,24,36,22],[46,4,37,2],[46,5,37,3],[47,4,38,2],[48,4,39,2],[49,4,40,2],[50,4,41,2],[51,4,42,2],[52,4,43,2],[53,4,44,2],[54,4,45,2],[55,4,46,2],[55,8,46,6],[55,12,46,6,"isFabric"],[55,28,46,14],[55,30,46,15],[55,31,46,16],[55,35,46,20,"Platform"],[55,52,46,28],[55,53,46,29,"OS"],[55,55,46,31],[55,60,46,36],[55,69,46,45],[55,73,46,49,"customGHEventsConfigFabricAndroid"],[55,106,46,82],[56,2,47,0],[56,3,47,1],[58,2,49,0],[59,2,50,0],[60,2,51,0],[61,2,52,0],[62,2,53,0,"UIManagerAny"],[62,14,53,12],[62,15,53,13,"genericDirectEventTypes"],[62,38,53,36],[62,41,53,39],[63,4,54,2],[63,7,54,5,"UIManagerAny"],[63,19,54,17],[63,20,54,18,"genericDirectEventTypes"],[63,43,54,41],[64,4,55,2],[64,7,55,5,"customGHEventsConfig"],[65,2,56,0],[65,3,56,1],[66,2,57,0],[66,8,57,6,"UIManagerConstants"],[66,26,57,24],[66,29,57,27,"UIManagerAny"],[66,41,57,39],[66,42,57,40,"getViewManagerConfig"],[66,62,57,60],[66,65,57,63],[66,79,57,77],[66,80,57,78],[67,2,58,0],[67,6,58,4,"UIManagerConstants"],[67,24,58,22],[67,26,58,24],[68,4,59,2,"UIManagerConstants"],[68,22,59,20],[68,23,59,21,"genericDirectEventTypes"],[68,46,59,44],[68,49,59,47],[69,6,60,4],[69,9,60,7,"UIManagerConstants"],[69,27,60,25],[69,28,60,26,"genericDirectEventTypes"],[69,51,60,49],[70,6,61,4],[70,9,61,7,"customGHEventsConfig"],[71,4,62,2],[71,5,62,3],[72,2,63,0],[74,2,65,0],[75,2,66,0],[75,8,66,6],[76,4,67,2,"setJSResponder"],[76,18,67,16],[76,20,67,18,"oldSetJSResponder"],[76,37,67,35],[76,40,67,38,"oldSetJSResponder"],[76,41,67,38],[76,46,67,44],[77,6,68,4],[78,4,68,4],[78,5,69,3],[79,4,70,2,"clearJSResponder"],[79,20,70,18],[79,22,70,20,"oldClearJSResponder"],[79,41,70,39],[79,44,70,42,"oldClearJSResponder"],[79,45,70,42],[79,50,70,48],[80,6,71,4],[81,4,71,4],[82,2,73,0],[82,3,73,1],[82,6,73,4,"UIManagerAny"],[82,18,73,16],[83,2,74,0,"UIManagerAny"],[83,14,74,12],[83,15,74,13,"setJSResponder"],[83,29,74,27],[83,32,74,30],[83,33,74,31,"tag"],[83,36,74,34],[83,38,74,36,"blockNativeResponder"],[83,58,74,56],[83,63,74,61],[84,4,75,2,"RNGestureHandlerModule"],[84,35,75,24],[84,36,75,25,"handleSetJSResponder"],[84,56,75,45],[84,57,75,46,"tag"],[84,60,75,49],[84,62,75,51,"blockNativeResponder"],[84,82,75,71],[84,83,75,72],[85,4,76,2,"oldSetJSResponder"],[85,21,76,19],[85,22,76,20,"tag"],[85,25,76,23],[85,27,76,25,"blockNativeResponder"],[85,47,76,45],[85,48,76,46],[86,2,77,0],[86,3,77,1],[87,2,78,0,"UIManagerAny"],[87,14,78,12],[87,15,78,13,"clearJSResponder"],[87,31,78,29],[87,34,78,32],[87,40,78,38],[88,4,79,2,"RNGestureHandlerModule"],[88,35,79,24],[88,36,79,25,"handleClearJSResponder"],[88,58,79,47],[88,59,79,48],[88,60,79,49],[89,4,80,2,"oldClearJSResponder"],[89,23,80,21],[89,24,80,22],[89,25,80,23],[90,2,81,0],[90,3,81,1],[91,2,82,0],[91,6,82,4,"allowTouches"],[91,18,82,16],[91,21,82,19],[91,25,82,23],[92,2,83,0],[92,8,83,6,"DEV_ON_ANDROID"],[92,22,83,20],[92,25,83,23,"__DEV__"],[92,32,83,30],[92,36,83,34,"Platform"],[92,53,83,42],[92,54,83,43,"OS"],[92,56,83,45],[92,61,83,50],[92,70,83,59],[93,2,84,0],[94,2,85,0],[95,2,86,0],[95,6,86,4,"DEV_ON_ANDROID"],[95,20,86,18],[95,22,86,20],[96,4,87,2,"DeviceEventEmitter"],[96,31,87,20],[96,32,87,21,"addListener"],[96,43,87,32],[96,44,87,33],[96,68,87,57],[96,70,87,59],[96,76,87,65],[97,6,88,4,"allowTouches"],[97,18,88,16],[97,21,88,19],[97,22,88,20,"allowTouches"],[97,34,88,32],[98,4,89,2],[98,5,89,3],[98,6,89,4],[99,2,90,0],[100,2,91,0],[100,11,91,9,"hasUnresolvedRefs"],[100,28,91,26,"hasUnresolvedRefs"],[100,29,91,27,"props"],[100,34,91,32],[100,36,91,34],[101,4,92,2],[102,4,93,2],[102,10,93,8,"extract"],[102,17,93,15],[102,20,93,18,"refs"],[102,24,93,22],[102,28,93,26],[103,6,94,4],[103,10,94,8],[103,11,94,9,"Array"],[103,16,94,14],[103,17,94,15,"isArray"],[103,24,94,22],[103,25,94,23,"refs"],[103,29,94,27],[103,30,94,28],[103,32,94,30],[104,8,95,6],[104,15,95,13,"refs"],[104,19,95,17],[104,23,95,21,"refs"],[104,27,95,25],[104,28,95,26,"current"],[104,35,95,33],[104,40,95,38],[104,44,95,42],[105,6,96,4],[106,6,97,4],[106,13,97,11,"refs"],[106,17,97,15],[106,18,97,16,"some"],[106,22,97,20],[106,23,97,21,"r"],[106,24,97,22],[106,28,97,26,"r"],[106,29,97,27],[106,33,97,31,"r"],[106,34,97,32],[106,35,97,33,"current"],[106,42,97,40],[106,47,97,45],[106,51,97,49],[106,52,97,50],[107,4,98,2],[107,5,98,3],[108,4,99,2],[108,11,99,9,"extract"],[108,18,99,16],[108,19,99,17,"props"],[108,24,99,22],[108,25,99,23],[108,47,99,45],[108,48,99,46],[108,49,99,47],[108,53,99,51,"extract"],[108,60,99,58],[108,61,99,59,"props"],[108,66,99,64],[108,67,99,65],[108,76,99,74],[108,77,99,75],[108,78,99,76],[109,2,100,0],[110,2,101,0],[110,8,101,6,"stateToPropMappings"],[110,27,101,25],[110,30,101,28],[111,4,102,2],[111,5,102,3,"State"],[111,17,102,8],[111,18,102,9,"UNDETERMINED"],[111,30,102,21],[111,33,102,24,"undefined"],[111,42,102,33],[112,4,103,2],[112,5,103,3,"State"],[112,17,103,8],[112,18,103,9,"BEGAN"],[112,23,103,14],[112,26,103,17],[112,35,103,26],[113,4,104,2],[113,5,104,3,"State"],[113,17,104,8],[113,18,104,9,"FAILED"],[113,24,104,15],[113,27,104,18],[113,37,104,28],[114,4,105,2],[114,5,105,3,"State"],[114,17,105,8],[114,18,105,9,"CANCELLED"],[114,27,105,18],[114,30,105,21],[114,43,105,34],[115,4,106,2],[115,5,106,3,"State"],[115,17,106,8],[115,18,106,9,"ACTIVE"],[115,24,106,15],[115,27,106,18],[115,40,106,31],[116,4,107,2],[116,5,107,3,"State"],[116,17,107,8],[116,18,107,9,"END"],[116,21,107,12],[116,24,107,15],[117,2,108,0],[117,3,108,1],[119,2,110,0],[121,2,112,0],[121,8,112,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[121,35,112,33],[121,38,112,36],[121,39,112,37],[123,2,114,0],[124,2,115,15],[124,11,115,24,"createHandler"],[124,24,115,37,"createHandler"],[124,25,115,38],[125,4,116,2,"name"],[125,8,116,6],[126,4,117,2,"allowedProps"],[126,16,117,14],[126,19,117,17],[126,21,117,19],[127,4,118,2,"config"],[127,10,118,8],[127,13,118,11],[127,14,118,12],[127,15,118,13],[128,4,119,2,"transformProps"],[128,18,119,16],[129,4,120,2,"customNativeProps"],[129,21,120,19],[129,24,120,22],[130,2,121,0],[130,3,121,1],[130,5,121,3],[131,4,122,2],[131,10,122,8,"Handler"],[131,17,122,15],[131,26,122,24,"React"],[131,31,122,29],[131,32,122,30,"Component"],[131,41,122,39],[131,42,122,40],[132,6,123,4],[132,13,123,11,"displayName"],[132,24,123,22],[132,27,123,25,"name"],[132,31,123,29],[133,6,124,4],[133,13,124,11,"contextType"],[133,24,124,22],[133,27,124,25,"GestureHandlerRootViewContext"],[133,65,124,54],[134,6,125,4,"handlerTag"],[134,16,125,14],[134,19,125,17],[134,20,125,18],[134,21,125,19],[135,6,126,4,"constructor"],[135,17,126,15,"constructor"],[135,18,126,16,"props"],[135,23,126,21],[135,25,126,23],[136,8,127,6],[136,13,127,11],[136,14,127,12,"props"],[136,19,127,17],[136,20,127,18],[137,8,128,6],[137,12,128,10],[137,13,128,11,"config"],[137,19,128,17],[137,22,128,20],[137,23,128,21],[137,24,128,22],[138,8,129,6],[138,12,129,10],[138,13,129,11,"propsRef"],[138,21,129,19],[138,24,129,22],[138,37,129,35,"React"],[138,42,129,40],[138,43,129,41,"createRef"],[138,52,129,50],[138,53,129,51],[138,54,129,52],[139,8,130,6],[139,12,130,10],[139,13,130,11,"isMountedRef"],[139,25,130,23],[139,28,130,26],[139,41,130,39,"React"],[139,46,130,44],[139,47,130,45,"createRef"],[139,56,130,54],[139,57,130,55],[139,58,130,56],[140,8,131,6],[140,12,131,10],[140,13,131,11,"state"],[140,18,131,16],[140,21,131,19],[141,10,132,8,"allowTouches"],[142,8,133,6],[142,9,133,7],[143,8,134,6],[143,12,134,10,"props"],[143,17,134,15],[143,18,134,16,"id"],[143,20,134,18],[143,22,134,20],[144,10,135,8],[144,14,135,12,"handlerIDToTag"],[144,46,135,26],[144,47,135,27,"props"],[144,52,135,32],[144,53,135,33,"id"],[144,55,135,35],[144,56,135,36],[144,61,135,41,"undefined"],[144,70,135,50],[144,72,135,52],[145,12,136,10],[145,18,136,16],[145,22,136,20,"Error"],[145,27,136,25],[145,28,136,26],[145,48,136,46,"props"],[145,53,136,51],[145,54,136,52,"id"],[145,56,136,54],[145,78,136,76],[145,79,136,77],[146,10,137,8],[147,10,138,8,"handlerIDToTag"],[147,42,138,22],[147,43,138,23,"props"],[147,48,138,28],[147,49,138,29,"id"],[147,51,138,31],[147,52,138,32],[147,55,138,35],[147,59,138,39],[147,60,138,40,"handlerTag"],[147,70,138,50],[148,8,139,6],[149,6,140,4],[150,6,141,4,"componentDidMount"],[150,23,141,21,"componentDidMount"],[150,24,141,21],[150,26,141,24],[151,8,142,6],[151,14,142,12,"props"],[151,19,142,17],[151,22,142,20],[151,26,142,24],[151,27,142,25,"props"],[151,32,142,30],[152,8,143,6],[152,12,143,10],[152,13,143,11,"isMountedRef"],[152,25,143,23],[152,26,143,24,"current"],[152,33,143,31],[152,36,143,34],[152,40,143,38],[153,8,144,6],[153,12,144,10,"DEV_ON_ANDROID"],[153,26,144,24],[153,28,144,26],[154,10,145,8],[154,14,145,12],[154,15,145,13,"inspectorToggleListener"],[154,38,145,36],[154,41,145,39,"DeviceEventEmitter"],[154,68,145,57],[154,69,145,58,"addListener"],[154,80,145,69],[154,81,145,70],[154,105,145,94],[154,107,145,96],[154,113,145,102],[155,12,146,10],[155,16,146,14],[155,17,146,15,"setState"],[155,25,146,23],[155,26,146,24,"_"],[155,27,146,25],[155,32,146,30],[156,14,147,12,"allowTouches"],[157,12,148,10],[157,13,148,11],[157,14,148,12],[157,15,148,13],[158,12,149,10],[158,16,149,14],[158,17,149,15,"update"],[158,23,149,21],[158,24,149,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[158,51,149,49],[158,52,149,50],[159,10,150,8],[159,11,150,9],[159,12,150,10],[160,8,151,6],[161,8,152,6],[161,12,152,10,"hasUnresolvedRefs"],[161,29,152,27],[161,30,152,28,"props"],[161,35,152,33],[161,36,152,34],[161,38,152,36],[162,10,153,8],[163,10,154,8],[164,10,155,8],[165,10,156,8],[166,10,157,8],[167,10,158,8],[168,10,159,8],[168,14,159,8,"ghQueueMicrotask"],[168,48,159,24],[168,50,159,25],[168,56,159,31],[169,12,160,10],[169,16,160,14],[169,17,160,15,"update"],[169,23,160,21],[169,24,160,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[169,51,160,49],[169,52,160,50],[170,10,161,8],[170,11,161,9],[170,12,161,10],[171,8,162,6],[172,8,163,6],[172,12,163,10],[172,13,163,11,"createGestureHandler"],[172,33,163,31],[172,34,163,32],[172,38,163,32,"filterConfig"],[172,57,163,44],[172,59,163,45,"transformProps"],[172,73,163,59],[172,76,163,62,"transformProps"],[172,90,163,76],[172,91,163,77],[172,95,163,81],[172,96,163,82,"props"],[172,101,163,87],[172,102,163,88],[172,105,163,91],[172,109,163,95],[172,110,163,96,"props"],[172,115,163,101],[172,117,163,103],[172,118,163,104],[172,121,163,107,"allowedProps"],[172,133,163,119],[172,135,163,121],[172,138,163,124,"customNativeProps"],[172,155,163,141],[172,156,163,142],[172,158,163,144,"config"],[172,164,163,150],[172,165,163,151],[172,166,163,152],[173,8,164,6],[173,12,164,10],[173,13,164,11],[173,17,164,15],[173,18,164,16,"viewNode"],[173,26,164,24],[173,28,164,26],[174,10,165,8],[174,16,165,14],[174,20,165,18,"Error"],[174,25,165,23],[174,26,165,24],[174,73,165,71,"Handler"],[174,80,165,78],[174,81,165,79,"displayName"],[174,92,165,90],[174,152,165,150],[174,153,165,151],[175,8,166,6],[176,8,167,6],[176,12,167,10],[176,13,167,11,"attachGestureHandler"],[176,33,167,31],[176,34,167,32],[176,38,167,32,"findNodeHandle"],[176,61,167,46],[176,63,167,47],[176,67,167,51],[176,68,167,52,"viewNode"],[176,76,167,60],[176,77,167,61],[176,78,167,62],[176,79,167,63],[176,80,167,64],[177,6,168,4],[178,6,169,4,"componentDidUpdate"],[178,24,169,22,"componentDidUpdate"],[178,25,169,22],[178,27,169,25],[179,8,170,6],[179,14,170,12,"viewTag"],[179,21,170,19],[179,24,170,22],[179,28,170,22,"findNodeHandle"],[179,51,170,36],[179,53,170,37],[179,57,170,41],[179,58,170,42,"viewNode"],[179,66,170,50],[179,67,170,51],[180,8,171,6],[180,12,171,10],[180,16,171,14],[180,17,171,15,"viewTag"],[180,24,171,22],[180,29,171,27,"viewTag"],[180,36,171,34],[180,38,171,36],[181,10,172,8],[181,14,172,12],[181,15,172,13,"attachGestureHandler"],[181,35,172,33],[181,36,172,34,"viewTag"],[181,43,172,41],[181,44,172,42],[181,45,172,43],[181,46,172,44],[182,8,173,6],[183,8,174,6],[183,12,174,10],[183,13,174,11,"update"],[183,19,174,17],[183,20,174,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[183,47,174,45],[183,48,174,46],[184,6,175,4],[185,6,176,4,"componentWillUnmount"],[185,26,176,24,"componentWillUnmount"],[185,27,176,24],[185,29,176,27],[186,8,177,6],[186,12,177,10],[186,13,177,11,"inspectorToggleListener"],[186,36,177,34],[186,38,177,36,"remove"],[186,44,177,42],[186,45,177,43],[186,46,177,44],[187,8,178,6],[187,12,178,10],[187,13,178,11,"isMountedRef"],[187,25,178,23],[187,26,178,24,"current"],[187,33,178,31],[187,36,178,34],[187,41,178,39],[188,8,179,6],[188,12,179,10,"Platform"],[188,29,179,18],[188,30,179,19,"OS"],[188,32,179,21],[188,37,179,26],[188,42,179,31],[188,44,179,33],[189,10,180,8],[189,14,180,8,"unregisterOldGestureHandler"],[189,59,180,35],[189,61,180,36],[189,65,180,40],[189,66,180,41,"handlerTag"],[189,76,180,51],[189,77,180,52],[190,8,181,6],[191,8,182,6,"RNGestureHandlerModule"],[191,39,182,28],[191,40,182,29,"dropGestureHandler"],[191,58,182,47],[191,59,182,48],[191,63,182,52],[191,64,182,53,"handlerTag"],[191,74,182,63],[191,75,182,64],[192,8,183,6],[192,12,183,6,"scheduleFlushOperations"],[192,42,183,29],[192,44,183,30],[192,45,183,31],[193,8,184,6],[194,8,185,6],[194,14,185,12,"handlerID"],[194,23,185,21],[194,26,185,24],[194,30,185,28],[194,31,185,29,"props"],[194,36,185,34],[194,37,185,35,"id"],[194,39,185,37],[195,8,186,6],[195,12,186,10,"handlerID"],[195,21,186,19],[195,23,186,21],[196,10,187,8],[197,10,188,8],[197,17,188,15,"handlerIDToTag"],[197,49,188,29],[197,50,188,30,"handlerID"],[197,59,188,39],[197,60,188,40],[198,8,189,6],[199,8,190,6,"MountRegistry"],[199,36,190,19],[199,37,190,20,"gestureHandlerWillUnmount"],[199,62,190,45],[199,63,190,46],[199,67,190,50],[199,68,190,51],[200,6,191,4],[201,6,192,4,"onGestureHandlerEvent"],[201,27,192,25],[201,30,192,28,"event"],[201,35,192,33],[201,39,192,37],[202,8,193,6],[202,12,193,10,"event"],[202,17,193,15],[202,18,193,16,"nativeEvent"],[202,29,193,27],[202,30,193,28,"handlerTag"],[202,40,193,38],[202,45,193,43],[202,49,193,47],[202,50,193,48,"handlerTag"],[202,60,193,58],[202,62,193,60],[203,10,194,8],[203,14,194,12],[203,21,194,19],[203,25,194,23],[203,26,194,24,"props"],[203,31,194,29],[203,32,194,30,"onGestureEvent"],[203,46,194,44],[203,51,194,49],[203,61,194,59],[203,63,194,61],[204,12,195,10],[204,16,195,14],[204,17,195,15,"props"],[204,22,195,20],[204,23,195,21,"onGestureEvent"],[204,37,195,35],[204,40,195,38,"event"],[204,45,195,43],[204,46,195,44],[205,10,196,8],[206,8,197,6],[206,9,197,7],[206,15,197,13],[207,10,198,8],[207,14,198,12],[207,15,198,13,"props"],[207,20,198,18],[207,21,198,19,"onGestureHandlerEvent"],[207,42,198,40],[207,45,198,43,"event"],[207,50,198,48],[207,51,198,49],[208,8,199,6],[209,6,200,4],[209,7,200,5],[211,6,202,4],[212,6,203,4,"onGestureHandlerStateChange"],[212,33,203,31],[212,36,203,34,"event"],[212,41,203,39],[212,45,203,43],[213,8,204,6],[213,12,204,10,"event"],[213,17,204,15],[213,18,204,16,"nativeEvent"],[213,29,204,27],[213,30,204,28,"handlerTag"],[213,40,204,38],[213,45,204,43],[213,49,204,47],[213,50,204,48,"handlerTag"],[213,60,204,58],[213,62,204,60],[214,10,205,8],[214,14,205,12],[214,21,205,19],[214,25,205,23],[214,26,205,24,"props"],[214,31,205,29],[214,32,205,30,"onHandlerStateChange"],[214,52,205,50],[214,57,205,55],[214,67,205,65],[214,69,205,67],[215,12,206,10],[215,16,206,14],[215,17,206,15,"props"],[215,22,206,20],[215,23,206,21,"onHandlerStateChange"],[215,43,206,41],[215,46,206,44,"event"],[215,51,206,49],[215,52,206,50],[216,10,207,8],[217,10,208,8],[217,16,208,14,"state"],[217,21,208,19],[217,24,208,22,"event"],[217,29,208,27],[217,30,208,28,"nativeEvent"],[217,41,208,39],[217,42,208,40,"state"],[217,47,208,45],[218,10,209,8],[218,16,209,14,"stateEventName"],[218,30,209,28],[218,33,209,31,"stateToPropMappings"],[218,52,209,50],[218,53,209,51,"state"],[218,58,209,56],[218,59,209,57],[219,10,210,8],[219,16,210,14,"eventHandler"],[219,28,210,26],[219,31,210,29,"stateEventName"],[219,45,210,43],[219,49,210,47],[219,53,210,51],[219,54,210,52,"props"],[219,59,210,57],[219,60,210,58,"stateEventName"],[219,74,210,72],[219,75,210,73],[220,10,211,8],[220,14,211,12,"eventHandler"],[220,26,211,24],[220,30,211,28],[220,37,211,35,"eventHandler"],[220,49,211,47],[220,54,211,52],[220,64,211,62],[220,66,211,64],[221,12,212,10,"eventHandler"],[221,24,212,22],[221,25,212,23,"event"],[221,30,212,28],[221,31,212,29],[222,10,213,8],[223,8,214,6],[223,9,214,7],[223,15,214,13],[224,10,215,8],[224,14,215,12],[224,15,215,13,"props"],[224,20,215,18],[224,21,215,19,"onGestureHandlerStateChange"],[224,48,215,46],[224,51,215,49,"event"],[224,56,215,54],[224,57,215,55],[225,8,216,6],[226,6,217,4],[226,7,217,5],[227,6,218,4,"refHandler"],[227,16,218,14],[227,19,218,17,"node"],[227,23,218,21],[227,27,218,25],[228,8,219,6],[228,12,219,10],[228,13,219,11,"viewNode"],[228,21,219,19],[228,24,219,22,"node"],[228,28,219,26],[229,8,220,6],[229,14,220,12,"child"],[229,19,220,17],[229,22,220,20,"React"],[229,27,220,25],[229,28,220,26,"Children"],[229,36,220,34],[229,37,220,35,"only"],[229,41,220,39],[229,42,220,40],[229,46,220,44],[229,47,220,45,"props"],[229,52,220,50],[229,53,220,51,"children"],[229,61,220,59],[229,62,220,60],[230,8,221,6],[231,8,222,6],[232,8,223,6],[232,14,223,12,"ref"],[232,17,223,15],[232,20,223,18],[232,24,223,18,"isReact19"],[232,41,223,27],[232,43,223,28],[232,44,223,29],[232,47,223,32,"child"],[232,52,223,37],[232,53,223,38,"props"],[232,58,223,43],[232,60,223,45,"ref"],[232,63,223,48],[232,66,223,51,"child"],[232,71,223,56],[232,73,223,58,"ref"],[232,76,223,61],[233,8,224,6],[233,12,224,10],[233,13,224,11,"ref"],[233,16,224,14],[233,18,224,16],[234,10,225,8],[235,8,226,6],[236,8,227,6],[236,12,227,10],[236,19,227,17,"ref"],[236,22,227,20],[236,27,227,25],[236,37,227,35],[236,39,227,37],[237,10,228,8,"ref"],[237,13,228,11],[237,14,228,12,"node"],[237,18,228,16],[237,19,228,17],[238,8,229,6],[238,9,229,7],[238,15,229,13],[239,10,230,8,"ref"],[239,13,230,11],[239,14,230,12,"current"],[239,21,230,19],[239,24,230,22,"node"],[239,28,230,26],[240,8,231,6],[241,6,232,4],[241,7,232,5],[242,6,233,4,"createGestureHandler"],[242,26,233,24],[242,29,233,27,"newConfig"],[242,38,233,36],[242,42,233,40],[243,8,234,6],[243,12,234,10],[243,13,234,11,"handlerTag"],[243,23,234,21],[243,26,234,24],[243,30,234,24,"getNextHandlerTag"],[243,66,234,41],[243,68,234,42],[243,69,234,43],[244,8,235,6],[244,12,235,10],[244,13,235,11,"config"],[244,19,235,17],[244,22,235,20,"newConfig"],[244,31,235,29],[245,8,236,6,"RNGestureHandlerModule"],[245,39,236,28],[245,40,236,29,"createGestureHandler"],[245,60,236,49],[245,61,236,50,"name"],[245,65,236,54],[245,67,236,56],[245,71,236,60],[245,72,236,61,"handlerTag"],[245,82,236,71],[245,84,236,73,"newConfig"],[245,93,236,82],[245,94,236,83],[246,6,237,4],[246,7,237,5],[247,6,238,4,"attachGestureHandler"],[247,26,238,24],[247,29,238,27,"newViewTag"],[247,39,238,37],[247,43,238,41],[248,8,239,6],[248,12,239,10],[248,13,239,11,"viewTag"],[248,20,239,18],[248,23,239,21,"newViewTag"],[248,33,239,31],[249,8,240,6],[249,12,240,10,"Platform"],[249,29,240,18],[249,30,240,19,"OS"],[249,32,240,21],[249,37,240,26],[249,42,240,31],[249,44,240,33],[250,10,241,8],[251,10,242,8,"RNGestureHandlerModule"],[251,41,242,30],[251,42,242,31,"attachGestureHandler"],[251,62,242,51],[251,63,242,52],[251,67,242,56],[251,68,242,57,"handlerTag"],[251,78,242,67],[251,80,242,69,"newViewTag"],[251,90,242,79],[251,92,242,81,"ActionType"],[251,114,242,91],[251,115,242,92,"JS_FUNCTION_OLD_API"],[251,134,242,111],[252,10,243,8],[253,10,244,8],[253,14,244,12],[253,15,244,13,"propsRef"],[253,23,244,21],[253,24,244,22],[254,8,245,6],[254,9,245,7],[254,15,245,13],[255,10,246,8],[255,14,246,8,"registerOldGestureHandler"],[255,57,246,33],[255,59,246,34],[255,63,246,38],[255,64,246,39,"handlerTag"],[255,74,246,49],[255,76,246,51],[256,12,247,10,"onGestureEvent"],[256,26,247,24],[256,28,247,26],[256,32,247,30],[256,33,247,31,"onGestureHandlerEvent"],[256,54,247,52],[257,12,248,10,"onGestureStateChange"],[257,32,248,30],[257,34,248,32],[257,38,248,36],[257,39,248,37,"onGestureHandlerStateChange"],[258,10,249,8],[258,11,249,9],[258,12,249,10],[259,10,250,8],[259,16,250,14,"actionType"],[259,26,250,24],[259,29,250,27],[259,30,250,28],[259,36,250,34],[260,12,251,10],[260,18,251,16,"onGestureEvent"],[260,32,251,30],[260,35,251,33],[260,39,251,37],[260,40,251,38,"props"],[260,45,251,43],[260,47,251,45,"onGestureEvent"],[260,61,251,59],[261,12,252,10],[261,18,252,16,"isGestureHandlerWorklet"],[261,41,252,39],[261,44,252,42,"onGestureEvent"],[261,58,252,56],[261,63,252,61],[261,72,252,70],[261,76,252,74,"onGestureEvent"],[261,90,252,88],[261,94,252,92],[261,115,252,113],[261,119,252,117,"onGestureEvent"],[261,133,252,131],[261,134,252,132],[262,12,253,10],[262,18,253,16,"onHandlerStateChange"],[262,38,253,36],[262,41,253,39],[262,45,253,43],[262,46,253,44,"props"],[262,51,253,49],[262,53,253,51,"onHandlerStateChange"],[262,73,253,71],[263,12,254,10],[263,18,254,16,"isStateChangeHandlerWorklet"],[263,45,254,43],[263,48,254,46,"onHandlerStateChange"],[263,68,254,66],[263,73,254,71],[263,82,254,80],[263,86,254,84,"onHandlerStateChange"],[263,106,254,104],[263,110,254,108],[263,131,254,129],[263,135,254,133,"onHandlerStateChange"],[263,155,254,153],[263,156,254,154],[264,12,255,10],[264,18,255,16,"isReanimatedHandler"],[264,37,255,35],[264,40,255,38,"isGestureHandlerWorklet"],[264,63,255,61],[264,67,255,65,"isStateChangeHandlerWorklet"],[264,94,255,92],[265,12,256,10],[265,16,256,14,"isReanimatedHandler"],[265,35,256,33],[265,37,256,35],[266,14,257,12],[267,14,258,12],[267,21,258,19,"ActionType"],[267,43,258,29],[267,44,258,30,"REANIMATED_WORKLET"],[267,62,258,48],[268,12,259,10],[268,13,259,11],[268,19,259,17],[268,23,259,21,"onGestureEvent"],[268,37,259,35],[268,41,259,39],[268,53,259,51],[268,57,259,55,"onGestureEvent"],[268,71,259,69],[268,73,259,71],[269,14,260,12],[270,14,261,12],[270,21,261,19,"ActionType"],[270,43,261,29],[270,44,261,30,"NATIVE_ANIMATED_EVENT"],[270,65,261,51],[271,12,262,10],[271,13,262,11],[271,19,262,17],[272,14,263,12],[273,14,264,12],[273,21,264,19,"ActionType"],[273,43,264,29],[273,44,264,30,"JS_FUNCTION_OLD_API"],[273,63,264,49],[274,12,265,10],[275,10,266,8],[275,11,266,9],[275,13,266,11],[275,14,266,12],[276,10,267,8,"RNGestureHandlerModule"],[276,41,267,30],[276,42,267,31,"attachGestureHandler"],[276,62,267,51],[276,63,267,52],[276,67,267,56],[276,68,267,57,"handlerTag"],[276,78,267,67],[276,80,267,69,"newViewTag"],[276,90,267,79],[276,92,267,81,"actionType"],[276,102,267,91],[276,103,267,92],[277,8,268,6],[278,8,269,6],[278,12,269,6,"scheduleFlushOperations"],[278,42,269,29],[278,44,269,30],[278,45,269,31],[279,8,270,6],[279,12,270,6,"ghQueueMicrotask"],[279,46,270,22],[279,48,270,23],[279,54,270,29],[280,10,271,8,"MountRegistry"],[280,38,271,21],[280,39,271,22,"gestureHandlerWillMount"],[280,62,271,45],[280,63,271,46],[280,67,271,50],[280,68,271,51],[281,8,272,6],[281,9,272,7],[281,10,272,8],[282,6,273,4],[282,7,273,5],[283,6,274,4,"updateGestureHandler"],[283,26,274,24],[283,29,274,27,"newConfig"],[283,38,274,36],[283,42,274,40],[284,8,275,6],[284,12,275,10],[284,13,275,11,"config"],[284,19,275,17],[284,22,275,20,"newConfig"],[284,31,275,29],[285,8,276,6,"RNGestureHandlerModule"],[285,39,276,28],[285,40,276,29,"updateGestureHandler"],[285,60,276,49],[285,61,276,50],[285,65,276,54],[285,66,276,55,"handlerTag"],[285,76,276,65],[285,78,276,67,"newConfig"],[285,87,276,76],[285,88,276,77],[286,8,277,6],[286,12,277,6,"scheduleFlushOperations"],[286,42,277,29],[286,44,277,30],[286,45,277,31],[287,6,278,4],[287,7,278,5],[288,6,279,4,"update"],[288,12,279,10,"update"],[288,13,279,11,"remainingTries"],[288,27,279,25],[288,29,279,27],[289,8,280,6],[289,12,280,10],[289,13,280,11],[289,17,280,15],[289,18,280,16,"isMountedRef"],[289,30,280,28],[289,31,280,29,"current"],[289,38,280,36],[289,40,280,38],[290,10,281,8],[291,8,282,6],[292,8,283,6],[292,14,283,12,"props"],[292,19,283,17],[292,22,283,20],[292,26,283,24],[292,27,283,25,"props"],[292,32,283,30],[294,8,285,6],[295,8,286,6],[296,8,287,6],[297,8,288,6],[297,12,288,10,"hasUnresolvedRefs"],[297,29,288,27],[297,30,288,28,"props"],[297,35,288,33],[297,36,288,34],[297,40,288,38,"remainingTries"],[297,54,288,52],[297,57,288,55],[297,58,288,56],[297,60,288,58],[298,10,289,8],[298,14,289,8,"ghQueueMicrotask"],[298,48,289,24],[298,50,289,25],[298,56,289,31],[299,12,290,10],[299,16,290,14],[299,17,290,15,"update"],[299,23,290,21],[299,24,290,22,"remainingTries"],[299,38,290,36],[299,41,290,39],[299,42,290,40],[299,43,290,41],[300,10,291,8],[300,11,291,9],[300,12,291,10],[301,8,292,6],[301,9,292,7],[301,15,292,13],[302,10,293,8],[302,16,293,14,"newConfig"],[302,25,293,23],[302,28,293,26],[302,32,293,26,"filterConfig"],[302,51,293,38],[302,53,293,39,"transformProps"],[302,67,293,53],[302,70,293,56,"transformProps"],[302,84,293,70],[302,85,293,71],[302,89,293,75],[302,90,293,76,"props"],[302,95,293,81],[302,96,293,82],[302,99,293,85],[302,103,293,89],[302,104,293,90,"props"],[302,109,293,95],[302,111,293,97],[302,112,293,98],[302,115,293,101,"allowedProps"],[302,127,293,113],[302,129,293,115],[302,132,293,118,"customNativeProps"],[302,149,293,135],[302,150,293,136],[302,152,293,138,"config"],[302,158,293,144],[302,159,293,145],[303,10,294,8],[303,14,294,12],[303,15,294,13],[303,19,294,13,"deepEqual"],[303,36,294,22],[303,38,294,23],[303,42,294,27],[303,43,294,28,"config"],[303,49,294,34],[303,51,294,36,"newConfig"],[303,60,294,45],[303,61,294,46],[303,63,294,48],[304,12,295,10],[304,16,295,14],[304,17,295,15,"updateGestureHandler"],[304,37,295,35],[304,38,295,36,"newConfig"],[304,47,295,45],[304,48,295,46],[305,10,296,8],[306,8,297,6],[307,6,298,4],[309,6,300,4],[310,6,301,4,"setNativeProps"],[310,20,301,18,"setNativeProps"],[310,21,301,19,"updates"],[310,28,301,26],[310,30,301,28],[311,8,302,6],[311,14,302,12,"mergedProps"],[311,25,302,23],[311,28,302,26],[312,10,303,8],[312,13,303,11],[312,17,303,15],[312,18,303,16,"props"],[312,23,303,21],[313,10,304,8],[313,13,304,11,"updates"],[314,8,305,6],[314,9,305,7],[315,8,306,6],[315,14,306,12,"newConfig"],[315,23,306,21],[315,26,306,24],[315,30,306,24,"filterConfig"],[315,49,306,36],[315,51,306,37,"transformProps"],[315,65,306,51],[315,68,306,54,"transformProps"],[315,82,306,68],[315,83,306,69,"mergedProps"],[315,94,306,80],[315,95,306,81],[315,98,306,84,"mergedProps"],[315,109,306,95],[315,111,306,97],[315,112,306,98],[315,115,306,101,"allowedProps"],[315,127,306,113],[315,129,306,115],[315,132,306,118,"customNativeProps"],[315,149,306,135],[315,150,306,136],[315,152,306,138,"config"],[315,158,306,144],[315,159,306,145],[316,8,307,6],[316,12,307,10],[316,13,307,11,"updateGestureHandler"],[316,33,307,31],[316,34,307,32,"newConfig"],[316,43,307,41],[316,44,307,42],[317,6,308,4],[318,6,309,4,"render"],[318,12,309,10,"render"],[318,13,309,10],[318,15,309,13],[319,8,310,6],[319,12,310,10,"__DEV__"],[319,19,310,17],[319,23,310,21],[319,24,310,22],[319,28,310,26],[319,29,310,27,"context"],[319,36,310,34],[319,40,310,38],[319,41,310,39],[319,45,310,39,"isTestEnv"],[319,62,310,48],[319,64,310,49],[319,65,310,50],[319,69,310,54,"Platform"],[319,86,310,62],[319,87,310,63,"OS"],[319,89,310,65],[319,94,310,70],[319,99,310,75],[319,101,310,77],[320,10,311,8],[320,16,311,14],[320,20,311,18,"Error"],[320,25,311,23],[320,26,311,24,"name"],[320,30,311,28],[320,33,311,31],[320,247,311,245],[320,248,311,246],[321,8,312,6],[322,8,313,6],[322,12,313,10,"gestureEventHandler"],[322,31,313,29],[322,34,313,32],[322,38,313,36],[322,39,313,37,"onGestureHandlerEvent"],[322,60,313,58],[323,8,314,6],[325,8,316,6],[325,14,316,12],[326,10,317,8,"onGestureEvent"],[326,24,317,22],[327,10,318,8,"onGestureHandlerEvent"],[328,8,319,6],[328,9,319,7],[328,12,319,10],[328,16,319,14],[328,17,319,15,"props"],[328,22,319,20],[329,8,320,6],[329,12,320,10,"onGestureEvent"],[329,26,320,24],[329,30,320,28],[329,37,320,35,"onGestureEvent"],[329,51,320,49],[329,56,320,54],[329,66,320,64],[329,68,320,66],[330,10,321,8],[331,10,322,8],[332,10,323,8],[333,10,324,8],[333,14,324,12,"onGestureHandlerEvent"],[333,35,324,33],[333,37,324,35],[334,12,325,10],[334,18,325,16],[334,22,325,20,"Error"],[334,27,325,25],[334,28,325,26],[334,101,325,99],[334,102,325,100],[335,10,326,8],[336,10,327,8,"gestureEventHandler"],[336,29,327,27],[336,32,327,30,"onGestureEvent"],[336,46,327,44],[337,8,328,6],[337,9,328,7],[337,15,328,13],[338,10,329,8],[338,14,329,12,"onGestureHandlerEvent"],[338,35,329,33],[338,39,329,37],[338,46,329,44,"onGestureHandlerEvent"],[338,67,329,65],[338,72,329,70],[338,82,329,80],[338,84,329,82],[339,12,330,10],[339,18,330,16],[339,22,330,20,"Error"],[339,27,330,25],[339,28,330,26],[339,101,330,99],[339,102,330,100],[340,10,331,8],[341,8,332,6],[342,8,333,6],[342,12,333,10,"gestureStateEventHandler"],[342,36,333,34],[342,39,333,37],[342,43,333,41],[342,44,333,42,"onGestureHandlerStateChange"],[342,71,333,69],[343,8,334,6],[345,8,336,6],[345,14,336,12],[346,10,337,8,"onHandlerStateChange"],[346,30,337,28],[347,10,338,8,"onGestureHandlerStateChange"],[348,8,339,6],[348,9,339,7],[348,12,339,10],[348,16,339,14],[348,17,339,15,"props"],[348,22,339,20],[349,8,340,6],[349,12,340,10,"onHandlerStateChange"],[349,32,340,30],[349,36,340,34],[349,43,340,41,"onHandlerStateChange"],[349,63,340,61],[349,68,340,66],[349,78,340,76],[349,80,340,78],[350,10,341,8],[351,10,342,8],[352,10,343,8],[353,10,344,8],[353,14,344,12,"onGestureHandlerStateChange"],[353,41,344,39],[353,43,344,41],[354,12,345,10],[354,18,345,16],[354,22,345,20,"Error"],[354,27,345,25],[354,28,345,26],[354,101,345,99],[354,102,345,100],[355,10,346,8],[356,10,347,8,"gestureStateEventHandler"],[356,34,347,32],[356,37,347,35,"onHandlerStateChange"],[356,57,347,55],[357,8,348,6],[357,9,348,7],[357,15,348,13],[358,10,349,8],[358,14,349,12,"onGestureHandlerStateChange"],[358,41,349,39],[358,45,349,43],[358,52,349,50,"onGestureHandlerStateChange"],[358,79,349,77],[358,84,349,82],[358,94,349,92],[358,96,349,94],[359,12,350,10],[359,18,350,16],[359,22,350,20,"Error"],[359,27,350,25],[359,28,350,26],[359,101,350,99],[359,102,350,100],[360,10,351,8],[361,8,352,6],[362,8,353,6],[362,14,353,12,"events"],[362,20,353,18],[362,23,353,21],[363,10,354,8,"onGestureHandlerEvent"],[363,31,354,29],[363,33,354,31],[363,37,354,35],[363,38,354,36,"state"],[363,43,354,41],[363,44,354,42,"allowTouches"],[363,56,354,54],[363,59,354,57,"gestureEventHandler"],[363,78,354,76],[363,81,354,79,"undefined"],[363,90,354,88],[364,10,355,8,"onGestureHandlerStateChange"],[364,37,355,35],[364,39,355,37],[364,43,355,41],[364,44,355,42,"state"],[364,49,355,47],[364,50,355,48,"allowTouches"],[364,62,355,60],[364,65,355,63,"gestureStateEventHandler"],[364,89,355,87],[364,92,355,90,"undefined"],[365,8,356,6],[365,9,356,7],[366,8,357,6],[366,12,357,10],[366,13,357,11,"propsRef"],[366,21,357,19],[366,22,357,20,"current"],[366,29,357,27],[366,32,357,30,"events"],[366,38,357,36],[367,8,358,6],[367,12,358,10,"child"],[367,17,358,15],[367,20,358,18],[367,24,358,22],[368,8,359,6],[368,12,359,10],[369,10,360,8,"child"],[369,15,360,13],[369,18,360,16,"React"],[369,23,360,21],[369,24,360,22,"Children"],[369,32,360,30],[369,33,360,31,"only"],[369,37,360,35],[369,38,360,36],[369,42,360,40],[369,43,360,41,"props"],[369,48,360,46],[369,49,360,47,"children"],[369,57,360,55],[369,58,360,56],[370,8,361,6],[370,9,361,7],[370,10,361,8],[370,17,361,15,"e"],[370,18,361,16],[370,20,361,18],[371,10,362,8],[371,16,362,14],[371,20,362,18,"Error"],[371,25,362,23],[371,26,362,24],[371,30,362,24,"tagMessage"],[371,48,362,34],[371,50,362,35],[371,53,362,38,"name"],[371,57,362,42],[371,213,362,198],[371,214,362,199],[371,215,362,200],[372,8,363,6],[373,8,364,6],[373,12,364,10,"grandChildren"],[373,25,364,23],[373,28,364,26,"child"],[373,33,364,31],[373,34,364,32,"props"],[373,39,364,37],[373,40,364,38,"children"],[373,48,364,46],[374,8,365,6],[374,12,365,10,"__DEV__"],[374,19,365,17],[374,23,365,21,"child"],[374,28,365,26],[374,29,365,27,"type"],[374,33,365,31],[374,38,365,36,"child"],[374,43,365,41],[374,44,365,42,"type"],[374,48,365,46],[374,53,365,51],[374,77,365,75],[374,81,365,79,"child"],[374,86,365,84],[374,87,365,85,"type"],[374,91,365,89],[374,92,365,90,"name"],[374,96,365,94],[374,101,365,99],[374,107,365,105],[374,111,365,109,"child"],[374,116,365,114],[374,117,365,115,"type"],[374,121,365,119],[374,122,365,120,"displayName"],[374,133,365,131],[374,138,365,136],[374,144,365,142],[374,145,365,143],[374,147,365,145],[375,10,366,8,"grandChildren"],[375,23,366,21],[375,26,366,24,"React"],[375,31,366,29],[375,32,366,30,"Children"],[375,40,366,38],[375,41,366,39,"toArray"],[375,48,366,46],[375,49,366,47,"grandChildren"],[375,62,366,60],[375,63,366,61],[376,10,367,8,"grandChildren"],[376,23,367,21],[376,24,367,22,"push"],[376,28,367,26],[376,29,367,27],[376,42,367,40],[376,46,367,40,"_jsx"],[376,61,367,44],[376,63,367,45,"PressabilityDebugView"],[376,107,367,66],[376,109,367,68],[377,12,368,10,"color"],[377,17,368,15],[377,19,368,17],[377,38,368,36],[378,12,369,10,"hitSlop"],[378,19,369,17],[378,21,369,19,"child"],[378,26,369,24],[378,27,369,25,"props"],[378,32,369,30],[378,33,369,31,"hitSlop"],[379,10,370,8],[379,11,370,9],[379,13,370,11],[379,36,370,34],[379,37,370,35],[379,38,370,36],[380,8,371,6],[381,8,372,6],[381,15,372,13],[381,28,372,26,"React"],[381,33,372,31],[381,34,372,32,"cloneElement"],[381,46,372,44],[381,47,372,45,"child"],[381,52,372,50],[381,54,372,52],[382,10,373,8,"ref"],[382,13,373,11],[382,15,373,13],[382,19,373,17],[382,20,373,18,"refHandler"],[382,30,373,28],[383,10,374,8,"collapsable"],[383,21,374,19],[383,23,374,21],[383,28,374,26],[384,10,375,8],[384,14,375,12],[384,18,375,12,"isTestEnv"],[384,35,375,21],[384,37,375,22],[384,38,375,23],[384,41,375,26],[385,12,376,10,"handlerType"],[385,23,376,21],[385,25,376,23,"name"],[385,29,376,27],[386,12,377,10,"handlerTag"],[386,22,377,20],[386,24,377,22],[386,28,377,26],[386,29,377,27,"handlerTag"],[386,39,377,37],[387,12,378,10,"enabled"],[387,19,378,17],[387,21,378,19],[387,25,378,23],[387,26,378,24,"props"],[387,31,378,29],[387,32,378,30,"enabled"],[388,10,379,8],[388,11,379,9],[388,14,379,12],[388,15,379,13],[388,16,379,14],[388,17,379,15],[389,10,380,8,"testID"],[389,16,380,14],[389,18,380,16],[389,22,380,20],[389,23,380,21,"props"],[389,28,380,26],[389,29,380,27,"testID"],[389,35,380,33],[389,39,380,37,"child"],[389,44,380,42],[389,45,380,43,"props"],[389,50,380,48],[389,51,380,49,"testID"],[389,57,380,55],[390,10,381,8],[390,13,381,11,"events"],[391,8,382,6],[391,9,382,7],[391,11,382,9,"grandChildren"],[391,24,382,22],[391,25,382,23],[392,6,383,4],[393,4,384,2],[394,4,385,2],[394,11,385,9,"Handler"],[394,18,385,16],[395,2,386,0],[396,0,386,1],[396,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCCkE;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIM;GJE;AKE;kBCE;qBCI,4BD;GDC;CLE;eQe;ECO;ICI;KDc;IEC;gGPI;wBQC;YRE;SOE;yBES;SFE;KFO;IKC;KLM;IMC;KNe;4BOC;KPQ;kCQG;KRc;iBSC;KTc;2BUC;KVI;2BWC;4BnBY;SmBgB;uBPI;OOE;KXC;2BYC;KZI;IaC;yBTU;SSE;KbO;IcG;KdO;IeC;Kf0E;GDC;CRE"}},"type":"js/module"}]}