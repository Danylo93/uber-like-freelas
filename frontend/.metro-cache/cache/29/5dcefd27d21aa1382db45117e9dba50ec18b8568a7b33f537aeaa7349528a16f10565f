{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":62,"index":62}}],"key":"dpOMqAtzFjjUQychI3TYNsYmXQE=","exportNames":["*"]}},{"name":"./NodeManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":114},"end":{"line":3,"column":45,"index":159}}],"key":"krMbHBNX+RO/bw1gHRLBNgemf/A=","exportNames":["*"]}},{"name":"./PressGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":160},"end":{"line":4,"column":56,"index":216}}],"key":"K7JCCzt/0tQ/4D2w8oVjath5+4I=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":217},"end":{"line":5,"column":58,"index":275}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _DiscreteGestureHandler = _interopRequireDefault(require(_dependencyMap[1], \"./DiscreteGestureHandler\"));\n  var NodeManager = _interopRequireWildcard(require(_dependencyMap[2], \"./NodeManager\"));\n  var _PressGestureHandler = _interopRequireDefault(require(_dependencyMap[3], \"./PressGestureHandler\"));\n  var _utils = require(_dependencyMap[4], \"./utils\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  class NativeViewGestureHandler extends _PressGestureHandler.default {\n    get isNative() {\n      return true;\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (!ev.isFinal) {\n        // if (this.ref instanceof ScrollView) {\n        if ((0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)({\n          x: ev.deltaX,\n          y: ev.deltaY\n        }), 10)) {\n          // @ts-ignore FIXME(TS) config type\n          if (this.config.disallowInterruption) {\n            const gestures = Object.values(NodeManager.getNodes()).filter(gesture => {\n              const {\n                handlerTag,\n                view,\n                isGestureRunning\n              } = gesture;\n              return (\n                // Check if this gesture isn't self\n                handlerTag !== this.handlerTag &&\n                // Ensure the gesture needs to be cancelled\n                isGestureRunning &&\n                // ScrollView can cancel discrete gestures like taps and presses\n                gesture instanceof _DiscreteGestureHandler.default &&\n                // Ensure a view exists and is a child of the current view\n                view &&\n                // @ts-ignore FIXME(TS) view type\n                this.view.contains(view)\n              );\n            });\n            // Cancel all of the gestures that passed the filter\n            for (const gesture of gestures) {\n              // TODO: Bacon: Send some cached event.\n              gesture.forceInvalidate(ev);\n            }\n          }\n        }\n      }\n    }\n  }\n  var _default = exports.default = NativeViewGestureHandler;\n});","lineCount":56,"map":[[7,2,1,0],[7,6,1,0,"_DiscreteGestureHandler"],[7,29,1,0],[7,32,1,0,"_interopRequireDefault"],[7,54,1,0],[7,55,1,0,"require"],[7,62,1,0],[7,63,1,0,"_dependencyMap"],[7,77,1,0],[8,2,3,0],[8,6,3,0,"NodeManager"],[8,17,3,0],[8,20,3,0,"_interopRequireWildcard"],[8,43,3,0],[8,44,3,0,"require"],[8,51,3,0],[8,52,3,0,"_dependencyMap"],[8,66,3,0],[9,2,4,0],[9,6,4,0,"_PressGestureHandler"],[9,26,4,0],[9,29,4,0,"_interopRequireDefault"],[9,51,4,0],[9,52,4,0,"require"],[9,59,4,0],[9,60,4,0,"_dependencyMap"],[9,74,4,0],[10,2,5,0],[10,6,5,0,"_utils"],[10,12,5,0],[10,15,5,0,"require"],[10,22,5,0],[10,23,5,0,"_dependencyMap"],[10,37,5,0],[11,2,5,58],[11,11,5,58,"_interopRequireWildcard"],[11,35,5,58,"e"],[11,36,5,58],[11,38,5,58,"t"],[11,39,5,58],[11,68,5,58,"WeakMap"],[11,75,5,58],[11,81,5,58,"r"],[11,82,5,58],[11,89,5,58,"WeakMap"],[11,96,5,58],[11,100,5,58,"n"],[11,101,5,58],[11,108,5,58,"WeakMap"],[11,115,5,58],[11,127,5,58,"_interopRequireWildcard"],[11,150,5,58],[11,162,5,58,"_interopRequireWildcard"],[11,163,5,58,"e"],[11,164,5,58],[11,166,5,58,"t"],[11,167,5,58],[11,176,5,58,"t"],[11,177,5,58],[11,181,5,58,"e"],[11,182,5,58],[11,186,5,58,"e"],[11,187,5,58],[11,188,5,58,"__esModule"],[11,198,5,58],[11,207,5,58,"e"],[11,208,5,58],[11,214,5,58,"o"],[11,215,5,58],[11,217,5,58,"i"],[11,218,5,58],[11,220,5,58,"f"],[11,221,5,58],[11,226,5,58,"__proto__"],[11,235,5,58],[11,243,5,58,"default"],[11,250,5,58],[11,252,5,58,"e"],[11,253,5,58],[11,270,5,58,"e"],[11,271,5,58],[11,294,5,58,"e"],[11,295,5,58],[11,320,5,58,"e"],[11,321,5,58],[11,330,5,58,"f"],[11,331,5,58],[11,337,5,58,"o"],[11,338,5,58],[11,341,5,58,"t"],[11,342,5,58],[11,345,5,58,"n"],[11,346,5,58],[11,349,5,58,"r"],[11,350,5,58],[11,358,5,58,"o"],[11,359,5,58],[11,360,5,58,"has"],[11,363,5,58],[11,364,5,58,"e"],[11,365,5,58],[11,375,5,58,"o"],[11,376,5,58],[11,377,5,58,"get"],[11,380,5,58],[11,381,5,58,"e"],[11,382,5,58],[11,385,5,58,"o"],[11,386,5,58],[11,387,5,58,"set"],[11,390,5,58],[11,391,5,58,"e"],[11,392,5,58],[11,394,5,58,"f"],[11,395,5,58],[11,411,5,58,"t"],[11,412,5,58],[11,416,5,58,"e"],[11,417,5,58],[11,433,5,58,"t"],[11,434,5,58],[11,441,5,58,"hasOwnProperty"],[11,455,5,58],[11,456,5,58,"call"],[11,460,5,58],[11,461,5,58,"e"],[11,462,5,58],[11,464,5,58,"t"],[11,465,5,58],[11,472,5,58,"i"],[11,473,5,58],[11,477,5,58,"o"],[11,478,5,58],[11,481,5,58,"Object"],[11,487,5,58],[11,488,5,58,"defineProperty"],[11,502,5,58],[11,507,5,58,"Object"],[11,513,5,58],[11,514,5,58,"getOwnPropertyDescriptor"],[11,538,5,58],[11,539,5,58,"e"],[11,540,5,58],[11,542,5,58,"t"],[11,543,5,58],[11,550,5,58,"i"],[11,551,5,58],[11,552,5,58,"get"],[11,555,5,58],[11,559,5,58,"i"],[11,560,5,58],[11,561,5,58,"set"],[11,564,5,58],[11,568,5,58,"o"],[11,569,5,58],[11,570,5,58,"f"],[11,571,5,58],[11,573,5,58,"t"],[11,574,5,58],[11,576,5,58,"i"],[11,577,5,58],[11,581,5,58,"f"],[11,582,5,58],[11,583,5,58,"t"],[11,584,5,58],[11,588,5,58,"e"],[11,589,5,58],[11,590,5,58,"t"],[11,591,5,58],[11,602,5,58,"f"],[11,603,5,58],[11,608,5,58,"e"],[11,609,5,58],[11,611,5,58,"t"],[11,612,5,58],[12,2,7,0],[12,8,7,6,"NativeViewGestureHandler"],[12,32,7,30],[12,41,7,39,"PressGestureHandler"],[12,69,7,58],[12,70,7,59],[13,4,8,2],[13,8,8,6,"isNative"],[13,16,8,14,"isNative"],[13,17,8,14],[13,19,8,17],[14,6,9,4],[14,13,9,11],[14,17,9,15],[15,4,10,2],[16,4,12,2,"onRawEvent"],[16,14,12,12,"onRawEvent"],[16,15,12,13,"ev"],[16,17,12,31],[16,19,12,33],[17,6,13,4],[17,11,13,9],[17,12,13,10,"onRawEvent"],[17,22,13,20],[17,23,13,21,"ev"],[17,25,13,23],[17,26,13,24],[18,6,14,4],[18,10,14,8],[18,11,14,9,"ev"],[18,13,14,11],[18,14,14,12,"isFinal"],[18,21,14,19],[18,23,14,21],[19,8,15,6],[20,8,16,6],[20,12,16,10],[20,16,16,10,"TEST_MIN_IF_NOT_NAN"],[20,42,16,29],[20,44,16,30],[20,48,16,30,"VEC_LEN_SQ"],[20,65,16,40],[20,67,16,41],[21,10,16,43,"x"],[21,11,16,44],[21,13,16,46,"ev"],[21,15,16,48],[21,16,16,49,"deltaX"],[21,22,16,55],[22,10,16,57,"y"],[22,11,16,58],[22,13,16,60,"ev"],[22,15,16,62],[22,16,16,63,"deltaY"],[23,8,16,70],[23,9,16,71],[23,10,16,72],[23,12,16,74],[23,14,16,76],[23,15,16,77],[23,17,16,79],[24,10,17,8],[25,10,18,8],[25,14,18,12],[25,18,18,16],[25,19,18,17,"config"],[25,25,18,23],[25,26,18,24,"disallowInterruption"],[25,46,18,44],[25,48,18,46],[26,12,19,10],[26,18,19,16,"gestures"],[26,26,19,24],[26,29,19,27,"Object"],[26,35,19,33],[26,36,19,34,"values"],[26,42,19,40],[26,43,19,41,"NodeManager"],[26,54,19,52],[26,55,19,53,"getNodes"],[26,63,19,61],[26,64,19,62],[26,65,19,63],[26,66,19,64],[26,67,19,65,"filter"],[26,73,19,71],[26,74,20,13,"gesture"],[26,81,20,20],[26,85,20,25],[27,14,21,14],[27,20,21,20],[28,16,21,22,"handlerTag"],[28,26,21,32],[29,16,21,34,"view"],[29,20,21,38],[30,16,21,40,"isGestureRunning"],[31,14,21,57],[31,15,21,58],[31,18,21,61,"gesture"],[31,25,21,68],[32,14,22,14],[33,16,23,16],[34,16,24,16,"handlerTag"],[34,26,24,26],[34,31,24,31],[34,35,24,35],[34,36,24,36,"handlerTag"],[34,46,24,46],[35,16,25,16],[36,16,26,16,"isGestureRunning"],[36,32,26,32],[37,16,27,16],[38,16,28,16,"gesture"],[38,23,28,23],[38,35,28,35,"DiscreteGestureHandler"],[38,66,28,57],[39,16,29,16],[40,16,30,16,"view"],[40,20,30,20],[41,16,31,16],[42,16,32,16],[42,20,32,20],[42,21,32,21,"view"],[42,25,32,25],[42,26,32,26,"contains"],[42,34,32,34],[42,35,32,35,"view"],[42,39,32,39],[43,14,32,40],[44,12,34,12],[44,13,35,10],[44,14,35,11],[45,12,36,10],[46,12,37,10],[46,17,37,15],[46,23,37,21,"gesture"],[46,30,37,28],[46,34,37,32,"gestures"],[46,42,37,40],[46,44,37,42],[47,14,38,12],[48,14,39,12,"gesture"],[48,21,39,19],[48,22,39,20,"forceInvalidate"],[48,37,39,35],[48,38,39,36,"ev"],[48,40,39,38],[48,41,39,39],[49,12,40,10],[50,10,41,8],[51,8,42,6],[52,6,43,4],[53,4,44,2],[54,2,45,0],[55,2,45,1],[55,6,45,1,"_default"],[55,14,45,1],[55,17,45,1,"exports"],[55,24,45,1],[55,25,45,1,"default"],[55,32,45,1],[55,35,47,15,"NativeViewGestureHandler"],[55,59,47,39],[56,0,47,39],[56,3]],"functionMap":{"names":["<global>","NativeViewGestureHandler","get__isNative","onRawEvent","Object.values.filter$argument_0"],"mappings":"AAA;ACM;ECC;GDE;EEE;YCQ;aDc;GFU;CDC"}},"type":"js/module"}]}