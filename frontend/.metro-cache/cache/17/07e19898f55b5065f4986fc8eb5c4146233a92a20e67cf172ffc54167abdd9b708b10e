{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"]}},{"name":"firebase/app","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"xvv30w+QArkNig0cCn46MsyEGs4=","exportNames":["*"]}},{"name":"firebase/database","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":111,"index":157}}],"key":"ZF/J3nfk5GUgbzXl84BqV1IxYEE=","exportNames":["*"]}},{"name":"firebase/auth","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":158},"end":{"line":3,"column":59,"index":217}}],"key":"o2UvaebosmgxImAY7KlhPO3FnYs=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.firebaseRealtimeService = void 0;\n  var _env2 = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _app = require(_dependencyMap[1], \"firebase/app\");\n  var _database = require(_dependencyMap[2], \"firebase/database\");\n  var _auth = require(_dependencyMap[3], \"firebase/auth\");\n  // Firebase configuration - will be set from environment variables\n  const firebaseConfig = {\n    apiKey: _env2.env.EXPO_PUBLIC_FIREBASE_API_KEY,\n    authDomain: _env2.env.EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN,\n    databaseURL: _env2.env.EXPO_PUBLIC_FIREBASE_DATABASE_URL,\n    projectId: _env2.env.EXPO_PUBLIC_FIREBASE_PROJECT_ID,\n    storageBucket: _env2.env.EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: _env2.env.EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n    appId: _env2.env.EXPO_PUBLIC_FIREBASE_APP_ID\n  };\n\n  // Initialize Firebase\n  const app = (0, _app.initializeApp)(firebaseConfig);\n  const database = (0, _database.getDatabase)(app);\n  const auth = (0, _auth.getAuth)(app);\n  class FirebaseRealtimeService {\n    initialized = false;\n    async initialize() {\n      if (this.initialized) return;\n      try {\n        // Sign in anonymously to Firebase\n        await (0, _auth.signInAnonymously)(auth);\n        this.initialized = true;\n        console.log('Firebase Realtime Database initialized successfully');\n      } catch (error) {\n        console.error('Firebase initialization error:', error);\n        throw error;\n      }\n    }\n\n    // Service Requests Management\n    async createServiceRequest(serviceRequest) {\n      if (!this.initialized) await this.initialize();\n      const serviceRef = (0, _database.ref)(database, 'serviceRequests');\n      const newServiceRef = (0, _database.push)(serviceRef);\n      const serviceData = {\n        ...serviceRequest,\n        id: newServiceRef.key,\n        createdAt: Date.now(),\n        updatedAt: Date.now(),\n        status: 'pending'\n      };\n      await (0, _database.set)(newServiceRef, serviceData);\n      return newServiceRef.key;\n    }\n    async updateServiceRequest(serviceId, updates) {\n      if (!this.initialized) await this.initialize();\n      const serviceRef = (0, _database.ref)(database, `serviceRequests/${serviceId}`);\n      await (0, _database.update)(serviceRef, {\n        ...updates,\n        updatedAt: Date.now()\n      });\n    }\n    subscribeToServiceRequests(callback) {\n      if (!this.initialized) {\n        this.initialize().then(() => {\n          this.subscribeToServiceRequests(callback);\n        });\n        return () => {};\n      }\n      const servicesRef = (0, _database.ref)(database, 'serviceRequests');\n      const unsubscribe = (0, _database.onValue)(servicesRef, snapshot => {\n        const data = snapshot.val();\n        const services = data ? Object.values(data) : [];\n        callback(services);\n      });\n      return () => (0, _database.off)(servicesRef, 'value', unsubscribe);\n    }\n    subscribeToServiceRequest(serviceId, callback) {\n      if (!this.initialized) {\n        this.initialize().then(() => {\n          this.subscribeToServiceRequest(serviceId, callback);\n        });\n        return () => {};\n      }\n      const serviceRef = (0, _database.ref)(database, `serviceRequests/${serviceId}`);\n      const unsubscribe = (0, _database.onValue)(serviceRef, snapshot => {\n        const service = snapshot.val();\n        callback(service);\n      });\n      return () => (0, _database.off)(serviceRef, 'value', unsubscribe);\n    }\n\n    // Provider Location Tracking\n    async updateProviderLocation(providerId, location) {\n      if (!this.initialized) await this.initialize();\n      const locationRef = (0, _database.ref)(database, `providerLocations/${providerId}`);\n      await (0, _database.set)(locationRef, {\n        ...location,\n        providerId,\n        lastUpdated: Date.now()\n      });\n    }\n    subscribeToNearbyProviders(callback) {\n      if (!this.initialized) {\n        this.initialize().then(() => {\n          this.subscribeToNearbyProviders(callback);\n        });\n        return () => {};\n      }\n      const providersRef = (0, _database.ref)(database, 'providerLocations');\n      const unsubscribe = (0, _database.onValue)(providersRef, snapshot => {\n        const data = snapshot.val();\n        const providers = data ? Object.values(data).filter(p => p.isOnline && Date.now() - p.lastUpdated < 300000) // Active in last 5 minutes\n        : [];\n        callback(providers);\n      });\n      return () => (0, _database.off)(providersRef, 'value', unsubscribe);\n    }\n\n    // Chat System\n    async sendMessage(chatId, message) {\n      if (!this.initialized) await this.initialize();\n      const messagesRef = (0, _database.ref)(database, `chats/${chatId}/messages`);\n      const newMessageRef = (0, _database.push)(messagesRef);\n      const messageData = {\n        ...message,\n        id: newMessageRef.key,\n        timestamp: Date.now()\n      };\n      await (0, _database.set)(newMessageRef, messageData);\n\n      // Update chat metadata\n      const chatRef = (0, _database.ref)(database, `chats/${chatId}/metadata`);\n      await (0, _database.update)(chatRef, {\n        lastMessage: message.message,\n        lastMessageTime: Date.now(),\n        lastSenderId: message.senderId\n      });\n      return newMessageRef.key;\n    }\n    subscribeToChat(chatId, callback) {\n      if (!this.initialized) {\n        this.initialize().then(() => {\n          this.subscribeToChat(chatId, callback);\n        });\n        return () => {};\n      }\n      const messagesRef = (0, _database.ref)(database, `chats/${chatId}/messages`);\n      const unsubscribe = (0, _database.onValue)(messagesRef, snapshot => {\n        const data = snapshot.val();\n        const messages = data ? Object.values(data).sort((a, b) => a.timestamp - b.timestamp) : [];\n        callback(messages);\n      });\n      return () => (0, _database.off)(messagesRef, 'value', unsubscribe);\n    }\n\n    // Notifications\n    async sendNotification(userId, notification) {\n      if (!this.initialized) await this.initialize();\n      const notificationRef = (0, _database.ref)(database, `notifications/${userId}`);\n      const newNotificationRef = (0, _database.push)(notificationRef);\n      await (0, _database.set)(newNotificationRef, {\n        ...notification,\n        id: newNotificationRef.key,\n        timestamp: Date.now(),\n        read: false\n      });\n    }\n    subscribeToNotifications(userId, callback) {\n      if (!this.initialized) {\n        this.initialize().then(() => {\n          this.subscribeToNotifications(userId, callback);\n        });\n        return () => {};\n      }\n      const notificationsRef = (0, _database.ref)(database, `notifications/${userId}`);\n      const unsubscribe = (0, _database.onValue)(notificationsRef, snapshot => {\n        const data = snapshot.val();\n        const notifications = data ? Object.values(data).sort((a, b) => b.timestamp - a.timestamp) : [];\n        callback(notifications);\n      });\n      return () => (0, _database.off)(notificationsRef, 'value', unsubscribe);\n    }\n\n    // Connection Status\n    isConnected() {\n      return this.initialized;\n    }\n\n    // Cleanup\n    async disconnect() {\n      // Firebase handles connection cleanup automatically\n      this.initialized = false;\n    }\n  }\n  const firebaseRealtimeService = exports.firebaseRealtimeService = new FirebaseRealtimeService();\n});","lineCount":197,"map":[[7,2,1,0],[7,6,1,0,"_app"],[7,10,1,0],[7,13,1,0,"require"],[7,20,1,0],[7,21,1,0,"_dependencyMap"],[7,35,1,0],[8,2,2,0],[8,6,2,0,"_database"],[8,15,2,0],[8,18,2,0,"require"],[8,25,2,0],[8,26,2,0,"_dependencyMap"],[8,40,2,0],[9,2,3,0],[9,6,3,0,"_auth"],[9,11,3,0],[9,14,3,0,"require"],[9,21,3,0],[9,22,3,0,"_dependencyMap"],[9,36,3,0],[10,2,5,0],[11,2,6,0],[11,8,6,6,"firebaseConfig"],[11,22,6,20],[11,25,6,23],[12,4,7,2,"apiKey"],[12,10,7,8],[12,12,7,8,"_env2"],[12,17,7,8],[12,18,7,8,"env"],[12,21,7,8],[12,22,7,8,"EXPO_PUBLIC_FIREBASE_API_KEY"],[12,50,7,50],[13,4,8,2,"authDomain"],[13,14,8,12],[13,16,8,12,"_env2"],[13,21,8,12],[13,22,8,12,"env"],[13,25,8,12],[13,26,8,12,"EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN"],[13,58,8,58],[14,4,9,2,"databaseURL"],[14,15,9,13],[14,17,9,13,"_env2"],[14,22,9,13],[14,23,9,13,"env"],[14,26,9,13],[14,27,9,13,"EXPO_PUBLIC_FIREBASE_DATABASE_URL"],[14,60,9,60],[15,4,10,2,"projectId"],[15,13,10,11],[15,15,10,11,"_env2"],[15,20,10,11],[15,21,10,11,"env"],[15,24,10,11],[15,25,10,11,"EXPO_PUBLIC_FIREBASE_PROJECT_ID"],[15,56,10,56],[16,4,11,2,"storageBucket"],[16,17,11,15],[16,19,11,15,"_env2"],[16,24,11,15],[16,25,11,15,"env"],[16,28,11,15],[16,29,11,15,"EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET"],[16,64,11,64],[17,4,12,2,"messagingSenderId"],[17,21,12,19],[17,23,12,19,"_env2"],[17,28,12,19],[17,29,12,19,"env"],[17,32,12,19],[17,33,12,19,"EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID"],[17,73,12,73],[18,4,13,2,"appId"],[18,9,13,7],[18,11,13,7,"_env2"],[18,16,13,7],[18,17,13,7,"env"],[18,20,13,7],[18,21,13,7,"EXPO_PUBLIC_FIREBASE_APP_ID"],[19,2,14,0],[19,3,14,1],[21,2,16,0],[22,2,17,0],[22,8,17,6,"app"],[22,11,17,9],[22,14,17,12],[22,18,17,12,"initializeApp"],[22,36,17,25],[22,38,17,26,"firebaseConfig"],[22,52,17,40],[22,53,17,41],[23,2,18,0],[23,8,18,6,"database"],[23,16,18,14],[23,19,18,17],[23,23,18,17,"getDatabase"],[23,44,18,28],[23,46,18,29,"app"],[23,49,18,32],[23,50,18,33],[24,2,19,0],[24,8,19,6,"auth"],[24,12,19,10],[24,15,19,13],[24,19,19,13,"getAuth"],[24,32,19,20],[24,34,19,21,"app"],[24,37,19,24],[24,38,19,25],[25,2,60,0],[25,8,60,6,"FirebaseRealtimeService"],[25,31,60,29],[25,32,60,30],[26,4,61,10,"initialized"],[26,15,61,21],[26,18,61,33],[26,23,61,38],[27,4,63,2],[27,10,63,8,"initialize"],[27,20,63,18,"initialize"],[27,21,63,18],[27,23,63,21],[28,6,64,4],[28,10,64,8],[28,14,64,12],[28,15,64,13,"initialized"],[28,26,64,24],[28,28,64,26],[29,6,66,4],[29,10,66,8],[30,8,67,6],[31,8,68,6],[31,14,68,12],[31,18,68,12,"signInAnonymously"],[31,41,68,29],[31,43,68,30,"auth"],[31,47,68,34],[31,48,68,35],[32,8,69,6],[32,12,69,10],[32,13,69,11,"initialized"],[32,24,69,22],[32,27,69,25],[32,31,69,29],[33,8,70,6,"console"],[33,15,70,13],[33,16,70,14,"log"],[33,19,70,17],[33,20,70,18],[33,73,70,71],[33,74,70,72],[34,6,71,4],[34,7,71,5],[34,8,71,6],[34,15,71,13,"error"],[34,20,71,18],[34,22,71,20],[35,8,72,6,"console"],[35,15,72,13],[35,16,72,14,"error"],[35,21,72,19],[35,22,72,20],[35,54,72,52],[35,56,72,54,"error"],[35,61,72,59],[35,62,72,60],[36,8,73,6],[36,14,73,12,"error"],[36,19,73,17],[37,6,74,4],[38,4,75,2],[40,4,77,2],[41,4,78,2],[41,10,78,8,"createServiceRequest"],[41,30,78,28,"createServiceRequest"],[41,31,78,29,"serviceRequest"],[41,45,78,107],[41,47,78,126],[42,6,79,4],[42,10,79,8],[42,11,79,9],[42,15,79,13],[42,16,79,14,"initialized"],[42,27,79,25],[42,29,79,27],[42,35,79,33],[42,39,79,37],[42,40,79,38,"initialize"],[42,50,79,48],[42,51,79,49],[42,52,79,50],[43,6,81,4],[43,12,81,10,"serviceRef"],[43,22,81,20],[43,25,81,23],[43,29,81,23,"ref"],[43,42,81,26],[43,44,81,27,"database"],[43,52,81,35],[43,54,81,37],[43,71,81,54],[43,72,81,55],[44,6,82,4],[44,12,82,10,"newServiceRef"],[44,25,82,23],[44,28,82,26],[44,32,82,26,"push"],[44,46,82,30],[44,48,82,31,"serviceRef"],[44,58,82,41],[44,59,82,42],[45,6,84,4],[45,12,84,10,"serviceData"],[45,23,84,45],[45,26,84,48],[46,8,85,6],[46,11,85,9,"serviceRequest"],[46,25,85,23],[47,8,86,6,"id"],[47,10,86,8],[47,12,86,10,"newServiceRef"],[47,25,86,23],[47,26,86,24,"key"],[47,29,86,28],[48,8,87,6,"createdAt"],[48,17,87,15],[48,19,87,17,"Date"],[48,23,87,21],[48,24,87,22,"now"],[48,27,87,25],[48,28,87,26],[48,29,87,27],[49,8,88,6,"updatedAt"],[49,17,88,15],[49,19,88,17,"Date"],[49,23,88,21],[49,24,88,22,"now"],[49,27,88,25],[49,28,88,26],[49,29,88,27],[50,8,89,6,"status"],[50,14,89,12],[50,16,89,14],[51,6,90,4],[51,7,90,5],[52,6,92,4],[52,12,92,10],[52,16,92,10,"set"],[52,29,92,13],[52,31,92,14,"newServiceRef"],[52,44,92,27],[52,46,92,29,"serviceData"],[52,57,92,40],[52,58,92,41],[53,6,93,4],[53,13,93,11,"newServiceRef"],[53,26,93,24],[53,27,93,25,"key"],[53,30,93,28],[54,4,94,2],[55,4,96,2],[55,10,96,8,"updateServiceRequest"],[55,30,96,28,"updateServiceRequest"],[55,31,96,29,"serviceId"],[55,40,96,46],[55,42,96,48,"updates"],[55,49,96,88],[55,51,96,90],[56,6,97,4],[56,10,97,8],[56,11,97,9],[56,15,97,13],[56,16,97,14,"initialized"],[56,27,97,25],[56,29,97,27],[56,35,97,33],[56,39,97,37],[56,40,97,38,"initialize"],[56,50,97,48],[56,51,97,49],[56,52,97,50],[57,6,99,4],[57,12,99,10,"serviceRef"],[57,22,99,20],[57,25,99,23],[57,29,99,23,"ref"],[57,42,99,26],[57,44,99,27,"database"],[57,52,99,35],[57,54,99,37],[57,73,99,56,"serviceId"],[57,82,99,65],[57,84,99,67],[57,85,99,68],[58,6,100,4],[58,12,100,10],[58,16,100,10,"update"],[58,32,100,16],[58,34,100,17,"serviceRef"],[58,44,100,27],[58,46,100,29],[59,8,101,6],[59,11,101,9,"updates"],[59,18,101,16],[60,8,102,6,"updatedAt"],[60,17,102,15],[60,19,102,17,"Date"],[60,23,102,21],[60,24,102,22,"now"],[60,27,102,25],[60,28,102,26],[61,6,103,4],[61,7,103,5],[61,8,103,6],[62,4,104,2],[63,4,106,2,"subscribeToServiceRequests"],[63,30,106,28,"subscribeToServiceRequests"],[63,31,106,29,"callback"],[63,39,106,83],[63,41,106,97],[64,6,107,4],[64,10,107,8],[64,11,107,9],[64,15,107,13],[64,16,107,14,"initialized"],[64,27,107,25],[64,29,107,27],[65,8,108,6],[65,12,108,10],[65,13,108,11,"initialize"],[65,23,108,21],[65,24,108,22],[65,25,108,23],[65,26,108,24,"then"],[65,30,108,28],[65,31,108,29],[65,37,108,35],[66,10,109,8],[66,14,109,12],[66,15,109,13,"subscribeToServiceRequests"],[66,41,109,39],[66,42,109,40,"callback"],[66,50,109,48],[66,51,109,49],[67,8,110,6],[67,9,110,7],[67,10,110,8],[68,8,111,6],[68,15,111,13],[68,21,111,19],[68,22,111,20],[68,23,111,21],[69,6,112,4],[70,6,114,4],[70,12,114,10,"servicesRef"],[70,23,114,21],[70,26,114,24],[70,30,114,24,"ref"],[70,43,114,27],[70,45,114,28,"database"],[70,53,114,36],[70,55,114,38],[70,72,114,55],[70,73,114,56],[71,6,116,4],[71,12,116,10,"unsubscribe"],[71,23,116,21],[71,26,116,24],[71,30,116,24,"onValue"],[71,47,116,31],[71,49,116,32,"servicesRef"],[71,60,116,43],[71,62,116,46,"snapshot"],[71,70,116,54],[71,74,116,59],[72,8,117,6],[72,14,117,12,"data"],[72,18,117,16],[72,21,117,19,"snapshot"],[72,29,117,27],[72,30,117,28,"val"],[72,33,117,31],[72,34,117,32],[72,35,117,33],[73,8,118,6],[73,14,118,12,"services"],[73,22,118,46],[73,25,118,49,"data"],[73,29,118,53],[73,32,119,10,"Object"],[73,38,119,16],[73,39,119,17,"values"],[73,45,119,23],[73,46,119,24,"data"],[73,50,119,28],[73,51,119,29],[73,54,120,10],[73,56,120,12],[74,8,121,6,"callback"],[74,16,121,14],[74,17,121,15,"services"],[74,25,121,23],[74,26,121,24],[75,6,122,4],[75,7,122,5],[75,8,122,6],[76,6,124,4],[76,13,124,11],[76,19,124,17],[76,23,124,17,"off"],[76,36,124,20],[76,38,124,21,"servicesRef"],[76,49,124,32],[76,51,124,34],[76,58,124,41],[76,60,124,43,"unsubscribe"],[76,71,124,54],[76,72,124,55],[77,4,125,2],[78,4,127,2,"subscribeToServiceRequest"],[78,29,127,27,"subscribeToServiceRequest"],[78,30,127,28,"serviceId"],[78,39,127,45],[78,41,127,47,"callback"],[78,49,127,105],[78,51,127,119],[79,6,128,4],[79,10,128,8],[79,11,128,9],[79,15,128,13],[79,16,128,14,"initialized"],[79,27,128,25],[79,29,128,27],[80,8,129,6],[80,12,129,10],[80,13,129,11,"initialize"],[80,23,129,21],[80,24,129,22],[80,25,129,23],[80,26,129,24,"then"],[80,30,129,28],[80,31,129,29],[80,37,129,35],[81,10,130,8],[81,14,130,12],[81,15,130,13,"subscribeToServiceRequest"],[81,40,130,38],[81,41,130,39,"serviceId"],[81,50,130,48],[81,52,130,50,"callback"],[81,60,130,58],[81,61,130,59],[82,8,131,6],[82,9,131,7],[82,10,131,8],[83,8,132,6],[83,15,132,13],[83,21,132,19],[83,22,132,20],[83,23,132,21],[84,6,133,4],[85,6,135,4],[85,12,135,10,"serviceRef"],[85,22,135,20],[85,25,135,23],[85,29,135,23,"ref"],[85,42,135,26],[85,44,135,27,"database"],[85,52,135,35],[85,54,135,37],[85,73,135,56,"serviceId"],[85,82,135,65],[85,84,135,67],[85,85,135,68],[86,6,137,4],[86,12,137,10,"unsubscribe"],[86,23,137,21],[86,26,137,24],[86,30,137,24,"onValue"],[86,47,137,31],[86,49,137,32,"serviceRef"],[86,59,137,42],[86,61,137,45,"snapshot"],[86,69,137,53],[86,73,137,58],[87,8,138,6],[87,14,138,12,"service"],[87,21,138,19],[87,24,138,22,"snapshot"],[87,32,138,30],[87,33,138,31,"val"],[87,36,138,34],[87,37,138,35],[87,38,138,36],[88,8,139,6,"callback"],[88,16,139,14],[88,17,139,15,"service"],[88,24,139,22],[88,25,139,23],[89,6,140,4],[89,7,140,5],[89,8,140,6],[90,6,142,4],[90,13,142,11],[90,19,142,17],[90,23,142,17,"off"],[90,36,142,20],[90,38,142,21,"serviceRef"],[90,48,142,31],[90,50,142,33],[90,57,142,40],[90,59,142,42,"unsubscribe"],[90,70,142,53],[90,71,142,54],[91,4,143,2],[93,4,145,2],[94,4,146,2],[94,10,146,8,"updateProviderLocation"],[94,32,146,30,"updateProviderLocation"],[94,33,146,31,"providerId"],[94,43,146,49],[94,45,146,51,"location"],[94,53,146,113],[94,55,146,115],[95,6,147,4],[95,10,147,8],[95,11,147,9],[95,15,147,13],[95,16,147,14,"initialized"],[95,27,147,25],[95,29,147,27],[95,35,147,33],[95,39,147,37],[95,40,147,38,"initialize"],[95,50,147,48],[95,51,147,49],[95,52,147,50],[96,6,149,4],[96,12,149,10,"locationRef"],[96,23,149,21],[96,26,149,24],[96,30,149,24,"ref"],[96,43,149,27],[96,45,149,28,"database"],[96,53,149,36],[96,55,149,38],[96,76,149,59,"providerId"],[96,86,149,69],[96,88,149,71],[96,89,149,72],[97,6,150,4],[97,12,150,10],[97,16,150,10,"set"],[97,29,150,13],[97,31,150,14,"locationRef"],[97,42,150,25],[97,44,150,27],[98,8,151,6],[98,11,151,9,"location"],[98,19,151,17],[99,8,152,6,"providerId"],[99,18,152,16],[100,8,153,6,"lastUpdated"],[100,19,153,17],[100,21,153,19,"Date"],[100,25,153,23],[100,26,153,24,"now"],[100,29,153,27],[100,30,153,28],[101,6,154,4],[101,7,154,5],[101,8,154,6],[102,4,155,2],[103,4,157,2,"subscribeToNearbyProviders"],[103,30,157,28,"subscribeToNearbyProviders"],[103,31,157,29,"callback"],[103,39,157,78],[103,41,157,92],[104,6,158,4],[104,10,158,8],[104,11,158,9],[104,15,158,13],[104,16,158,14,"initialized"],[104,27,158,25],[104,29,158,27],[105,8,159,6],[105,12,159,10],[105,13,159,11,"initialize"],[105,23,159,21],[105,24,159,22],[105,25,159,23],[105,26,159,24,"then"],[105,30,159,28],[105,31,159,29],[105,37,159,35],[106,10,160,8],[106,14,160,12],[106,15,160,13,"subscribeToNearbyProviders"],[106,41,160,39],[106,42,160,40,"callback"],[106,50,160,48],[106,51,160,49],[107,8,161,6],[107,9,161,7],[107,10,161,8],[108,8,162,6],[108,15,162,13],[108,21,162,19],[108,22,162,20],[108,23,162,21],[109,6,163,4],[110,6,165,4],[110,12,165,10,"providersRef"],[110,24,165,22],[110,27,165,25],[110,31,165,25,"ref"],[110,44,165,28],[110,46,165,29,"database"],[110,54,165,37],[110,56,165,39],[110,75,165,58],[110,76,165,59],[111,6,167,4],[111,12,167,10,"unsubscribe"],[111,23,167,21],[111,26,167,24],[111,30,167,24,"onValue"],[111,47,167,31],[111,49,167,32,"providersRef"],[111,61,167,44],[111,63,167,47,"snapshot"],[111,71,167,55],[111,75,167,60],[112,8,168,6],[112,14,168,12,"data"],[112,18,168,16],[112,21,168,19,"snapshot"],[112,29,168,27],[112,30,168,28,"val"],[112,33,168,31],[112,34,168,32],[112,35,168,33],[113,8,169,6],[113,14,169,12,"providers"],[113,23,169,41],[113,26,169,44,"data"],[113,30,169,48],[113,33,170,10,"Object"],[113,39,170,16],[113,40,170,17,"values"],[113,46,170,23],[113,47,170,24,"data"],[113,51,170,28],[113,52,170,29],[113,53,170,30,"filter"],[113,59,170,36],[113,60,170,38,"p"],[113,61,170,44],[113,65,170,49,"p"],[113,66,170,50],[113,67,170,51,"isOnline"],[113,75,170,59],[113,79,170,64,"Date"],[113,83,170,68],[113,84,170,69,"now"],[113,87,170,72],[113,88,170,73],[113,89,170,74],[113,92,170,77,"p"],[113,93,170,78],[113,94,170,79,"lastUpdated"],[113,105,170,90],[113,108,170,94],[113,114,170,100],[113,115,170,101],[113,116,170,102],[114,8,170,102],[114,10,171,10],[114,12,171,12],[115,8,172,6,"callback"],[115,16,172,14],[115,17,172,15,"providers"],[115,26,172,24],[115,27,172,25],[116,6,173,4],[116,7,173,5],[116,8,173,6],[117,6,175,4],[117,13,175,11],[117,19,175,17],[117,23,175,17,"off"],[117,36,175,20],[117,38,175,21,"providersRef"],[117,50,175,33],[117,52,175,35],[117,59,175,42],[117,61,175,44,"unsubscribe"],[117,72,175,55],[117,73,175,56],[118,4,176,2],[120,4,178,2],[121,4,179,2],[121,10,179,8,"sendMessage"],[121,21,179,19,"sendMessage"],[121,22,179,20,"chatId"],[121,28,179,34],[121,30,179,36,"message"],[121,37,179,82],[121,39,179,84],[122,6,180,4],[122,10,180,8],[122,11,180,9],[122,15,180,13],[122,16,180,14,"initialized"],[122,27,180,25],[122,29,180,27],[122,35,180,33],[122,39,180,37],[122,40,180,38,"initialize"],[122,50,180,48],[122,51,180,49],[122,52,180,50],[123,6,182,4],[123,12,182,10,"messagesRef"],[123,23,182,21],[123,26,182,24],[123,30,182,24,"ref"],[123,43,182,27],[123,45,182,28,"database"],[123,53,182,36],[123,55,182,38],[123,64,182,47,"chatId"],[123,70,182,53],[123,81,182,64],[123,82,182,65],[124,6,183,4],[124,12,183,10,"newMessageRef"],[124,25,183,23],[124,28,183,26],[124,32,183,26,"push"],[124,46,183,30],[124,48,183,31,"messagesRef"],[124,59,183,42],[124,60,183,43],[125,6,185,4],[125,12,185,10,"messageData"],[125,23,185,34],[125,26,185,37],[126,8,186,6],[126,11,186,9,"message"],[126,18,186,16],[127,8,187,6,"id"],[127,10,187,8],[127,12,187,10,"newMessageRef"],[127,25,187,23],[127,26,187,24,"key"],[127,29,187,28],[128,8,188,6,"timestamp"],[128,17,188,15],[128,19,188,17,"Date"],[128,23,188,21],[128,24,188,22,"now"],[128,27,188,25],[128,28,188,26],[129,6,189,4],[129,7,189,5],[130,6,191,4],[130,12,191,10],[130,16,191,10,"set"],[130,29,191,13],[130,31,191,14,"newMessageRef"],[130,44,191,27],[130,46,191,29,"messageData"],[130,57,191,40],[130,58,191,41],[132,6,193,4],[133,6,194,4],[133,12,194,10,"chatRef"],[133,19,194,17],[133,22,194,20],[133,26,194,20,"ref"],[133,39,194,23],[133,41,194,24,"database"],[133,49,194,32],[133,51,194,34],[133,60,194,43,"chatId"],[133,66,194,49],[133,77,194,60],[133,78,194,61],[134,6,195,4],[134,12,195,10],[134,16,195,10,"update"],[134,32,195,16],[134,34,195,17,"chatRef"],[134,41,195,24],[134,43,195,26],[135,8,196,6,"lastMessage"],[135,19,196,17],[135,21,196,19,"message"],[135,28,196,26],[135,29,196,27,"message"],[135,36,196,34],[136,8,197,6,"lastMessageTime"],[136,23,197,21],[136,25,197,23,"Date"],[136,29,197,27],[136,30,197,28,"now"],[136,33,197,31],[136,34,197,32],[136,35,197,33],[137,8,198,6,"lastSenderId"],[137,20,198,18],[137,22,198,20,"message"],[137,29,198,27],[137,30,198,28,"senderId"],[138,6,199,4],[138,7,199,5],[138,8,199,6],[139,6,201,4],[139,13,201,11,"newMessageRef"],[139,26,201,24],[139,27,201,25,"key"],[139,30,201,28],[140,4,202,2],[141,4,204,2,"subscribeToChat"],[141,19,204,17,"subscribeToChat"],[141,20,204,18,"chatId"],[141,26,204,32],[141,28,204,34,"callback"],[141,36,204,77],[141,38,204,91],[142,6,205,4],[142,10,205,8],[142,11,205,9],[142,15,205,13],[142,16,205,14,"initialized"],[142,27,205,25],[142,29,205,27],[143,8,206,6],[143,12,206,10],[143,13,206,11,"initialize"],[143,23,206,21],[143,24,206,22],[143,25,206,23],[143,26,206,24,"then"],[143,30,206,28],[143,31,206,29],[143,37,206,35],[144,10,207,8],[144,14,207,12],[144,15,207,13,"subscribeToChat"],[144,30,207,28],[144,31,207,29,"chatId"],[144,37,207,35],[144,39,207,37,"callback"],[144,47,207,45],[144,48,207,46],[145,8,208,6],[145,9,208,7],[145,10,208,8],[146,8,209,6],[146,15,209,13],[146,21,209,19],[146,22,209,20],[146,23,209,21],[147,6,210,4],[148,6,212,4],[148,12,212,10,"messagesRef"],[148,23,212,21],[148,26,212,24],[148,30,212,24,"ref"],[148,43,212,27],[148,45,212,28,"database"],[148,53,212,36],[148,55,212,38],[148,64,212,47,"chatId"],[148,70,212,53],[148,81,212,64],[148,82,212,65],[149,6,214,4],[149,12,214,10,"unsubscribe"],[149,23,214,21],[149,26,214,24],[149,30,214,24,"onValue"],[149,47,214,31],[149,49,214,32,"messagesRef"],[149,60,214,43],[149,62,214,46,"snapshot"],[149,70,214,54],[149,74,214,59],[150,8,215,6],[150,14,215,12,"data"],[150,18,215,16],[150,21,215,19,"snapshot"],[150,29,215,27],[150,30,215,28,"val"],[150,33,215,31],[150,34,215,32],[150,35,215,33],[151,8,216,6],[151,14,216,12,"messages"],[151,22,216,35],[151,25,216,38,"data"],[151,29,216,42],[151,32,217,10,"Object"],[151,38,217,16],[151,39,217,17,"values"],[151,45,217,23],[151,46,217,24,"data"],[151,50,217,28],[151,51,217,29],[151,52,217,30,"sort"],[151,56,217,34],[151,57,217,35],[151,58,217,36,"a"],[151,59,217,42],[151,61,217,44,"b"],[151,62,217,50],[151,67,217,55,"a"],[151,68,217,56],[151,69,217,57,"timestamp"],[151,78,217,66],[151,81,217,69,"b"],[151,82,217,70],[151,83,217,71,"timestamp"],[151,92,217,80],[151,93,217,81],[151,96,218,10],[151,98,218,12],[152,8,219,6,"callback"],[152,16,219,14],[152,17,219,15,"messages"],[152,25,219,23],[152,26,219,24],[153,6,220,4],[153,7,220,5],[153,8,220,6],[154,6,222,4],[154,13,222,11],[154,19,222,17],[154,23,222,17,"off"],[154,36,222,20],[154,38,222,21,"messagesRef"],[154,49,222,32],[154,51,222,34],[154,58,222,41],[154,60,222,43,"unsubscribe"],[154,71,222,54],[154,72,222,55],[155,4,223,2],[157,4,225,2],[158,4,226,2],[158,10,226,8,"sendNotification"],[158,26,226,24,"sendNotification"],[158,27,226,25,"userId"],[158,33,226,39],[158,35,226,41,"notification"],[158,47,230,3],[158,49,230,5],[159,6,231,4],[159,10,231,8],[159,11,231,9],[159,15,231,13],[159,16,231,14,"initialized"],[159,27,231,25],[159,29,231,27],[159,35,231,33],[159,39,231,37],[159,40,231,38,"initialize"],[159,50,231,48],[159,51,231,49],[159,52,231,50],[160,6,233,4],[160,12,233,10,"notificationRef"],[160,27,233,25],[160,30,233,28],[160,34,233,28,"ref"],[160,47,233,31],[160,49,233,32,"database"],[160,57,233,40],[160,59,233,42],[160,76,233,59,"userId"],[160,82,233,65],[160,84,233,67],[160,85,233,68],[161,6,234,4],[161,12,234,10,"newNotificationRef"],[161,30,234,28],[161,33,234,31],[161,37,234,31,"push"],[161,51,234,35],[161,53,234,36,"notificationRef"],[161,68,234,51],[161,69,234,52],[162,6,236,4],[162,12,236,10],[162,16,236,10,"set"],[162,29,236,13],[162,31,236,14,"newNotificationRef"],[162,49,236,32],[162,51,236,34],[163,8,237,6],[163,11,237,9,"notification"],[163,23,237,21],[164,8,238,6,"id"],[164,10,238,8],[164,12,238,10,"newNotificationRef"],[164,30,238,28],[164,31,238,29,"key"],[164,34,238,33],[165,8,239,6,"timestamp"],[165,17,239,15],[165,19,239,17,"Date"],[165,23,239,21],[165,24,239,22,"now"],[165,27,239,25],[165,28,239,26],[165,29,239,27],[166,8,240,6,"read"],[166,12,240,10],[166,14,240,12],[167,6,241,4],[167,7,241,5],[167,8,241,6],[168,4,242,2],[169,4,244,2,"subscribeToNotifications"],[169,28,244,26,"subscribeToNotifications"],[169,29,244,27,"userId"],[169,35,244,41],[169,37,244,43,"callback"],[169,45,244,83],[169,47,244,97],[170,6,245,4],[170,10,245,8],[170,11,245,9],[170,15,245,13],[170,16,245,14,"initialized"],[170,27,245,25],[170,29,245,27],[171,8,246,6],[171,12,246,10],[171,13,246,11,"initialize"],[171,23,246,21],[171,24,246,22],[171,25,246,23],[171,26,246,24,"then"],[171,30,246,28],[171,31,246,29],[171,37,246,35],[172,10,247,8],[172,14,247,12],[172,15,247,13,"subscribeToNotifications"],[172,39,247,37],[172,40,247,38,"userId"],[172,46,247,44],[172,48,247,46,"callback"],[172,56,247,54],[172,57,247,55],[173,8,248,6],[173,9,248,7],[173,10,248,8],[174,8,249,6],[174,15,249,13],[174,21,249,19],[174,22,249,20],[174,23,249,21],[175,6,250,4],[176,6,252,4],[176,12,252,10,"notificationsRef"],[176,28,252,26],[176,31,252,29],[176,35,252,29,"ref"],[176,48,252,32],[176,50,252,33,"database"],[176,58,252,41],[176,60,252,43],[176,77,252,60,"userId"],[176,83,252,66],[176,85,252,68],[176,86,252,69],[177,6,254,4],[177,12,254,10,"unsubscribe"],[177,23,254,21],[177,26,254,24],[177,30,254,24,"onValue"],[177,47,254,31],[177,49,254,32,"notificationsRef"],[177,65,254,48],[177,67,254,51,"snapshot"],[177,75,254,59],[177,79,254,64],[178,8,255,6],[178,14,255,12,"data"],[178,18,255,16],[178,21,255,19,"snapshot"],[178,29,255,27],[178,30,255,28,"val"],[178,33,255,31],[178,34,255,32],[178,35,255,33],[179,8,256,6],[179,14,256,12,"notifications"],[179,27,256,25],[179,30,256,28,"data"],[179,34,256,32],[179,37,257,10,"Object"],[179,43,257,16],[179,44,257,17,"values"],[179,50,257,23],[179,51,257,24,"data"],[179,55,257,28],[179,56,257,29],[179,57,257,30,"sort"],[179,61,257,34],[179,62,257,35],[179,63,257,36,"a"],[179,64,257,42],[179,66,257,44,"b"],[179,67,257,50],[179,72,257,55,"b"],[179,73,257,56],[179,74,257,57,"timestamp"],[179,83,257,66],[179,86,257,69,"a"],[179,87,257,70],[179,88,257,71,"timestamp"],[179,97,257,80],[179,98,257,81],[179,101,258,10],[179,103,258,12],[180,8,259,6,"callback"],[180,16,259,14],[180,17,259,15,"notifications"],[180,30,259,28],[180,31,259,29],[181,6,260,4],[181,7,260,5],[181,8,260,6],[182,6,262,4],[182,13,262,11],[182,19,262,17],[182,23,262,17,"off"],[182,36,262,20],[182,38,262,21,"notificationsRef"],[182,54,262,37],[182,56,262,39],[182,63,262,46],[182,65,262,48,"unsubscribe"],[182,76,262,59],[182,77,262,60],[183,4,263,2],[185,4,265,2],[186,4,266,2,"isConnected"],[186,15,266,13,"isConnected"],[186,16,266,13],[186,18,266,25],[187,6,267,4],[187,13,267,11],[187,17,267,15],[187,18,267,16,"initialized"],[187,29,267,27],[188,4,268,2],[190,4,270,2],[191,4,271,2],[191,10,271,8,"disconnect"],[191,20,271,18,"disconnect"],[191,21,271,18],[191,23,271,21],[192,6,272,4],[193,6,273,4],[193,10,273,8],[193,11,273,9,"initialized"],[193,22,273,20],[193,25,273,23],[193,30,273,28],[194,4,274,2],[195,2,275,0],[196,2,277,7],[196,8,277,13,"firebaseRealtimeService"],[196,31,277,36],[196,34,277,36,"exports"],[196,41,277,36],[196,42,277,36,"firebaseRealtimeService"],[196,65,277,36],[196,68,277,39],[196,72,277,43,"FirebaseRealtimeService"],[196,95,277,66],[196,96,277,67],[196,97,277,68],[197,0,277,69],[197,3]],"functionMap":{"names":["<global>","FirebaseRealtimeService","FirebaseRealtimeService#initialize","FirebaseRealtimeService#createServiceRequest","FirebaseRealtimeService#updateServiceRequest","FirebaseRealtimeService#subscribeToServiceRequests","initialize.then$argument_0","<anonymous>","onValue$argument_1","FirebaseRealtimeService#subscribeToServiceRequest","FirebaseRealtimeService#updateProviderLocation","FirebaseRealtimeService#subscribeToNearbyProviders","Object.values.filter$argument_0","FirebaseRealtimeService#sendMessage","FirebaseRealtimeService#subscribeToChat","Object.values.sort$argument_0","FirebaseRealtimeService#sendNotification","FirebaseRealtimeService#subscribeToNotifications","FirebaseRealtimeService#isConnected","FirebaseRealtimeService#disconnect"],"mappings":"AAA;AC2D;ECG;GDY;EEG;GFgB;EGE;GHQ;EIE;6BCE;ODE;aEC,QF;6CGK;KHM;WEE,4CF;GJC;EQE;6BHE;OGE;aFC,QE;4CDK;KCG;WFE,2CE;GRC;ESG;GTS;EUE;6BLE;OKE;aJC,QI;8CHK;qCIG,+DJ;KGG;WJE,6CI;GVC;EYG;GZuB;EaE;6BRE;OQE;aPC,QO;6CNK;mCOG,6CP;KMG;WPE,4CO;GbC;EeG;GfgB;EgBE;6BXE;OWE;aVC,QU;kDTK;mCOG,6CP;KSG;WVE,iDU;GhBC;EiBG;GjBE;EkBG;GlBG;CDC"}},"type":"js/module"}]}