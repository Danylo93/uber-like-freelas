{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":36},"end":{"line":4,"column":31,"index":67}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"@tanstack/query-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":68},"end":{"line":10,"column":30,"index":167}}],"key":"GAsr4MDTe9ve1mRxgvML4iY2BZg=","exportNames":["*"]}},{"name":"./QueryClientProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":168},"end":{"line":11,"column":58,"index":226}}],"key":"R2Cn87b3k6V9pZdY+hWd8Ft8C58=","exportNames":["*"]}},{"name":"./IsRestoringProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":227},"end":{"line":12,"column":58,"index":285}}],"key":"LsIgHmr91y5USktZ56HoA6qLNhc=","exportNames":["*"]}},{"name":"./QueryErrorResetBoundary.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":286},"end":{"line":13,"column":74,"index":360}}],"key":"v0npNLmYOKsdEK0iJ4RVpe647XQ=","exportNames":["*"]}},{"name":"./errorBoundaryUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":361},"end":{"line":18,"column":33,"index":482}}],"key":"vPVIYzX/U31yYyVDl4UaADFDRRQ=","exportNames":["*"]}},{"name":"./suspense.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":483},"end":{"line":24,"column":23,"index":587}}],"key":"0Q+BFfol1+EurGmLVTwxCgLGwZ8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use client\";\n\n  // src/useQueries.ts\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useQueries = useQueries;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var React = _interopRequireWildcard(require(_dependencyMap[2], \"react\"));\n  var _queryCore = require(_dependencyMap[3], \"@tanstack/query-core\");\n  var _QueryClientProvider = require(_dependencyMap[4], \"./QueryClientProvider.js\");\n  var _IsRestoringProvider = require(_dependencyMap[5], \"./IsRestoringProvider.js\");\n  var _QueryErrorResetBoundary = require(_dependencyMap[6], \"./QueryErrorResetBoundary.js\");\n  var _errorBoundaryUtils = require(_dependencyMap[7], \"./errorBoundaryUtils.js\");\n  var _suspense = require(_dependencyMap[8], \"./suspense.js\");\n  const _excluded = [\"queries\"];\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  function useQueries(_ref, queryClient) {\n    let {\n        queries\n      } = _ref,\n      options = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n    const client = (0, _QueryClientProvider.useQueryClient)(queryClient);\n    const isRestoring = (0, _IsRestoringProvider.useIsRestoring)();\n    const errorResetBoundary = (0, _QueryErrorResetBoundary.useQueryErrorResetBoundary)();\n    const defaultedQueries = React.useMemo(() => queries.map(opts => {\n      const defaultedOptions = client.defaultQueryOptions(opts);\n      defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n      return defaultedOptions;\n    }), [queries, client, isRestoring]);\n    defaultedQueries.forEach(query => {\n      (0, _suspense.ensureSuspenseTimers)(query);\n      (0, _errorBoundaryUtils.ensurePreventErrorBoundaryRetry)(query, errorResetBoundary);\n    });\n    (0, _errorBoundaryUtils.useClearResetErrorBoundary)(errorResetBoundary);\n    const [observer] = React.useState(() => new _queryCore.QueriesObserver(client, defaultedQueries, options));\n    const [optimisticResult, getCombinedResult, trackResult] = observer.getOptimisticResult(defaultedQueries, options.combine);\n    const shouldSubscribe = !isRestoring && options.subscribed !== false;\n    React.useSyncExternalStore(React.useCallback(onStoreChange => shouldSubscribe ? observer.subscribe(_queryCore.notifyManager.batchCalls(onStoreChange)) : _queryCore.noop, [observer, shouldSubscribe]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n    React.useEffect(() => {\n      observer.setQueries(defaultedQueries, options);\n    }, [defaultedQueries, options, observer]);\n    const shouldAtLeastOneSuspend = optimisticResult.some((result, index) => (0, _suspense.shouldSuspend)(defaultedQueries[index], result));\n    const suspensePromises = shouldAtLeastOneSuspend ? optimisticResult.flatMap((result, index) => {\n      const opts = defaultedQueries[index];\n      if (opts) {\n        const queryObserver = new _queryCore.QueryObserver(client, opts);\n        if ((0, _suspense.shouldSuspend)(opts, result)) {\n          return (0, _suspense.fetchOptimistic)(opts, queryObserver, errorResetBoundary);\n        } else if ((0, _suspense.willFetch)(result, isRestoring)) {\n          void (0, _suspense.fetchOptimistic)(opts, queryObserver, errorResetBoundary);\n        }\n      }\n      return [];\n    }) : [];\n    if (suspensePromises.length > 0) {\n      throw Promise.all(suspensePromises);\n    }\n    const firstSingleResultWhichShouldThrow = optimisticResult.find((result, index) => {\n      const query = defaultedQueries[index];\n      return query && (0, _errorBoundaryUtils.getHasError)({\n        result,\n        errorResetBoundary,\n        throwOnError: query.throwOnError,\n        query: client.getQueryCache().get(query.queryHash),\n        suspense: query.suspense\n      });\n    });\n    if (firstSingleResultWhichShouldThrow?.error) {\n      throw firstSingleResultWhichShouldThrow.error;\n    }\n    return getCombinedResult(trackResult());\n  }\n});","lineCount":76,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0],[5,6,3,0,"_interopRequireDefault"],[5,28,3,0],[5,31,3,0,"require"],[5,38,3,0],[5,39,3,0,"_dependencyMap"],[5,53,3,0],[6,2,3,0,"Object"],[6,8,3,0],[6,9,3,0,"defineProperty"],[6,23,3,0],[6,24,3,0,"exports"],[6,31,3,0],[7,4,3,0,"value"],[7,9,3,0],[8,2,3,0],[9,2,3,0,"exports"],[9,9,3,0],[9,10,3,0,"useQueries"],[9,20,3,0],[9,23,3,0,"useQueries"],[9,33,3,0],[10,2,3,0],[10,6,3,0,"_objectWithoutPropertiesLoose2"],[10,36,3,0],[10,39,3,0,"_interopRequireDefault"],[10,61,3,0],[10,62,3,0,"require"],[10,69,3,0],[10,70,3,0,"_dependencyMap"],[10,84,3,0],[11,2,4,0],[11,6,4,0,"React"],[11,11,4,0],[11,14,4,0,"_interopRequireWildcard"],[11,37,4,0],[11,38,4,0,"require"],[11,45,4,0],[11,46,4,0,"_dependencyMap"],[11,60,4,0],[12,2,5,0],[12,6,5,0,"_queryCore"],[12,16,5,0],[12,19,5,0,"require"],[12,26,5,0],[12,27,5,0,"_dependencyMap"],[12,41,5,0],[13,2,11,0],[13,6,11,0,"_QueryClientProvider"],[13,26,11,0],[13,29,11,0,"require"],[13,36,11,0],[13,37,11,0,"_dependencyMap"],[13,51,11,0],[14,2,12,0],[14,6,12,0,"_IsRestoringProvider"],[14,26,12,0],[14,29,12,0,"require"],[14,36,12,0],[14,37,12,0,"_dependencyMap"],[14,51,12,0],[15,2,13,0],[15,6,13,0,"_QueryErrorResetBoundary"],[15,30,13,0],[15,33,13,0,"require"],[15,40,13,0],[15,41,13,0,"_dependencyMap"],[15,55,13,0],[16,2,14,0],[16,6,14,0,"_errorBoundaryUtils"],[16,25,14,0],[16,28,14,0,"require"],[16,35,14,0],[16,36,14,0,"_dependencyMap"],[16,50,14,0],[17,2,19,0],[17,6,19,0,"_suspense"],[17,15,19,0],[17,18,19,0,"require"],[17,25,19,0],[17,26,19,0,"_dependencyMap"],[17,40,19,0],[18,2,24,23],[18,8,24,23,"_excluded"],[18,17,24,23],[19,2,24,23],[19,11,24,23,"_interopRequireWildcard"],[19,35,24,23,"e"],[19,36,24,23],[19,38,24,23,"t"],[19,39,24,23],[19,68,24,23,"WeakMap"],[19,75,24,23],[19,81,24,23,"r"],[19,82,24,23],[19,89,24,23,"WeakMap"],[19,96,24,23],[19,100,24,23,"n"],[19,101,24,23],[19,108,24,23,"WeakMap"],[19,115,24,23],[19,127,24,23,"_interopRequireWildcard"],[19,150,24,23],[19,162,24,23,"_interopRequireWildcard"],[19,163,24,23,"e"],[19,164,24,23],[19,166,24,23,"t"],[19,167,24,23],[19,176,24,23,"t"],[19,177,24,23],[19,181,24,23,"e"],[19,182,24,23],[19,186,24,23,"e"],[19,187,24,23],[19,188,24,23,"__esModule"],[19,198,24,23],[19,207,24,23,"e"],[19,208,24,23],[19,214,24,23,"o"],[19,215,24,23],[19,217,24,23,"i"],[19,218,24,23],[19,220,24,23,"f"],[19,221,24,23],[19,226,24,23,"__proto__"],[19,235,24,23],[19,243,24,23,"default"],[19,250,24,23],[19,252,24,23,"e"],[19,253,24,23],[19,270,24,23,"e"],[19,271,24,23],[19,294,24,23,"e"],[19,295,24,23],[19,320,24,23,"e"],[19,321,24,23],[19,330,24,23,"f"],[19,331,24,23],[19,337,24,23,"o"],[19,338,24,23],[19,341,24,23,"t"],[19,342,24,23],[19,345,24,23,"n"],[19,346,24,23],[19,349,24,23,"r"],[19,350,24,23],[19,358,24,23,"o"],[19,359,24,23],[19,360,24,23,"has"],[19,363,24,23],[19,364,24,23,"e"],[19,365,24,23],[19,375,24,23,"o"],[19,376,24,23],[19,377,24,23,"get"],[19,380,24,23],[19,381,24,23,"e"],[19,382,24,23],[19,385,24,23,"o"],[19,386,24,23],[19,387,24,23,"set"],[19,390,24,23],[19,391,24,23,"e"],[19,392,24,23],[19,394,24,23,"f"],[19,395,24,23],[19,411,24,23,"t"],[19,412,24,23],[19,416,24,23,"e"],[19,417,24,23],[19,433,24,23,"t"],[19,434,24,23],[19,441,24,23,"hasOwnProperty"],[19,455,24,23],[19,456,24,23,"call"],[19,460,24,23],[19,461,24,23,"e"],[19,462,24,23],[19,464,24,23,"t"],[19,465,24,23],[19,472,24,23,"i"],[19,473,24,23],[19,477,24,23,"o"],[19,478,24,23],[19,481,24,23,"Object"],[19,487,24,23],[19,488,24,23,"defineProperty"],[19,502,24,23],[19,507,24,23,"Object"],[19,513,24,23],[19,514,24,23,"getOwnPropertyDescriptor"],[19,538,24,23],[19,539,24,23,"e"],[19,540,24,23],[19,542,24,23,"t"],[19,543,24,23],[19,550,24,23,"i"],[19,551,24,23],[19,552,24,23,"get"],[19,555,24,23],[19,559,24,23,"i"],[19,560,24,23],[19,561,24,23,"set"],[19,564,24,23],[19,568,24,23,"o"],[19,569,24,23],[19,570,24,23,"f"],[19,571,24,23],[19,573,24,23,"t"],[19,574,24,23],[19,576,24,23,"i"],[19,577,24,23],[19,581,24,23,"f"],[19,582,24,23],[19,583,24,23,"t"],[19,584,24,23],[19,588,24,23,"e"],[19,589,24,23],[19,590,24,23,"t"],[19,591,24,23],[19,602,24,23,"f"],[19,603,24,23],[19,608,24,23,"e"],[19,609,24,23],[19,611,24,23,"t"],[19,612,24,23],[20,2,25,0],[20,11,25,9,"useQueries"],[20,21,25,19,"useQueries"],[20,22,25,19,"_ref"],[20,26,25,19],[20,28,28,3,"queryClient"],[20,39,28,14],[20,41,28,16],[21,4,28,16],[21,8,25,20],[22,8,26,2,"queries"],[23,6,28,0],[23,7,28,1],[23,10,28,1,"_ref"],[23,14,28,1],[24,6,27,5,"options"],[24,13,27,12],[24,20,27,12,"_objectWithoutPropertiesLoose2"],[24,50,27,12],[24,51,27,12,"default"],[24,58,27,12],[24,60,27,12,"_ref"],[24,64,27,12],[24,66,27,12,"_excluded"],[24,75,27,12],[25,4,29,2],[25,10,29,8,"client"],[25,16,29,14],[25,19,29,17],[25,23,29,17,"useQueryClient"],[25,58,29,31],[25,60,29,32,"queryClient"],[25,71,29,43],[25,72,29,44],[26,4,30,2],[26,10,30,8,"isRestoring"],[26,21,30,19],[26,24,30,22],[26,28,30,22,"useIsRestoring"],[26,63,30,36],[26,65,30,37],[26,66,30,38],[27,4,31,2],[27,10,31,8,"errorResetBoundary"],[27,28,31,26],[27,31,31,29],[27,35,31,29,"useQueryErrorResetBoundary"],[27,86,31,55],[27,88,31,56],[27,89,31,57],[28,4,32,2],[28,10,32,8,"defaultedQueries"],[28,26,32,24],[28,29,32,27,"React"],[28,34,32,32],[28,35,32,33,"useMemo"],[28,42,32,40],[28,43,33,4],[28,49,33,10,"queries"],[28,56,33,17],[28,57,33,18,"map"],[28,60,33,21],[28,61,33,23,"opts"],[28,65,33,27],[28,69,33,32],[29,6,34,6],[29,12,34,12,"defaultedOptions"],[29,28,34,28],[29,31,34,31,"client"],[29,37,34,37],[29,38,34,38,"defaultQueryOptions"],[29,57,34,57],[29,58,35,8,"opts"],[29,62,36,6],[29,63,36,7],[30,6,37,6,"defaultedOptions"],[30,22,37,22],[30,23,37,23,"_optimisticResults"],[30,41,37,41],[30,44,37,44,"isRestoring"],[30,55,37,55],[30,58,37,58],[30,71,37,71],[30,74,37,74],[30,86,37,86],[31,6,38,6],[31,13,38,13,"defaultedOptions"],[31,29,38,29],[32,4,39,4],[32,5,39,5],[32,6,39,6],[32,8,40,4],[32,9,40,5,"queries"],[32,16,40,12],[32,18,40,14,"client"],[32,24,40,20],[32,26,40,22,"isRestoring"],[32,37,40,33],[32,38,41,2],[32,39,41,3],[33,4,42,2,"defaultedQueries"],[33,20,42,18],[33,21,42,19,"forEach"],[33,28,42,26],[33,29,42,28,"query"],[33,34,42,33],[33,38,42,38],[34,6,43,4],[34,10,43,4,"ensureSuspenseTimers"],[34,40,43,24],[34,42,43,25,"query"],[34,47,43,30],[34,48,43,31],[35,6,44,4],[35,10,44,4,"ensurePreventErrorBoundaryRetry"],[35,61,44,35],[35,63,44,36,"query"],[35,68,44,41],[35,70,44,43,"errorResetBoundary"],[35,88,44,61],[35,89,44,62],[36,4,45,2],[36,5,45,3],[36,6,45,4],[37,4,46,2],[37,8,46,2,"useClearResetErrorBoundary"],[37,54,46,28],[37,56,46,29,"errorResetBoundary"],[37,74,46,47],[37,75,46,48],[38,4,47,2],[38,10,47,8],[38,11,47,9,"observer"],[38,19,47,17],[38,20,47,18],[38,23,47,21,"React"],[38,28,47,26],[38,29,47,27,"useState"],[38,37,47,35],[38,38,48,4],[38,44,48,10],[38,48,48,14,"QueriesObserver"],[38,74,48,29],[38,75,49,6,"client"],[38,81,49,12],[38,83,50,6,"defaultedQueries"],[38,99,50,22],[38,101,51,6,"options"],[38,108,52,4],[38,109,53,2],[38,110,53,3],[39,4,54,2],[39,10,54,8],[39,11,54,9,"optimisticResult"],[39,27,54,25],[39,29,54,27,"getCombinedResult"],[39,46,54,44],[39,48,54,46,"trackResult"],[39,59,54,57],[39,60,54,58],[39,63,54,61,"observer"],[39,71,54,69],[39,72,54,70,"getOptimisticResult"],[39,91,54,89],[39,92,55,4,"defaultedQueries"],[39,108,55,20],[39,110,56,4,"options"],[39,117,56,11],[39,118,56,12,"combine"],[39,125,57,2],[39,126,57,3],[40,4,58,2],[40,10,58,8,"shouldSubscribe"],[40,25,58,23],[40,28,58,26],[40,29,58,27,"isRestoring"],[40,40,58,38],[40,44,58,42,"options"],[40,51,58,49],[40,52,58,50,"subscribed"],[40,62,58,60],[40,67,58,65],[40,72,58,70],[41,4,59,2,"React"],[41,9,59,7],[41,10,59,8,"useSyncExternalStore"],[41,30,59,28],[41,31,60,4,"React"],[41,36,60,9],[41,37,60,10,"useCallback"],[41,48,60,21],[41,49,61,7,"onStoreChange"],[41,62,61,20],[41,66,61,25,"shouldSubscribe"],[41,81,61,40],[41,84,61,43,"observer"],[41,92,61,51],[41,93,61,52,"subscribe"],[41,102,61,61],[41,103,61,62,"notifyManager"],[41,127,61,75],[41,128,61,76,"batchCalls"],[41,138,61,86],[41,139,61,87,"onStoreChange"],[41,152,61,100],[41,153,61,101],[41,154,61,102],[41,157,61,105,"noop"],[41,172,61,109],[41,174,62,6],[41,175,62,7,"observer"],[41,183,62,15],[41,185,62,17,"shouldSubscribe"],[41,200,62,32],[41,201,63,4],[41,202,63,5],[41,204,64,4],[41,210,64,10,"observer"],[41,218,64,18],[41,219,64,19,"getCurrentResult"],[41,235,64,35],[41,236,64,36],[41,237,64,37],[41,239,65,4],[41,245,65,10,"observer"],[41,253,65,18],[41,254,65,19,"getCurrentResult"],[41,270,65,35],[41,271,65,36],[41,272,66,2],[41,273,66,3],[42,4,67,2,"React"],[42,9,67,7],[42,10,67,8,"useEffect"],[42,19,67,17],[42,20,67,18],[42,26,67,24],[43,6,68,4,"observer"],[43,14,68,12],[43,15,68,13,"setQueries"],[43,25,68,23],[43,26,69,6,"defaultedQueries"],[43,42,69,22],[43,44,70,6,"options"],[43,51,71,4],[43,52,71,5],[44,4,72,2],[44,5,72,3],[44,7,72,5],[44,8,72,6,"defaultedQueries"],[44,24,72,22],[44,26,72,24,"options"],[44,33,72,31],[44,35,72,33,"observer"],[44,43,72,41],[44,44,72,42],[44,45,72,43],[45,4,73,2],[45,10,73,8,"shouldAtLeastOneSuspend"],[45,33,73,31],[45,36,73,34,"optimisticResult"],[45,52,73,50],[45,53,73,51,"some"],[45,57,73,55],[45,58,74,4],[45,59,74,5,"result"],[45,65,74,11],[45,67,74,13,"index"],[45,72,74,18],[45,77,74,23],[45,81,74,23,"shouldSuspend"],[45,104,74,36],[45,106,74,37,"defaultedQueries"],[45,122,74,53],[45,123,74,54,"index"],[45,128,74,59],[45,129,74,60],[45,131,74,62,"result"],[45,137,74,68],[45,138,75,2],[45,139,75,3],[46,4,76,2],[46,10,76,8,"suspensePromises"],[46,26,76,24],[46,29,76,27,"shouldAtLeastOneSuspend"],[46,52,76,50],[46,55,76,53,"optimisticResult"],[46,71,76,69],[46,72,76,70,"flatMap"],[46,79,76,77],[46,80,76,78],[46,81,76,79,"result"],[46,87,76,85],[46,89,76,87,"index"],[46,94,76,92],[46,99,76,97],[47,6,77,4],[47,12,77,10,"opts"],[47,16,77,14],[47,19,77,17,"defaultedQueries"],[47,35,77,33],[47,36,77,34,"index"],[47,41,77,39],[47,42,77,40],[48,6,78,4],[48,10,78,8,"opts"],[48,14,78,12],[48,16,78,14],[49,8,79,6],[49,14,79,12,"queryObserver"],[49,27,79,25],[49,30,79,28],[49,34,79,32,"QueryObserver"],[49,58,79,45],[49,59,79,46,"client"],[49,65,79,52],[49,67,79,54,"opts"],[49,71,79,58],[49,72,79,59],[50,8,80,6],[50,12,80,10],[50,16,80,10,"shouldSuspend"],[50,39,80,23],[50,41,80,24,"opts"],[50,45,80,28],[50,47,80,30,"result"],[50,53,80,36],[50,54,80,37],[50,56,80,39],[51,10,81,8],[51,17,81,15],[51,21,81,15,"fetchOptimistic"],[51,46,81,30],[51,48,81,31,"opts"],[51,52,81,35],[51,54,81,37,"queryObserver"],[51,67,81,50],[51,69,81,52,"errorResetBoundary"],[51,87,81,70],[51,88,81,71],[52,8,82,6],[52,9,82,7],[52,15,82,13],[52,19,82,17],[52,23,82,17,"willFetch"],[52,42,82,26],[52,44,82,27,"result"],[52,50,82,33],[52,52,82,35,"isRestoring"],[52,63,82,46],[52,64,82,47],[52,66,82,49],[53,10,83,8],[53,15,83,13],[53,19,83,13,"fetchOptimistic"],[53,44,83,28],[53,46,83,29,"opts"],[53,50,83,33],[53,52,83,35,"queryObserver"],[53,65,83,48],[53,67,83,50,"errorResetBoundary"],[53,85,83,68],[53,86,83,69],[54,8,84,6],[55,6,85,4],[56,6,86,4],[56,13,86,11],[56,15,86,13],[57,4,87,2],[57,5,87,3],[57,6,87,4],[57,9,87,7],[57,11,87,9],[58,4,88,2],[58,8,88,6,"suspensePromises"],[58,24,88,22],[58,25,88,23,"length"],[58,31,88,29],[58,34,88,32],[58,35,88,33],[58,37,88,35],[59,6,89,4],[59,12,89,10,"Promise"],[59,19,89,17],[59,20,89,18,"all"],[59,23,89,21],[59,24,89,22,"suspensePromises"],[59,40,89,38],[59,41,89,39],[60,4,90,2],[61,4,91,2],[61,10,91,8,"firstSingleResultWhichShouldThrow"],[61,43,91,41],[61,46,91,44,"optimisticResult"],[61,62,91,60],[61,63,91,61,"find"],[61,67,91,65],[61,68,92,4],[61,69,92,5,"result"],[61,75,92,11],[61,77,92,13,"index"],[61,82,92,18],[61,87,92,23],[62,6,93,6],[62,12,93,12,"query"],[62,17,93,17],[62,20,93,20,"defaultedQueries"],[62,36,93,36],[62,37,93,37,"index"],[62,42,93,42],[62,43,93,43],[63,6,94,6],[63,13,94,13,"query"],[63,18,94,18],[63,22,94,22],[63,26,94,22,"getHasError"],[63,57,94,33],[63,59,94,34],[64,8,95,8,"result"],[64,14,95,14],[65,8,96,8,"errorResetBoundary"],[65,26,96,26],[66,8,97,8,"throwOnError"],[66,20,97,20],[66,22,97,22,"query"],[66,27,97,27],[66,28,97,28,"throwOnError"],[66,40,97,40],[67,8,98,8,"query"],[67,13,98,13],[67,15,98,15,"client"],[67,21,98,21],[67,22,98,22,"getQueryCache"],[67,35,98,35],[67,36,98,36],[67,37,98,37],[67,38,98,38,"get"],[67,41,98,41],[67,42,98,42,"query"],[67,47,98,47],[67,48,98,48,"queryHash"],[67,57,98,57],[67,58,98,58],[68,8,99,8,"suspense"],[68,16,99,16],[68,18,99,18,"query"],[68,23,99,23],[68,24,99,24,"suspense"],[69,6,100,6],[69,7,100,7],[69,8,100,8],[70,4,101,4],[70,5,102,2],[70,6,102,3],[71,4,103,2],[71,8,103,6,"firstSingleResultWhichShouldThrow"],[71,41,103,39],[71,43,103,41,"error"],[71,48,103,46],[71,50,103,48],[72,6,104,4],[72,12,104,10,"firstSingleResultWhichShouldThrow"],[72,45,104,43],[72,46,104,44,"error"],[72,51,104,49],[73,4,105,2],[74,4,106,2],[74,11,106,9,"getCombinedResult"],[74,28,106,26],[74,29,106,27,"trackResult"],[74,40,106,38],[74,41,106,39],[74,42,106,40],[74,43,106,41],[75,2,107,0],[76,0,107,1],[76,3]],"functionMap":{"names":["<global>","useQueries","React.useMemo$argument_0","queries.map$argument_0","defaultedQueries.forEach$argument_0","React.useState$argument_0","React.useSyncExternalStore$argument_0","React.useSyncExternalStore$argument_1","React.useSyncExternalStore$argument_2","React.useEffect$argument_0","optimisticResult.some$argument_0","optimisticResult.flatMap$argument_0","optimisticResult.find$argument_0"],"mappings":"AAA;ACwB;ICQ,kBC;KDM,CD;2BGG;GHG;IIG;KJI;MKS,uGL;IMG,iCN;IOC,iCP;kBQE;GRK;ISE,iET;8EUE;GVW;IWK;KXS;CDM"}},"type":"js/module"}]}