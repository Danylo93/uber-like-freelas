{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/findNodeHandle","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"2RP7Dp//wHy/IL2D3/pkDbKjgUI=","exportNames":["*"]}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":92},"end":{"line":4,"column":52,"index":144}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":145},"end":{"line":5,"column":35,"index":180}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":181},"end":{"line":6,"column":63,"index":244}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"]}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":245},"end":{"line":7,"column":55,"index":300}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.filterConfig = filterConfig;\n  exports.findNodeHandle = findNodeHandle;\n  exports.scheduleFlushOperations = scheduleFlushOperations;\n  exports.transformIntoHandlerTags = transformIntoHandlerTags;\n  var _Platform = _interopRequireDefault(require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\"));\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/findNodeHandle\"));\n  var _handlersRegistry = require(_dependencyMap[3], \"./handlersRegistry\");\n  var _utils = require(_dependencyMap[4], \"../utils\");\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[5], \"../RNGestureHandlerModule\"));\n  var _ghQueueMicrotask = require(_dependencyMap[6], \"../ghQueueMicrotask\");\n  function isConfigParam(param, name) {\n    // param !== Object(param) returns false if `param` is a function\n    // or an object and returns true if `param` is null\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n  function filterConfig(props, validProps, defaults = {}) {\n    const filteredConfig = Object.assign({}, defaults);\n    for (const key of validProps) {\n      let value = props[key];\n      if (isConfigParam(value, key)) {\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop' && typeof value !== 'object') {\n          value = {\n            top: value,\n            left: value,\n            bottom: value,\n            right: value\n          };\n        }\n        filteredConfig[key] = value;\n      }\n    }\n    return filteredConfig;\n  }\n  function transformIntoHandlerTags(handlerIDs) {\n    handlerIDs = (0, _utils.toArray)(handlerIDs);\n    if (_Platform.default.OS === 'web') {\n      return handlerIDs.map(({\n        current\n      }) => current).filter(handle => handle);\n    }\n    // converts handler string IDs into their numeric tags\n    return handlerIDs.map(handlerID => _handlersRegistry.handlerIDToTag[handlerID] || handlerID.current?.handlerTag || -1).filter(handlerTag => handlerTag > 0);\n  }\n  function findNodeHandle(node) {\n    if (_Platform.default.OS === 'web') {\n      return node;\n    }\n    return (0, _findNodeHandle.default)(node) ?? null;\n  }\n  let flushOperationsScheduled = false;\n  function scheduleFlushOperations() {\n    if (!flushOperationsScheduled) {\n      flushOperationsScheduled = true;\n      (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n        _RNGestureHandlerModule.default.flushOperations();\n        flushOperationsScheduled = false;\n      });\n    }\n  }\n});","lineCount":69,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"filterConfig"],[8,22,1,13],[8,25,1,13,"filterConfig"],[8,37,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"findNodeHandle"],[9,24,1,13],[9,27,1,13,"findNodeHandle"],[9,41,1,13],[10,2,1,13,"exports"],[10,9,1,13],[10,10,1,13,"scheduleFlushOperations"],[10,33,1,13],[10,36,1,13,"scheduleFlushOperations"],[10,59,1,13],[11,2,1,13,"exports"],[11,9,1,13],[11,10,1,13,"transformIntoHandlerTags"],[11,34,1,13],[11,37,1,13,"transformIntoHandlerTags"],[11,61,1,13],[12,2,1,13],[12,6,1,13,"_Platform"],[12,15,1,13],[12,18,1,13,"_interopRequireDefault"],[12,40,1,13],[12,41,1,13,"require"],[12,48,1,13],[12,49,1,13,"_dependencyMap"],[12,63,1,13],[13,2,1,13],[13,6,1,13,"_findNodeHandle"],[13,21,1,13],[13,24,1,13,"_interopRequireDefault"],[13,46,1,13],[13,47,1,13,"require"],[13,54,1,13],[13,55,1,13,"_dependencyMap"],[13,69,1,13],[14,2,4,0],[14,6,4,0,"_handlersRegistry"],[14,23,4,0],[14,26,4,0,"require"],[14,33,4,0],[14,34,4,0,"_dependencyMap"],[14,48,4,0],[15,2,5,0],[15,6,5,0,"_utils"],[15,12,5,0],[15,15,5,0,"require"],[15,22,5,0],[15,23,5,0,"_dependencyMap"],[15,37,5,0],[16,2,6,0],[16,6,6,0,"_RNGestureHandlerModule"],[16,29,6,0],[16,32,6,0,"_interopRequireDefault"],[16,54,6,0],[16,55,6,0,"require"],[16,62,6,0],[16,63,6,0,"_dependencyMap"],[16,77,6,0],[17,2,7,0],[17,6,7,0,"_ghQueueMicrotask"],[17,23,7,0],[17,26,7,0,"require"],[17,33,7,0],[17,34,7,0,"_dependencyMap"],[17,48,7,0],[18,2,8,0],[18,11,8,9,"isConfigParam"],[18,24,8,22,"isConfigParam"],[18,25,8,23,"param"],[18,30,8,28],[18,32,8,30,"name"],[18,36,8,34],[18,38,8,36],[19,4,9,2],[20,4,10,2],[21,4,11,2],[21,11,11,9,"param"],[21,16,11,14],[21,21,11,19,"undefined"],[21,30,11,28],[21,35,11,33,"param"],[21,40,11,38],[21,45,11,43,"Object"],[21,51,11,49],[21,52,11,50,"param"],[21,57,11,55],[21,58,11,56],[21,62,11,60],[21,64,11,62],[21,76,11,74],[21,80,11,78,"param"],[21,85,11,83],[21,86,11,84],[21,87,11,85],[21,91,11,89,"name"],[21,95,11,93],[21,100,11,98],[21,122,11,120],[21,126,11,124,"name"],[21,130,11,128],[21,135,11,133],[21,151,11,149],[22,2,12,0],[23,2,13,7],[23,11,13,16,"filterConfig"],[23,23,13,28,"filterConfig"],[23,24,13,29,"props"],[23,29,13,34],[23,31,13,36,"validProps"],[23,41,13,46],[23,43,13,48,"defaults"],[23,51,13,56],[23,54,13,59],[23,55,13,60],[23,56,13,61],[23,58,13,63],[24,4,14,2],[24,10,14,8,"filteredConfig"],[24,24,14,22],[24,27,14,22,"Object"],[24,33,14,22],[24,34,14,22,"assign"],[24,40,14,22],[24,45,15,7,"defaults"],[24,53,15,15],[24,54,16,3],[25,4,17,2],[25,9,17,7],[25,15,17,13,"key"],[25,18,17,16],[25,22,17,20,"validProps"],[25,32,17,30],[25,34,17,32],[26,6,18,4],[26,10,18,8,"value"],[26,15,18,13],[26,18,18,16,"props"],[26,23,18,21],[26,24,18,22,"key"],[26,27,18,25],[26,28,18,26],[27,6,19,4],[27,10,19,8,"isConfigParam"],[27,23,19,21],[27,24,19,22,"value"],[27,29,19,27],[27,31,19,29,"key"],[27,34,19,32],[27,35,19,33],[27,37,19,35],[28,8,20,6],[28,12,20,10,"key"],[28,15,20,13],[28,20,20,18],[28,42,20,40],[28,46,20,44,"key"],[28,49,20,47],[28,54,20,52],[28,63,20,61],[28,65,20,63],[29,10,21,8,"value"],[29,15,21,13],[29,18,21,16,"transformIntoHandlerTags"],[29,42,21,40],[29,43,21,41,"props"],[29,48,21,46],[29,49,21,47,"key"],[29,52,21,50],[29,53,21,51],[29,54,21,52],[30,8,22,6],[30,9,22,7],[30,15,22,13],[30,19,22,17,"key"],[30,22,22,20],[30,27,22,25],[30,36,22,34],[30,40,22,38],[30,47,22,45,"value"],[30,52,22,50],[30,57,22,55],[30,65,22,63],[30,67,22,65],[31,10,23,8,"value"],[31,15,23,13],[31,18,23,16],[32,12,24,10,"top"],[32,15,24,13],[32,17,24,15,"value"],[32,22,24,20],[33,12,25,10,"left"],[33,16,25,14],[33,18,25,16,"value"],[33,23,25,21],[34,12,26,10,"bottom"],[34,18,26,16],[34,20,26,18,"value"],[34,25,26,23],[35,12,27,10,"right"],[35,17,27,15],[35,19,27,17,"value"],[36,10,28,8],[36,11,28,9],[37,8,29,6],[38,8,30,6,"filteredConfig"],[38,22,30,20],[38,23,30,21,"key"],[38,26,30,24],[38,27,30,25],[38,30,30,28,"value"],[38,35,30,33],[39,6,31,4],[40,4,32,2],[41,4,33,2],[41,11,33,9,"filteredConfig"],[41,25,33,23],[42,2,34,0],[43,2,35,7],[43,11,35,16,"transformIntoHandlerTags"],[43,35,35,40,"transformIntoHandlerTags"],[43,36,35,41,"handlerIDs"],[43,46,35,51],[43,48,35,53],[44,4,36,2,"handlerIDs"],[44,14,36,12],[44,17,36,15],[44,21,36,15,"toArray"],[44,35,36,22],[44,37,36,23,"handlerIDs"],[44,47,36,33],[44,48,36,34],[45,4,37,2],[45,8,37,6,"Platform"],[45,25,37,14],[45,26,37,15,"OS"],[45,28,37,17],[45,33,37,22],[45,38,37,27],[45,40,37,29],[46,6,38,4],[46,13,38,11,"handlerIDs"],[46,23,38,21],[46,24,38,22,"map"],[46,27,38,25],[46,28,38,26],[46,29,38,27],[47,8,39,6,"current"],[48,6,40,4],[48,7,40,5],[48,12,40,10,"current"],[48,19,40,17],[48,20,40,18],[48,21,40,19,"filter"],[48,27,40,25],[48,28,40,26,"handle"],[48,34,40,32],[48,38,40,36,"handle"],[48,44,40,42],[48,45,40,43],[49,4,41,2],[50,4,42,2],[51,4,43,2],[51,11,43,9,"handlerIDs"],[51,21,43,19],[51,22,43,20,"map"],[51,25,43,23],[51,26,43,24,"handlerID"],[51,35,43,33],[51,39,43,37,"handlerIDToTag"],[51,71,43,51],[51,72,43,52,"handlerID"],[51,81,43,61],[51,82,43,62],[51,86,43,66,"handlerID"],[51,95,43,75],[51,96,43,76,"current"],[51,103,43,83],[51,105,43,85,"handlerTag"],[51,115,43,95],[51,119,43,99],[51,120,43,100],[51,121,43,101],[51,122,43,102],[51,123,43,103,"filter"],[51,129,43,109],[51,130,43,110,"handlerTag"],[51,140,43,120],[51,144,43,124,"handlerTag"],[51,154,43,134],[51,157,43,137],[51,158,43,138],[51,159,43,139],[52,2,44,0],[53,2,45,7],[53,11,45,16,"findNodeHandle"],[53,25,45,30,"findNodeHandle"],[53,26,45,31,"node"],[53,30,45,35],[53,32,45,37],[54,4,46,2],[54,8,46,6,"Platform"],[54,25,46,14],[54,26,46,15,"OS"],[54,28,46,17],[54,33,46,22],[54,38,46,27],[54,40,46,29],[55,6,47,4],[55,13,47,11,"node"],[55,17,47,15],[56,4,48,2],[57,4,49,2],[57,11,49,9],[57,15,49,9,"findNodeHandleRN"],[57,38,49,25],[57,40,49,26,"node"],[57,44,49,30],[57,45,49,31],[57,49,49,35],[57,53,49,39],[58,2,50,0],[59,2,51,0],[59,6,51,4,"flushOperationsScheduled"],[59,30,51,28],[59,33,51,31],[59,38,51,36],[60,2,52,7],[60,11,52,16,"scheduleFlushOperations"],[60,34,52,39,"scheduleFlushOperations"],[60,35,52,39],[60,37,52,42],[61,4,53,2],[61,8,53,6],[61,9,53,7,"flushOperationsScheduled"],[61,33,53,31],[61,35,53,33],[62,6,54,4,"flushOperationsScheduled"],[62,30,54,28],[62,33,54,31],[62,37,54,35],[63,6,55,4],[63,10,55,4,"ghQueueMicrotask"],[63,44,55,20],[63,46,55,21],[63,52,55,27],[64,8,56,6,"RNGestureHandlerModule"],[64,39,56,28],[64,40,56,29,"flushOperations"],[64,55,56,44],[64,56,56,45],[64,57,56,46],[65,8,57,6,"flushOperationsScheduled"],[65,32,57,30],[65,35,57,33],[65,40,57,38],[66,6,58,4],[66,7,58,5],[66,8,58,6],[67,4,59,2],[68,2,60,0],[69,0,60,1],[69,3]],"functionMap":{"names":["<global>","isConfigParam","filterConfig","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","findNodeHandle","scheduleFlushOperations","ghQueueMicrotask$argument_0"],"mappings":"AAA;ACO;CDI;OEC;CFqB;OGC;0BCG;iBDE,SE,gBF;wBCG,6ED,SE,4BF;CHC;OMC;CNK;OOE;qBCG;KDG;CPE"}},"type":"js/module"}]}