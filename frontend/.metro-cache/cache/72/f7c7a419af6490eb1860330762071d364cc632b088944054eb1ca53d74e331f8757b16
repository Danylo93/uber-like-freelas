{"dependencies":[{"name":"./functor","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":14,"index":29},"end":{"line":3,"column":34,"index":49}}],"key":"6vVLmT0icVhppG3WerUqUUvgEs4=","exportNames":["*"]}},{"name":"./pledge","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":65},"end":{"line":4,"column":33,"index":84}}],"key":"HRuaX7zGAi9jJ3MeVRBZAhvoGMQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var Functor = require(_dependencyMap[0], \"./functor\"),\n    Pledge = require(_dependencyMap[1], \"./pledge\");\n  var Cell = function (tuple) {\n    this._ext = tuple[0];\n    this._session = tuple[1];\n    this._functors = {\n      incoming: new Functor(this._session, 'processIncomingMessage'),\n      outgoing: new Functor(this._session, 'processOutgoingMessage')\n    };\n  };\n  Cell.prototype.pending = function (direction) {\n    var functor = this._functors[direction];\n    if (!functor._stopped) functor.pending += 1;\n  };\n  Cell.prototype.incoming = function (error, message, callback, context) {\n    this._exec('incoming', error, message, callback, context);\n  };\n  Cell.prototype.outgoing = function (error, message, callback, context) {\n    this._exec('outgoing', error, message, callback, context);\n  };\n  Cell.prototype.close = function () {\n    this._closed = this._closed || new Pledge();\n    this._doClose();\n    return this._closed;\n  };\n  Cell.prototype._exec = function (direction, error, message, callback, context) {\n    this._functors[direction].call(error, message, function (err, msg) {\n      if (err) err.message = this._ext.name + ': ' + err.message;\n      callback.call(context, err, msg);\n      this._doClose();\n    }, this);\n  };\n  Cell.prototype._doClose = function () {\n    var fin = this._functors.incoming,\n      fout = this._functors.outgoing;\n    if (!this._closed || fin.pending + fout.pending !== 0) return;\n    if (this._session) this._session.close();\n    this._session = null;\n    this._closed.done();\n  };\n  module.exports = Cell;\n});","lineCount":45,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"Functor"],[4,13,3,11],[4,16,3,14,"require"],[4,23,3,21],[4,24,3,21,"_dependencyMap"],[4,38,3,21],[4,54,3,33],[4,55,3,34],[5,4,4,4,"Pledge"],[5,10,4,10],[5,13,4,14,"require"],[5,20,4,21],[5,21,4,21,"_dependencyMap"],[5,35,4,21],[5,50,4,32],[5,51,4,33],[6,2,6,0],[6,6,6,4,"Cell"],[6,10,6,8],[6,13,6,11],[6,22,6,11,"Cell"],[6,23,6,20,"tuple"],[6,28,6,25],[6,30,6,27],[7,4,7,2],[7,8,7,6],[7,9,7,7,"_ext"],[7,13,7,11],[7,16,7,18,"tuple"],[7,21,7,23],[7,22,7,24],[7,23,7,25],[7,24,7,26],[8,4,8,2],[8,8,8,6],[8,9,8,7,"_session"],[8,17,8,15],[8,20,8,18,"tuple"],[8,25,8,23],[8,26,8,24],[8,27,8,25],[8,28,8,26],[9,4,10,2],[9,8,10,6],[9,9,10,7,"_functors"],[9,18,10,16],[9,21,10,19],[10,6,11,4,"incoming"],[10,14,11,12],[10,16,11,14],[10,20,11,18,"Functor"],[10,27,11,25],[10,28,11,26],[10,32,11,30],[10,33,11,31,"_session"],[10,41,11,39],[10,43,11,41],[10,67,11,65],[10,68,11,66],[11,6,12,4,"outgoing"],[11,14,12,12],[11,16,12,14],[11,20,12,18,"Functor"],[11,27,12,25],[11,28,12,26],[11,32,12,30],[11,33,12,31,"_session"],[11,41,12,39],[11,43,12,41],[11,67,12,65],[12,4,13,2],[12,5,13,3],[13,2,14,0],[13,3,14,1],[14,2,16,0,"Cell"],[14,6,16,4],[14,7,16,5,"prototype"],[14,16,16,14],[14,17,16,15,"pending"],[14,24,16,22],[14,27,16,25],[14,37,16,34,"direction"],[14,46,16,43],[14,48,16,45],[15,4,17,2],[15,8,17,6,"functor"],[15,15,17,13],[15,18,17,16],[15,22,17,20],[15,23,17,21,"_functors"],[15,32,17,30],[15,33,17,31,"direction"],[15,42,17,40],[15,43,17,41],[16,4,18,2],[16,8,18,6],[16,9,18,7,"functor"],[16,16,18,14],[16,17,18,15,"_stopped"],[16,25,18,23],[16,27,18,25,"functor"],[16,34,18,32],[16,35,18,33,"pending"],[16,42,18,40],[16,46,18,44],[16,47,18,45],[17,2,19,0],[17,3,19,1],[18,2,21,0,"Cell"],[18,6,21,4],[18,7,21,5,"prototype"],[18,16,21,14],[18,17,21,15,"incoming"],[18,25,21,23],[18,28,21,26],[18,38,21,35,"error"],[18,43,21,40],[18,45,21,42,"message"],[18,52,21,49],[18,54,21,51,"callback"],[18,62,21,59],[18,64,21,61,"context"],[18,71,21,68],[18,73,21,70],[19,4,22,2],[19,8,22,6],[19,9,22,7,"_exec"],[19,14,22,12],[19,15,22,13],[19,25,22,23],[19,27,22,25,"error"],[19,32,22,30],[19,34,22,32,"message"],[19,41,22,39],[19,43,22,41,"callback"],[19,51,22,49],[19,53,22,51,"context"],[19,60,22,58],[19,61,22,59],[20,2,23,0],[20,3,23,1],[21,2,25,0,"Cell"],[21,6,25,4],[21,7,25,5,"prototype"],[21,16,25,14],[21,17,25,15,"outgoing"],[21,25,25,23],[21,28,25,26],[21,38,25,35,"error"],[21,43,25,40],[21,45,25,42,"message"],[21,52,25,49],[21,54,25,51,"callback"],[21,62,25,59],[21,64,25,61,"context"],[21,71,25,68],[21,73,25,70],[22,4,26,2],[22,8,26,6],[22,9,26,7,"_exec"],[22,14,26,12],[22,15,26,13],[22,25,26,23],[22,27,26,25,"error"],[22,32,26,30],[22,34,26,32,"message"],[22,41,26,39],[22,43,26,41,"callback"],[22,51,26,49],[22,53,26,51,"context"],[22,60,26,58],[22,61,26,59],[23,2,27,0],[23,3,27,1],[24,2,29,0,"Cell"],[24,6,29,4],[24,7,29,5,"prototype"],[24,16,29,14],[24,17,29,15,"close"],[24,22,29,20],[24,25,29,23],[24,37,29,34],[25,4,30,2],[25,8,30,6],[25,9,30,7,"_closed"],[25,16,30,14],[25,19,30,17],[25,23,30,21],[25,24,30,22,"_closed"],[25,31,30,29],[25,35,30,33],[25,39,30,37,"Pledge"],[25,45,30,43],[25,46,30,44],[25,47,30,45],[26,4,31,2],[26,8,31,6],[26,9,31,7,"_doClose"],[26,17,31,15],[26,18,31,16],[26,19,31,17],[27,4,32,2],[27,11,32,9],[27,15,32,13],[27,16,32,14,"_closed"],[27,23,32,21],[28,2,33,0],[28,3,33,1],[29,2,35,0,"Cell"],[29,6,35,4],[29,7,35,5,"prototype"],[29,16,35,14],[29,17,35,15,"_exec"],[29,22,35,20],[29,25,35,23],[29,35,35,32,"direction"],[29,44,35,41],[29,46,35,43,"error"],[29,51,35,48],[29,53,35,50,"message"],[29,60,35,57],[29,62,35,59,"callback"],[29,70,35,67],[29,72,35,69,"context"],[29,79,35,76],[29,81,35,78],[30,4,36,2],[30,8,36,6],[30,9,36,7,"_functors"],[30,18,36,16],[30,19,36,17,"direction"],[30,28,36,26],[30,29,36,27],[30,30,36,28,"call"],[30,34,36,32],[30,35,36,33,"error"],[30,40,36,38],[30,42,36,40,"message"],[30,49,36,47],[30,51,36,49],[30,61,36,58,"err"],[30,64,36,61],[30,66,36,63,"msg"],[30,69,36,66],[30,71,36,68],[31,6,37,4],[31,10,37,8,"err"],[31,13,37,11],[31,15,37,13,"err"],[31,18,37,16],[31,19,37,17,"message"],[31,26,37,24],[31,29,37,27],[31,33,37,31],[31,34,37,32,"_ext"],[31,38,37,36],[31,39,37,37,"name"],[31,43,37,41],[31,46,37,44],[31,50,37,48],[31,53,37,51,"err"],[31,56,37,54],[31,57,37,55,"message"],[31,64,37,62],[32,6,38,4,"callback"],[32,14,38,12],[32,15,38,13,"call"],[32,19,38,17],[32,20,38,18,"context"],[32,27,38,25],[32,29,38,27,"err"],[32,32,38,30],[32,34,38,32,"msg"],[32,37,38,35],[32,38,38,36],[33,6,39,4],[33,10,39,8],[33,11,39,9,"_doClose"],[33,19,39,17],[33,20,39,18],[33,21,39,19],[34,4,40,2],[34,5,40,3],[34,7,40,5],[34,11,40,9],[34,12,40,10],[35,2,41,0],[35,3,41,1],[36,2,43,0,"Cell"],[36,6,43,4],[36,7,43,5,"prototype"],[36,16,43,14],[36,17,43,15,"_doClose"],[36,25,43,23],[36,28,43,26],[36,40,43,37],[37,4,44,2],[37,8,44,6,"fin"],[37,11,44,9],[37,14,44,13],[37,18,44,17],[37,19,44,18,"_functors"],[37,28,44,27],[37,29,44,28,"incoming"],[37,37,44,36],[38,6,45,6,"fout"],[38,10,45,10],[38,13,45,13],[38,17,45,17],[38,18,45,18,"_functors"],[38,27,45,27],[38,28,45,28,"outgoing"],[38,36,45,36],[39,4,47,2],[39,8,47,6],[39,9,47,7],[39,13,47,11],[39,14,47,12,"_closed"],[39,21,47,19],[39,25,47,23,"fin"],[39,28,47,26],[39,29,47,27,"pending"],[39,36,47,34],[39,39,47,37,"fout"],[39,43,47,41],[39,44,47,42,"pending"],[39,51,47,49],[39,56,47,54],[39,57,47,55],[39,59,47,57],[40,4,48,2],[40,8,48,6],[40,12,48,10],[40,13,48,11,"_session"],[40,21,48,19],[40,23,48,21],[40,27,48,25],[40,28,48,26,"_session"],[40,36,48,34],[40,37,48,35,"close"],[40,42,48,40],[40,43,48,41],[40,44,48,42],[41,4,49,2],[41,8,49,6],[41,9,49,7,"_session"],[41,17,49,15],[41,20,49,18],[41,24,49,22],[42,4,50,2],[42,8,50,6],[42,9,50,7,"_closed"],[42,16,50,14],[42,17,50,15,"done"],[42,21,50,19],[42,22,50,20],[42,23,50,21],[43,2,51,0],[43,3,51,1],[44,2,53,0,"module"],[44,8,53,6],[44,9,53,7,"exports"],[44,16,53,14],[44,19,53,17,"Cell"],[44,23,53,21],[45,0,53,22],[45,3]],"functionMap":{"names":["<global>","Cell","Cell.prototype.pending","Cell.prototype.incoming","Cell.prototype.outgoing","Cell.prototype.close","Cell.prototype._exec","_functors.direction.call$argument_2","Cell.prototype._doClose"],"mappings":"AAA;WCK;CDQ;yBEE;CFG;0BGE;CHE;0BIE;CJE;uBKE;CLI;uBME;iDCC;GDI;CNC;0BQE;CRQ"}},"type":"js/module"}]}