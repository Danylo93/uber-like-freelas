{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./CircularBuffer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":46,"index":61}}],"key":"uVgm5B14gvsefJ8WOcz2JJQif+Q=","exportNames":["*"]}},{"name":"./LeastSquareSolver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":62},"end":{"line":4,"column":52,"index":114}}],"key":"pL+OKV6zXpveMrqrg91kFAGJP/w=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _CircularBuffer = _interopRequireDefault(require(_dependencyMap[1], \"./CircularBuffer\"));\n  var _LeastSquareSolver = _interopRequireDefault(require(_dependencyMap[2], \"./LeastSquareSolver\"));\n  class VelocityTracker {\n    assumePointerMoveStoppedMilliseconds = 40;\n    historySize = 20;\n    horizonMilliseconds = 300;\n    minSampleSize = 3;\n    constructor() {\n      this.samples = new _CircularBuffer.default(this.historySize);\n    }\n    add(event) {\n      this.samples.push(event);\n    }\n\n    // Returns an estimate of the velocity of the object being tracked by the\n    // tracker given the current information available to the tracker.\n    //\n    // Information is added using [addPosition].\n    //\n    // Returns null if there is no data on which to base an estimate.\n    getVelocityEstimate() {\n      const x = [];\n      const y = [];\n      const w = [];\n      const time = [];\n      let sampleCount = 0;\n      let index = this.samples.size - 1;\n      const newestSample = this.samples.get(index);\n      if (!newestSample) {\n        return null;\n      }\n      let previousSample = newestSample;\n\n      // Starting with the most recent PointAtTime sample, iterate backwards while\n      // the samples represent continuous motion.\n      while (sampleCount < this.samples.size) {\n        const sample = this.samples.get(index);\n        const age = newestSample.time - sample.time;\n        const delta = Math.abs(sample.time - previousSample.time);\n        previousSample = sample;\n        if (age > this.horizonMilliseconds || delta > this.assumePointerMoveStoppedMilliseconds) {\n          break;\n        }\n        x.push(sample.x);\n        y.push(sample.y);\n        w.push(1);\n        time.push(-age);\n        sampleCount++;\n        index--;\n      }\n      if (sampleCount >= this.minSampleSize) {\n        const xSolver = new _LeastSquareSolver.default(time, x, w);\n        const xFit = xSolver.solve(2);\n        if (xFit !== null) {\n          const ySolver = new _LeastSquareSolver.default(time, y, w);\n          const yFit = ySolver.solve(2);\n          if (yFit !== null) {\n            const xVelocity = xFit.coefficients[1] * 1000;\n            const yVelocity = yFit.coefficients[1] * 1000;\n            return [xVelocity, yVelocity];\n          }\n        }\n      }\n      return null;\n    }\n    get velocity() {\n      const estimate = this.getVelocityEstimate();\n      if (estimate !== null) {\n        return estimate;\n      }\n      return [0, 0];\n    }\n    reset() {\n      this.samples.clear();\n    }\n  }\n  exports.default = VelocityTracker;\n});","lineCount":86,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[9,2,3,0],[9,6,3,0,"_CircularBuffer"],[9,21,3,0],[9,24,3,0,"_interopRequireDefault"],[9,46,3,0],[9,47,3,0,"require"],[9,54,3,0],[9,55,3,0,"_dependencyMap"],[9,69,3,0],[10,2,4,0],[10,6,4,0,"_LeastSquareSolver"],[10,24,4,0],[10,27,4,0,"_interopRequireDefault"],[10,49,4,0],[10,50,4,0,"require"],[10,57,4,0],[10,58,4,0,"_dependencyMap"],[10,72,4,0],[11,2,5,15],[11,8,5,21,"VelocityTracker"],[11,23,5,36],[11,24,5,37],[12,4,6,2,"assumePointerMoveStoppedMilliseconds"],[12,40,6,38],[12,43,6,41],[12,45,6,43],[13,4,7,2,"historySize"],[13,15,7,13],[13,18,7,16],[13,20,7,18],[14,4,8,2,"horizonMilliseconds"],[14,23,8,21],[14,26,8,24],[14,29,8,27],[15,4,9,2,"minSampleSize"],[15,17,9,15],[15,20,9,18],[15,21,9,19],[16,4,10,2,"constructor"],[16,15,10,13,"constructor"],[16,16,10,13],[16,18,10,16],[17,6,11,4],[17,10,11,8],[17,11,11,9,"samples"],[17,18,11,16],[17,21,11,19],[17,25,11,23,"CircularBuffer"],[17,48,11,37],[17,49,11,38],[17,53,11,42],[17,54,11,43,"historySize"],[17,65,11,54],[17,66,11,55],[18,4,12,2],[19,4,13,2,"add"],[19,7,13,5,"add"],[19,8,13,6,"event"],[19,13,13,11],[19,15,13,13],[20,6,14,4],[20,10,14,8],[20,11,14,9,"samples"],[20,18,14,16],[20,19,14,17,"push"],[20,23,14,21],[20,24,14,22,"event"],[20,29,14,27],[20,30,14,28],[21,4,15,2],[23,4,17,2],[24,4,18,2],[25,4,19,2],[26,4,20,2],[27,4,21,2],[28,4,22,2],[29,4,23,2,"getVelocityEstimate"],[29,23,23,21,"getVelocityEstimate"],[29,24,23,21],[29,26,23,24],[30,6,24,4],[30,12,24,10,"x"],[30,13,24,11],[30,16,24,14],[30,18,24,16],[31,6,25,4],[31,12,25,10,"y"],[31,13,25,11],[31,16,25,14],[31,18,25,16],[32,6,26,4],[32,12,26,10,"w"],[32,13,26,11],[32,16,26,14],[32,18,26,16],[33,6,27,4],[33,12,27,10,"time"],[33,16,27,14],[33,19,27,17],[33,21,27,19],[34,6,28,4],[34,10,28,8,"sampleCount"],[34,21,28,19],[34,24,28,22],[34,25,28,23],[35,6,29,4],[35,10,29,8,"index"],[35,15,29,13],[35,18,29,16],[35,22,29,20],[35,23,29,21,"samples"],[35,30,29,28],[35,31,29,29,"size"],[35,35,29,33],[35,38,29,36],[35,39,29,37],[36,6,30,4],[36,12,30,10,"newestSample"],[36,24,30,22],[36,27,30,25],[36,31,30,29],[36,32,30,30,"samples"],[36,39,30,37],[36,40,30,38,"get"],[36,43,30,41],[36,44,30,42,"index"],[36,49,30,47],[36,50,30,48],[37,6,31,4],[37,10,31,8],[37,11,31,9,"newestSample"],[37,23,31,21],[37,25,31,23],[38,8,32,6],[38,15,32,13],[38,19,32,17],[39,6,33,4],[40,6,34,4],[40,10,34,8,"previousSample"],[40,24,34,22],[40,27,34,25,"newestSample"],[40,39,34,37],[42,6,36,4],[43,6,37,4],[44,6,38,4],[44,13,38,11,"sampleCount"],[44,24,38,22],[44,27,38,25],[44,31,38,29],[44,32,38,30,"samples"],[44,39,38,37],[44,40,38,38,"size"],[44,44,38,42],[44,46,38,44],[45,8,39,6],[45,14,39,12,"sample"],[45,20,39,18],[45,23,39,21],[45,27,39,25],[45,28,39,26,"samples"],[45,35,39,33],[45,36,39,34,"get"],[45,39,39,37],[45,40,39,38,"index"],[45,45,39,43],[45,46,39,44],[46,8,40,6],[46,14,40,12,"age"],[46,17,40,15],[46,20,40,18,"newestSample"],[46,32,40,30],[46,33,40,31,"time"],[46,37,40,35],[46,40,40,38,"sample"],[46,46,40,44],[46,47,40,45,"time"],[46,51,40,49],[47,8,41,6],[47,14,41,12,"delta"],[47,19,41,17],[47,22,41,20,"Math"],[47,26,41,24],[47,27,41,25,"abs"],[47,30,41,28],[47,31,41,29,"sample"],[47,37,41,35],[47,38,41,36,"time"],[47,42,41,40],[47,45,41,43,"previousSample"],[47,59,41,57],[47,60,41,58,"time"],[47,64,41,62],[47,65,41,63],[48,8,42,6,"previousSample"],[48,22,42,20],[48,25,42,23,"sample"],[48,31,42,29],[49,8,43,6],[49,12,43,10,"age"],[49,15,43,13],[49,18,43,16],[49,22,43,20],[49,23,43,21,"horizonMilliseconds"],[49,42,43,40],[49,46,43,44,"delta"],[49,51,43,49],[49,54,43,52],[49,58,43,56],[49,59,43,57,"assumePointerMoveStoppedMilliseconds"],[49,95,43,93],[49,97,43,95],[50,10,44,8],[51,8,45,6],[52,8,46,6,"x"],[52,9,46,7],[52,10,46,8,"push"],[52,14,46,12],[52,15,46,13,"sample"],[52,21,46,19],[52,22,46,20,"x"],[52,23,46,21],[52,24,46,22],[53,8,47,6,"y"],[53,9,47,7],[53,10,47,8,"push"],[53,14,47,12],[53,15,47,13,"sample"],[53,21,47,19],[53,22,47,20,"y"],[53,23,47,21],[53,24,47,22],[54,8,48,6,"w"],[54,9,48,7],[54,10,48,8,"push"],[54,14,48,12],[54,15,48,13],[54,16,48,14],[54,17,48,15],[55,8,49,6,"time"],[55,12,49,10],[55,13,49,11,"push"],[55,17,49,15],[55,18,49,16],[55,19,49,17,"age"],[55,22,49,20],[55,23,49,21],[56,8,50,6,"sampleCount"],[56,19,50,17],[56,21,50,19],[57,8,51,6,"index"],[57,13,51,11],[57,15,51,13],[58,6,52,4],[59,6,53,4],[59,10,53,8,"sampleCount"],[59,21,53,19],[59,25,53,23],[59,29,53,27],[59,30,53,28,"minSampleSize"],[59,43,53,41],[59,45,53,43],[60,8,54,6],[60,14,54,12,"xSolver"],[60,21,54,19],[60,24,54,22],[60,28,54,26,"LeastSquareSolver"],[60,54,54,43],[60,55,54,44,"time"],[60,59,54,48],[60,61,54,50,"x"],[60,62,54,51],[60,64,54,53,"w"],[60,65,54,54],[60,66,54,55],[61,8,55,6],[61,14,55,12,"xFit"],[61,18,55,16],[61,21,55,19,"xSolver"],[61,28,55,26],[61,29,55,27,"solve"],[61,34,55,32],[61,35,55,33],[61,36,55,34],[61,37,55,35],[62,8,56,6],[62,12,56,10,"xFit"],[62,16,56,14],[62,21,56,19],[62,25,56,23],[62,27,56,25],[63,10,57,8],[63,16,57,14,"ySolver"],[63,23,57,21],[63,26,57,24],[63,30,57,28,"LeastSquareSolver"],[63,56,57,45],[63,57,57,46,"time"],[63,61,57,50],[63,63,57,52,"y"],[63,64,57,53],[63,66,57,55,"w"],[63,67,57,56],[63,68,57,57],[64,10,58,8],[64,16,58,14,"yFit"],[64,20,58,18],[64,23,58,21,"ySolver"],[64,30,58,28],[64,31,58,29,"solve"],[64,36,58,34],[64,37,58,35],[64,38,58,36],[64,39,58,37],[65,10,59,8],[65,14,59,12,"yFit"],[65,18,59,16],[65,23,59,21],[65,27,59,25],[65,29,59,27],[66,12,60,10],[66,18,60,16,"xVelocity"],[66,27,60,25],[66,30,60,28,"xFit"],[66,34,60,32],[66,35,60,33,"coefficients"],[66,47,60,45],[66,48,60,46],[66,49,60,47],[66,50,60,48],[66,53,60,51],[66,57,60,55],[67,12,61,10],[67,18,61,16,"yVelocity"],[67,27,61,25],[67,30,61,28,"yFit"],[67,34,61,32],[67,35,61,33,"coefficients"],[67,47,61,45],[67,48,61,46],[67,49,61,47],[67,50,61,48],[67,53,61,51],[67,57,61,55],[68,12,62,10],[68,19,62,17],[68,20,62,18,"xVelocity"],[68,29,62,27],[68,31,62,29,"yVelocity"],[68,40,62,38],[68,41,62,39],[69,10,63,8],[70,8,64,6],[71,6,65,4],[72,6,66,4],[72,13,66,11],[72,17,66,15],[73,4,67,2],[74,4,68,2],[74,8,68,6,"velocity"],[74,16,68,14,"velocity"],[74,17,68,14],[74,19,68,17],[75,6,69,4],[75,12,69,10,"estimate"],[75,20,69,18],[75,23,69,21],[75,27,69,25],[75,28,69,26,"getVelocityEstimate"],[75,47,69,45],[75,48,69,46],[75,49,69,47],[76,6,70,4],[76,10,70,8,"estimate"],[76,18,70,16],[76,23,70,21],[76,27,70,25],[76,29,70,27],[77,8,71,6],[77,15,71,13,"estimate"],[77,23,71,21],[78,6,72,4],[79,6,73,4],[79,13,73,11],[79,14,73,12],[79,15,73,13],[79,17,73,15],[79,18,73,16],[79,19,73,17],[80,4,74,2],[81,4,75,2,"reset"],[81,9,75,7,"reset"],[81,10,75,7],[81,12,75,10],[82,6,76,4],[82,10,76,8],[82,11,76,9,"samples"],[82,18,76,16],[82,19,76,17,"clear"],[82,24,76,22],[82,25,76,23],[82,26,76,24],[83,4,77,2],[84,2,78,0],[85,2,78,1,"exports"],[85,9,78,1],[85,10,78,1,"default"],[85,17,78,1],[85,20,78,1,"VelocityTracker"],[85,35,78,1],[86,0,78,1],[86,3]],"functionMap":{"names":["<global>","VelocityTracker","constructor","add","getVelocityEstimate","get__velocity","reset"],"mappings":"AAA;eCI;ECK;GDE;EEC;GFE;EGQ;GH4C;EIC;GJM;EKC;GLE;CDC"}},"type":"js/module"}]}