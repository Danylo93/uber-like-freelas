{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":36,"index":51}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":52},"end":{"line":4,"column":108,"index":160}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"]}},{"name":"./DraggingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":161},"end":{"line":5,"column":62,"index":223}}],"key":"veIIVtZ+Znwl7KqPaA+sdGzF8LE=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":224},"end":{"line":6,"column":80,"index":304}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":305},"end":{"line":7,"column":33,"index":338}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _hammerjs = _interopRequireDefault(require(_dependencyMap[1], \"@egjs/hammerjs\"));\n  var _constants = require(_dependencyMap[2], \"./constants\");\n  var _DraggingGestureHandler = _interopRequireDefault(require(_dependencyMap[3], \"./DraggingGestureHandler\"));\n  var _utils = require(_dependencyMap[4], \"./utils\");\n  var _State = require(_dependencyMap[5], \"../State\");\n  class PanGestureHandler extends _DraggingGestureHandler.default {\n    get name() {\n      return 'pan';\n    }\n    get NativeGestureClass() {\n      return _hammerjs.default.Pan;\n    }\n    getHammerConfig() {\n      return Object.assign({}, super.getHammerConfig(), {\n        direction: this.getDirection()\n      });\n    }\n    getState(type) {\n      const nextState = super.getState(type);\n      // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n      if (this.previousState === _State.State.UNDETERMINED && nextState === _State.State.ACTIVE) {\n        return _State.State.BEGAN;\n      }\n      return nextState;\n    }\n    getDirection() {\n      const config = this.getConfig();\n      const {\n        activeOffsetXStart,\n        activeOffsetXEnd,\n        activeOffsetYStart,\n        activeOffsetYEnd,\n        minDist\n      } = config;\n      let directions = [];\n      let horizontalDirections = [];\n      if (!(0, _utils.isnan)(minDist)) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n      if (!(0, _utils.isnan)(activeOffsetXStart)) {\n        horizontalDirections.push(_hammerjs.default.DIRECTION_LEFT);\n      }\n      if (!(0, _utils.isnan)(activeOffsetXEnd)) {\n        horizontalDirections.push(_hammerjs.default.DIRECTION_RIGHT);\n      }\n      if (horizontalDirections.length === 2) {\n        horizontalDirections = [_hammerjs.default.DIRECTION_HORIZONTAL];\n      }\n      directions = directions.concat(horizontalDirections);\n      let verticalDirections = [];\n      if (!(0, _utils.isnan)(activeOffsetYStart)) {\n        verticalDirections.push(_hammerjs.default.DIRECTION_UP);\n      }\n      if (!(0, _utils.isnan)(activeOffsetYEnd)) {\n        verticalDirections.push(_hammerjs.default.DIRECTION_DOWN);\n      }\n      if (verticalDirections.length === 2) {\n        verticalDirections = [_hammerjs.default.DIRECTION_VERTICAL];\n      }\n      directions = directions.concat(verticalDirections);\n      if (!directions.length) {\n        return _hammerjs.default.DIRECTION_NONE;\n      }\n      if (directions[0] === _hammerjs.default.DIRECTION_HORIZONTAL && directions[1] === _hammerjs.default.DIRECTION_VERTICAL) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n      if (horizontalDirections.length && verticalDirections.length) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n      return directions[0];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          minDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    shouldFailUnderCustomCriteria({\n      deltaX,\n      deltaY\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !(0, _utils.isnan)(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !(0, _utils.isnan)(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !(0, _utils.isnan)(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n    }\n    shouldActivateUnderCustomCriteria({\n      deltaX,\n      deltaY,\n      velocity\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !(0, _utils.isnan)(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !(0, _utils.isnan)(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !(0, _utils.isnan)(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)({\n        x: deltaX,\n        y: deltaY\n      }), criteria.minDistSq) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.x, criteria.minVelocityX) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.y, criteria.minVelocityY) || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)(velocity), criteria.minVelocitySq);\n    }\n    shouldMultiFingerPanFail({\n      pointerLength,\n      scale,\n      deltaRotation\n    }) {\n      if (pointerLength <= 1) {\n        return false;\n      }\n\n      // Test if the pan had too much pinching or rotating.\n      const deltaScale = Math.abs(scale - 1);\n      const absDeltaRotation = Math.abs(deltaRotation);\n      if (deltaScale > _constants.MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      if (absDeltaRotation > _constants.MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      return false;\n    }\n    updateHasCustomActivationCriteria(criteria) {\n      return (0, _utils.isValidNumber)(criteria.minDistSq) || (0, _utils.isValidNumber)(criteria.minVelocityX) || (0, _utils.isValidNumber)(criteria.minVelocityY) || (0, _utils.isValidNumber)(criteria.minVelocitySq) || (0, _utils.isValidNumber)(criteria.activeOffsetXStart) || (0, _utils.isValidNumber)(criteria.activeOffsetXEnd) || (0, _utils.isValidNumber)(criteria.activeOffsetYStart) || (0, _utils.isValidNumber)(criteria.activeOffsetYEnd);\n    }\n    isGestureEnabledForEvent(props, _recognizer, inputData) {\n      if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n        return {\n          failed: true\n        };\n      }\n      const velocity = {\n        x: inputData.velocityX,\n        y: inputData.velocityY\n      };\n      if (this.hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n        deltaX: inputData.deltaX,\n        deltaY: inputData.deltaY,\n        velocity\n      }, props)) {\n        if (this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation\n        })) {\n          return {\n            failed: true\n          };\n        }\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false\n      };\n    }\n  }\n  var _default = exports.default = PanGestureHandler;\n});","lineCount":167,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[9,2,3,0],[9,6,3,0,"_hammerjs"],[9,15,3,0],[9,18,3,0,"_interopRequireDefault"],[9,40,3,0],[9,41,3,0,"require"],[9,48,3,0],[9,49,3,0,"_dependencyMap"],[9,63,3,0],[10,2,4,0],[10,6,4,0,"_constants"],[10,16,4,0],[10,19,4,0,"require"],[10,26,4,0],[10,27,4,0,"_dependencyMap"],[10,41,4,0],[11,2,5,0],[11,6,5,0,"_DraggingGestureHandler"],[11,29,5,0],[11,32,5,0,"_interopRequireDefault"],[11,54,5,0],[11,55,5,0,"require"],[11,62,5,0],[11,63,5,0,"_dependencyMap"],[11,77,5,0],[12,2,6,0],[12,6,6,0,"_utils"],[12,12,6,0],[12,15,6,0,"require"],[12,22,6,0],[12,23,6,0,"_dependencyMap"],[12,37,6,0],[13,2,7,0],[13,6,7,0,"_State"],[13,12,7,0],[13,15,7,0,"require"],[13,22,7,0],[13,23,7,0,"_dependencyMap"],[13,37,7,0],[14,2,8,0],[14,8,8,6,"PanGestureHandler"],[14,25,8,23],[14,34,8,32,"DraggingGestureHandler"],[14,65,8,54],[14,66,8,55],[15,4,9,2],[15,8,9,6,"name"],[15,12,9,10,"name"],[15,13,9,10],[15,15,9,13],[16,6,10,4],[16,13,10,11],[16,18,10,16],[17,4,11,2],[18,4,12,2],[18,8,12,6,"NativeGestureClass"],[18,26,12,24,"NativeGestureClass"],[18,27,12,24],[18,29,12,27],[19,6,13,4],[19,13,13,11,"Hammer"],[19,30,13,17],[19,31,13,18,"Pan"],[19,34,13,21],[20,4,14,2],[21,4,15,2,"getHammerConfig"],[21,19,15,17,"getHammerConfig"],[21,20,15,17],[21,22,15,20],[22,6,16,4],[22,13,16,4,"Object"],[22,19,16,4],[22,20,16,4,"assign"],[22,26,16,4],[22,31,17,9],[22,36,17,14],[22,37,17,15,"getHammerConfig"],[22,52,17,30],[22,53,17,31],[22,54,17,32],[23,8,18,6,"direction"],[23,17,18,15],[23,19,18,17],[23,23,18,21],[23,24,18,22,"getDirection"],[23,36,18,34],[23,37,18,35],[24,6,18,36],[25,4,20,2],[26,4,21,2,"getState"],[26,12,21,10,"getState"],[26,13,21,11,"type"],[26,17,21,15],[26,19,21,17],[27,6,22,4],[27,12,22,10,"nextState"],[27,21,22,19],[27,24,22,22],[27,29,22,27],[27,30,22,28,"getState"],[27,38,22,36],[27,39,22,37,"type"],[27,43,22,41],[27,44,22,42],[28,6,23,4],[29,6,24,4],[29,10,24,8],[29,14,24,12],[29,15,24,13,"previousState"],[29,28,24,26],[29,33,24,31,"State"],[29,45,24,36],[29,46,24,37,"UNDETERMINED"],[29,58,24,49],[29,62,24,53,"nextState"],[29,71,24,62],[29,76,24,67,"State"],[29,88,24,72],[29,89,24,73,"ACTIVE"],[29,95,24,79],[29,97,24,81],[30,8,25,6],[30,15,25,13,"State"],[30,27,25,18],[30,28,25,19,"BEGAN"],[30,33,25,24],[31,6,26,4],[32,6,27,4],[32,13,27,11,"nextState"],[32,22,27,20],[33,4,28,2],[34,4,29,2,"getDirection"],[34,16,29,14,"getDirection"],[34,17,29,14],[34,19,29,17],[35,6,30,4],[35,12,30,10,"config"],[35,18,30,16],[35,21,30,19],[35,25,30,23],[35,26,30,24,"getConfig"],[35,35,30,33],[35,36,30,34],[35,37,30,35],[36,6,31,4],[36,12,31,10],[37,8,32,6,"activeOffsetXStart"],[37,26,32,24],[38,8,33,6,"activeOffsetXEnd"],[38,24,33,22],[39,8,34,6,"activeOffsetYStart"],[39,26,34,24],[40,8,35,6,"activeOffsetYEnd"],[40,24,35,22],[41,8,36,6,"minDist"],[42,6,37,4],[42,7,37,5],[42,10,37,8,"config"],[42,16,37,14],[43,6,38,4],[43,10,38,8,"directions"],[43,20,38,18],[43,23,38,21],[43,25,38,23],[44,6,39,4],[44,10,39,8,"horizontalDirections"],[44,30,39,28],[44,33,39,31],[44,35,39,33],[45,6,40,4],[45,10,40,8],[45,11,40,9],[45,15,40,9,"isnan"],[45,27,40,14],[45,29,40,15,"minDist"],[45,36,40,22],[45,37,40,23],[45,39,40,25],[46,8,41,6],[46,15,41,13,"Hammer"],[46,32,41,19],[46,33,41,20,"DIRECTION_ALL"],[46,46,41,33],[47,6,42,4],[48,6,43,4],[48,10,43,8],[48,11,43,9],[48,15,43,9,"isnan"],[48,27,43,14],[48,29,43,15,"activeOffsetXStart"],[48,47,43,33],[48,48,43,34],[48,50,43,36],[49,8,44,6,"horizontalDirections"],[49,28,44,26],[49,29,44,27,"push"],[49,33,44,31],[49,34,44,32,"Hammer"],[49,51,44,38],[49,52,44,39,"DIRECTION_LEFT"],[49,66,44,53],[49,67,44,54],[50,6,45,4],[51,6,46,4],[51,10,46,8],[51,11,46,9],[51,15,46,9,"isnan"],[51,27,46,14],[51,29,46,15,"activeOffsetXEnd"],[51,45,46,31],[51,46,46,32],[51,48,46,34],[52,8,47,6,"horizontalDirections"],[52,28,47,26],[52,29,47,27,"push"],[52,33,47,31],[52,34,47,32,"Hammer"],[52,51,47,38],[52,52,47,39,"DIRECTION_RIGHT"],[52,67,47,54],[52,68,47,55],[53,6,48,4],[54,6,49,4],[54,10,49,8,"horizontalDirections"],[54,30,49,28],[54,31,49,29,"length"],[54,37,49,35],[54,42,49,40],[54,43,49,41],[54,45,49,43],[55,8,50,6,"horizontalDirections"],[55,28,50,26],[55,31,50,29],[55,32,50,30,"Hammer"],[55,49,50,36],[55,50,50,37,"DIRECTION_HORIZONTAL"],[55,70,50,57],[55,71,50,58],[56,6,51,4],[57,6,52,4,"directions"],[57,16,52,14],[57,19,52,17,"directions"],[57,29,52,27],[57,30,52,28,"concat"],[57,36,52,34],[57,37,52,35,"horizontalDirections"],[57,57,52,55],[57,58,52,56],[58,6,53,4],[58,10,53,8,"verticalDirections"],[58,28,53,26],[58,31,53,29],[58,33,53,31],[59,6,54,4],[59,10,54,8],[59,11,54,9],[59,15,54,9,"isnan"],[59,27,54,14],[59,29,54,15,"activeOffsetYStart"],[59,47,54,33],[59,48,54,34],[59,50,54,36],[60,8,55,6,"verticalDirections"],[60,26,55,24],[60,27,55,25,"push"],[60,31,55,29],[60,32,55,30,"Hammer"],[60,49,55,36],[60,50,55,37,"DIRECTION_UP"],[60,62,55,49],[60,63,55,50],[61,6,56,4],[62,6,57,4],[62,10,57,8],[62,11,57,9],[62,15,57,9,"isnan"],[62,27,57,14],[62,29,57,15,"activeOffsetYEnd"],[62,45,57,31],[62,46,57,32],[62,48,57,34],[63,8,58,6,"verticalDirections"],[63,26,58,24],[63,27,58,25,"push"],[63,31,58,29],[63,32,58,30,"Hammer"],[63,49,58,36],[63,50,58,37,"DIRECTION_DOWN"],[63,64,58,51],[63,65,58,52],[64,6,59,4],[65,6,60,4],[65,10,60,8,"verticalDirections"],[65,28,60,26],[65,29,60,27,"length"],[65,35,60,33],[65,40,60,38],[65,41,60,39],[65,43,60,41],[66,8,61,6,"verticalDirections"],[66,26,61,24],[66,29,61,27],[66,30,61,28,"Hammer"],[66,47,61,34],[66,48,61,35,"DIRECTION_VERTICAL"],[66,66,61,53],[66,67,61,54],[67,6,62,4],[68,6,63,4,"directions"],[68,16,63,14],[68,19,63,17,"directions"],[68,29,63,27],[68,30,63,28,"concat"],[68,36,63,34],[68,37,63,35,"verticalDirections"],[68,55,63,53],[68,56,63,54],[69,6,64,4],[69,10,64,8],[69,11,64,9,"directions"],[69,21,64,19],[69,22,64,20,"length"],[69,28,64,26],[69,30,64,28],[70,8,65,6],[70,15,65,13,"Hammer"],[70,32,65,19],[70,33,65,20,"DIRECTION_NONE"],[70,47,65,34],[71,6,66,4],[72,6,67,4],[72,10,67,8,"directions"],[72,20,67,18],[72,21,67,19],[72,22,67,20],[72,23,67,21],[72,28,67,26,"Hammer"],[72,45,67,32],[72,46,67,33,"DIRECTION_HORIZONTAL"],[72,66,67,53],[72,70,67,57,"directions"],[72,80,67,67],[72,81,67,68],[72,82,67,69],[72,83,67,70],[72,88,67,75,"Hammer"],[72,105,67,81],[72,106,67,82,"DIRECTION_VERTICAL"],[72,124,67,100],[72,126,67,102],[73,8,68,6],[73,15,68,13,"Hammer"],[73,32,68,19],[73,33,68,20,"DIRECTION_ALL"],[73,46,68,33],[74,6,69,4],[75,6,70,4],[75,10,70,8,"horizontalDirections"],[75,30,70,28],[75,31,70,29,"length"],[75,37,70,35],[75,41,70,39,"verticalDirections"],[75,59,70,57],[75,60,70,58,"length"],[75,66,70,64],[75,68,70,66],[76,8,71,6],[76,15,71,13,"Hammer"],[76,32,71,19],[76,33,71,20,"DIRECTION_ALL"],[76,46,71,33],[77,6,72,4],[78,6,73,4],[78,13,73,11,"directions"],[78,23,73,21],[78,24,73,22],[78,25,73,23],[78,26,73,24],[79,4,74,2],[80,4,75,2,"getConfig"],[80,13,75,11,"getConfig"],[80,14,75,11],[80,16,75,14],[81,6,76,4],[81,10,76,8],[81,11,76,9],[81,15,76,13],[81,16,76,14,"hasCustomActivationCriteria"],[81,43,76,41],[81,45,76,43],[82,8,77,6],[83,8,78,6],[84,8,79,6],[84,15,79,13],[85,10,80,8,"minDistSq"],[85,19,80,17],[85,21,80,19],[86,8,81,6],[86,9,81,7],[87,6,82,4],[88,6,83,4],[88,13,83,11],[88,17,83,15],[88,18,83,16,"config"],[88,24,83,22],[89,4,84,2],[90,4,85,2,"shouldFailUnderCustomCriteria"],[90,33,85,31,"shouldFailUnderCustomCriteria"],[90,34,85,32],[91,6,86,4,"deltaX"],[91,12,86,10],[92,6,87,4,"deltaY"],[93,4,88,2],[93,5,88,3],[93,7,88,5,"criteria"],[93,15,88,13],[93,17,88,15],[94,6,89,4],[94,13,89,11],[94,14,89,12],[94,18,89,12,"isnan"],[94,30,89,17],[94,32,89,18,"criteria"],[94,40,89,26],[94,41,89,27,"failOffsetXStart"],[94,57,89,43],[94,58,89,44],[94,62,89,48,"deltaX"],[94,68,89,54],[94,71,89,57,"criteria"],[94,79,89,65],[94,80,89,66,"failOffsetXStart"],[94,96,89,82],[94,100,89,86],[94,101,89,87],[94,105,89,87,"isnan"],[94,117,89,92],[94,119,89,93,"criteria"],[94,127,89,101],[94,128,89,102,"failOffsetXEnd"],[94,142,89,116],[94,143,89,117],[94,147,89,121,"deltaX"],[94,153,89,127],[94,156,89,130,"criteria"],[94,164,89,138],[94,165,89,139,"failOffsetXEnd"],[94,179,89,153],[94,183,89,157],[94,184,89,158],[94,188,89,158,"isnan"],[94,200,89,163],[94,202,89,164,"criteria"],[94,210,89,172],[94,211,89,173,"failOffsetYStart"],[94,227,89,189],[94,228,89,190],[94,232,89,194,"deltaY"],[94,238,89,200],[94,241,89,203,"criteria"],[94,249,89,211],[94,250,89,212,"failOffsetYStart"],[94,266,89,228],[94,270,89,232],[94,271,89,233],[94,275,89,233,"isnan"],[94,287,89,238],[94,289,89,239,"criteria"],[94,297,89,247],[94,298,89,248,"failOffsetYEnd"],[94,312,89,262],[94,313,89,263],[94,317,89,267,"deltaY"],[94,323,89,273],[94,326,89,276,"criteria"],[94,334,89,284],[94,335,89,285,"failOffsetYEnd"],[94,349,89,299],[95,4,90,2],[96,4,91,2,"shouldActivateUnderCustomCriteria"],[96,37,91,35,"shouldActivateUnderCustomCriteria"],[96,38,91,36],[97,6,92,4,"deltaX"],[97,12,92,10],[98,6,93,4,"deltaY"],[98,12,93,10],[99,6,94,4,"velocity"],[100,4,95,2],[100,5,95,3],[100,7,95,5,"criteria"],[100,15,95,13],[100,17,95,15],[101,6,96,4],[101,13,96,11],[101,14,96,12],[101,18,96,12,"isnan"],[101,30,96,17],[101,32,96,18,"criteria"],[101,40,96,26],[101,41,96,27,"activeOffsetXStart"],[101,59,96,45],[101,60,96,46],[101,64,96,50,"deltaX"],[101,70,96,56],[101,73,96,59,"criteria"],[101,81,96,67],[101,82,96,68,"activeOffsetXStart"],[101,100,96,86],[101,104,96,90],[101,105,96,91],[101,109,96,91,"isnan"],[101,121,96,96],[101,123,96,97,"criteria"],[101,131,96,105],[101,132,96,106,"activeOffsetXEnd"],[101,148,96,122],[101,149,96,123],[101,153,96,127,"deltaX"],[101,159,96,133],[101,162,96,136,"criteria"],[101,170,96,144],[101,171,96,145,"activeOffsetXEnd"],[101,187,96,161],[101,191,96,165],[101,192,96,166],[101,196,96,166,"isnan"],[101,208,96,171],[101,210,96,172,"criteria"],[101,218,96,180],[101,219,96,181,"activeOffsetYStart"],[101,237,96,199],[101,238,96,200],[101,242,96,204,"deltaY"],[101,248,96,210],[101,251,96,213,"criteria"],[101,259,96,221],[101,260,96,222,"activeOffsetYStart"],[101,278,96,240],[101,282,96,244],[101,283,96,245],[101,287,96,245,"isnan"],[101,299,96,250],[101,301,96,251,"criteria"],[101,309,96,259],[101,310,96,260,"activeOffsetYEnd"],[101,326,96,276],[101,327,96,277],[101,331,96,281,"deltaY"],[101,337,96,287],[101,340,96,290,"criteria"],[101,348,96,298],[101,349,96,299,"activeOffsetYEnd"],[101,365,96,315],[101,369,96,319],[101,373,96,319,"TEST_MIN_IF_NOT_NAN"],[101,399,96,338],[101,401,96,339],[101,405,96,339,"VEC_LEN_SQ"],[101,422,96,349],[101,424,96,350],[102,8,97,6,"x"],[102,9,97,7],[102,11,97,9,"deltaX"],[102,17,97,15],[103,8,98,6,"y"],[103,9,98,7],[103,11,98,9,"deltaY"],[104,6,99,4],[104,7,99,5],[104,8,99,6],[104,10,99,8,"criteria"],[104,18,99,16],[104,19,99,17,"minDistSq"],[104,28,99,26],[104,29,99,27],[104,33,99,31],[104,37,99,31,"TEST_MIN_IF_NOT_NAN"],[104,63,99,50],[104,65,99,51,"velocity"],[104,73,99,59],[104,74,99,60,"x"],[104,75,99,61],[104,77,99,63,"criteria"],[104,85,99,71],[104,86,99,72,"minVelocityX"],[104,98,99,84],[104,99,99,85],[104,103,99,89],[104,107,99,89,"TEST_MIN_IF_NOT_NAN"],[104,133,99,108],[104,135,99,109,"velocity"],[104,143,99,117],[104,144,99,118,"y"],[104,145,99,119],[104,147,99,121,"criteria"],[104,155,99,129],[104,156,99,130,"minVelocityY"],[104,168,99,142],[104,169,99,143],[104,173,99,147],[104,177,99,147,"TEST_MIN_IF_NOT_NAN"],[104,203,99,166],[104,205,99,167],[104,209,99,167,"VEC_LEN_SQ"],[104,226,99,177],[104,228,99,178,"velocity"],[104,236,99,186],[104,237,99,187],[104,239,99,189,"criteria"],[104,247,99,197],[104,248,99,198,"minVelocitySq"],[104,261,99,211],[104,262,99,212],[105,4,100,2],[106,4,101,2,"shouldMultiFingerPanFail"],[106,28,101,26,"shouldMultiFingerPanFail"],[106,29,101,27],[107,6,102,4,"pointerLength"],[107,19,102,17],[108,6,103,4,"scale"],[108,11,103,9],[109,6,104,4,"deltaRotation"],[110,4,105,2],[110,5,105,3],[110,7,105,5],[111,6,106,4],[111,10,106,8,"pointerLength"],[111,23,106,21],[111,27,106,25],[111,28,106,26],[111,30,106,28],[112,8,107,6],[112,15,107,13],[112,20,107,18],[113,6,108,4],[115,6,110,4],[116,6,111,4],[116,12,111,10,"deltaScale"],[116,22,111,20],[116,25,111,23,"Math"],[116,29,111,27],[116,30,111,28,"abs"],[116,33,111,31],[116,34,111,32,"scale"],[116,39,111,37],[116,42,111,40],[116,43,111,41],[116,44,111,42],[117,6,112,4],[117,12,112,10,"absDeltaRotation"],[117,28,112,26],[117,31,112,29,"Math"],[117,35,112,33],[117,36,112,34,"abs"],[117,39,112,37],[117,40,112,38,"deltaRotation"],[117,53,112,51],[117,54,112,52],[118,6,113,4],[118,10,113,8,"deltaScale"],[118,20,113,18],[118,23,113,21,"MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD"],[118,70,113,57],[118,72,113,59],[119,8,114,6],[120,8,115,6],[121,8,116,6],[121,15,116,13],[121,19,116,17],[122,6,117,4],[123,6,118,4],[123,10,118,8,"absDeltaRotation"],[123,26,118,24],[123,29,118,27,"MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD"],[123,79,118,66],[123,81,118,68],[124,8,119,6],[125,8,120,6],[126,8,121,6],[126,15,121,13],[126,19,121,17],[127,6,122,4],[128,6,123,4],[128,13,123,11],[128,18,123,16],[129,4,124,2],[130,4,125,2,"updateHasCustomActivationCriteria"],[130,37,125,35,"updateHasCustomActivationCriteria"],[130,38,125,36,"criteria"],[130,46,125,44],[130,48,125,46],[131,6,126,4],[131,13,126,11],[131,17,126,11,"isValidNumber"],[131,37,126,24],[131,39,126,25,"criteria"],[131,47,126,33],[131,48,126,34,"minDistSq"],[131,57,126,43],[131,58,126,44],[131,62,126,48],[131,66,126,48,"isValidNumber"],[131,86,126,61],[131,88,126,62,"criteria"],[131,96,126,70],[131,97,126,71,"minVelocityX"],[131,109,126,83],[131,110,126,84],[131,114,126,88],[131,118,126,88,"isValidNumber"],[131,138,126,101],[131,140,126,102,"criteria"],[131,148,126,110],[131,149,126,111,"minVelocityY"],[131,161,126,123],[131,162,126,124],[131,166,126,128],[131,170,126,128,"isValidNumber"],[131,190,126,141],[131,192,126,142,"criteria"],[131,200,126,150],[131,201,126,151,"minVelocitySq"],[131,214,126,164],[131,215,126,165],[131,219,126,169],[131,223,126,169,"isValidNumber"],[131,243,126,182],[131,245,126,183,"criteria"],[131,253,126,191],[131,254,126,192,"activeOffsetXStart"],[131,272,126,210],[131,273,126,211],[131,277,126,215],[131,281,126,215,"isValidNumber"],[131,301,126,228],[131,303,126,229,"criteria"],[131,311,126,237],[131,312,126,238,"activeOffsetXEnd"],[131,328,126,254],[131,329,126,255],[131,333,126,259],[131,337,126,259,"isValidNumber"],[131,357,126,272],[131,359,126,273,"criteria"],[131,367,126,281],[131,368,126,282,"activeOffsetYStart"],[131,386,126,300],[131,387,126,301],[131,391,126,305],[131,395,126,305,"isValidNumber"],[131,415,126,318],[131,417,126,319,"criteria"],[131,425,126,327],[131,426,126,328,"activeOffsetYEnd"],[131,442,126,344],[131,443,126,345],[132,4,127,2],[133,4,128,2,"isGestureEnabledForEvent"],[133,28,128,26,"isGestureEnabledForEvent"],[133,29,128,27,"props"],[133,34,128,32],[133,36,128,34,"_recognizer"],[133,47,128,45],[133,49,128,47,"inputData"],[133,58,128,56],[133,60,128,58],[134,6,129,4],[134,10,129,8],[134,14,129,12],[134,15,129,13,"shouldFailUnderCustomCriteria"],[134,44,129,42],[134,45,129,43,"inputData"],[134,54,129,52],[134,56,129,54,"props"],[134,61,129,59],[134,62,129,60],[134,64,129,62],[135,8,130,6],[135,15,130,13],[136,10,131,8,"failed"],[136,16,131,14],[136,18,131,16],[137,8,132,6],[137,9,132,7],[138,6,133,4],[139,6,134,4],[139,12,134,10,"velocity"],[139,20,134,18],[139,23,134,21],[140,8,135,6,"x"],[140,9,135,7],[140,11,135,9,"inputData"],[140,20,135,18],[140,21,135,19,"velocityX"],[140,30,135,28],[141,8,136,6,"y"],[141,9,136,7],[141,11,136,9,"inputData"],[141,20,136,18],[141,21,136,19,"velocityY"],[142,6,137,4],[142,7,137,5],[143,6,138,4],[143,10,138,8],[143,14,138,12],[143,15,138,13,"hasCustomActivationCriteria"],[143,42,138,40],[143,46,138,44],[143,50,138,48],[143,51,138,49,"shouldActivateUnderCustomCriteria"],[143,84,138,82],[143,85,138,83],[144,8,139,6,"deltaX"],[144,14,139,12],[144,16,139,14,"inputData"],[144,25,139,23],[144,26,139,24,"deltaX"],[144,32,139,30],[145,8,140,6,"deltaY"],[145,14,140,12],[145,16,140,14,"inputData"],[145,25,140,23],[145,26,140,24,"deltaY"],[145,32,140,30],[146,8,141,6,"velocity"],[147,6,142,4],[147,7,142,5],[147,9,142,7,"props"],[147,14,142,12],[147,15,142,13],[147,17,142,15],[148,8,143,6],[148,12,143,10],[148,16,143,14],[148,17,143,15,"shouldMultiFingerPanFail"],[148,41,143,39],[148,42,143,40],[149,10,144,8,"pointerLength"],[149,23,144,21],[149,25,144,23,"inputData"],[149,34,144,32],[149,35,144,33,"maxPointers"],[149,46,144,44],[150,10,145,8,"scale"],[150,15,145,13],[150,17,145,15,"inputData"],[150,26,145,24],[150,27,145,25,"scale"],[150,32,145,30],[151,10,146,8,"deltaRotation"],[151,23,146,21],[151,25,146,23,"inputData"],[151,34,146,32],[151,35,146,33,"deltaRotation"],[152,8,147,6],[152,9,147,7],[152,10,147,8],[152,12,147,10],[153,10,148,8],[153,17,148,15],[154,12,149,10,"failed"],[154,18,149,16],[154,20,149,18],[155,10,150,8],[155,11,150,9],[156,8,151,6],[157,8,152,6],[157,15,152,13],[158,10,153,8,"success"],[158,17,153,15],[158,19,153,17],[159,8,154,6],[159,9,154,7],[160,6,155,4],[161,6,156,4],[161,13,156,11],[162,8,157,6,"success"],[162,15,157,13],[162,17,157,15],[163,6,158,4],[163,7,158,5],[164,4,159,2],[165,2,160,0],[166,2,160,1],[166,6,160,1,"_default"],[166,14,160,1],[166,17,160,1,"exports"],[166,24,160,1],[166,25,160,1,"default"],[166,32,160,1],[166,35,161,15,"PanGestureHandler"],[166,52,161,32],[167,0,161,32],[167,3]],"functionMap":{"names":["<global>","PanGestureHandler","get__name","get__NativeGestureClass","getHammerConfig","getState","getDirection","getConfig","shouldFailUnderCustomCriteria","shouldActivateUnderCustomCriteria","shouldMultiFingerPanFail","updateHasCustomActivationCriteria","isGestureEnabledForEvent"],"mappings":"AAA;ACO;ECC;GDE;EEC;GFE;EGC;GHK;EIC;GJO;EKC;GL6C;EMC;GNS;EOC;GPK;EQC;GRS;ESC;GTuB;EUC;GVE;EWC;GX+B;CDC"}},"type":"js/module"}]}