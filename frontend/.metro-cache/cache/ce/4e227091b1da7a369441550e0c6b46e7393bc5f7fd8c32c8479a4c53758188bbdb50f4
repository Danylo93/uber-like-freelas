{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"../../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":41},"end":{"line":2,"column":36,"index":77}}],"key":"WEWPBXLBFeeryzJLF/iqxrLBTrA=","exportNames":["*"]}},{"name":"../constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":78},"end":{"line":3,"column":50,"index":128}}],"key":"eTOOXVNPpMK2U8dOAmBWjbEJ4yE=","exportNames":["*"]}},{"name":"./GestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":184},"end":{"line":6,"column":46,"index":230}}],"key":"0oKNSZn0AMFFw0m17+cJMO/YqLM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _Platform = _interopRequireDefault(require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\"));\n  var _State = require(_dependencyMap[2], \"../../State\");\n  var _constants = require(_dependencyMap[3], \"../constants\");\n  var _GestureHandler = _interopRequireDefault(require(_dependencyMap[4], \"./GestureHandler\"));\n  class NativeViewGestureHandler extends _GestureHandler.default {\n    // TODO: Implement logic for activation on start\n    // @ts-ignore Logic yet to be implemented\n    shouldActivateOnStart = false;\n    disallowInterruption = false;\n    startX = 0;\n    startY = 0;\n    minDistSq = _constants.DEFAULT_TOUCH_SLOP * _constants.DEFAULT_TOUCH_SLOP;\n    init(ref, propsRef) {\n      super.init(ref, propsRef);\n      this.shouldCancelWhenOutside = true;\n      if (_Platform.default.OS !== 'web') {\n        return;\n      }\n      const view = this.delegate.view;\n      this.restoreViewStyles(view);\n      this.buttonRole = view.getAttribute('role') === 'button';\n    }\n    updateGestureConfig({\n      enabled = true,\n      ...props\n    }) {\n      super.updateGestureConfig({\n        enabled: enabled,\n        ...props\n      });\n      if (this.config.shouldActivateOnStart !== undefined) {\n        this.shouldActivateOnStart = this.config.shouldActivateOnStart;\n      }\n      if (this.config.disallowInterruption !== undefined) {\n        this.disallowInterruption = this.config.disallowInterruption;\n      }\n      const view = this.delegate.view;\n      this.restoreViewStyles(view);\n    }\n    restoreViewStyles(view) {\n      if (!view) {\n        return;\n      }\n      view.style['touchAction'] = 'auto';\n      // @ts-ignore Turns on defualt touch behavior on Safari\n      view.style['WebkitTouchCallout'] = 'auto';\n    }\n    onPointerDown(event) {\n      this.tracker.addToTracker(event);\n      super.onPointerDown(event);\n      this.newPointerAction();\n      this.tryToSendTouchEvent(event);\n    }\n    onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n      super.onPointerAdd(event);\n      this.newPointerAction();\n    }\n    newPointerAction() {\n      const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n      this.startX = lastCoords.x;\n      this.startY = lastCoords.y;\n      if (this.state !== _State.State.UNDETERMINED) {\n        return;\n      }\n      this.begin();\n      const view = this.delegate.view;\n      const isRNGHText = view.hasAttribute('rnghtext');\n      if (this.buttonRole || isRNGHText) {\n        this.activate();\n      }\n    }\n    onPointerMove(event) {\n      this.tracker.track(event);\n      const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n      const dx = this.startX - lastCoords.x;\n      const dy = this.startY - lastCoords.y;\n      const distSq = dx * dx + dy * dy;\n      if (distSq >= this.minDistSq) {\n        if (this.buttonRole && this.state === _State.State.ACTIVE) {\n          this.cancel();\n        } else if (!this.buttonRole && this.state === _State.State.BEGAN) {\n          this.activate();\n        }\n      }\n    }\n    onPointerLeave() {\n      if (this.state === _State.State.BEGAN || this.state === _State.State.ACTIVE) {\n        this.cancel();\n      }\n    }\n    onPointerUp(event) {\n      super.onPointerUp(event);\n      this.onUp(event);\n    }\n    onPointerRemove(event) {\n      super.onPointerRemove(event);\n      this.onUp(event);\n    }\n    onUp(event) {\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.tracker.trackedPointersCount === 0) {\n        if (this.state === _State.State.ACTIVE) {\n          this.end();\n        } else {\n          this.fail();\n        }\n      }\n    }\n    shouldRecognizeSimultaneously(handler) {\n      if (super.shouldRecognizeSimultaneously(handler)) {\n        return true;\n      }\n      if (handler instanceof NativeViewGestureHandler && handler.state === _State.State.ACTIVE && handler.disallowsInterruption()) {\n        return false;\n      }\n      const canBeInterrupted = !this.disallowInterruption;\n      if (this.state === _State.State.ACTIVE && handler.state === _State.State.ACTIVE && canBeInterrupted) {\n        return false;\n      }\n      return this.state === _State.State.ACTIVE && canBeInterrupted && handler.handlerTag > 0;\n    }\n    shouldBeCancelledByOther(_handler) {\n      return !this.disallowInterruption;\n    }\n    disallowsInterruption() {\n      return this.disallowInterruption;\n    }\n    isButton() {\n      return this.buttonRole;\n    }\n  }\n  exports.default = NativeViewGestureHandler;\n});","lineCount":140,"map":[[8,2,2,0],[8,6,2,0,"_State"],[8,12,2,0],[8,15,2,0,"require"],[8,22,2,0],[8,23,2,0,"_dependencyMap"],[8,37,2,0],[9,2,3,0],[9,6,3,0,"_constants"],[9,16,3,0],[9,19,3,0,"require"],[9,26,3,0],[9,27,3,0,"_dependencyMap"],[9,41,3,0],[10,2,6,0],[10,6,6,0,"_GestureHandler"],[10,21,6,0],[10,24,6,0,"_interopRequireDefault"],[10,46,6,0],[10,47,6,0,"require"],[10,54,6,0],[10,55,6,0,"_dependencyMap"],[10,69,6,0],[11,2,7,15],[11,8,7,21,"NativeViewGestureHandler"],[11,32,7,45],[11,41,7,54,"GestureHandler"],[11,64,7,68],[11,65,7,69],[12,4,10,2],[13,4,11,2],[14,4,12,10,"shouldActivateOnStart"],[14,25,12,31],[14,28,12,34],[14,33,12,39],[15,4,13,10,"disallowInterruption"],[15,24,13,30],[15,27,13,33],[15,32,13,38],[16,4,15,10,"startX"],[16,10,15,16],[16,13,15,19],[16,14,15,20],[17,4,16,10,"startY"],[17,10,16,16],[17,13,16,19],[17,14,16,20],[18,4,17,10,"minDistSq"],[18,13,17,19],[18,16,17,22,"DEFAULT_TOUCH_SLOP"],[18,45,17,40],[18,48,17,43,"DEFAULT_TOUCH_SLOP"],[18,77,17,61],[19,4,19,9,"init"],[19,8,19,13,"init"],[19,9,19,14,"ref"],[19,12,19,25],[19,14,19,27,"propsRef"],[19,22,19,61],[19,24,19,69],[20,6,20,4],[20,11,20,9],[20,12,20,10,"init"],[20,16,20,14],[20,17,20,15,"ref"],[20,20,20,18],[20,22,20,20,"propsRef"],[20,30,20,28],[20,31,20,29],[21,6,22,4],[21,10,22,8],[21,11,22,9,"shouldCancelWhenOutside"],[21,34,22,32],[21,37,22,35],[21,41,22,39],[22,6,24,4],[22,10,24,8,"Platform"],[22,27,24,16],[22,28,24,17,"OS"],[22,30,24,19],[22,35,24,24],[22,40,24,29],[22,42,24,31],[23,8,25,6],[24,6,26,4],[25,6,28,4],[25,12,28,10,"view"],[25,16,28,14],[25,19,28,17],[25,23,28,21],[25,24,28,22,"delegate"],[25,32,28,30],[25,33,28,31,"view"],[25,37,28,50],[26,6,30,4],[26,10,30,8],[26,11,30,9,"restoreViewStyles"],[26,28,30,26],[26,29,30,27,"view"],[26,33,30,31],[26,34,30,32],[27,6,31,4],[27,10,31,8],[27,11,31,9,"buttonRole"],[27,21,31,19],[27,24,31,22,"view"],[27,28,31,26],[27,29,31,27,"getAttribute"],[27,41,31,39],[27,42,31,40],[27,48,31,46],[27,49,31,47],[27,54,31,52],[27,62,31,60],[28,4,32,2],[29,4,34,9,"updateGestureConfig"],[29,23,34,28,"updateGestureConfig"],[29,24,34,29],[30,6,34,31,"enabled"],[30,13,34,38],[30,16,34,41],[30,20,34,45],[31,6,34,47],[31,9,34,50,"props"],[32,4,34,64],[32,5,34,65],[32,7,34,73],[33,6,35,4],[33,11,35,9],[33,12,35,10,"updateGestureConfig"],[33,31,35,29],[33,32,35,30],[34,8,35,32,"enabled"],[34,15,35,39],[34,17,35,41,"enabled"],[34,24,35,48],[35,8,35,50],[35,11,35,53,"props"],[36,6,35,59],[36,7,35,60],[36,8,35,61],[37,6,37,4],[37,10,37,8],[37,14,37,12],[37,15,37,13,"config"],[37,21,37,19],[37,22,37,20,"shouldActivateOnStart"],[37,43,37,41],[37,48,37,46,"undefined"],[37,57,37,55],[37,59,37,57],[38,8,38,6],[38,12,38,10],[38,13,38,11,"shouldActivateOnStart"],[38,34,38,32],[38,37,38,35],[38,41,38,39],[38,42,38,40,"config"],[38,48,38,46],[38,49,38,47,"shouldActivateOnStart"],[38,70,38,68],[39,6,39,4],[40,6,40,4],[40,10,40,8],[40,14,40,12],[40,15,40,13,"config"],[40,21,40,19],[40,22,40,20,"disallowInterruption"],[40,42,40,40],[40,47,40,45,"undefined"],[40,56,40,54],[40,58,40,56],[41,8,41,6],[41,12,41,10],[41,13,41,11,"disallowInterruption"],[41,33,41,31],[41,36,41,34],[41,40,41,38],[41,41,41,39,"config"],[41,47,41,45],[41,48,41,46,"disallowInterruption"],[41,68,41,66],[42,6,42,4],[43,6,44,4],[43,12,44,10,"view"],[43,16,44,14],[43,19,44,17],[43,23,44,21],[43,24,44,22,"delegate"],[43,32,44,30],[43,33,44,31,"view"],[43,37,44,50],[44,6,45,4],[44,10,45,8],[44,11,45,9,"restoreViewStyles"],[44,28,45,26],[44,29,45,27,"view"],[44,33,45,31],[44,34,45,32],[45,4,46,2],[46,4,48,10,"restoreViewStyles"],[46,21,48,27,"restoreViewStyles"],[46,22,48,28,"view"],[46,26,48,45],[46,28,48,47],[47,6,49,4],[47,10,49,8],[47,11,49,9,"view"],[47,15,49,13],[47,17,49,15],[48,8,50,6],[49,6,51,4],[50,6,53,4,"view"],[50,10,53,8],[50,11,53,9,"style"],[50,16,53,14],[50,17,53,15],[50,30,53,28],[50,31,53,29],[50,34,53,32],[50,40,53,38],[51,6,54,4],[52,6,55,4,"view"],[52,10,55,8],[52,11,55,9,"style"],[52,16,55,14],[52,17,55,15],[52,37,55,35],[52,38,55,36],[52,41,55,39],[52,47,55,45],[53,4,56,2],[54,4,58,12,"onPointerDown"],[54,17,58,25,"onPointerDown"],[54,18,58,26,"event"],[54,23,58,45],[54,25,58,53],[55,6,59,4],[55,10,59,8],[55,11,59,9,"tracker"],[55,18,59,16],[55,19,59,17,"addToTracker"],[55,31,59,29],[55,32,59,30,"event"],[55,37,59,35],[55,38,59,36],[56,6,60,4],[56,11,60,9],[56,12,60,10,"onPointerDown"],[56,25,60,23],[56,26,60,24,"event"],[56,31,60,29],[56,32,60,30],[57,6,61,4],[57,10,61,8],[57,11,61,9,"newPointerAction"],[57,27,61,25],[57,28,61,26],[57,29,61,27],[58,6,63,4],[58,10,63,8],[58,11,63,9,"tryToSendTouchEvent"],[58,30,63,28],[58,31,63,29,"event"],[58,36,63,34],[58,37,63,35],[59,4,64,2],[60,4,66,12,"onPointerAdd"],[60,16,66,24,"onPointerAdd"],[60,17,66,25,"event"],[60,22,66,44],[60,24,66,52],[61,6,67,4],[61,10,67,8],[61,11,67,9,"tracker"],[61,18,67,16],[61,19,67,17,"addToTracker"],[61,31,67,29],[61,32,67,30,"event"],[61,37,67,35],[61,38,67,36],[62,6,68,4],[62,11,68,9],[62,12,68,10,"onPointerAdd"],[62,24,68,22],[62,25,68,23,"event"],[62,30,68,28],[62,31,68,29],[63,6,69,4],[63,10,69,8],[63,11,69,9,"newPointerAction"],[63,27,69,25],[63,28,69,26],[63,29,69,27],[64,4,70,2],[65,4,72,10,"newPointerAction"],[65,20,72,26,"newPointerAction"],[65,21,72,26],[65,23,72,35],[66,6,73,4],[66,12,73,10,"lastCoords"],[66,22,73,20],[66,25,73,23],[66,29,73,27],[66,30,73,28,"tracker"],[66,37,73,35],[66,38,73,36,"getAbsoluteCoordsAverage"],[66,62,73,60],[66,63,73,61],[66,64,73,62],[67,6,74,4],[67,10,74,8],[67,11,74,9,"startX"],[67,17,74,15],[67,20,74,18,"lastCoords"],[67,30,74,28],[67,31,74,29,"x"],[67,32,74,30],[68,6,75,4],[68,10,75,8],[68,11,75,9,"startY"],[68,17,75,15],[68,20,75,18,"lastCoords"],[68,30,75,28],[68,31,75,29,"y"],[68,32,75,30],[69,6,77,4],[69,10,77,8],[69,14,77,12],[69,15,77,13,"state"],[69,20,77,18],[69,25,77,23,"State"],[69,37,77,28],[69,38,77,29,"UNDETERMINED"],[69,50,77,41],[69,52,77,43],[70,8,78,6],[71,6,79,4],[72,6,81,4],[72,10,81,8],[72,11,81,9,"begin"],[72,16,81,14],[72,17,81,15],[72,18,81,16],[73,6,83,4],[73,12,83,10,"view"],[73,16,83,14],[73,19,83,17],[73,23,83,21],[73,24,83,22,"delegate"],[73,32,83,30],[73,33,83,31,"view"],[73,37,83,50],[74,6,84,4],[74,12,84,10,"isRNGHText"],[74,22,84,20],[74,25,84,23,"view"],[74,29,84,27],[74,30,84,28,"hasAttribute"],[74,42,84,40],[74,43,84,41],[74,53,84,51],[74,54,84,52],[75,6,86,4],[75,10,86,8],[75,14,86,12],[75,15,86,13,"buttonRole"],[75,25,86,23],[75,29,86,27,"isRNGHText"],[75,39,86,37],[75,41,86,39],[76,8,87,6],[76,12,87,10],[76,13,87,11,"activate"],[76,21,87,19],[76,22,87,20],[76,23,87,21],[77,6,88,4],[78,4,89,2],[79,4,91,12,"onPointerMove"],[79,17,91,25,"onPointerMove"],[79,18,91,26,"event"],[79,23,91,45],[79,25,91,53],[80,6,92,4],[80,10,92,8],[80,11,92,9,"tracker"],[80,18,92,16],[80,19,92,17,"track"],[80,24,92,22],[80,25,92,23,"event"],[80,30,92,28],[80,31,92,29],[81,6,94,4],[81,12,94,10,"lastCoords"],[81,22,94,20],[81,25,94,23],[81,29,94,27],[81,30,94,28,"tracker"],[81,37,94,35],[81,38,94,36,"getAbsoluteCoordsAverage"],[81,62,94,60],[81,63,94,61],[81,64,94,62],[82,6,95,4],[82,12,95,10,"dx"],[82,14,95,12],[82,17,95,15],[82,21,95,19],[82,22,95,20,"startX"],[82,28,95,26],[82,31,95,29,"lastCoords"],[82,41,95,39],[82,42,95,40,"x"],[82,43,95,41],[83,6,96,4],[83,12,96,10,"dy"],[83,14,96,12],[83,17,96,15],[83,21,96,19],[83,22,96,20,"startY"],[83,28,96,26],[83,31,96,29,"lastCoords"],[83,41,96,39],[83,42,96,40,"y"],[83,43,96,41],[84,6,97,4],[84,12,97,10,"distSq"],[84,18,97,16],[84,21,97,19,"dx"],[84,23,97,21],[84,26,97,24,"dx"],[84,28,97,26],[84,31,97,29,"dy"],[84,33,97,31],[84,36,97,34,"dy"],[84,38,97,36],[85,6,99,4],[85,10,99,8,"distSq"],[85,16,99,14],[85,20,99,18],[85,24,99,22],[85,25,99,23,"minDistSq"],[85,34,99,32],[85,36,99,34],[86,8,100,6],[86,12,100,10],[86,16,100,14],[86,17,100,15,"buttonRole"],[86,27,100,25],[86,31,100,29],[86,35,100,33],[86,36,100,34,"state"],[86,41,100,39],[86,46,100,44,"State"],[86,58,100,49],[86,59,100,50,"ACTIVE"],[86,65,100,56],[86,67,100,58],[87,10,101,8],[87,14,101,12],[87,15,101,13,"cancel"],[87,21,101,19],[87,22,101,20],[87,23,101,21],[88,8,102,6],[88,9,102,7],[88,15,102,13],[88,19,102,17],[88,20,102,18],[88,24,102,22],[88,25,102,23,"buttonRole"],[88,35,102,33],[88,39,102,37],[88,43,102,41],[88,44,102,42,"state"],[88,49,102,47],[88,54,102,52,"State"],[88,66,102,57],[88,67,102,58,"BEGAN"],[88,72,102,63],[88,74,102,65],[89,10,103,8],[89,14,103,12],[89,15,103,13,"activate"],[89,23,103,21],[89,24,103,22],[89,25,103,23],[90,8,104,6],[91,6,105,4],[92,4,106,2],[93,4,108,12,"onPointerLeave"],[93,18,108,26,"onPointerLeave"],[93,19,108,26],[93,21,108,35],[94,6,109,4],[94,10,109,8],[94,14,109,12],[94,15,109,13,"state"],[94,20,109,18],[94,25,109,23,"State"],[94,37,109,28],[94,38,109,29,"BEGAN"],[94,43,109,34],[94,47,109,38],[94,51,109,42],[94,52,109,43,"state"],[94,57,109,48],[94,62,109,53,"State"],[94,74,109,58],[94,75,109,59,"ACTIVE"],[94,81,109,65],[94,83,109,67],[95,8,110,6],[95,12,110,10],[95,13,110,11,"cancel"],[95,19,110,17],[95,20,110,18],[95,21,110,19],[96,6,111,4],[97,4,112,2],[98,4,114,12,"onPointerUp"],[98,15,114,23,"onPointerUp"],[98,16,114,24,"event"],[98,21,114,43],[98,23,114,51],[99,6,115,4],[99,11,115,9],[99,12,115,10,"onPointerUp"],[99,23,115,21],[99,24,115,22,"event"],[99,29,115,27],[99,30,115,28],[100,6,116,4],[100,10,116,8],[100,11,116,9,"onUp"],[100,15,116,13],[100,16,116,14,"event"],[100,21,116,19],[100,22,116,20],[101,4,117,2],[102,4,119,12,"onPointerRemove"],[102,19,119,27,"onPointerRemove"],[102,20,119,28,"event"],[102,25,119,47],[102,27,119,55],[103,6,120,4],[103,11,120,9],[103,12,120,10,"onPointerRemove"],[103,27,120,25],[103,28,120,26,"event"],[103,33,120,31],[103,34,120,32],[104,6,121,4],[104,10,121,8],[104,11,121,9,"onUp"],[104,15,121,13],[104,16,121,14,"event"],[104,21,121,19],[104,22,121,20],[105,4,122,2],[106,4,124,10,"onUp"],[106,8,124,14,"onUp"],[106,9,124,15,"event"],[106,14,124,34],[106,16,124,42],[107,6,125,4],[107,10,125,8],[107,11,125,9,"tracker"],[107,18,125,16],[107,19,125,17,"removeFromTracker"],[107,36,125,34],[107,37,125,35,"event"],[107,42,125,40],[107,43,125,41,"pointerId"],[107,52,125,50],[107,53,125,51],[108,6,127,4],[108,10,127,8],[108,14,127,12],[108,15,127,13,"tracker"],[108,22,127,20],[108,23,127,21,"trackedPointersCount"],[108,43,127,41],[108,48,127,46],[108,49,127,47],[108,51,127,49],[109,8,128,6],[109,12,128,10],[109,16,128,14],[109,17,128,15,"state"],[109,22,128,20],[109,27,128,25,"State"],[109,39,128,30],[109,40,128,31,"ACTIVE"],[109,46,128,37],[109,48,128,39],[110,10,129,8],[110,14,129,12],[110,15,129,13,"end"],[110,18,129,16],[110,19,129,17],[110,20,129,18],[111,8,130,6],[111,9,130,7],[111,15,130,13],[112,10,131,8],[112,14,131,12],[112,15,131,13,"fail"],[112,19,131,17],[112,20,131,18],[112,21,131,19],[113,8,132,6],[114,6,133,4],[115,4,134,2],[116,4,136,9,"shouldRecognizeSimultaneously"],[116,33,136,38,"shouldRecognizeSimultaneously"],[116,34,136,39,"handler"],[116,41,136,62],[116,43,136,73],[117,6,137,4],[117,10,137,8],[117,15,137,13],[117,16,137,14,"shouldRecognizeSimultaneously"],[117,45,137,43],[117,46,137,44,"handler"],[117,53,137,51],[117,54,137,52],[117,56,137,54],[118,8,138,6],[118,15,138,13],[118,19,138,17],[119,6,139,4],[120,6,141,4],[120,10,142,6,"handler"],[120,17,142,13],[120,29,142,25,"NativeViewGestureHandler"],[120,53,142,49],[120,57,143,6,"handler"],[120,64,143,13],[120,65,143,14,"state"],[120,70,143,19],[120,75,143,24,"State"],[120,87,143,29],[120,88,143,30,"ACTIVE"],[120,94,143,36],[120,98,144,6,"handler"],[120,105,144,13],[120,106,144,14,"disallowsInterruption"],[120,127,144,35],[120,128,144,36],[120,129,144,37],[120,131,145,6],[121,8,146,6],[121,15,146,13],[121,20,146,18],[122,6,147,4],[123,6,149,4],[123,12,149,10,"canBeInterrupted"],[123,28,149,26],[123,31,149,29],[123,32,149,30],[123,36,149,34],[123,37,149,35,"disallowInterruption"],[123,57,149,55],[124,6,151,4],[124,10,152,6],[124,14,152,10],[124,15,152,11,"state"],[124,20,152,16],[124,25,152,21,"State"],[124,37,152,26],[124,38,152,27,"ACTIVE"],[124,44,152,33],[124,48,153,6,"handler"],[124,55,153,13],[124,56,153,14,"state"],[124,61,153,19],[124,66,153,24,"State"],[124,78,153,29],[124,79,153,30,"ACTIVE"],[124,85,153,36],[124,89,154,6,"canBeInterrupted"],[124,105,154,22],[124,107,155,6],[125,8,156,6],[125,15,156,13],[125,20,156,18],[126,6,157,4],[127,6,159,4],[127,13,160,6],[127,17,160,10],[127,18,160,11,"state"],[127,23,160,16],[127,28,160,21,"State"],[127,40,160,26],[127,41,160,27,"ACTIVE"],[127,47,160,33],[127,51,160,37,"canBeInterrupted"],[127,67,160,53],[127,71,160,57,"handler"],[127,78,160,64],[127,79,160,65,"handlerTag"],[127,89,160,75],[127,92,160,78],[127,93,160,79],[128,4,162,2],[129,4,164,9,"shouldBeCancelledByOther"],[129,28,164,33,"shouldBeCancelledByOther"],[129,29,164,34,"_handler"],[129,37,164,58],[129,39,164,69],[130,6,165,4],[130,13,165,11],[130,14,165,12],[130,18,165,16],[130,19,165,17,"disallowInterruption"],[130,39,165,37],[131,4,166,2],[132,4,168,9,"disallowsInterruption"],[132,25,168,30,"disallowsInterruption"],[132,26,168,30],[132,28,168,42],[133,6,169,4],[133,13,169,11],[133,17,169,15],[133,18,169,16,"disallowInterruption"],[133,38,169,36],[134,4,170,2],[135,4,172,9,"isButton"],[135,12,172,17,"isButton"],[135,13,172,17],[135,15,172,29],[136,6,173,4],[136,13,173,11],[136,17,173,15],[136,18,173,16,"buttonRole"],[136,28,173,26],[137,4,174,2],[138,2,175,0],[139,2,175,1,"exports"],[139,9,175,1],[139,10,175,1,"default"],[139,17,175,1],[139,20,175,1,"NativeViewGestureHandler"],[139,44,175,1],[140,0,175,1],[140,3]],"functionMap":{"names":["<global>","NativeViewGestureHandler","init","updateGestureConfig","restoreViewStyles","onPointerDown","onPointerAdd","newPointerAction","onPointerMove","onPointerLeave","onPointerUp","onPointerRemove","onUp","shouldRecognizeSimultaneously","shouldBeCancelledByOther","disallowsInterruption","isButton"],"mappings":"AAA;eCM;ECY;GDa;EEE;GFY;EGE;GHQ;EIE;GJM;EKE;GLI;EME;GNiB;EOE;GPe;EQE;GRI;ESE;GTG;EUE;GVG;EWE;GXU;EYE;GZ0B;EaE;GbE;EcE;GdE;EeE;GfE;CDC"}},"type":"js/module"}]}