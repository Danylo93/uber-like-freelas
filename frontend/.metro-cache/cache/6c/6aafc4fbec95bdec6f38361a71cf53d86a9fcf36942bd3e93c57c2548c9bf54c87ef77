{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/FlatList","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"DmaJKCBnIi5ZEPZkQdrt7FKBDEo=","exportNames":["*"]}},{"name":"./web/utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":56},"end":{"line":4,"column":45,"index":101}}],"key":"0QFKLjYfUp4whm+krxBKZT/mgNk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = findNodeHandle;\n  var _FlatList = _interopRequireDefault(require(_dependencyMap[1], \"react-native-web/dist/exports/FlatList\"));\n  var _utils = require(_dependencyMap[2], \"./web/utils\");\n  function findNodeHandle(viewRef) {\n    // TODO: Remove this once we remove old API.\n    if (viewRef instanceof _FlatList.default) {\n      // @ts-ignore This is the only way to get the scroll ref from FlatList.\n      return viewRef._listRef._scrollRef.firstChild;\n    }\n    // Old API assumes that child handler is HTMLElement.\n    // However, if we nest handlers, we will get ref to another handler.\n    // In that case, we want to recursively call findNodeHandle with new handler viewTag (which can also be ref to another handler).\n    if (viewRef?.viewTag !== undefined) {\n      return findNodeHandle(viewRef.viewTag);\n    }\n    if (viewRef instanceof Element) {\n      if (viewRef.style.display === 'contents') {\n        return findNodeHandle(viewRef.firstChild);\n      }\n      return viewRef;\n    }\n    if ((0, _utils.isRNSVGElement)(viewRef)) {\n      return viewRef.elementRef.current;\n    }\n\n    // In new API, we receive ref object which `current` field points to  wrapper `div` with `display: contents;`.\n    // We want to return the first descendant (in DFS order) that doesn't have this property.\n    let element = viewRef?.current;\n    while (element && element.style.display === 'contents') {\n      element = element.firstChild;\n    }\n    return element;\n  }\n});","lineCount":41,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[8,20,1,13,"findNodeHandle"],[8,34,1,13],[9,2,1,13],[9,6,1,13,"_FlatList"],[9,15,1,13],[9,18,1,13,"_interopRequireDefault"],[9,40,1,13],[9,41,1,13,"require"],[9,48,1,13],[9,49,1,13,"_dependencyMap"],[9,63,1,13],[10,2,4,0],[10,6,4,0,"_utils"],[10,12,4,0],[10,15,4,0,"require"],[10,22,4,0],[10,23,4,0,"_dependencyMap"],[10,37,4,0],[11,2,5,15],[11,11,5,24,"findNodeHandle"],[11,25,5,38,"findNodeHandle"],[11,26,5,39,"viewRef"],[11,33,5,46],[11,35,5,48],[12,4,6,2],[13,4,7,2],[13,8,7,6,"viewRef"],[13,15,7,13],[13,27,7,25,"FlatList"],[13,44,7,33],[13,46,7,35],[14,6,8,4],[15,6,9,4],[15,13,9,11,"viewRef"],[15,20,9,18],[15,21,9,19,"_listRef"],[15,29,9,27],[15,30,9,28,"_scrollRef"],[15,40,9,38],[15,41,9,39,"firstChild"],[15,51,9,49],[16,4,10,2],[17,4,11,2],[18,4,12,2],[19,4,13,2],[20,4,14,2],[20,8,14,6,"viewRef"],[20,15,14,13],[20,17,14,15,"viewTag"],[20,24,14,22],[20,29,14,27,"undefined"],[20,38,14,36],[20,40,14,38],[21,6,15,4],[21,13,15,11,"findNodeHandle"],[21,27,15,25],[21,28,15,26,"viewRef"],[21,35,15,33],[21,36,15,34,"viewTag"],[21,43,15,41],[21,44,15,42],[22,4,16,2],[23,4,17,2],[23,8,17,6,"viewRef"],[23,15,17,13],[23,27,17,25,"Element"],[23,34,17,32],[23,36,17,34],[24,6,18,4],[24,10,18,8,"viewRef"],[24,17,18,15],[24,18,18,16,"style"],[24,23,18,21],[24,24,18,22,"display"],[24,31,18,29],[24,36,18,34],[24,46,18,44],[24,48,18,46],[25,8,19,6],[25,15,19,13,"findNodeHandle"],[25,29,19,27],[25,30,19,28,"viewRef"],[25,37,19,35],[25,38,19,36,"firstChild"],[25,48,19,46],[25,49,19,47],[26,6,20,4],[27,6,21,4],[27,13,21,11,"viewRef"],[27,20,21,18],[28,4,22,2],[29,4,23,2],[29,8,23,6],[29,12,23,6,"isRNSVGElement"],[29,33,23,20],[29,35,23,21,"viewRef"],[29,42,23,28],[29,43,23,29],[29,45,23,31],[30,6,24,4],[30,13,24,11,"viewRef"],[30,20,24,18],[30,21,24,19,"elementRef"],[30,31,24,29],[30,32,24,30,"current"],[30,39,24,37],[31,4,25,2],[33,4,27,2],[34,4,28,2],[35,4,29,2],[35,8,29,6,"element"],[35,15,29,13],[35,18,29,16,"viewRef"],[35,25,29,23],[35,27,29,25,"current"],[35,34,29,32],[36,4,30,2],[36,11,30,9,"element"],[36,18,30,16],[36,22,30,20,"element"],[36,29,30,27],[36,30,30,28,"style"],[36,35,30,33],[36,36,30,34,"display"],[36,43,30,41],[36,48,30,46],[36,58,30,56],[36,60,30,58],[37,6,31,4,"element"],[37,13,31,11],[37,16,31,14,"element"],[37,23,31,21],[37,24,31,22,"firstChild"],[37,34,31,32],[38,4,32,2],[39,4,33,2],[39,11,33,9,"element"],[39,18,33,16],[40,2,34,0],[41,0,34,1],[41,3]],"functionMap":{"names":["<global>","findNodeHandle"],"mappings":"AAA;eCI;CD6B"}},"type":"js/module"}]}