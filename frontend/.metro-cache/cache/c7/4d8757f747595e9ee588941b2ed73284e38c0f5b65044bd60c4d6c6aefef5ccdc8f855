{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"../../PointerType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":48,"index":63}}],"key":"PNpP2j+zRZwLQ3w6ZmXPMJNakiU=","exportNames":["*"]}},{"name":"../../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":64},"end":{"line":4,"column":36,"index":100}}],"key":"WEWPBXLBFeeryzJLF/iqxrLBTrA=","exportNames":["*"]}},{"name":"./PointerTracker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":101},"end":{"line":5,"column":46,"index":147}}],"key":"1iEqYtl129GsycZ0U5VpXvfk4T0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _PointerType = require(_dependencyMap[1], \"../../PointerType\");\n  var _State = require(_dependencyMap[2], \"../../State\");\n  var _PointerTracker = _interopRequireDefault(require(_dependencyMap[3], \"./PointerTracker\"));\n  class GestureHandlerOrchestrator {\n    gestureHandlers = [];\n    awaitingHandlers = [];\n    awaitingHandlersTags = new Set();\n    handlingChangeSemaphore = 0;\n    activationIndex = 0;\n\n    // Private beacuse of Singleton\n    // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n    constructor() {}\n    scheduleFinishedHandlersCleanup() {\n      if (this.handlingChangeSemaphore === 0) {\n        this.cleanupFinishedHandlers();\n      }\n    }\n    cleanHandler(handler) {\n      handler.reset();\n      handler.active = false;\n      handler.awaiting = false;\n      handler.activationIndex = Number.MAX_VALUE;\n    }\n    removeHandlerFromOrchestrator(handler) {\n      const indexInGestureHandlers = this.gestureHandlers.indexOf(handler);\n      const indexInAwaitingHandlers = this.awaitingHandlers.indexOf(handler);\n      if (indexInGestureHandlers >= 0) {\n        this.gestureHandlers.splice(indexInGestureHandlers, 1);\n      }\n      if (indexInAwaitingHandlers >= 0) {\n        this.awaitingHandlers.splice(indexInAwaitingHandlers, 1);\n        this.awaitingHandlersTags.delete(handler.handlerTag);\n      }\n    }\n    cleanupFinishedHandlers() {\n      const handlersToRemove = new Set();\n      for (let i = this.gestureHandlers.length - 1; i >= 0; --i) {\n        const handler = this.gestureHandlers[i];\n        if (this.isFinished(handler.state) && !handler.awaiting) {\n          this.cleanHandler(handler);\n          handlersToRemove.add(handler);\n        }\n      }\n      this.gestureHandlers = this.gestureHandlers.filter(handler => !handlersToRemove.has(handler));\n    }\n    hasOtherHandlerToWaitFor(handler) {\n      const hasToWaitFor = otherHandler => {\n        return !this.isFinished(otherHandler.state) && this.shouldHandlerWaitForOther(handler, otherHandler);\n      };\n      return this.gestureHandlers.some(hasToWaitFor);\n    }\n    shouldBeCancelledByFinishedHandler(handler) {\n      const shouldBeCancelled = otherHandler => {\n        return this.shouldHandlerWaitForOther(handler, otherHandler) && otherHandler.state === _State.State.END;\n      };\n      return this.gestureHandlers.some(shouldBeCancelled);\n    }\n    tryActivate(handler) {\n      if (this.shouldBeCancelledByFinishedHandler(handler)) {\n        handler.cancel();\n        return;\n      }\n      if (this.hasOtherHandlerToWaitFor(handler)) {\n        this.addAwaitingHandler(handler);\n        return;\n      }\n      const handlerState = handler.state;\n      if (handlerState === _State.State.CANCELLED || handlerState === _State.State.FAILED) {\n        return;\n      }\n      if (this.shouldActivate(handler)) {\n        this.makeActive(handler);\n        return;\n      }\n      if (handlerState === _State.State.ACTIVE) {\n        handler.fail();\n        return;\n      }\n      if (handlerState === _State.State.BEGAN) {\n        handler.cancel();\n      }\n    }\n    shouldActivate(handler) {\n      const shouldBeCancelledBy = otherHandler => {\n        return this.shouldHandlerBeCancelledBy(handler, otherHandler);\n      };\n      return !this.gestureHandlers.some(shouldBeCancelledBy);\n    }\n    cleanupAwaitingHandlers(handler) {\n      const shouldWait = otherHandler => {\n        return !otherHandler.awaiting && this.shouldHandlerWaitForOther(otherHandler, handler);\n      };\n      for (const otherHandler of this.awaitingHandlers) {\n        if (shouldWait(otherHandler)) {\n          this.cleanHandler(otherHandler);\n          this.awaitingHandlersTags.delete(otherHandler.handlerTag);\n        }\n      }\n      this.awaitingHandlers = this.awaitingHandlers.filter(otherHandler => this.awaitingHandlersTags.has(otherHandler.handlerTag));\n    }\n    onHandlerStateChange(handler, newState, oldState, sendIfDisabled) {\n      if (!handler.enabled && !sendIfDisabled) {\n        return;\n      }\n      this.handlingChangeSemaphore += 1;\n      if (this.isFinished(newState)) {\n        for (const otherHandler of this.awaitingHandlers) {\n          if (!this.shouldHandlerWaitForOther(otherHandler, handler) || !this.awaitingHandlersTags.has(otherHandler.handlerTag)) {\n            continue;\n          }\n          if (newState !== _State.State.END) {\n            this.tryActivate(otherHandler);\n            continue;\n          }\n          otherHandler.cancel();\n          if (otherHandler.state === _State.State.END) {\n            // Handle edge case, where discrete gestures end immediately after activation thus\n            // their state is set to END and when the gesture they are waiting for activates they\n            // should be cancelled, however `cancel` was never sent as gestures were already in the END state.\n            // Send synthetic BEGAN -> CANCELLED to properly handle JS logic\n            otherHandler.sendEvent(_State.State.CANCELLED, _State.State.BEGAN);\n          }\n          otherHandler.awaiting = false;\n        }\n      }\n      if (newState === _State.State.ACTIVE) {\n        this.tryActivate(handler);\n      } else if (oldState === _State.State.ACTIVE || oldState === _State.State.END) {\n        if (handler.active) {\n          handler.sendEvent(newState, oldState);\n        } else if (oldState === _State.State.ACTIVE && (newState === _State.State.CANCELLED || newState === _State.State.FAILED)) {\n          handler.sendEvent(newState, _State.State.BEGAN);\n        }\n      } else if (oldState !== _State.State.UNDETERMINED || newState !== _State.State.CANCELLED) {\n        handler.sendEvent(newState, oldState);\n      }\n      this.handlingChangeSemaphore -= 1;\n      this.scheduleFinishedHandlersCleanup();\n      if (!this.awaitingHandlers.includes(handler)) {\n        this.cleanupAwaitingHandlers(handler);\n      }\n    }\n    makeActive(handler) {\n      const currentState = handler.state;\n      handler.active = true;\n      handler.shouldResetProgress = true;\n      handler.activationIndex = this.activationIndex++;\n      for (let i = this.gestureHandlers.length - 1; i >= 0; --i) {\n        if (this.shouldHandlerBeCancelledBy(this.gestureHandlers[i], handler)) {\n          this.gestureHandlers[i].cancel();\n        }\n      }\n      for (const otherHandler of this.awaitingHandlers) {\n        if (this.shouldHandlerBeCancelledBy(otherHandler, handler)) {\n          otherHandler.awaiting = false;\n        }\n      }\n      handler.sendEvent(_State.State.ACTIVE, _State.State.BEGAN);\n      if (currentState !== _State.State.ACTIVE) {\n        handler.sendEvent(_State.State.END, _State.State.ACTIVE);\n        if (currentState !== _State.State.END) {\n          handler.sendEvent(_State.State.UNDETERMINED, _State.State.END);\n        }\n      }\n      if (!handler.awaiting) {\n        return;\n      }\n      handler.awaiting = false;\n      this.awaitingHandlers = this.awaitingHandlers.filter(otherHandler => otherHandler !== handler);\n    }\n    addAwaitingHandler(handler) {\n      if (this.awaitingHandlers.includes(handler)) {\n        return;\n      }\n      this.awaitingHandlers.push(handler);\n      this.awaitingHandlersTags.add(handler.handlerTag);\n      handler.awaiting = true;\n      handler.activationIndex = this.activationIndex++;\n    }\n    recordHandlerIfNotPresent(handler) {\n      if (this.gestureHandlers.includes(handler)) {\n        return;\n      }\n      this.gestureHandlers.push(handler);\n      handler.active = false;\n      handler.awaiting = false;\n      handler.activationIndex = Number.MAX_SAFE_INTEGER;\n    }\n    shouldHandlerWaitForOther(handler, otherHandler) {\n      return handler !== otherHandler && (handler.shouldWaitForHandlerFailure(otherHandler) || otherHandler.shouldRequireToWaitForFailure(handler));\n    }\n    canRunSimultaneously(gh1, gh2) {\n      return gh1 === gh2 || gh1.shouldRecognizeSimultaneously(gh2) || gh2.shouldRecognizeSimultaneously(gh1);\n    }\n    shouldHandlerBeCancelledBy(handler, otherHandler) {\n      if (this.canRunSimultaneously(handler, otherHandler)) {\n        return false;\n      }\n      if (handler.awaiting || handler.state === _State.State.ACTIVE) {\n        return handler.shouldBeCancelledByOther(otherHandler);\n      }\n      const handlerPointers = handler.getTrackedPointersID();\n      const otherPointers = otherHandler.getTrackedPointersID();\n      if (!_PointerTracker.default.shareCommonPointers(handlerPointers, otherPointers) && handler.delegate.view !== otherHandler.delegate.view) {\n        return this.checkOverlap(handler, otherHandler);\n      }\n      return true;\n    }\n    checkOverlap(handler, otherHandler) {\n      // If handlers don't have common pointers, default return value is false.\n      // However, if at least on pointer overlaps with both handlers, we return true\n      // This solves issue in overlapping parents example\n\n      // TODO: Find better way to handle that issue, for example by activation order and handler cancelling\n\n      const isPointerWithinBothBounds = pointer => {\n        const point = handler.tracker.getLastAbsoluteCoords(pointer);\n        return point && handler.delegate.isPointerInBounds(point) && otherHandler.delegate.isPointerInBounds(point);\n      };\n      return handler.getTrackedPointersID().some(isPointerWithinBothBounds);\n    }\n    isFinished(state) {\n      return state === _State.State.END || state === _State.State.FAILED || state === _State.State.CANCELLED;\n    }\n\n    // This function is called when handler receives touchdown event\n    // If handler is using mouse or pen as a pointer and any handler receives touch event,\n    // mouse/pen event dissappears - it doesn't send onPointerCancel nor onPointerUp (and others)\n    // This became a problem because handler was left at active state without any signal to end or fail\n    // To handle this, when new touch event is received, we loop through active handlers and check which type of\n    // pointer they're using. If there are any handler with mouse/pen as a pointer, we cancel them\n    cancelMouseAndPenGestures(currentHandler) {\n      this.gestureHandlers.forEach(handler => {\n        if (handler.pointerType !== _PointerType.PointerType.MOUSE && handler.pointerType !== _PointerType.PointerType.STYLUS) {\n          return;\n        }\n        if (handler !== currentHandler) {\n          handler.cancel();\n        } else {\n          // Handler that received touch event should have its pointer tracker reset\n          // This allows handler to smoothly change from mouse/pen to touch\n          // The drawback is, that when we try to use mouse/pen one more time, it doesn't send onPointerDown at the first time\n          // so it is required to click two times to get handler to work\n          //\n          // However, handler will receive manually created onPointerEnter that is triggered in EventManager in onPointerMove method.\n          // There may be possibility to use that fact to make handler respond properly to first mouse click\n          handler.tracker.resetTracker();\n        }\n      });\n    }\n    static get instance() {\n      if (!GestureHandlerOrchestrator._instance) {\n        GestureHandlerOrchestrator._instance = new GestureHandlerOrchestrator();\n      }\n      return GestureHandlerOrchestrator._instance;\n    }\n  }\n  exports.default = GestureHandlerOrchestrator;\n});","lineCount":268,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[9,2,3,0],[9,6,3,0,"_PointerType"],[9,18,3,0],[9,21,3,0,"require"],[9,28,3,0],[9,29,3,0,"_dependencyMap"],[9,43,3,0],[10,2,4,0],[10,6,4,0,"_State"],[10,12,4,0],[10,15,4,0,"require"],[10,22,4,0],[10,23,4,0,"_dependencyMap"],[10,37,4,0],[11,2,5,0],[11,6,5,0,"_PointerTracker"],[11,21,5,0],[11,24,5,0,"_interopRequireDefault"],[11,46,5,0],[11,47,5,0,"require"],[11,54,5,0],[11,55,5,0,"_dependencyMap"],[11,69,5,0],[12,2,6,15],[12,8,6,21,"GestureHandlerOrchestrator"],[12,34,6,47],[12,35,6,48],[13,4,7,2,"gestureHandlers"],[13,19,7,17],[13,22,7,20],[13,24,7,22],[14,4,8,2,"awaitingHandlers"],[14,20,8,18],[14,23,8,21],[14,25,8,23],[15,4,9,2,"awaitingHandlersTags"],[15,24,9,22],[15,27,9,25],[15,31,9,29,"Set"],[15,34,9,32],[15,35,9,33],[15,36,9,34],[16,4,10,2,"handlingChangeSemaphore"],[16,27,10,25],[16,30,10,28],[16,31,10,29],[17,4,11,2,"activationIndex"],[17,19,11,17],[17,22,11,20],[17,23,11,21],[19,4,13,2],[20,4,14,2],[21,4,15,2,"constructor"],[21,15,15,13,"constructor"],[21,16,15,13],[21,18,15,16],[21,19,15,17],[22,4,16,2,"scheduleFinishedHandlersCleanup"],[22,35,16,33,"scheduleFinishedHandlersCleanup"],[22,36,16,33],[22,38,16,36],[23,6,17,4],[23,10,17,8],[23,14,17,12],[23,15,17,13,"handlingChangeSemaphore"],[23,38,17,36],[23,43,17,41],[23,44,17,42],[23,46,17,44],[24,8,18,6],[24,12,18,10],[24,13,18,11,"cleanupFinishedHandlers"],[24,36,18,34],[24,37,18,35],[24,38,18,36],[25,6,19,4],[26,4,20,2],[27,4,21,2,"cleanHandler"],[27,16,21,14,"cleanHandler"],[27,17,21,15,"handler"],[27,24,21,22],[27,26,21,24],[28,6,22,4,"handler"],[28,13,22,11],[28,14,22,12,"reset"],[28,19,22,17],[28,20,22,18],[28,21,22,19],[29,6,23,4,"handler"],[29,13,23,11],[29,14,23,12,"active"],[29,20,23,18],[29,23,23,21],[29,28,23,26],[30,6,24,4,"handler"],[30,13,24,11],[30,14,24,12,"awaiting"],[30,22,24,20],[30,25,24,23],[30,30,24,28],[31,6,25,4,"handler"],[31,13,25,11],[31,14,25,12,"activationIndex"],[31,29,25,27],[31,32,25,30,"Number"],[31,38,25,36],[31,39,25,37,"MAX_VALUE"],[31,48,25,46],[32,4,26,2],[33,4,27,2,"removeHandlerFromOrchestrator"],[33,33,27,31,"removeHandlerFromOrchestrator"],[33,34,27,32,"handler"],[33,41,27,39],[33,43,27,41],[34,6,28,4],[34,12,28,10,"indexInGestureHandlers"],[34,34,28,32],[34,37,28,35],[34,41,28,39],[34,42,28,40,"gestureHandlers"],[34,57,28,55],[34,58,28,56,"indexOf"],[34,65,28,63],[34,66,28,64,"handler"],[34,73,28,71],[34,74,28,72],[35,6,29,4],[35,12,29,10,"indexInAwaitingHandlers"],[35,35,29,33],[35,38,29,36],[35,42,29,40],[35,43,29,41,"awaitingHandlers"],[35,59,29,57],[35,60,29,58,"indexOf"],[35,67,29,65],[35,68,29,66,"handler"],[35,75,29,73],[35,76,29,74],[36,6,30,4],[36,10,30,8,"indexInGestureHandlers"],[36,32,30,30],[36,36,30,34],[36,37,30,35],[36,39,30,37],[37,8,31,6],[37,12,31,10],[37,13,31,11,"gestureHandlers"],[37,28,31,26],[37,29,31,27,"splice"],[37,35,31,33],[37,36,31,34,"indexInGestureHandlers"],[37,58,31,56],[37,60,31,58],[37,61,31,59],[37,62,31,60],[38,6,32,4],[39,6,33,4],[39,10,33,8,"indexInAwaitingHandlers"],[39,33,33,31],[39,37,33,35],[39,38,33,36],[39,40,33,38],[40,8,34,6],[40,12,34,10],[40,13,34,11,"awaitingHandlers"],[40,29,34,27],[40,30,34,28,"splice"],[40,36,34,34],[40,37,34,35,"indexInAwaitingHandlers"],[40,60,34,58],[40,62,34,60],[40,63,34,61],[40,64,34,62],[41,8,35,6],[41,12,35,10],[41,13,35,11,"awaitingHandlersTags"],[41,33,35,31],[41,34,35,32,"delete"],[41,40,35,38],[41,41,35,39,"handler"],[41,48,35,46],[41,49,35,47,"handlerTag"],[41,59,35,57],[41,60,35,58],[42,6,36,4],[43,4,37,2],[44,4,38,2,"cleanupFinishedHandlers"],[44,27,38,25,"cleanupFinishedHandlers"],[44,28,38,25],[44,30,38,28],[45,6,39,4],[45,12,39,10,"handlersToRemove"],[45,28,39,26],[45,31,39,29],[45,35,39,33,"Set"],[45,38,39,36],[45,39,39,37],[45,40,39,38],[46,6,40,4],[46,11,40,9],[46,15,40,13,"i"],[46,16,40,14],[46,19,40,17],[46,23,40,21],[46,24,40,22,"gestureHandlers"],[46,39,40,37],[46,40,40,38,"length"],[46,46,40,44],[46,49,40,47],[46,50,40,48],[46,52,40,50,"i"],[46,53,40,51],[46,57,40,55],[46,58,40,56],[46,60,40,58],[46,62,40,60,"i"],[46,63,40,61],[46,65,40,63],[47,8,41,6],[47,14,41,12,"handler"],[47,21,41,19],[47,24,41,22],[47,28,41,26],[47,29,41,27,"gestureHandlers"],[47,44,41,42],[47,45,41,43,"i"],[47,46,41,44],[47,47,41,45],[48,8,42,6],[48,12,42,10],[48,16,42,14],[48,17,42,15,"isFinished"],[48,27,42,25],[48,28,42,26,"handler"],[48,35,42,33],[48,36,42,34,"state"],[48,41,42,39],[48,42,42,40],[48,46,42,44],[48,47,42,45,"handler"],[48,54,42,52],[48,55,42,53,"awaiting"],[48,63,42,61],[48,65,42,63],[49,10,43,8],[49,14,43,12],[49,15,43,13,"cleanHandler"],[49,27,43,25],[49,28,43,26,"handler"],[49,35,43,33],[49,36,43,34],[50,10,44,8,"handlersToRemove"],[50,26,44,24],[50,27,44,25,"add"],[50,30,44,28],[50,31,44,29,"handler"],[50,38,44,36],[50,39,44,37],[51,8,45,6],[52,6,46,4],[53,6,47,4],[53,10,47,8],[53,11,47,9,"gestureHandlers"],[53,26,47,24],[53,29,47,27],[53,33,47,31],[53,34,47,32,"gestureHandlers"],[53,49,47,47],[53,50,47,48,"filter"],[53,56,47,54],[53,57,47,55,"handler"],[53,64,47,62],[53,68,47,66],[53,69,47,67,"handlersToRemove"],[53,85,47,83],[53,86,47,84,"has"],[53,89,47,87],[53,90,47,88,"handler"],[53,97,47,95],[53,98,47,96],[53,99,47,97],[54,4,48,2],[55,4,49,2,"hasOtherHandlerToWaitFor"],[55,28,49,26,"hasOtherHandlerToWaitFor"],[55,29,49,27,"handler"],[55,36,49,34],[55,38,49,36],[56,6,50,4],[56,12,50,10,"hasToWaitFor"],[56,24,50,22],[56,27,50,25,"otherHandler"],[56,39,50,37],[56,43,50,41],[57,8,51,6],[57,15,51,13],[57,16,51,14],[57,20,51,18],[57,21,51,19,"isFinished"],[57,31,51,29],[57,32,51,30,"otherHandler"],[57,44,51,42],[57,45,51,43,"state"],[57,50,51,48],[57,51,51,49],[57,55,51,53],[57,59,51,57],[57,60,51,58,"shouldHandlerWaitForOther"],[57,85,51,83],[57,86,51,84,"handler"],[57,93,51,91],[57,95,51,93,"otherHandler"],[57,107,51,105],[57,108,51,106],[58,6,52,4],[58,7,52,5],[59,6,53,4],[59,13,53,11],[59,17,53,15],[59,18,53,16,"gestureHandlers"],[59,33,53,31],[59,34,53,32,"some"],[59,38,53,36],[59,39,53,37,"hasToWaitFor"],[59,51,53,49],[59,52,53,50],[60,4,54,2],[61,4,55,2,"shouldBeCancelledByFinishedHandler"],[61,38,55,36,"shouldBeCancelledByFinishedHandler"],[61,39,55,37,"handler"],[61,46,55,44],[61,48,55,46],[62,6,56,4],[62,12,56,10,"shouldBeCancelled"],[62,29,56,27],[62,32,56,30,"otherHandler"],[62,44,56,42],[62,48,56,46],[63,8,57,6],[63,15,57,13],[63,19,57,17],[63,20,57,18,"shouldHandlerWaitForOther"],[63,45,57,43],[63,46,57,44,"handler"],[63,53,57,51],[63,55,57,53,"otherHandler"],[63,67,57,65],[63,68,57,66],[63,72,57,70,"otherHandler"],[63,84,57,82],[63,85,57,83,"state"],[63,90,57,88],[63,95,57,93,"State"],[63,107,57,98],[63,108,57,99,"END"],[63,111,57,102],[64,6,58,4],[64,7,58,5],[65,6,59,4],[65,13,59,11],[65,17,59,15],[65,18,59,16,"gestureHandlers"],[65,33,59,31],[65,34,59,32,"some"],[65,38,59,36],[65,39,59,37,"shouldBeCancelled"],[65,56,59,54],[65,57,59,55],[66,4,60,2],[67,4,61,2,"tryActivate"],[67,15,61,13,"tryActivate"],[67,16,61,14,"handler"],[67,23,61,21],[67,25,61,23],[68,6,62,4],[68,10,62,8],[68,14,62,12],[68,15,62,13,"shouldBeCancelledByFinishedHandler"],[68,49,62,47],[68,50,62,48,"handler"],[68,57,62,55],[68,58,62,56],[68,60,62,58],[69,8,63,6,"handler"],[69,15,63,13],[69,16,63,14,"cancel"],[69,22,63,20],[69,23,63,21],[69,24,63,22],[70,8,64,6],[71,6,65,4],[72,6,66,4],[72,10,66,8],[72,14,66,12],[72,15,66,13,"hasOtherHandlerToWaitFor"],[72,39,66,37],[72,40,66,38,"handler"],[72,47,66,45],[72,48,66,46],[72,50,66,48],[73,8,67,6],[73,12,67,10],[73,13,67,11,"addAwaitingHandler"],[73,31,67,29],[73,32,67,30,"handler"],[73,39,67,37],[73,40,67,38],[74,8,68,6],[75,6,69,4],[76,6,70,4],[76,12,70,10,"handlerState"],[76,24,70,22],[76,27,70,25,"handler"],[76,34,70,32],[76,35,70,33,"state"],[76,40,70,38],[77,6,71,4],[77,10,71,8,"handlerState"],[77,22,71,20],[77,27,71,25,"State"],[77,39,71,30],[77,40,71,31,"CANCELLED"],[77,49,71,40],[77,53,71,44,"handlerState"],[77,65,71,56],[77,70,71,61,"State"],[77,82,71,66],[77,83,71,67,"FAILED"],[77,89,71,73],[77,91,71,75],[78,8,72,6],[79,6,73,4],[80,6,74,4],[80,10,74,8],[80,14,74,12],[80,15,74,13,"shouldActivate"],[80,29,74,27],[80,30,74,28,"handler"],[80,37,74,35],[80,38,74,36],[80,40,74,38],[81,8,75,6],[81,12,75,10],[81,13,75,11,"makeActive"],[81,23,75,21],[81,24,75,22,"handler"],[81,31,75,29],[81,32,75,30],[82,8,76,6],[83,6,77,4],[84,6,78,4],[84,10,78,8,"handlerState"],[84,22,78,20],[84,27,78,25,"State"],[84,39,78,30],[84,40,78,31,"ACTIVE"],[84,46,78,37],[84,48,78,39],[85,8,79,6,"handler"],[85,15,79,13],[85,16,79,14,"fail"],[85,20,79,18],[85,21,79,19],[85,22,79,20],[86,8,80,6],[87,6,81,4],[88,6,82,4],[88,10,82,8,"handlerState"],[88,22,82,20],[88,27,82,25,"State"],[88,39,82,30],[88,40,82,31,"BEGAN"],[88,45,82,36],[88,47,82,38],[89,8,83,6,"handler"],[89,15,83,13],[89,16,83,14,"cancel"],[89,22,83,20],[89,23,83,21],[89,24,83,22],[90,6,84,4],[91,4,85,2],[92,4,86,2,"shouldActivate"],[92,18,86,16,"shouldActivate"],[92,19,86,17,"handler"],[92,26,86,24],[92,28,86,26],[93,6,87,4],[93,12,87,10,"shouldBeCancelledBy"],[93,31,87,29],[93,34,87,32,"otherHandler"],[93,46,87,44],[93,50,87,48],[94,8,88,6],[94,15,88,13],[94,19,88,17],[94,20,88,18,"shouldHandlerBeCancelledBy"],[94,46,88,44],[94,47,88,45,"handler"],[94,54,88,52],[94,56,88,54,"otherHandler"],[94,68,88,66],[94,69,88,67],[95,6,89,4],[95,7,89,5],[96,6,90,4],[96,13,90,11],[96,14,90,12],[96,18,90,16],[96,19,90,17,"gestureHandlers"],[96,34,90,32],[96,35,90,33,"some"],[96,39,90,37],[96,40,90,38,"shouldBeCancelledBy"],[96,59,90,57],[96,60,90,58],[97,4,91,2],[98,4,92,2,"cleanupAwaitingHandlers"],[98,27,92,25,"cleanupAwaitingHandlers"],[98,28,92,26,"handler"],[98,35,92,33],[98,37,92,35],[99,6,93,4],[99,12,93,10,"shouldWait"],[99,22,93,20],[99,25,93,23,"otherHandler"],[99,37,93,35],[99,41,93,39],[100,8,94,6],[100,15,94,13],[100,16,94,14,"otherHandler"],[100,28,94,26],[100,29,94,27,"awaiting"],[100,37,94,35],[100,41,94,39],[100,45,94,43],[100,46,94,44,"shouldHandlerWaitForOther"],[100,71,94,69],[100,72,94,70,"otherHandler"],[100,84,94,82],[100,86,94,84,"handler"],[100,93,94,91],[100,94,94,92],[101,6,95,4],[101,7,95,5],[102,6,96,4],[102,11,96,9],[102,17,96,15,"otherHandler"],[102,29,96,27],[102,33,96,31],[102,37,96,35],[102,38,96,36,"awaitingHandlers"],[102,54,96,52],[102,56,96,54],[103,8,97,6],[103,12,97,10,"shouldWait"],[103,22,97,20],[103,23,97,21,"otherHandler"],[103,35,97,33],[103,36,97,34],[103,38,97,36],[104,10,98,8],[104,14,98,12],[104,15,98,13,"cleanHandler"],[104,27,98,25],[104,28,98,26,"otherHandler"],[104,40,98,38],[104,41,98,39],[105,10,99,8],[105,14,99,12],[105,15,99,13,"awaitingHandlersTags"],[105,35,99,33],[105,36,99,34,"delete"],[105,42,99,40],[105,43,99,41,"otherHandler"],[105,55,99,53],[105,56,99,54,"handlerTag"],[105,66,99,64],[105,67,99,65],[106,8,100,6],[107,6,101,4],[108,6,102,4],[108,10,102,8],[108,11,102,9,"awaitingHandlers"],[108,27,102,25],[108,30,102,28],[108,34,102,32],[108,35,102,33,"awaitingHandlers"],[108,51,102,49],[108,52,102,50,"filter"],[108,58,102,56],[108,59,102,57,"otherHandler"],[108,71,102,69],[108,75,102,73],[108,79,102,77],[108,80,102,78,"awaitingHandlersTags"],[108,100,102,98],[108,101,102,99,"has"],[108,104,102,102],[108,105,102,103,"otherHandler"],[108,117,102,115],[108,118,102,116,"handlerTag"],[108,128,102,126],[108,129,102,127],[108,130,102,128],[109,4,103,2],[110,4,104,2,"onHandlerStateChange"],[110,24,104,22,"onHandlerStateChange"],[110,25,104,23,"handler"],[110,32,104,30],[110,34,104,32,"newState"],[110,42,104,40],[110,44,104,42,"oldState"],[110,52,104,50],[110,54,104,52,"sendIfDisabled"],[110,68,104,66],[110,70,104,68],[111,6,105,4],[111,10,105,8],[111,11,105,9,"handler"],[111,18,105,16],[111,19,105,17,"enabled"],[111,26,105,24],[111,30,105,28],[111,31,105,29,"sendIfDisabled"],[111,45,105,43],[111,47,105,45],[112,8,106,6],[113,6,107,4],[114,6,108,4],[114,10,108,8],[114,11,108,9,"handlingChangeSemaphore"],[114,34,108,32],[114,38,108,36],[114,39,108,37],[115,6,109,4],[115,10,109,8],[115,14,109,12],[115,15,109,13,"isFinished"],[115,25,109,23],[115,26,109,24,"newState"],[115,34,109,32],[115,35,109,33],[115,37,109,35],[116,8,110,6],[116,13,110,11],[116,19,110,17,"otherHandler"],[116,31,110,29],[116,35,110,33],[116,39,110,37],[116,40,110,38,"awaitingHandlers"],[116,56,110,54],[116,58,110,56],[117,10,111,8],[117,14,111,12],[117,15,111,13],[117,19,111,17],[117,20,111,18,"shouldHandlerWaitForOther"],[117,45,111,43],[117,46,111,44,"otherHandler"],[117,58,111,56],[117,60,111,58,"handler"],[117,67,111,65],[117,68,111,66],[117,72,111,70],[117,73,111,71],[117,77,111,75],[117,78,111,76,"awaitingHandlersTags"],[117,98,111,96],[117,99,111,97,"has"],[117,102,111,100],[117,103,111,101,"otherHandler"],[117,115,111,113],[117,116,111,114,"handlerTag"],[117,126,111,124],[117,127,111,125],[117,129,111,127],[118,12,112,10],[119,10,113,8],[120,10,114,8],[120,14,114,12,"newState"],[120,22,114,20],[120,27,114,25,"State"],[120,39,114,30],[120,40,114,31,"END"],[120,43,114,34],[120,45,114,36],[121,12,115,10],[121,16,115,14],[121,17,115,15,"tryActivate"],[121,28,115,26],[121,29,115,27,"otherHandler"],[121,41,115,39],[121,42,115,40],[122,12,116,10],[123,10,117,8],[124,10,118,8,"otherHandler"],[124,22,118,20],[124,23,118,21,"cancel"],[124,29,118,27],[124,30,118,28],[124,31,118,29],[125,10,119,8],[125,14,119,12,"otherHandler"],[125,26,119,24],[125,27,119,25,"state"],[125,32,119,30],[125,37,119,35,"State"],[125,49,119,40],[125,50,119,41,"END"],[125,53,119,44],[125,55,119,46],[126,12,120,10],[127,12,121,10],[128,12,122,10],[129,12,123,10],[130,12,124,10,"otherHandler"],[130,24,124,22],[130,25,124,23,"sendEvent"],[130,34,124,32],[130,35,124,33,"State"],[130,47,124,38],[130,48,124,39,"CANCELLED"],[130,57,124,48],[130,59,124,50,"State"],[130,71,124,55],[130,72,124,56,"BEGAN"],[130,77,124,61],[130,78,124,62],[131,10,125,8],[132,10,126,8,"otherHandler"],[132,22,126,20],[132,23,126,21,"awaiting"],[132,31,126,29],[132,34,126,32],[132,39,126,37],[133,8,127,6],[134,6,128,4],[135,6,129,4],[135,10,129,8,"newState"],[135,18,129,16],[135,23,129,21,"State"],[135,35,129,26],[135,36,129,27,"ACTIVE"],[135,42,129,33],[135,44,129,35],[136,8,130,6],[136,12,130,10],[136,13,130,11,"tryActivate"],[136,24,130,22],[136,25,130,23,"handler"],[136,32,130,30],[136,33,130,31],[137,6,131,4],[137,7,131,5],[137,13,131,11],[137,17,131,15,"oldState"],[137,25,131,23],[137,30,131,28,"State"],[137,42,131,33],[137,43,131,34,"ACTIVE"],[137,49,131,40],[137,53,131,44,"oldState"],[137,61,131,52],[137,66,131,57,"State"],[137,78,131,62],[137,79,131,63,"END"],[137,82,131,66],[137,84,131,68],[138,8,132,6],[138,12,132,10,"handler"],[138,19,132,17],[138,20,132,18,"active"],[138,26,132,24],[138,28,132,26],[139,10,133,8,"handler"],[139,17,133,15],[139,18,133,16,"sendEvent"],[139,27,133,25],[139,28,133,26,"newState"],[139,36,133,34],[139,38,133,36,"oldState"],[139,46,133,44],[139,47,133,45],[140,8,134,6],[140,9,134,7],[140,15,134,13],[140,19,134,17,"oldState"],[140,27,134,25],[140,32,134,30,"State"],[140,44,134,35],[140,45,134,36,"ACTIVE"],[140,51,134,42],[140,56,134,47,"newState"],[140,64,134,55],[140,69,134,60,"State"],[140,81,134,65],[140,82,134,66,"CANCELLED"],[140,91,134,75],[140,95,134,79,"newState"],[140,103,134,87],[140,108,134,92,"State"],[140,120,134,97],[140,121,134,98,"FAILED"],[140,127,134,104],[140,128,134,105],[140,130,134,107],[141,10,135,8,"handler"],[141,17,135,15],[141,18,135,16,"sendEvent"],[141,27,135,25],[141,28,135,26,"newState"],[141,36,135,34],[141,38,135,36,"State"],[141,50,135,41],[141,51,135,42,"BEGAN"],[141,56,135,47],[141,57,135,48],[142,8,136,6],[143,6,137,4],[143,7,137,5],[143,13,137,11],[143,17,137,15,"oldState"],[143,25,137,23],[143,30,137,28,"State"],[143,42,137,33],[143,43,137,34,"UNDETERMINED"],[143,55,137,46],[143,59,137,50,"newState"],[143,67,137,58],[143,72,137,63,"State"],[143,84,137,68],[143,85,137,69,"CANCELLED"],[143,94,137,78],[143,96,137,80],[144,8,138,6,"handler"],[144,15,138,13],[144,16,138,14,"sendEvent"],[144,25,138,23],[144,26,138,24,"newState"],[144,34,138,32],[144,36,138,34,"oldState"],[144,44,138,42],[144,45,138,43],[145,6,139,4],[146,6,140,4],[146,10,140,8],[146,11,140,9,"handlingChangeSemaphore"],[146,34,140,32],[146,38,140,36],[146,39,140,37],[147,6,141,4],[147,10,141,8],[147,11,141,9,"scheduleFinishedHandlersCleanup"],[147,42,141,40],[147,43,141,41],[147,44,141,42],[148,6,142,4],[148,10,142,8],[148,11,142,9],[148,15,142,13],[148,16,142,14,"awaitingHandlers"],[148,32,142,30],[148,33,142,31,"includes"],[148,41,142,39],[148,42,142,40,"handler"],[148,49,142,47],[148,50,142,48],[148,52,142,50],[149,8,143,6],[149,12,143,10],[149,13,143,11,"cleanupAwaitingHandlers"],[149,36,143,34],[149,37,143,35,"handler"],[149,44,143,42],[149,45,143,43],[150,6,144,4],[151,4,145,2],[152,4,146,2,"makeActive"],[152,14,146,12,"makeActive"],[152,15,146,13,"handler"],[152,22,146,20],[152,24,146,22],[153,6,147,4],[153,12,147,10,"currentState"],[153,24,147,22],[153,27,147,25,"handler"],[153,34,147,32],[153,35,147,33,"state"],[153,40,147,38],[154,6,148,4,"handler"],[154,13,148,11],[154,14,148,12,"active"],[154,20,148,18],[154,23,148,21],[154,27,148,25],[155,6,149,4,"handler"],[155,13,149,11],[155,14,149,12,"shouldResetProgress"],[155,33,149,31],[155,36,149,34],[155,40,149,38],[156,6,150,4,"handler"],[156,13,150,11],[156,14,150,12,"activationIndex"],[156,29,150,27],[156,32,150,30],[156,36,150,34],[156,37,150,35,"activationIndex"],[156,52,150,50],[156,54,150,52],[157,6,151,4],[157,11,151,9],[157,15,151,13,"i"],[157,16,151,14],[157,19,151,17],[157,23,151,21],[157,24,151,22,"gestureHandlers"],[157,39,151,37],[157,40,151,38,"length"],[157,46,151,44],[157,49,151,47],[157,50,151,48],[157,52,151,50,"i"],[157,53,151,51],[157,57,151,55],[157,58,151,56],[157,60,151,58],[157,62,151,60,"i"],[157,63,151,61],[157,65,151,63],[158,8,152,6],[158,12,152,10],[158,16,152,14],[158,17,152,15,"shouldHandlerBeCancelledBy"],[158,43,152,41],[158,44,152,42],[158,48,152,46],[158,49,152,47,"gestureHandlers"],[158,64,152,62],[158,65,152,63,"i"],[158,66,152,64],[158,67,152,65],[158,69,152,67,"handler"],[158,76,152,74],[158,77,152,75],[158,79,152,77],[159,10,153,8],[159,14,153,12],[159,15,153,13,"gestureHandlers"],[159,30,153,28],[159,31,153,29,"i"],[159,32,153,30],[159,33,153,31],[159,34,153,32,"cancel"],[159,40,153,38],[159,41,153,39],[159,42,153,40],[160,8,154,6],[161,6,155,4],[162,6,156,4],[162,11,156,9],[162,17,156,15,"otherHandler"],[162,29,156,27],[162,33,156,31],[162,37,156,35],[162,38,156,36,"awaitingHandlers"],[162,54,156,52],[162,56,156,54],[163,8,157,6],[163,12,157,10],[163,16,157,14],[163,17,157,15,"shouldHandlerBeCancelledBy"],[163,43,157,41],[163,44,157,42,"otherHandler"],[163,56,157,54],[163,58,157,56,"handler"],[163,65,157,63],[163,66,157,64],[163,68,157,66],[164,10,158,8,"otherHandler"],[164,22,158,20],[164,23,158,21,"awaiting"],[164,31,158,29],[164,34,158,32],[164,39,158,37],[165,8,159,6],[166,6,160,4],[167,6,161,4,"handler"],[167,13,161,11],[167,14,161,12,"sendEvent"],[167,23,161,21],[167,24,161,22,"State"],[167,36,161,27],[167,37,161,28,"ACTIVE"],[167,43,161,34],[167,45,161,36,"State"],[167,57,161,41],[167,58,161,42,"BEGAN"],[167,63,161,47],[167,64,161,48],[168,6,162,4],[168,10,162,8,"currentState"],[168,22,162,20],[168,27,162,25,"State"],[168,39,162,30],[168,40,162,31,"ACTIVE"],[168,46,162,37],[168,48,162,39],[169,8,163,6,"handler"],[169,15,163,13],[169,16,163,14,"sendEvent"],[169,25,163,23],[169,26,163,24,"State"],[169,38,163,29],[169,39,163,30,"END"],[169,42,163,33],[169,44,163,35,"State"],[169,56,163,40],[169,57,163,41,"ACTIVE"],[169,63,163,47],[169,64,163,48],[170,8,164,6],[170,12,164,10,"currentState"],[170,24,164,22],[170,29,164,27,"State"],[170,41,164,32],[170,42,164,33,"END"],[170,45,164,36],[170,47,164,38],[171,10,165,8,"handler"],[171,17,165,15],[171,18,165,16,"sendEvent"],[171,27,165,25],[171,28,165,26,"State"],[171,40,165,31],[171,41,165,32,"UNDETERMINED"],[171,53,165,44],[171,55,165,46,"State"],[171,67,165,51],[171,68,165,52,"END"],[171,71,165,55],[171,72,165,56],[172,8,166,6],[173,6,167,4],[174,6,168,4],[174,10,168,8],[174,11,168,9,"handler"],[174,18,168,16],[174,19,168,17,"awaiting"],[174,27,168,25],[174,29,168,27],[175,8,169,6],[176,6,170,4],[177,6,171,4,"handler"],[177,13,171,11],[177,14,171,12,"awaiting"],[177,22,171,20],[177,25,171,23],[177,30,171,28],[178,6,172,4],[178,10,172,8],[178,11,172,9,"awaitingHandlers"],[178,27,172,25],[178,30,172,28],[178,34,172,32],[178,35,172,33,"awaitingHandlers"],[178,51,172,49],[178,52,172,50,"filter"],[178,58,172,56],[178,59,172,57,"otherHandler"],[178,71,172,69],[178,75,172,73,"otherHandler"],[178,87,172,85],[178,92,172,90,"handler"],[178,99,172,97],[178,100,172,98],[179,4,173,2],[180,4,174,2,"addAwaitingHandler"],[180,22,174,20,"addAwaitingHandler"],[180,23,174,21,"handler"],[180,30,174,28],[180,32,174,30],[181,6,175,4],[181,10,175,8],[181,14,175,12],[181,15,175,13,"awaitingHandlers"],[181,31,175,29],[181,32,175,30,"includes"],[181,40,175,38],[181,41,175,39,"handler"],[181,48,175,46],[181,49,175,47],[181,51,175,49],[182,8,176,6],[183,6,177,4],[184,6,178,4],[184,10,178,8],[184,11,178,9,"awaitingHandlers"],[184,27,178,25],[184,28,178,26,"push"],[184,32,178,30],[184,33,178,31,"handler"],[184,40,178,38],[184,41,178,39],[185,6,179,4],[185,10,179,8],[185,11,179,9,"awaitingHandlersTags"],[185,31,179,29],[185,32,179,30,"add"],[185,35,179,33],[185,36,179,34,"handler"],[185,43,179,41],[185,44,179,42,"handlerTag"],[185,54,179,52],[185,55,179,53],[186,6,180,4,"handler"],[186,13,180,11],[186,14,180,12,"awaiting"],[186,22,180,20],[186,25,180,23],[186,29,180,27],[187,6,181,4,"handler"],[187,13,181,11],[187,14,181,12,"activationIndex"],[187,29,181,27],[187,32,181,30],[187,36,181,34],[187,37,181,35,"activationIndex"],[187,52,181,50],[187,54,181,52],[188,4,182,2],[189,4,183,2,"recordHandlerIfNotPresent"],[189,29,183,27,"recordHandlerIfNotPresent"],[189,30,183,28,"handler"],[189,37,183,35],[189,39,183,37],[190,6,184,4],[190,10,184,8],[190,14,184,12],[190,15,184,13,"gestureHandlers"],[190,30,184,28],[190,31,184,29,"includes"],[190,39,184,37],[190,40,184,38,"handler"],[190,47,184,45],[190,48,184,46],[190,50,184,48],[191,8,185,6],[192,6,186,4],[193,6,187,4],[193,10,187,8],[193,11,187,9,"gestureHandlers"],[193,26,187,24],[193,27,187,25,"push"],[193,31,187,29],[193,32,187,30,"handler"],[193,39,187,37],[193,40,187,38],[194,6,188,4,"handler"],[194,13,188,11],[194,14,188,12,"active"],[194,20,188,18],[194,23,188,21],[194,28,188,26],[195,6,189,4,"handler"],[195,13,189,11],[195,14,189,12,"awaiting"],[195,22,189,20],[195,25,189,23],[195,30,189,28],[196,6,190,4,"handler"],[196,13,190,11],[196,14,190,12,"activationIndex"],[196,29,190,27],[196,32,190,30,"Number"],[196,38,190,36],[196,39,190,37,"MAX_SAFE_INTEGER"],[196,55,190,53],[197,4,191,2],[198,4,192,2,"shouldHandlerWaitForOther"],[198,29,192,27,"shouldHandlerWaitForOther"],[198,30,192,28,"handler"],[198,37,192,35],[198,39,192,37,"otherHandler"],[198,51,192,49],[198,53,192,51],[199,6,193,4],[199,13,193,11,"handler"],[199,20,193,18],[199,25,193,23,"otherHandler"],[199,37,193,35],[199,42,193,40,"handler"],[199,49,193,47],[199,50,193,48,"shouldWaitForHandlerFailure"],[199,77,193,75],[199,78,193,76,"otherHandler"],[199,90,193,88],[199,91,193,89],[199,95,193,93,"otherHandler"],[199,107,193,105],[199,108,193,106,"shouldRequireToWaitForFailure"],[199,137,193,135],[199,138,193,136,"handler"],[199,145,193,143],[199,146,193,144],[199,147,193,145],[200,4,194,2],[201,4,195,2,"canRunSimultaneously"],[201,24,195,22,"canRunSimultaneously"],[201,25,195,23,"gh1"],[201,28,195,26],[201,30,195,28,"gh2"],[201,33,195,31],[201,35,195,33],[202,6,196,4],[202,13,196,11,"gh1"],[202,16,196,14],[202,21,196,19,"gh2"],[202,24,196,22],[202,28,196,26,"gh1"],[202,31,196,29],[202,32,196,30,"shouldRecognizeSimultaneously"],[202,61,196,59],[202,62,196,60,"gh2"],[202,65,196,63],[202,66,196,64],[202,70,196,68,"gh2"],[202,73,196,71],[202,74,196,72,"shouldRecognizeSimultaneously"],[202,103,196,101],[202,104,196,102,"gh1"],[202,107,196,105],[202,108,196,106],[203,4,197,2],[204,4,198,2,"shouldHandlerBeCancelledBy"],[204,30,198,28,"shouldHandlerBeCancelledBy"],[204,31,198,29,"handler"],[204,38,198,36],[204,40,198,38,"otherHandler"],[204,52,198,50],[204,54,198,52],[205,6,199,4],[205,10,199,8],[205,14,199,12],[205,15,199,13,"canRunSimultaneously"],[205,35,199,33],[205,36,199,34,"handler"],[205,43,199,41],[205,45,199,43,"otherHandler"],[205,57,199,55],[205,58,199,56],[205,60,199,58],[206,8,200,6],[206,15,200,13],[206,20,200,18],[207,6,201,4],[208,6,202,4],[208,10,202,8,"handler"],[208,17,202,15],[208,18,202,16,"awaiting"],[208,26,202,24],[208,30,202,28,"handler"],[208,37,202,35],[208,38,202,36,"state"],[208,43,202,41],[208,48,202,46,"State"],[208,60,202,51],[208,61,202,52,"ACTIVE"],[208,67,202,58],[208,69,202,60],[209,8,203,6],[209,15,203,13,"handler"],[209,22,203,20],[209,23,203,21,"shouldBeCancelledByOther"],[209,47,203,45],[209,48,203,46,"otherHandler"],[209,60,203,58],[209,61,203,59],[210,6,204,4],[211,6,205,4],[211,12,205,10,"handlerPointers"],[211,27,205,25],[211,30,205,28,"handler"],[211,37,205,35],[211,38,205,36,"getTrackedPointersID"],[211,58,205,56],[211,59,205,57],[211,60,205,58],[212,6,206,4],[212,12,206,10,"otherPointers"],[212,25,206,23],[212,28,206,26,"otherHandler"],[212,40,206,38],[212,41,206,39,"getTrackedPointersID"],[212,61,206,59],[212,62,206,60],[212,63,206,61],[213,6,207,4],[213,10,207,8],[213,11,207,9,"PointerTracker"],[213,34,207,23],[213,35,207,24,"shareCommonPointers"],[213,54,207,43],[213,55,207,44,"handlerPointers"],[213,70,207,59],[213,72,207,61,"otherPointers"],[213,85,207,74],[213,86,207,75],[213,90,207,79,"handler"],[213,97,207,86],[213,98,207,87,"delegate"],[213,106,207,95],[213,107,207,96,"view"],[213,111,207,100],[213,116,207,105,"otherHandler"],[213,128,207,117],[213,129,207,118,"delegate"],[213,137,207,126],[213,138,207,127,"view"],[213,142,207,131],[213,144,207,133],[214,8,208,6],[214,15,208,13],[214,19,208,17],[214,20,208,18,"checkOverlap"],[214,32,208,30],[214,33,208,31,"handler"],[214,40,208,38],[214,42,208,40,"otherHandler"],[214,54,208,52],[214,55,208,53],[215,6,209,4],[216,6,210,4],[216,13,210,11],[216,17,210,15],[217,4,211,2],[218,4,212,2,"checkOverlap"],[218,16,212,14,"checkOverlap"],[218,17,212,15,"handler"],[218,24,212,22],[218,26,212,24,"otherHandler"],[218,38,212,36],[218,40,212,38],[219,6,213,4],[220,6,214,4],[221,6,215,4],[223,6,217,4],[225,6,219,4],[225,12,219,10,"isPointerWithinBothBounds"],[225,37,219,35],[225,40,219,38,"pointer"],[225,47,219,45],[225,51,219,49],[226,8,220,6],[226,14,220,12,"point"],[226,19,220,17],[226,22,220,20,"handler"],[226,29,220,27],[226,30,220,28,"tracker"],[226,37,220,35],[226,38,220,36,"getLastAbsoluteCoords"],[226,59,220,57],[226,60,220,58,"pointer"],[226,67,220,65],[226,68,220,66],[227,8,221,6],[227,15,221,13,"point"],[227,20,221,18],[227,24,221,22,"handler"],[227,31,221,29],[227,32,221,30,"delegate"],[227,40,221,38],[227,41,221,39,"isPointerInBounds"],[227,58,221,56],[227,59,221,57,"point"],[227,64,221,62],[227,65,221,63],[227,69,221,67,"otherHandler"],[227,81,221,79],[227,82,221,80,"delegate"],[227,90,221,88],[227,91,221,89,"isPointerInBounds"],[227,108,221,106],[227,109,221,107,"point"],[227,114,221,112],[227,115,221,113],[228,6,222,4],[228,7,222,5],[229,6,223,4],[229,13,223,11,"handler"],[229,20,223,18],[229,21,223,19,"getTrackedPointersID"],[229,41,223,39],[229,42,223,40],[229,43,223,41],[229,44,223,42,"some"],[229,48,223,46],[229,49,223,47,"isPointerWithinBothBounds"],[229,74,223,72],[229,75,223,73],[230,4,224,2],[231,4,225,2,"isFinished"],[231,14,225,12,"isFinished"],[231,15,225,13,"state"],[231,20,225,18],[231,22,225,20],[232,6,226,4],[232,13,226,11,"state"],[232,18,226,16],[232,23,226,21,"State"],[232,35,226,26],[232,36,226,27,"END"],[232,39,226,30],[232,43,226,34,"state"],[232,48,226,39],[232,53,226,44,"State"],[232,65,226,49],[232,66,226,50,"FAILED"],[232,72,226,56],[232,76,226,60,"state"],[232,81,226,65],[232,86,226,70,"State"],[232,98,226,75],[232,99,226,76,"CANCELLED"],[232,108,226,85],[233,4,227,2],[235,4,229,2],[236,4,230,2],[237,4,231,2],[238,4,232,2],[239,4,233,2],[240,4,234,2],[241,4,235,2,"cancelMouseAndPenGestures"],[241,29,235,27,"cancelMouseAndPenGestures"],[241,30,235,28,"currentHandler"],[241,44,235,42],[241,46,235,44],[242,6,236,4],[242,10,236,8],[242,11,236,9,"gestureHandlers"],[242,26,236,24],[242,27,236,25,"forEach"],[242,34,236,32],[242,35,236,33,"handler"],[242,42,236,40],[242,46,236,44],[243,8,237,6],[243,12,237,10,"handler"],[243,19,237,17],[243,20,237,18,"pointerType"],[243,31,237,29],[243,36,237,34,"PointerType"],[243,60,237,45],[243,61,237,46,"MOUSE"],[243,66,237,51],[243,70,237,55,"handler"],[243,77,237,62],[243,78,237,63,"pointerType"],[243,89,237,74],[243,94,237,79,"PointerType"],[243,118,237,90],[243,119,237,91,"STYLUS"],[243,125,237,97],[243,127,237,99],[244,10,238,8],[245,8,239,6],[246,8,240,6],[246,12,240,10,"handler"],[246,19,240,17],[246,24,240,22,"currentHandler"],[246,38,240,36],[246,40,240,38],[247,10,241,8,"handler"],[247,17,241,15],[247,18,241,16,"cancel"],[247,24,241,22],[247,25,241,23],[247,26,241,24],[248,8,242,6],[248,9,242,7],[248,15,242,13],[249,10,243,8],[250,10,244,8],[251,10,245,8],[252,10,246,8],[253,10,247,8],[254,10,248,8],[255,10,249,8],[256,10,250,8,"handler"],[256,17,250,15],[256,18,250,16,"tracker"],[256,25,250,23],[256,26,250,24,"resetTracker"],[256,38,250,36],[256,39,250,37],[256,40,250,38],[257,8,251,6],[258,6,252,4],[258,7,252,5],[258,8,252,6],[259,4,253,2],[260,4,254,2],[260,15,254,13,"instance"],[260,23,254,21,"instance"],[260,24,254,21],[260,26,254,24],[261,6,255,4],[261,10,255,8],[261,11,255,9,"GestureHandlerOrchestrator"],[261,37,255,35],[261,38,255,36,"_instance"],[261,47,255,45],[261,49,255,47],[262,8,256,6,"GestureHandlerOrchestrator"],[262,34,256,32],[262,35,256,33,"_instance"],[262,44,256,42],[262,47,256,45],[262,51,256,49,"GestureHandlerOrchestrator"],[262,77,256,75],[262,78,256,76],[262,79,256,77],[263,6,257,4],[264,6,258,4],[264,13,258,11,"GestureHandlerOrchestrator"],[264,39,258,37],[264,40,258,38,"_instance"],[264,49,258,47],[265,4,259,2],[266,2,260,0],[267,2,260,1,"exports"],[267,9,260,1],[267,10,260,1,"default"],[267,17,260,1],[267,20,260,1,"GestureHandlerOrchestrator"],[267,46,260,1],[268,0,260,1],[268,3]],"functionMap":{"names":["<global>","GestureHandlerOrchestrator","constructor","scheduleFinishedHandlersCleanup","cleanHandler","removeHandlerFromOrchestrator","cleanupFinishedHandlers","gestureHandlers.filter$argument_0","hasOtherHandlerToWaitFor","hasToWaitFor","shouldBeCancelledByFinishedHandler","shouldBeCancelled","tryActivate","shouldActivate","shouldBeCancelledBy","cleanupAwaitingHandlers","shouldWait","awaitingHandlers.filter$argument_0","onHandlerStateChange","makeActive","addAwaitingHandler","recordHandlerIfNotPresent","shouldHandlerWaitForOther","canRunSimultaneously","shouldHandlerBeCancelledBy","checkOverlap","isPointerWithinBothBounds","isFinished","cancelMouseAndPenGestures","gestureHandlers.forEach$argument_0","get__instance"],"mappings":"AAA;eCK;ECS,gBD;EEC;GFI;EGC;GHK;EIC;GJU;EKC;uDCS,yCD;GLC;EOC;yBCC;KDE;GPE;ESC;8BCC;KDE;GTE;EWC;GXwB;EYC;gCCC;KDE;GZE;EcC;uBCC;KDE;yDEO,sEF;GdC;EiBC;GjByC;EkBC;yDF0B,wCE;GlBC;EmBC;GnBQ;EoBC;GpBQ;EqBC;GrBE;EsBC;GtBE;EuBC;GvBa;EwBC;sCCO;KDG;GxBE;E0BC;G1BE;E2BQ;iCCC;KDgB;G3BC;E6BC;G7BK;CDC"}},"type":"js/module"}]}