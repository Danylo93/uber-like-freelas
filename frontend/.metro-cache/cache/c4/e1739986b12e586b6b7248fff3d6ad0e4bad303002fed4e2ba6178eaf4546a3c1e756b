{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":40,"index":55}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.FlingGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  class FlingGesture extends _gesture.BaseGesture {\n    config = {};\n    constructor() {\n      super();\n      this.handlerName = 'FlingGestureHandler';\n    }\n\n    /**\n     * Determine exact number of points required to handle the fling gesture.\n     * @param pointers\n     */\n    numberOfPointers(pointers) {\n      this.config.numberOfPointers = pointers;\n      return this;\n    }\n\n    /**\n     * Expressed allowed direction of movement.\n     * Expected values are exported as constants in the Directions object.\n     * Arguments can be combined using `|` operator. Default value is set to `MouseButton.LEFT`.\n     * @param direction\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/fling-gesture/#directionvalue-directions\n     */\n    direction(direction) {\n      this.config.direction = direction;\n      return this;\n    }\n  }\n  exports.FlingGesture = FlingGesture;\n});","lineCount":38,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"FlingGesture"],[7,22,1,13],[8,2,3,0],[8,6,3,0,"_gesture"],[8,14,3,0],[8,17,3,0,"require"],[8,24,3,0],[8,25,3,0,"_dependencyMap"],[8,39,3,0],[9,2,4,7],[9,8,4,13,"FlingGesture"],[9,20,4,25],[9,29,4,34,"BaseGesture"],[9,49,4,45],[9,50,4,46],[10,4,5,2,"config"],[10,10,5,8],[10,13,5,11],[10,14,5,12],[10,15,5,13],[11,4,6,2,"constructor"],[11,15,6,13,"constructor"],[11,16,6,13],[11,18,6,16],[12,6,7,4],[12,11,7,9],[12,12,7,10],[12,13,7,11],[13,6,8,4],[13,10,8,8],[13,11,8,9,"handlerName"],[13,22,8,20],[13,25,8,23],[13,46,8,44],[14,4,9,2],[16,4,11,2],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,4,15,2,"numberOfPointers"],[20,20,15,18,"numberOfPointers"],[20,21,15,19,"pointers"],[20,29,15,27],[20,31,15,29],[21,6,16,4],[21,10,16,8],[21,11,16,9,"config"],[21,17,16,15],[21,18,16,16,"numberOfPointers"],[21,34,16,32],[21,37,16,35,"pointers"],[21,45,16,43],[22,6,17,4],[22,13,17,11],[22,17,17,15],[23,4,18,2],[25,4,20,2],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,4,27,2,"direction"],[32,13,27,11,"direction"],[32,14,27,12,"direction"],[32,23,27,21],[32,25,27,23],[33,6,28,4],[33,10,28,8],[33,11,28,9,"config"],[33,17,28,15],[33,18,28,16,"direction"],[33,27,28,25],[33,30,28,28,"direction"],[33,39,28,37],[34,6,29,4],[34,13,29,11],[34,17,29,15],[35,4,30,2],[36,2,31,0],[37,2,31,1,"exports"],[37,9,31,1],[37,10,31,1,"FlingGesture"],[37,22,31,1],[37,25,31,1,"FlingGesture"],[37,37,31,1],[38,0,31,1],[38,3]],"functionMap":{"names":["<global>","FlingGesture","FlingGesture#constructor","FlingGesture#numberOfPointers","FlingGesture#direction"],"mappings":"AAA;OCG;ECE;GDG;EEM;GFG;EGS;GHG;CDC"}},"type":"js/module"}]}