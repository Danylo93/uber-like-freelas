{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":26,"index":41}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.INT32_MAX = void 0;\n  exports.deepEqual = deepEqual;\n  exports.hasProperty = hasProperty;\n  exports.isFabric = isFabric;\n  exports.isReact19 = isReact19;\n  exports.isRemoteDebuggingEnabled = isRemoteDebuggingEnabled;\n  exports.isTestEnv = isTestEnv;\n  exports.tagMessage = tagMessage;\n  exports.toArray = toArray;\n  exports.withPrevAndCurrent = withPrevAndCurrent;\n  var _react = _interopRequireDefault(require(_dependencyMap[1], \"react\"));\n  function toArray(object) {\n    if (!Array.isArray(object)) {\n      return [object];\n    }\n    return object;\n  }\n  function withPrevAndCurrent(array, mapFn) {\n    const previousArr = [null];\n    const currentArr = [...array];\n    const transformedArr = [];\n    currentArr.forEach((current, i) => {\n      // This type cast is fine and solves problem mentioned in https://github.com/software-mansion/react-native-gesture-handler/pull/2867 (namely that `previous` can be undefined).\n      // Unfortunately, linter on our CI does not allow this type of casting as it is unnecessary. To bypass that we use eslint-disable.\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      const previous = previousArr[i];\n      const transformed = mapFn(previous, current);\n      previousArr.push(transformed);\n      transformedArr.push(transformed);\n    });\n    return transformedArr;\n  }\n  function hasProperty(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n  }\n  function isTestEnv() {\n    // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n    return hasProperty(global, 'process') && process.env.NODE_ENV === 'test';\n  }\n  function tagMessage(msg) {\n    return `[react-native-gesture-handler] ${msg}`;\n  }\n\n  // Helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n  // may not be initialized before the first render\n  function isFabric() {\n    // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n    return !!global?.nativeFabricUIManager;\n  }\n  function isReact19() {\n    return _react.default.version.startsWith('19.');\n  }\n  function isRemoteDebuggingEnabled() {\n    // react-native-reanimated checks if in remote debugging in the same way\n    // @ts-ignore global is available but node types are not included\n    const localGlobal = global;\n    return (!localGlobal.nativeCallSyncHook || !!localGlobal.__REMOTEDEV__) && !localGlobal.RN$Bridgeless;\n  }\n\n  /**\n   * Recursively compares two objects for deep equality.\n   *\n   * **Note:** This function does not support cyclic references.\n   *\n   * @param obj1 - The first object to compare.\n   * @param obj2 - The second object to compare.\n   * @returns `true` if the objects are deeply equal, `false` otherwise.\n   */\n  function deepEqual(obj1, obj2) {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const INT32_MAX = exports.INT32_MAX = 2 ** 31 - 1;\n});","lineCount":96,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"INT32_MAX"],[8,19,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"deepEqual"],[9,19,1,13],[9,22,1,13,"deepEqual"],[9,31,1,13],[10,2,1,13,"exports"],[10,9,1,13],[10,10,1,13,"hasProperty"],[10,21,1,13],[10,24,1,13,"hasProperty"],[10,35,1,13],[11,2,1,13,"exports"],[11,9,1,13],[11,10,1,13,"isFabric"],[11,18,1,13],[11,21,1,13,"isFabric"],[11,29,1,13],[12,2,1,13,"exports"],[12,9,1,13],[12,10,1,13,"isReact19"],[12,19,1,13],[12,22,1,13,"isReact19"],[12,31,1,13],[13,2,1,13,"exports"],[13,9,1,13],[13,10,1,13,"isRemoteDebuggingEnabled"],[13,34,1,13],[13,37,1,13,"isRemoteDebuggingEnabled"],[13,61,1,13],[14,2,1,13,"exports"],[14,9,1,13],[14,10,1,13,"isTestEnv"],[14,19,1,13],[14,22,1,13,"isTestEnv"],[14,31,1,13],[15,2,1,13,"exports"],[15,9,1,13],[15,10,1,13,"tagMessage"],[15,20,1,13],[15,23,1,13,"tagMessage"],[15,33,1,13],[16,2,1,13,"exports"],[16,9,1,13],[16,10,1,13,"toArray"],[16,17,1,13],[16,20,1,13,"toArray"],[16,27,1,13],[17,2,1,13,"exports"],[17,9,1,13],[17,10,1,13,"withPrevAndCurrent"],[17,28,1,13],[17,31,1,13,"withPrevAndCurrent"],[17,49,1,13],[18,2,3,0],[18,6,3,0,"_react"],[18,12,3,0],[18,15,3,0,"_interopRequireDefault"],[18,37,3,0],[18,38,3,0,"require"],[18,45,3,0],[18,46,3,0,"_dependencyMap"],[18,60,3,0],[19,2,4,7],[19,11,4,16,"toArray"],[19,18,4,23,"toArray"],[19,19,4,24,"object"],[19,25,4,30],[19,27,4,32],[20,4,5,2],[20,8,5,6],[20,9,5,7,"Array"],[20,14,5,12],[20,15,5,13,"isArray"],[20,22,5,20],[20,23,5,21,"object"],[20,29,5,27],[20,30,5,28],[20,32,5,30],[21,6,6,4],[21,13,6,11],[21,14,6,12,"object"],[21,20,6,18],[21,21,6,19],[22,4,7,2],[23,4,8,2],[23,11,8,9,"object"],[23,17,8,15],[24,2,9,0],[25,2,10,7],[25,11,10,16,"withPrevAndCurrent"],[25,29,10,34,"withPrevAndCurrent"],[25,30,10,35,"array"],[25,35,10,40],[25,37,10,42,"mapFn"],[25,42,10,47],[25,44,10,49],[26,4,11,2],[26,10,11,8,"previousArr"],[26,21,11,19],[26,24,11,22],[26,25,11,23],[26,29,11,27],[26,30,11,28],[27,4,12,2],[27,10,12,8,"currentArr"],[27,20,12,18],[27,23,12,21],[27,24,12,22],[27,27,12,25,"array"],[27,32,12,30],[27,33,12,31],[28,4,13,2],[28,10,13,8,"transformedArr"],[28,24,13,22],[28,27,13,25],[28,29,13,27],[29,4,14,2,"currentArr"],[29,14,14,12],[29,15,14,13,"forEach"],[29,22,14,20],[29,23,14,21],[29,24,14,22,"current"],[29,31,14,29],[29,33,14,31,"i"],[29,34,14,32],[29,39,14,37],[30,6,15,4],[31,6,16,4],[32,6,17,4],[33,6,18,4],[33,12,18,10,"previous"],[33,20,18,18],[33,23,18,21,"previousArr"],[33,34,18,32],[33,35,18,33,"i"],[33,36,18,34],[33,37,18,35],[34,6,19,4],[34,12,19,10,"transformed"],[34,23,19,21],[34,26,19,24,"mapFn"],[34,31,19,29],[34,32,19,30,"previous"],[34,40,19,38],[34,42,19,40,"current"],[34,49,19,47],[34,50,19,48],[35,6,20,4,"previousArr"],[35,17,20,15],[35,18,20,16,"push"],[35,22,20,20],[35,23,20,21,"transformed"],[35,34,20,32],[35,35,20,33],[36,6,21,4,"transformedArr"],[36,20,21,18],[36,21,21,19,"push"],[36,25,21,23],[36,26,21,24,"transformed"],[36,37,21,35],[36,38,21,36],[37,4,22,2],[37,5,22,3],[37,6,22,4],[38,4,23,2],[38,11,23,9,"transformedArr"],[38,25,23,23],[39,2,24,0],[40,2,25,7],[40,11,25,16,"hasProperty"],[40,22,25,27,"hasProperty"],[40,23,25,28,"object"],[40,29,25,34],[40,31,25,36,"key"],[40,34,25,39],[40,36,25,41],[41,4,26,2],[41,11,26,9,"Object"],[41,17,26,15],[41,18,26,16,"prototype"],[41,27,26,25],[41,28,26,26,"hasOwnProperty"],[41,42,26,40],[41,43,26,41,"call"],[41,47,26,45],[41,48,26,46,"object"],[41,54,26,52],[41,56,26,54,"key"],[41,59,26,57],[41,60,26,58],[42,2,27,0],[43,2,28,7],[43,11,28,16,"isTestEnv"],[43,20,28,25,"isTestEnv"],[43,21,28,25],[43,23,28,28],[44,4,29,2],[45,4,30,2],[45,11,30,9,"hasProperty"],[45,22,30,20],[45,23,30,21,"global"],[45,29,30,27],[45,31,30,29],[45,40,30,38],[45,41,30,39],[45,45,30,43,"process"],[45,52,30,50],[45,53,30,51,"env"],[45,56,30,54],[45,57,30,55,"NODE_ENV"],[45,65,30,63],[45,70,30,68],[45,76,30,74],[46,2,31,0],[47,2,32,7],[47,11,32,16,"tagMessage"],[47,21,32,26,"tagMessage"],[47,22,32,27,"msg"],[47,25,32,30],[47,27,32,32],[48,4,33,2],[48,11,33,9],[48,45,33,43,"msg"],[48,48,33,46],[48,50,33,48],[49,2,34,0],[51,2,36,0],[52,2,37,0],[53,2,38,7],[53,11,38,16,"isFabric"],[53,19,38,24,"isFabric"],[53,20,38,24],[53,22,38,27],[54,4,39,2],[55,4,40,2],[55,11,40,9],[55,12,40,10],[55,13,40,11,"global"],[55,19,40,17],[55,21,40,19,"nativeFabricUIManager"],[55,42,40,40],[56,2,41,0],[57,2,42,7],[57,11,42,16,"isReact19"],[57,20,42,25,"isReact19"],[57,21,42,25],[57,23,42,28],[58,4,43,2],[58,11,43,9,"React"],[58,25,43,14],[58,26,43,15,"version"],[58,33,43,22],[58,34,43,23,"startsWith"],[58,44,43,33],[58,45,43,34],[58,50,43,39],[58,51,43,40],[59,2,44,0],[60,2,45,7],[60,11,45,16,"isRemoteDebuggingEnabled"],[60,35,45,40,"isRemoteDebuggingEnabled"],[60,36,45,40],[60,38,45,43],[61,4,46,2],[62,4,47,2],[63,4,48,2],[63,10,48,8,"localGlobal"],[63,21,48,19],[63,24,48,22,"global"],[63,30,48,28],[64,4,49,2],[64,11,49,9],[64,12,49,10],[64,13,49,11,"localGlobal"],[64,24,49,22],[64,25,49,23,"nativeCallSyncHook"],[64,43,49,41],[64,47,49,45],[64,48,49,46],[64,49,49,47,"localGlobal"],[64,60,49,58],[64,61,49,59,"__REMOTEDEV__"],[64,74,49,72],[64,79,49,77],[64,80,49,78,"localGlobal"],[64,91,49,89],[64,92,49,90,"RN$Bridgeless"],[64,105,49,103],[65,2,50,0],[67,2,52,0],[68,0,53,0],[69,0,54,0],[70,0,55,0],[71,0,56,0],[72,0,57,0],[73,0,58,0],[74,0,59,0],[75,0,60,0],[76,2,61,7],[76,11,61,16,"deepEqual"],[76,20,61,25,"deepEqual"],[76,21,61,26,"obj1"],[76,25,61,30],[76,27,61,32,"obj2"],[76,31,61,36],[76,33,61,38],[77,4,62,2],[77,8,62,6,"obj1"],[77,12,62,10],[77,17,62,15,"obj2"],[77,21,62,19],[77,23,62,21],[78,6,63,4],[78,13,63,11],[78,17,63,15],[79,4,64,2],[80,4,65,2],[80,8,65,6],[80,15,65,13,"obj1"],[80,19,65,17],[80,24,65,22],[80,32,65,30],[80,36,65,34],[80,43,65,41,"obj2"],[80,47,65,45],[80,52,65,50],[80,60,65,58],[80,64,65,62,"obj1"],[80,68,65,66],[80,73,65,71],[80,77,65,75],[80,81,65,79,"obj2"],[80,85,65,83],[80,90,65,88],[80,94,65,92],[80,96,65,94],[81,6,66,4],[81,13,66,11],[81,18,66,16],[82,4,67,2],[83,4,68,2],[83,10,68,8,"keys1"],[83,15,68,13],[83,18,68,16,"Object"],[83,24,68,22],[83,25,68,23,"keys"],[83,29,68,27],[83,30,68,28,"obj1"],[83,34,68,32],[83,35,68,33],[84,4,69,2],[84,10,69,8,"keys2"],[84,15,69,13],[84,18,69,16,"Object"],[84,24,69,22],[84,25,69,23,"keys"],[84,29,69,27],[84,30,69,28,"obj2"],[84,34,69,32],[84,35,69,33],[85,4,70,2],[85,8,70,6,"keys1"],[85,13,70,11],[85,14,70,12,"length"],[85,20,70,18],[85,25,70,23,"keys2"],[85,30,70,28],[85,31,70,29,"length"],[85,37,70,35],[85,39,70,37],[86,6,71,4],[86,13,71,11],[86,18,71,16],[87,4,72,2],[88,4,73,2],[88,9,73,7],[88,15,73,13,"key"],[88,18,73,16],[88,22,73,20,"keys1"],[88,27,73,25],[88,29,73,27],[89,6,74,4],[89,10,74,8],[89,11,74,9,"keys2"],[89,16,74,14],[89,17,74,15,"includes"],[89,25,74,23],[89,26,74,24,"key"],[89,29,74,27],[89,30,74,28],[89,34,74,32],[89,35,74,33,"deepEqual"],[89,44,74,42],[89,45,74,43,"obj1"],[89,49,74,47],[89,50,74,48,"key"],[89,53,74,51],[89,54,74,52],[89,56,74,54,"obj2"],[89,60,74,58],[89,61,74,59,"key"],[89,64,74,62],[89,65,74,63],[89,66,74,64],[89,68,74,66],[90,8,75,6],[90,15,75,13],[90,20,75,18],[91,6,76,4],[92,4,77,2],[93,4,78,2],[93,11,78,9],[93,15,78,13],[94,2,79,0],[95,2,80,7],[95,8,80,13,"INT32_MAX"],[95,17,80,22],[95,20,80,22,"exports"],[95,27,80,22],[95,28,80,22,"INT32_MAX"],[95,37,80,22],[95,40,80,25],[95,41,80,26],[95,45,80,30],[95,47,80,32],[95,50,80,35],[95,51,80,36],[96,0,80,37],[96,3]],"functionMap":{"names":["<global>","toArray","withPrevAndCurrent","currentArr.forEach$argument_0","hasProperty","isTestEnv","tagMessage","isFabric","isReact19","isRemoteDebuggingEnabled","deepEqual"],"mappings":"AAA;OCG;CDK;OEC;qBCI;GDQ;CFE;OIC;CJE;OKC;CLG;OMC;CNE;OOI;CPG;OQC;CRE;OSC;CTK;OUW;CVkB"}},"type":"js/module"}]}