{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../services/googleDirections","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":55},"end":{"line":2,"column":100,"index":155}}],"key":"Mu3y/9XU+lYPWUrA2nyTVt32apM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useDirections = void 0;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _googleDirections = require(_dependencyMap[1], \"../services/googleDirections\");\n  var _s = $RefreshSig$();\n  const useDirections = () => {\n    _s();\n    const [routeInfo, setRouteInfo] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(false);\n    const [error, setError] = (0, _react.useState)(null);\n    const [isNavigating, setIsNavigating] = (0, _react.useState)(false);\n    const [currentStepIndex, setCurrentStepIndex] = (0, _react.useState)(0);\n\n    // Store route parameters for recalculation\n    const routeParams = (0, _react.useRef)(null);\n    const currentLocation = (0, _react.useRef)(null);\n    const processDirectionsResponse = (0, _react.useCallback)(route => {\n      const leg = route.legs[0]; // For now, handle single leg routes\n\n      // Process steps into navigation format\n      const steps = leg.steps.map((step, index) => ({\n        id: `step_${index}`,\n        instruction: step.html_instructions.replace(/<[^>]*>/g, ''),\n        // Strip HTML tags\n        distance: step.distance.text,\n        duration: step.duration.text,\n        maneuver: step.maneuver,\n        coordinates: {\n          start: {\n            latitude: step.start_location.lat,\n            longitude: step.start_location.lng\n          },\n          end: {\n            latitude: step.end_location.lat,\n            longitude: step.end_location.lng\n          }\n        }\n      }));\n\n      // Decode polyline for route visualization\n      const polylinePoints = _googleDirections.googleDirectionsService.decodePolyline(route.overview_polyline.points);\n\n      // Calculate ETA\n      const estimatedArrival = _googleDirections.googleDirectionsService.calculateETA(route.duration.value);\n      return {\n        distance: route.distance.text,\n        duration: route.duration.text,\n        estimatedArrival,\n        steps,\n        polylinePoints\n      };\n    }, []);\n    const getRoute = (0, _react.useCallback)(async (origin, destination, waypoints) => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        console.log('🗺️ Getting route from', origin, 'to', destination);\n\n        // Store parameters for potential recalculation\n        routeParams.current = {\n          origin,\n          destination,\n          waypoints\n        };\n        const response = await _googleDirections.googleDirectionsService.getDirections(origin, destination, waypoints, {\n          mode: 'driving',\n          avoidTolls: false,\n          avoidHighways: false\n        });\n        if (response.status !== 'OK' || response.routes.length === 0) {\n          throw new Error(`No route found: ${response.status}`);\n        }\n        const processedRoute = processDirectionsResponse(response.routes[0]);\n        setRouteInfo(processedRoute);\n        setCurrentStepIndex(0);\n        console.log('✅ Route calculated successfully:', processedRoute);\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'Failed to get directions';\n        setError(errorMessage);\n        console.error('❌ Error getting route:', errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    }, [processDirectionsResponse]);\n    const clearRoute = (0, _react.useCallback)(() => {\n      setRouteInfo(null);\n      setError(null);\n      setIsNavigating(false);\n      setCurrentStepIndex(0);\n      routeParams.current = null;\n      currentLocation.current = null;\n      console.log('🗺️ Route cleared');\n    }, []);\n    const startNavigation = (0, _react.useCallback)(() => {\n      if (!routeInfo) {\n        console.warn('⚠️ Cannot start navigation: no route available');\n        return;\n      }\n      setIsNavigating(true);\n      setCurrentStepIndex(0);\n      console.log('🧭 Navigation started');\n    }, [routeInfo]);\n    const stopNavigation = (0, _react.useCallback)(() => {\n      setIsNavigating(false);\n      console.log('🛑 Navigation stopped');\n    }, []);\n    const getCurrentStep = (0, _react.useCallback)(() => {\n      if (!routeInfo || currentStepIndex >= routeInfo.steps.length) {\n        return null;\n      }\n      return routeInfo.steps[currentStepIndex];\n    }, [routeInfo, currentStepIndex]);\n    const getNextStep = (0, _react.useCallback)(() => {\n      if (!routeInfo || currentStepIndex + 1 >= routeInfo.steps.length) {\n        return null;\n      }\n      return routeInfo.steps[currentStepIndex + 1];\n    }, [routeInfo, currentStepIndex]);\n    const updateCurrentLocation = (0, _react.useCallback)(location => {\n      currentLocation.current = location;\n      if (!isNavigating || !routeInfo) return;\n\n      // Simple logic to advance to next step based on proximity\n      const currentStep = getCurrentStep();\n      if (currentStep) {\n        const distanceToEnd = calculateDistance(location, currentStep.coordinates.end);\n\n        // If within 50m of step end, advance to next step\n        if (distanceToEnd < 0.05) {\n          // 50 meters\n          const nextIndex = currentStepIndex + 1;\n          if (nextIndex < routeInfo.steps.length) {\n            setCurrentStepIndex(nextIndex);\n            console.log(`🧭 Advanced to step ${nextIndex + 1}/${routeInfo.steps.length}`);\n          } else {\n            console.log('🎉 Navigation completed!');\n            setIsNavigating(false);\n          }\n        }\n      }\n    }, [isNavigating, routeInfo, getCurrentStep, currentStepIndex]);\n    const recalculateRoute = (0, _react.useCallback)(async () => {\n      if (!routeParams.current || !currentLocation.current) {\n        console.warn('⚠️ Cannot recalculate: missing route parameters or current location');\n        return;\n      }\n      console.log('🔄 Recalculating route from current location');\n      await getRoute(currentLocation.current, routeParams.current.destination, routeParams.current.waypoints);\n    }, [getRoute]);\n    const getProgressPercentage = (0, _react.useCallback)(() => {\n      if (!routeInfo || routeInfo.steps.length === 0) return 0;\n      return Math.round(currentStepIndex / routeInfo.steps.length * 100);\n    }, [routeInfo, currentStepIndex]);\n    const getRemainingDistance = (0, _react.useCallback)(() => {\n      if (!routeInfo) return '0 km';\n\n      // Calculate remaining distance from current step\n      let remainingMeters = 0;\n      for (let i = currentStepIndex; i < routeInfo.steps.length; i++) {\n        // This is a simplification - would need more precise calculation\n        remainingMeters += parseDistance(routeInfo.steps[i].distance);\n      }\n      return _googleDirections.googleDirectionsService.formatDistance(remainingMeters);\n    }, [routeInfo, currentStepIndex]);\n    const getRemainingTime = (0, _react.useCallback)(() => {\n      if (!routeInfo) return '0 min';\n\n      // Calculate remaining time from current step\n      let remainingSeconds = 0;\n      for (let i = currentStepIndex; i < routeInfo.steps.length; i++) {\n        remainingSeconds += parseDuration(routeInfo.steps[i].duration);\n      }\n      return _googleDirections.googleDirectionsService.formatDuration(remainingSeconds);\n    }, [routeInfo, currentStepIndex]);\n    return {\n      routeInfo,\n      isLoading,\n      error,\n      // Methods\n      getRoute,\n      clearRoute,\n      getCurrentStep,\n      getNextStep,\n      // Navigation\n      startNavigation,\n      stopNavigation,\n      isNavigating,\n      currentStepIndex,\n      // Real-time updates\n      updateCurrentLocation,\n      recalculateRoute,\n      // Progress tracking\n      getProgressPercentage,\n      getRemainingDistance,\n      getRemainingTime\n    };\n  };\n\n  // Helper functions\n  exports.useDirections = useDirections;\n  _s(useDirections, \"Wnl3ecEJVcMeXL1C+q6v0nwyHUA=\");\n  function calculateDistance(coord1, coord2) {\n    const R = 6371; // Earth's radius in km\n    const dLat = (coord2.latitude - coord1.latitude) * Math.PI / 180;\n    const dLng = (coord2.longitude - coord1.longitude) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(coord1.latitude * Math.PI / 180) * Math.cos(coord2.latitude * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  }\n  function parseDistance(distanceText) {\n    const match = distanceText.match(/(\\d+\\.?\\d*)\\s*(km|m)/);\n    if (!match) return 0;\n    const value = parseFloat(match[1]);\n    const unit = match[2];\n    return unit === 'km' ? value * 1000 : value;\n  }\n  function parseDuration(durationText) {\n    const match = durationText.match(/(\\d+)\\s*min/);\n    if (!match) return 0;\n    return parseInt(match[1]) * 60; // Convert to seconds\n  }\n});","lineCount":225,"map":[[6,2,1,0],[6,6,1,0,"_react"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,2,0],[7,6,2,0,"_googleDirections"],[7,23,2,0],[7,26,2,0,"require"],[7,33,2,0],[7,34,2,0,"_dependencyMap"],[7,48,2,0],[8,2,2,100],[8,6,2,100,"_s"],[8,8,2,100],[8,11,2,100,"$RefreshSig$"],[8,23,2,100],[9,2,51,7],[9,8,51,13,"useDirections"],[9,21,51,26],[9,24,51,29,"useDirections"],[9,25,51,29],[9,30,51,56],[10,4,51,56,"_s"],[10,6,51,56],[11,4,52,2],[11,10,52,8],[11,11,52,9,"routeInfo"],[11,20,52,18],[11,22,52,20,"setRouteInfo"],[11,34,52,32],[11,35,52,33],[11,38,52,36],[11,42,52,36,"useState"],[11,57,52,44],[11,59,52,63],[11,63,52,67],[11,64,52,68],[12,4,53,2],[12,10,53,8],[12,11,53,9,"isLoading"],[12,20,53,18],[12,22,53,20,"setIsLoading"],[12,34,53,32],[12,35,53,33],[12,38,53,36],[12,42,53,36,"useState"],[12,57,53,44],[12,59,53,45],[12,64,53,50],[12,65,53,51],[13,4,54,2],[13,10,54,8],[13,11,54,9,"error"],[13,16,54,14],[13,18,54,16,"setError"],[13,26,54,24],[13,27,54,25],[13,30,54,28],[13,34,54,28,"useState"],[13,49,54,36],[13,51,54,52],[13,55,54,56],[13,56,54,57],[14,4,55,2],[14,10,55,8],[14,11,55,9,"isNavigating"],[14,23,55,21],[14,25,55,23,"setIsNavigating"],[14,40,55,38],[14,41,55,39],[14,44,55,42],[14,48,55,42,"useState"],[14,63,55,50],[14,65,55,51],[14,70,55,56],[14,71,55,57],[15,4,56,2],[15,10,56,8],[15,11,56,9,"currentStepIndex"],[15,27,56,25],[15,29,56,27,"setCurrentStepIndex"],[15,48,56,46],[15,49,56,47],[15,52,56,50],[15,56,56,50,"useState"],[15,71,56,58],[15,73,56,59],[15,74,56,60],[15,75,56,61],[17,4,58,2],[18,4,59,2],[18,10,59,8,"routeParams"],[18,21,59,19],[18,24,59,22],[18,28,59,22,"useRef"],[18,41,59,28],[18,43,63,12],[18,47,63,16],[18,48,63,17],[19,4,65,2],[19,10,65,8,"currentLocation"],[19,25,65,23],[19,28,65,26],[19,32,65,26,"useRef"],[19,45,65,32],[19,47,65,52],[19,51,65,56],[19,52,65,57],[20,4,67,2],[20,10,67,8,"processDirectionsResponse"],[20,35,67,33],[20,38,67,36],[20,42,67,36,"useCallback"],[20,60,67,47],[20,62,67,49,"route"],[20,67,67,71],[20,71,67,87],[21,6,68,4],[21,12,68,10,"leg"],[21,15,68,13],[21,18,68,16,"route"],[21,23,68,21],[21,24,68,22,"legs"],[21,28,68,26],[21,29,68,27],[21,30,68,28],[21,31,68,29],[21,32,68,30],[21,33,68,31],[23,6,70,4],[24,6,71,4],[24,12,71,10,"steps"],[24,17,71,33],[24,20,71,36,"leg"],[24,23,71,39],[24,24,71,40,"steps"],[24,29,71,45],[24,30,71,46,"map"],[24,33,71,49],[24,34,71,50],[24,35,71,51,"step"],[24,39,71,55],[24,41,71,57,"index"],[24,46,71,62],[24,52,71,68],[25,8,72,6,"id"],[25,10,72,8],[25,12,72,10],[25,20,72,18,"index"],[25,25,72,23],[25,27,72,25],[26,8,73,6,"instruction"],[26,19,73,17],[26,21,73,19,"step"],[26,25,73,23],[26,26,73,24,"html_instructions"],[26,43,73,41],[26,44,73,42,"replace"],[26,51,73,49],[26,52,73,50],[26,62,73,60],[26,64,73,62],[26,66,73,64],[26,67,73,65],[27,8,73,67],[28,8,74,6,"distance"],[28,16,74,14],[28,18,74,16,"step"],[28,22,74,20],[28,23,74,21,"distance"],[28,31,74,29],[28,32,74,30,"text"],[28,36,74,34],[29,8,75,6,"duration"],[29,16,75,14],[29,18,75,16,"step"],[29,22,75,20],[29,23,75,21,"duration"],[29,31,75,29],[29,32,75,30,"text"],[29,36,75,34],[30,8,76,6,"maneuver"],[30,16,76,14],[30,18,76,16,"step"],[30,22,76,20],[30,23,76,21,"maneuver"],[30,31,76,29],[31,8,77,6,"coordinates"],[31,19,77,17],[31,21,77,19],[32,10,78,8,"start"],[32,15,78,13],[32,17,78,15],[33,12,79,10,"latitude"],[33,20,79,18],[33,22,79,20,"step"],[33,26,79,24],[33,27,79,25,"start_location"],[33,41,79,39],[33,42,79,40,"lat"],[33,45,79,43],[34,12,80,10,"longitude"],[34,21,80,19],[34,23,80,21,"step"],[34,27,80,25],[34,28,80,26,"start_location"],[34,42,80,40],[34,43,80,41,"lng"],[35,10,81,8],[35,11,81,9],[36,10,82,8,"end"],[36,13,82,11],[36,15,82,13],[37,12,83,10,"latitude"],[37,20,83,18],[37,22,83,20,"step"],[37,26,83,24],[37,27,83,25,"end_location"],[37,39,83,37],[37,40,83,38,"lat"],[37,43,83,41],[38,12,84,10,"longitude"],[38,21,84,19],[38,23,84,21,"step"],[38,27,84,25],[38,28,84,26,"end_location"],[38,40,84,38],[38,41,84,39,"lng"],[39,10,85,8],[40,8,86,6],[41,6,87,4],[41,7,87,5],[41,8,87,6],[41,9,87,7],[43,6,89,4],[44,6,90,4],[44,12,90,10,"polylinePoints"],[44,26,90,24],[44,29,90,27,"googleDirectionsService"],[44,70,90,50],[44,71,90,51,"decodePolyline"],[44,85,90,65],[44,86,90,66,"route"],[44,91,90,71],[44,92,90,72,"overview_polyline"],[44,109,90,89],[44,110,90,90,"points"],[44,116,90,96],[44,117,90,97],[46,6,92,4],[47,6,93,4],[47,12,93,10,"estimatedArrival"],[47,28,93,26],[47,31,93,29,"googleDirectionsService"],[47,72,93,52],[47,73,93,53,"calculateETA"],[47,85,93,65],[47,86,93,66,"route"],[47,91,93,71],[47,92,93,72,"duration"],[47,100,93,80],[47,101,93,81,"value"],[47,106,93,86],[47,107,93,87],[48,6,95,4],[48,13,95,11],[49,8,96,6,"distance"],[49,16,96,14],[49,18,96,16,"route"],[49,23,96,21],[49,24,96,22,"distance"],[49,32,96,30],[49,33,96,31,"text"],[49,37,96,35],[50,8,97,6,"duration"],[50,16,97,14],[50,18,97,16,"route"],[50,23,97,21],[50,24,97,22,"duration"],[50,32,97,30],[50,33,97,31,"text"],[50,37,97,35],[51,8,98,6,"estimatedArrival"],[51,24,98,22],[52,8,99,6,"steps"],[52,13,99,11],[53,8,100,6,"polylinePoints"],[54,6,101,4],[54,7,101,5],[55,4,102,2],[55,5,102,3],[55,7,102,5],[55,9,102,7],[55,10,102,8],[56,4,104,2],[56,10,104,8,"getRoute"],[56,18,104,16],[56,21,104,19],[56,25,104,19,"useCallback"],[56,43,104,30],[56,45,104,31],[56,52,105,4,"origin"],[56,58,105,22],[56,60,106,4,"destination"],[56,71,106,27],[56,73,107,4,"waypoints"],[56,82,107,28],[56,87,108,7],[57,6,109,4],[57,10,109,8],[58,8,110,6,"setIsLoading"],[58,20,110,18],[58,21,110,19],[58,25,110,23],[58,26,110,24],[59,8,111,6,"setError"],[59,16,111,14],[59,17,111,15],[59,21,111,19],[59,22,111,20],[60,8,113,6,"console"],[60,15,113,13],[60,16,113,14,"log"],[60,19,113,17],[60,20,113,18],[60,44,113,42],[60,46,113,44,"origin"],[60,52,113,50],[60,54,113,52],[60,58,113,56],[60,60,113,58,"destination"],[60,71,113,69],[60,72,113,70],[62,8,115,6],[63,8,116,6,"routeParams"],[63,19,116,17],[63,20,116,18,"current"],[63,27,116,25],[63,30,116,28],[64,10,116,30,"origin"],[64,16,116,36],[65,10,116,38,"destination"],[65,21,116,49],[66,10,116,51,"waypoints"],[67,8,116,61],[67,9,116,62],[68,8,118,6],[68,14,118,12,"response"],[68,22,118,20],[68,25,118,23],[68,31,118,29,"googleDirectionsService"],[68,72,118,52],[68,73,118,53,"getDirections"],[68,86,118,66],[68,87,119,8,"origin"],[68,93,119,14],[68,95,120,8,"destination"],[68,106,120,19],[68,108,121,8,"waypoints"],[68,117,121,17],[68,119,122,8],[69,10,123,10,"mode"],[69,14,123,14],[69,16,123,16],[69,25,123,25],[70,10,124,10,"avoidTolls"],[70,20,124,20],[70,22,124,22],[70,27,124,27],[71,10,125,10,"avoidHighways"],[71,23,125,23],[71,25,125,25],[72,8,126,8],[72,9,127,6],[72,10,127,7],[73,8,129,6],[73,12,129,10,"response"],[73,20,129,18],[73,21,129,19,"status"],[73,27,129,25],[73,32,129,30],[73,36,129,34],[73,40,129,38,"response"],[73,48,129,46],[73,49,129,47,"routes"],[73,55,129,53],[73,56,129,54,"length"],[73,62,129,60],[73,67,129,65],[73,68,129,66],[73,70,129,68],[74,10,130,8],[74,16,130,14],[74,20,130,18,"Error"],[74,25,130,23],[74,26,130,24],[74,45,130,43,"response"],[74,53,130,51],[74,54,130,52,"status"],[74,60,130,58],[74,62,130,60],[74,63,130,61],[75,8,131,6],[76,8,133,6],[76,14,133,12,"processedRoute"],[76,28,133,26],[76,31,133,29,"processDirectionsResponse"],[76,56,133,54],[76,57,133,55,"response"],[76,65,133,63],[76,66,133,64,"routes"],[76,72,133,70],[76,73,133,71],[76,74,133,72],[76,75,133,73],[76,76,133,74],[77,8,134,6,"setRouteInfo"],[77,20,134,18],[77,21,134,19,"processedRoute"],[77,35,134,33],[77,36,134,34],[78,8,135,6,"setCurrentStepIndex"],[78,27,135,25],[78,28,135,26],[78,29,135,27],[78,30,135,28],[79,8,137,6,"console"],[79,15,137,13],[79,16,137,14,"log"],[79,19,137,17],[79,20,137,18],[79,54,137,52],[79,56,137,54,"processedRoute"],[79,70,137,68],[79,71,137,69],[80,6,138,4],[80,7,138,5],[80,8,138,6],[80,15,138,13,"err"],[80,18,138,16],[80,20,138,18],[81,8,139,6],[81,14,139,12,"errorMessage"],[81,26,139,24],[81,29,139,27,"err"],[81,32,139,30],[81,44,139,42,"Error"],[81,49,139,47],[81,52,139,50,"err"],[81,55,139,53],[81,56,139,54,"message"],[81,63,139,61],[81,66,139,64],[81,92,139,90],[82,8,140,6,"setError"],[82,16,140,14],[82,17,140,15,"errorMessage"],[82,29,140,27],[82,30,140,28],[83,8,141,6,"console"],[83,15,141,13],[83,16,141,14,"error"],[83,21,141,19],[83,22,141,20],[83,46,141,44],[83,48,141,46,"errorMessage"],[83,60,141,58],[83,61,141,59],[84,6,142,4],[84,7,142,5],[84,16,142,14],[85,8,143,6,"setIsLoading"],[85,20,143,18],[85,21,143,19],[85,26,143,24],[85,27,143,25],[86,6,144,4],[87,4,145,2],[87,5,145,3],[87,7,145,5],[87,8,145,6,"processDirectionsResponse"],[87,33,145,31],[87,34,145,32],[87,35,145,33],[88,4,147,2],[88,10,147,8,"clearRoute"],[88,20,147,18],[88,23,147,21],[88,27,147,21,"useCallback"],[88,45,147,32],[88,47,147,33],[88,53,147,39],[89,6,148,4,"setRouteInfo"],[89,18,148,16],[89,19,148,17],[89,23,148,21],[89,24,148,22],[90,6,149,4,"setError"],[90,14,149,12],[90,15,149,13],[90,19,149,17],[90,20,149,18],[91,6,150,4,"setIsNavigating"],[91,21,150,19],[91,22,150,20],[91,27,150,25],[91,28,150,26],[92,6,151,4,"setCurrentStepIndex"],[92,25,151,23],[92,26,151,24],[92,27,151,25],[92,28,151,26],[93,6,152,4,"routeParams"],[93,17,152,15],[93,18,152,16,"current"],[93,25,152,23],[93,28,152,26],[93,32,152,30],[94,6,153,4,"currentLocation"],[94,21,153,19],[94,22,153,20,"current"],[94,29,153,27],[94,32,153,30],[94,36,153,34],[95,6,154,4,"console"],[95,13,154,11],[95,14,154,12,"log"],[95,17,154,15],[95,18,154,16],[95,37,154,35],[95,38,154,36],[96,4,155,2],[96,5,155,3],[96,7,155,5],[96,9,155,7],[96,10,155,8],[97,4,157,2],[97,10,157,8,"startNavigation"],[97,25,157,23],[97,28,157,26],[97,32,157,26,"useCallback"],[97,50,157,37],[97,52,157,38],[97,58,157,44],[98,6,158,4],[98,10,158,8],[98,11,158,9,"routeInfo"],[98,20,158,18],[98,22,158,20],[99,8,159,6,"console"],[99,15,159,13],[99,16,159,14,"warn"],[99,20,159,18],[99,21,159,19],[99,69,159,67],[99,70,159,68],[100,8,160,6],[101,6,161,4],[102,6,163,4,"setIsNavigating"],[102,21,163,19],[102,22,163,20],[102,26,163,24],[102,27,163,25],[103,6,164,4,"setCurrentStepIndex"],[103,25,164,23],[103,26,164,24],[103,27,164,25],[103,28,164,26],[104,6,165,4,"console"],[104,13,165,11],[104,14,165,12,"log"],[104,17,165,15],[104,18,165,16],[104,41,165,39],[104,42,165,40],[105,4,166,2],[105,5,166,3],[105,7,166,5],[105,8,166,6,"routeInfo"],[105,17,166,15],[105,18,166,16],[105,19,166,17],[106,4,168,2],[106,10,168,8,"stopNavigation"],[106,24,168,22],[106,27,168,25],[106,31,168,25,"useCallback"],[106,49,168,36],[106,51,168,37],[106,57,168,43],[107,6,169,4,"setIsNavigating"],[107,21,169,19],[107,22,169,20],[107,27,169,25],[107,28,169,26],[108,6,170,4,"console"],[108,13,170,11],[108,14,170,12,"log"],[108,17,170,15],[108,18,170,16],[108,41,170,39],[108,42,170,40],[109,4,171,2],[109,5,171,3],[109,7,171,5],[109,9,171,7],[109,10,171,8],[110,4,173,2],[110,10,173,8,"getCurrentStep"],[110,24,173,22],[110,27,173,25],[110,31,173,25,"useCallback"],[110,49,173,36],[110,51,173,37],[110,57,173,66],[111,6,174,4],[111,10,174,8],[111,11,174,9,"routeInfo"],[111,20,174,18],[111,24,174,22,"currentStepIndex"],[111,40,174,38],[111,44,174,42,"routeInfo"],[111,53,174,51],[111,54,174,52,"steps"],[111,59,174,57],[111,60,174,58,"length"],[111,66,174,64],[111,68,174,66],[112,8,175,6],[112,15,175,13],[112,19,175,17],[113,6,176,4],[114,6,177,4],[114,13,177,11,"routeInfo"],[114,22,177,20],[114,23,177,21,"steps"],[114,28,177,26],[114,29,177,27,"currentStepIndex"],[114,45,177,43],[114,46,177,44],[115,4,178,2],[115,5,178,3],[115,7,178,5],[115,8,178,6,"routeInfo"],[115,17,178,15],[115,19,178,17,"currentStepIndex"],[115,35,178,33],[115,36,178,34],[115,37,178,35],[116,4,180,2],[116,10,180,8,"getNextStep"],[116,21,180,19],[116,24,180,22],[116,28,180,22,"useCallback"],[116,46,180,33],[116,48,180,34],[116,54,180,63],[117,6,181,4],[117,10,181,8],[117,11,181,9,"routeInfo"],[117,20,181,18],[117,24,181,22,"currentStepIndex"],[117,40,181,38],[117,43,181,41],[117,44,181,42],[117,48,181,46,"routeInfo"],[117,57,181,55],[117,58,181,56,"steps"],[117,63,181,61],[117,64,181,62,"length"],[117,70,181,68],[117,72,181,70],[118,8,182,6],[118,15,182,13],[118,19,182,17],[119,6,183,4],[120,6,184,4],[120,13,184,11,"routeInfo"],[120,22,184,20],[120,23,184,21,"steps"],[120,28,184,26],[120,29,184,27,"currentStepIndex"],[120,45,184,43],[120,48,184,46],[120,49,184,47],[120,50,184,48],[121,4,185,2],[121,5,185,3],[121,7,185,5],[121,8,185,6,"routeInfo"],[121,17,185,15],[121,19,185,17,"currentStepIndex"],[121,35,185,33],[121,36,185,34],[121,37,185,35],[122,4,187,2],[122,10,187,8,"updateCurrentLocation"],[122,31,187,29],[122,34,187,32],[122,38,187,32,"useCallback"],[122,56,187,43],[122,58,187,45,"location"],[122,66,187,65],[122,70,187,70],[123,6,188,4,"currentLocation"],[123,21,188,19],[123,22,188,20,"current"],[123,29,188,27],[123,32,188,30,"location"],[123,40,188,38],[124,6,190,4],[124,10,190,8],[124,11,190,9,"isNavigating"],[124,23,190,21],[124,27,190,25],[124,28,190,26,"routeInfo"],[124,37,190,35],[124,39,190,37],[126,6,192,4],[127,6,193,4],[127,12,193,10,"currentStep"],[127,23,193,21],[127,26,193,24,"getCurrentStep"],[127,40,193,38],[127,41,193,39],[127,42,193,40],[128,6,194,4],[128,10,194,8,"currentStep"],[128,21,194,19],[128,23,194,21],[129,8,195,6],[129,14,195,12,"distanceToEnd"],[129,27,195,25],[129,30,195,28,"calculateDistance"],[129,47,195,45],[129,48,196,8,"location"],[129,56,196,16],[129,58,197,8,"currentStep"],[129,69,197,19],[129,70,197,20,"coordinates"],[129,81,197,31],[129,82,197,32,"end"],[129,85,198,6],[129,86,198,7],[131,8,200,6],[132,8,201,6],[132,12,201,10,"distanceToEnd"],[132,25,201,23],[132,28,201,26],[132,32,201,30],[132,34,201,32],[133,10,201,34],[134,10,202,8],[134,16,202,14,"nextIndex"],[134,25,202,23],[134,28,202,26,"currentStepIndex"],[134,44,202,42],[134,47,202,45],[134,48,202,46],[135,10,203,8],[135,14,203,12,"nextIndex"],[135,23,203,21],[135,26,203,24,"routeInfo"],[135,35,203,33],[135,36,203,34,"steps"],[135,41,203,39],[135,42,203,40,"length"],[135,48,203,46],[135,50,203,48],[136,12,204,10,"setCurrentStepIndex"],[136,31,204,29],[136,32,204,30,"nextIndex"],[136,41,204,39],[136,42,204,40],[137,12,205,10,"console"],[137,19,205,17],[137,20,205,18,"log"],[137,23,205,21],[137,24,205,22],[137,47,205,45,"nextIndex"],[137,56,205,54],[137,59,205,57],[137,60,205,58],[137,64,205,62,"routeInfo"],[137,73,205,71],[137,74,205,72,"steps"],[137,79,205,77],[137,80,205,78,"length"],[137,86,205,84],[137,88,205,86],[137,89,205,87],[138,10,206,8],[138,11,206,9],[138,17,206,15],[139,12,207,10,"console"],[139,19,207,17],[139,20,207,18,"log"],[139,23,207,21],[139,24,207,22],[139,50,207,48],[139,51,207,49],[140,12,208,10,"setIsNavigating"],[140,27,208,25],[140,28,208,26],[140,33,208,31],[140,34,208,32],[141,10,209,8],[142,8,210,6],[143,6,211,4],[144,4,212,2],[144,5,212,3],[144,7,212,5],[144,8,212,6,"isNavigating"],[144,20,212,18],[144,22,212,20,"routeInfo"],[144,31,212,29],[144,33,212,31,"getCurrentStep"],[144,47,212,45],[144,49,212,47,"currentStepIndex"],[144,65,212,63],[144,66,212,64],[144,67,212,65],[145,4,214,2],[145,10,214,8,"recalculateRoute"],[145,26,214,24],[145,29,214,27],[145,33,214,27,"useCallback"],[145,51,214,38],[145,53,214,39],[145,65,214,51],[146,6,215,4],[146,10,215,8],[146,11,215,9,"routeParams"],[146,22,215,20],[146,23,215,21,"current"],[146,30,215,28],[146,34,215,32],[146,35,215,33,"currentLocation"],[146,50,215,48],[146,51,215,49,"current"],[146,58,215,56],[146,60,215,58],[147,8,216,6,"console"],[147,15,216,13],[147,16,216,14,"warn"],[147,20,216,18],[147,21,216,19],[147,90,216,88],[147,91,216,89],[148,8,217,6],[149,6,218,4],[150,6,220,4,"console"],[150,13,220,11],[150,14,220,12,"log"],[150,17,220,15],[150,18,220,16],[150,64,220,62],[150,65,220,63],[151,6,222,4],[151,12,222,10,"getRoute"],[151,20,222,18],[151,21,223,6,"currentLocation"],[151,36,223,21],[151,37,223,22,"current"],[151,44,223,29],[151,46,224,6,"routeParams"],[151,57,224,17],[151,58,224,18,"current"],[151,65,224,25],[151,66,224,26,"destination"],[151,77,224,37],[151,79,225,6,"routeParams"],[151,90,225,17],[151,91,225,18,"current"],[151,98,225,25],[151,99,225,26,"waypoints"],[151,108,226,4],[151,109,226,5],[152,4,227,2],[152,5,227,3],[152,7,227,5],[152,8,227,6,"getRoute"],[152,16,227,14],[152,17,227,15],[152,18,227,16],[153,4,229,2],[153,10,229,8,"getProgressPercentage"],[153,31,229,29],[153,34,229,32],[153,38,229,32,"useCallback"],[153,56,229,43],[153,58,229,44],[153,64,229,58],[154,6,230,4],[154,10,230,8],[154,11,230,9,"routeInfo"],[154,20,230,18],[154,24,230,22,"routeInfo"],[154,33,230,31],[154,34,230,32,"steps"],[154,39,230,37],[154,40,230,38,"length"],[154,46,230,44],[154,51,230,49],[154,52,230,50],[154,54,230,52],[154,61,230,59],[154,62,230,60],[155,6,231,4],[155,13,231,11,"Math"],[155,17,231,15],[155,18,231,16,"round"],[155,23,231,21],[155,24,231,23,"currentStepIndex"],[155,40,231,39],[155,43,231,42,"routeInfo"],[155,52,231,51],[155,53,231,52,"steps"],[155,58,231,57],[155,59,231,58,"length"],[155,65,231,64],[155,68,231,68],[155,71,231,71],[155,72,231,72],[156,4,232,2],[156,5,232,3],[156,7,232,5],[156,8,232,6,"routeInfo"],[156,17,232,15],[156,19,232,17,"currentStepIndex"],[156,35,232,33],[156,36,232,34],[156,37,232,35],[157,4,234,2],[157,10,234,8,"getRemainingDistance"],[157,30,234,28],[157,33,234,31],[157,37,234,31,"useCallback"],[157,55,234,42],[157,57,234,43],[157,63,234,57],[158,6,235,4],[158,10,235,8],[158,11,235,9,"routeInfo"],[158,20,235,18],[158,22,235,20],[158,29,235,27],[158,35,235,33],[160,6,237,4],[161,6,238,4],[161,10,238,8,"remainingMeters"],[161,25,238,23],[161,28,238,26],[161,29,238,27],[162,6,239,4],[162,11,239,9],[162,15,239,13,"i"],[162,16,239,14],[162,19,239,17,"currentStepIndex"],[162,35,239,33],[162,37,239,35,"i"],[162,38,239,36],[162,41,239,39,"routeInfo"],[162,50,239,48],[162,51,239,49,"steps"],[162,56,239,54],[162,57,239,55,"length"],[162,63,239,61],[162,65,239,63,"i"],[162,66,239,64],[162,68,239,66],[162,70,239,68],[163,8,240,6],[164,8,241,6,"remainingMeters"],[164,23,241,21],[164,27,241,25,"parseDistance"],[164,40,241,38],[164,41,241,39,"routeInfo"],[164,50,241,48],[164,51,241,49,"steps"],[164,56,241,54],[164,57,241,55,"i"],[164,58,241,56],[164,59,241,57],[164,60,241,58,"distance"],[164,68,241,66],[164,69,241,67],[165,6,242,4],[166,6,244,4],[166,13,244,11,"googleDirectionsService"],[166,54,244,34],[166,55,244,35,"formatDistance"],[166,69,244,49],[166,70,244,50,"remainingMeters"],[166,85,244,65],[166,86,244,66],[167,4,245,2],[167,5,245,3],[167,7,245,5],[167,8,245,6,"routeInfo"],[167,17,245,15],[167,19,245,17,"currentStepIndex"],[167,35,245,33],[167,36,245,34],[167,37,245,35],[168,4,247,2],[168,10,247,8,"getRemainingTime"],[168,26,247,24],[168,29,247,27],[168,33,247,27,"useCallback"],[168,51,247,38],[168,53,247,39],[168,59,247,53],[169,6,248,4],[169,10,248,8],[169,11,248,9,"routeInfo"],[169,20,248,18],[169,22,248,20],[169,29,248,27],[169,36,248,34],[171,6,250,4],[172,6,251,4],[172,10,251,8,"remainingSeconds"],[172,26,251,24],[172,29,251,27],[172,30,251,28],[173,6,252,4],[173,11,252,9],[173,15,252,13,"i"],[173,16,252,14],[173,19,252,17,"currentStepIndex"],[173,35,252,33],[173,37,252,35,"i"],[173,38,252,36],[173,41,252,39,"routeInfo"],[173,50,252,48],[173,51,252,49,"steps"],[173,56,252,54],[173,57,252,55,"length"],[173,63,252,61],[173,65,252,63,"i"],[173,66,252,64],[173,68,252,66],[173,70,252,68],[174,8,253,6,"remainingSeconds"],[174,24,253,22],[174,28,253,26,"parseDuration"],[174,41,253,39],[174,42,253,40,"routeInfo"],[174,51,253,49],[174,52,253,50,"steps"],[174,57,253,55],[174,58,253,56,"i"],[174,59,253,57],[174,60,253,58],[174,61,253,59,"duration"],[174,69,253,67],[174,70,253,68],[175,6,254,4],[176,6,256,4],[176,13,256,11,"googleDirectionsService"],[176,54,256,34],[176,55,256,35,"formatDuration"],[176,69,256,49],[176,70,256,50,"remainingSeconds"],[176,86,256,66],[176,87,256,67],[177,4,257,2],[177,5,257,3],[177,7,257,5],[177,8,257,6,"routeInfo"],[177,17,257,15],[177,19,257,17,"currentStepIndex"],[177,35,257,33],[177,36,257,34],[177,37,257,35],[178,4,259,2],[178,11,259,9],[179,6,260,4,"routeInfo"],[179,15,260,13],[180,6,261,4,"isLoading"],[180,15,261,13],[181,6,262,4,"error"],[181,11,262,9],[182,6,264,4],[183,6,265,4,"getRoute"],[183,14,265,12],[184,6,266,4,"clearRoute"],[184,16,266,14],[185,6,267,4,"getCurrentStep"],[185,20,267,18],[186,6,268,4,"getNextStep"],[186,17,268,15],[187,6,270,4],[188,6,271,4,"startNavigation"],[188,21,271,19],[189,6,272,4,"stopNavigation"],[189,20,272,18],[190,6,273,4,"isNavigating"],[190,18,273,16],[191,6,274,4,"currentStepIndex"],[191,22,274,20],[192,6,276,4],[193,6,277,4,"updateCurrentLocation"],[193,27,277,25],[194,6,278,4,"recalculateRoute"],[194,22,278,20],[195,6,280,4],[196,6,281,4,"getProgressPercentage"],[196,27,281,25],[197,6,282,4,"getRemainingDistance"],[197,26,282,24],[198,6,283,4,"getRemainingTime"],[199,4,284,2],[199,5,284,3],[200,2,285,0],[200,3,285,1],[202,2,287,0],[203,2,287,0,"exports"],[203,9,287,0],[203,10,287,0,"useDirections"],[203,23,287,0],[203,26,287,0,"useDirections"],[203,39,287,0],[204,2,287,0,"_s"],[204,4,287,0],[204,5,51,13,"useDirections"],[204,18,51,26],[205,2,288,0],[205,11,288,9,"calculateDistance"],[205,28,288,26,"calculateDistance"],[205,29,288,27,"coord1"],[205,35,288,45],[205,37,288,47,"coord2"],[205,43,288,65],[205,45,288,75],[206,4,289,2],[206,10,289,8,"R"],[206,11,289,9],[206,14,289,12],[206,18,289,16],[206,19,289,17],[206,20,289,18],[207,4,290,2],[207,10,290,8,"dLat"],[207,14,290,12],[207,17,290,15],[207,18,290,16,"coord2"],[207,24,290,22],[207,25,290,23,"latitude"],[207,33,290,31],[207,36,290,34,"coord1"],[207,42,290,40],[207,43,290,41,"latitude"],[207,51,290,49],[207,55,290,53,"Math"],[207,59,290,57],[207,60,290,58,"PI"],[207,62,290,60],[207,65,290,63],[207,68,290,66],[208,4,291,2],[208,10,291,8,"dLng"],[208,14,291,12],[208,17,291,15],[208,18,291,16,"coord2"],[208,24,291,22],[208,25,291,23,"longitude"],[208,34,291,32],[208,37,291,35,"coord1"],[208,43,291,41],[208,44,291,42,"longitude"],[208,53,291,51],[208,57,291,55,"Math"],[208,61,291,59],[208,62,291,60,"PI"],[208,64,291,62],[208,67,291,65],[208,70,291,68],[209,4,292,2],[209,10,292,8,"a"],[209,11,292,9],[209,14,293,4,"Math"],[209,18,293,8],[209,19,293,9,"sin"],[209,22,293,12],[209,23,293,13,"dLat"],[209,27,293,17],[209,30,293,18],[209,31,293,19],[209,32,293,20],[209,35,293,23,"Math"],[209,39,293,27],[209,40,293,28,"sin"],[209,43,293,31],[209,44,293,32,"dLat"],[209,48,293,36],[209,51,293,37],[209,52,293,38],[209,53,293,39],[209,56,294,4,"Math"],[209,60,294,8],[209,61,294,9,"cos"],[209,64,294,12],[209,65,294,13,"coord1"],[209,71,294,19],[209,72,294,20,"latitude"],[209,80,294,28],[209,83,294,31,"Math"],[209,87,294,35],[209,88,294,36,"PI"],[209,90,294,38],[209,93,294,41],[209,96,294,44],[209,97,294,45],[209,100,294,48,"Math"],[209,104,294,52],[209,105,294,53,"cos"],[209,108,294,56],[209,109,294,57,"coord2"],[209,115,294,63],[209,116,294,64,"latitude"],[209,124,294,72],[209,127,294,75,"Math"],[209,131,294,79],[209,132,294,80,"PI"],[209,134,294,82],[209,137,294,85],[209,140,294,88],[209,141,294,89],[209,144,295,4,"Math"],[209,148,295,8],[209,149,295,9,"sin"],[209,152,295,12],[209,153,295,13,"dLng"],[209,157,295,17],[209,160,295,18],[209,161,295,19],[209,162,295,20],[209,165,295,23,"Math"],[209,169,295,27],[209,170,295,28,"sin"],[209,173,295,31],[209,174,295,32,"dLng"],[209,178,295,36],[209,181,295,37],[209,182,295,38],[209,183,295,39],[210,4,296,2],[210,10,296,8,"c"],[210,11,296,9],[210,14,296,12],[210,15,296,13],[210,18,296,16,"Math"],[210,22,296,20],[210,23,296,21,"atan2"],[210,28,296,26],[210,29,296,27,"Math"],[210,33,296,31],[210,34,296,32,"sqrt"],[210,38,296,36],[210,39,296,37,"a"],[210,40,296,38],[210,41,296,39],[210,43,296,41,"Math"],[210,47,296,45],[210,48,296,46,"sqrt"],[210,52,296,50],[210,53,296,51],[210,54,296,52],[210,57,296,53,"a"],[210,58,296,54],[210,59,296,55],[210,60,296,56],[211,4,297,2],[211,11,297,9,"R"],[211,12,297,10],[211,15,297,13,"c"],[211,16,297,14],[212,2,298,0],[213,2,300,0],[213,11,300,9,"parseDistance"],[213,24,300,22,"parseDistance"],[213,25,300,23,"distanceText"],[213,37,300,43],[213,39,300,53],[214,4,301,2],[214,10,301,8,"match"],[214,15,301,13],[214,18,301,16,"distanceText"],[214,30,301,28],[214,31,301,29,"match"],[214,36,301,34],[214,37,301,35],[214,59,301,57],[214,60,301,58],[215,4,302,2],[215,8,302,6],[215,9,302,7,"match"],[215,14,302,12],[215,16,302,14],[215,23,302,21],[215,24,302,22],[216,4,304,2],[216,10,304,8,"value"],[216,15,304,13],[216,18,304,16,"parseFloat"],[216,28,304,26],[216,29,304,27,"match"],[216,34,304,32],[216,35,304,33],[216,36,304,34],[216,37,304,35],[216,38,304,36],[217,4,305,2],[217,10,305,8,"unit"],[217,14,305,12],[217,17,305,15,"match"],[217,22,305,20],[217,23,305,21],[217,24,305,22],[217,25,305,23],[218,4,307,2],[218,11,307,9,"unit"],[218,15,307,13],[218,20,307,18],[218,24,307,22],[218,27,307,25,"value"],[218,32,307,30],[218,35,307,33],[218,39,307,37],[218,42,307,40,"value"],[218,47,307,45],[219,2,308,0],[220,2,310,0],[220,11,310,9,"parseDuration"],[220,24,310,22,"parseDuration"],[220,25,310,23,"durationText"],[220,37,310,43],[220,39,310,53],[221,4,311,2],[221,10,311,8,"match"],[221,15,311,13],[221,18,311,16,"durationText"],[221,30,311,28],[221,31,311,29,"match"],[221,36,311,34],[221,37,311,35],[221,50,311,48],[221,51,311,49],[222,4,312,2],[222,8,312,6],[222,9,312,7,"match"],[222,14,312,12],[222,16,312,14],[222,23,312,21],[222,24,312,22],[223,4,314,2],[223,11,314,9,"parseInt"],[223,19,314,17],[223,20,314,18,"match"],[223,25,314,23],[223,26,314,24],[223,27,314,25],[223,28,314,26],[223,29,314,27],[223,32,314,30],[223,34,314,32],[223,35,314,33],[223,36,314,34],[224,2,315,0],[225,0,315,1],[225,3]],"functionMap":{"names":["<global>","useDirections","processDirectionsResponse","leg.steps.map$argument_0","getRoute","clearRoute","startNavigation","stopNavigation","getCurrentStep","getNextStep","updateCurrentLocation","recalculateRoute","getProgressPercentage","getRemainingDistance","getRemainingTime","calculateDistance","parseDistance","parseDuration"],"mappings":"AAA;6BCkD;gDCgB;kDCI;MDgB;GDe;+BGE;GHyC;iCIE;GJQ;sCKE;GLS;qCME;GNG;qCOE;GPK;kCQE;GRK;4CSE;GTyB;uCUE;GVa;4CWE;GXG;2CYE;GZW;uCaE;GbU;CD4B;AeG;CfU;AgBE;ChBQ;AiBE"}},"type":"js/module"}]}