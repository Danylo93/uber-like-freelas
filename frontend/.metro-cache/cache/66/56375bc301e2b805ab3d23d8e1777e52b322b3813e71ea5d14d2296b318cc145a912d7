{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":86,"index":86}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./AuthContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":87},"end":{"line":2,"column":40,"index":127}}],"key":"YmpzODa+dVz64UAAYTI+RwJeEt0=","exportNames":["*"]}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/AppState","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":198,"column":8,"index":6059},"end":{"line":205,"column":5,"index":6273}}],"key":"JfCM6WRyn2619+pzBJhEHd1+SSw=","exportNames":["*"],"isOptional":true}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useWebSocket = exports.WebSocketProvider = void 0;\n  var _react = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  var _AuthContext = require(_dependencyMap[1], \"./AuthContext\");\n  var _jsxDevRuntime = require(_dependencyMap[2], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"/app/frontend/src/contexts/WebSocketContext.tsx\";\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const WebSocketContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const WebSocketProvider = ({\n    children\n  }) => {\n    const {\n      user\n    } = (0, _AuthContext.useAuth)();\n    const [isConnected, setIsConnected] = (0, _react.useState)(false);\n    const [connectionStatus, setConnectionStatus] = (0, _react.useState)('disconnected');\n    const wsRef = (0, _react.useRef)(null);\n    const messageCallbacksRef = (0, _react.useRef)([]);\n    const reconnectTimeoutRef = (0, _react.useRef)(null);\n    const reconnectAttemptsRef = (0, _react.useRef)(0);\n    const maxReconnectAttempts = 5;\n    const getWebSocketUrl = () => {\n      if (!user) return null;\n\n      // Get base URL from environment or use default\n      const baseUrl = process.env.EXPO_PUBLIC_API_URL || 'http://localhost:8001';\n      const wsUrl = baseUrl.replace('http://', 'ws://').replace('https://', 'wss://');\n      return `${wsUrl}/ws/${user.id}`;\n    };\n    const connect = () => {\n      const wsUrl = getWebSocketUrl();\n      if (!wsUrl) return;\n      try {\n        setConnectionStatus('connecting');\n        wsRef.current = new WebSocket(wsUrl);\n        wsRef.current.onopen = () => {\n          console.log('✅ WebSocket connected');\n          setIsConnected(true);\n          setConnectionStatus('connected');\n          reconnectAttemptsRef.current = 0;\n\n          // Send initial connection message\n          sendMessage({\n            type: 'connection',\n            user_id: user?.id,\n            timestamp: new Date().toISOString()\n          });\n        };\n        wsRef.current.onmessage = event => {\n          try {\n            const message = JSON.parse(event.data);\n            console.log('📨 WebSocket message received:', message);\n\n            // Notify all registered callbacks\n            messageCallbacksRef.current.forEach(callback => {\n              try {\n                callback(message);\n              } catch (error) {\n                console.error('Error in message callback:', error);\n              }\n            });\n          } catch (error) {\n            console.error('Error parsing WebSocket message:', error);\n          }\n        };\n        wsRef.current.onclose = event => {\n          console.log('🔌 WebSocket disconnected:', event.code, event.reason);\n          setIsConnected(false);\n          setConnectionStatus('disconnected');\n\n          // Attempt to reconnect if not intentionally closed\n          if (event.code !== 1000 && reconnectAttemptsRef.current < maxReconnectAttempts) {\n            const delay = Math.min(1000 * Math.pow(2, reconnectAttemptsRef.current), 30000);\n            console.log(`🔄 Attempting to reconnect in ${delay}ms (attempt ${reconnectAttemptsRef.current + 1}/${maxReconnectAttempts})`);\n            reconnectTimeoutRef.current = setTimeout(() => {\n              reconnectAttemptsRef.current++;\n              connect();\n            }, delay);\n          }\n        };\n        wsRef.current.onerror = error => {\n          console.error('❌ WebSocket error:', error);\n          setConnectionStatus('error');\n        };\n      } catch (error) {\n        console.error('Error creating WebSocket connection:', error);\n        setConnectionStatus('error');\n      }\n    };\n    const disconnect = () => {\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n      if (wsRef.current) {\n        wsRef.current.close(1000, 'User disconnected');\n        wsRef.current = null;\n      }\n      setIsConnected(false);\n      setConnectionStatus('disconnected');\n    };\n    const sendMessage = message => {\n      if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n        try {\n          wsRef.current.send(JSON.stringify(message));\n          console.log('📤 WebSocket message sent:', message);\n        } catch (error) {\n          console.error('Error sending WebSocket message:', error);\n        }\n      } else {\n        console.warn('⚠️ WebSocket not connected. Message not sent:', message);\n      }\n    };\n    const onMessage = callback => {\n      messageCallbacksRef.current.push(callback);\n\n      // Return unsubscribe function\n      return () => {\n        const index = messageCallbacksRef.current.indexOf(callback);\n        if (index > -1) {\n          messageCallbacksRef.current.splice(index, 1);\n        }\n      };\n    };\n\n    // Location update helper\n    const sendLocationUpdate = (latitude, longitude) => {\n      sendMessage({\n        type: 'location_update',\n        latitude,\n        longitude,\n        timestamp: new Date().toISOString()\n      });\n    };\n\n    // Provider status update helper\n    const updateProviderStatus = isOnline => {\n      sendMessage({\n        type: 'provider_status',\n        is_online: isOnline,\n        timestamp: new Date().toISOString()\n      });\n    };\n\n    // Service response helper\n    const respondToService = (serviceId, response) => {\n      sendMessage({\n        type: 'service_response',\n        service_id: serviceId,\n        response,\n        timestamp: new Date().toISOString()\n      });\n    };\n\n    // Connect when user is available\n    (0, _react.useEffect)(() => {\n      if (user) {\n        connect();\n      } else {\n        disconnect();\n      }\n\n      // Cleanup on unmount\n      return () => {\n        disconnect();\n      };\n    }, [user]);\n\n    // Auto-reconnect when app comes back to foreground (mobile)\n    (0, _react.useEffect)(() => {\n      const handleAppStateChange = nextAppState => {\n        if (nextAppState === 'active' && user && !isConnected) {\n          connect();\n        }\n      };\n\n      // For React Native\n      try {\n        const AppState = require(_dependencyMap[3], \"react-native-web/dist/exports/AppState\").default;\n        const subscription = AppState.addEventListener('change', handleAppStateChange);\n        return () => {\n          subscription?.remove();\n        };\n      } catch (error) {\n        // Not in React Native environment\n      }\n    }, [user, isConnected]);\n    const contextValue = {\n      isConnected,\n      sendMessage,\n      onMessage,\n      connectionStatus\n    };\n\n    // Add helper methods to the context value\n    contextValue.sendLocationUpdate = sendLocationUpdate;\n    contextValue.updateProviderStatus = updateProviderStatus;\n    contextValue.respondToService = respondToService;\n    return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(WebSocketContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }, this);\n  };\n  exports.WebSocketProvider = WebSocketProvider;\n  const useWebSocket = () => {\n    const context = (0, _react.useContext)(WebSocketContext);\n    if (!context) {\n      throw new Error('useWebSocket must be used within a WebSocketProvider');\n    }\n    return context;\n  };\n  exports.useWebSocket = useWebSocket;\n});","lineCount":220,"map":[[6,2,1,0],[6,6,1,0,"_react"],[6,12,1,0],[6,15,1,0,"_interopRequireWildcard"],[6,38,1,0],[6,39,1,0,"require"],[6,46,1,0],[6,47,1,0,"_dependencyMap"],[6,61,1,0],[7,2,2,0],[7,6,2,0,"_AuthContext"],[7,18,2,0],[7,21,2,0,"require"],[7,28,2,0],[7,29,2,0,"_dependencyMap"],[7,43,2,0],[8,2,2,40],[8,6,2,40,"_jsxDevRuntime"],[8,20,2,40],[8,23,2,40,"require"],[8,30,2,40],[8,31,2,40,"_dependencyMap"],[8,45,2,40],[9,2,2,40],[9,6,2,40,"_jsxFileName"],[9,18,2,40],[10,2,2,40],[10,11,2,40,"_interopRequireWildcard"],[10,35,2,40,"e"],[10,36,2,40],[10,38,2,40,"t"],[10,39,2,40],[10,68,2,40,"WeakMap"],[10,75,2,40],[10,81,2,40,"r"],[10,82,2,40],[10,89,2,40,"WeakMap"],[10,96,2,40],[10,100,2,40,"n"],[10,101,2,40],[10,108,2,40,"WeakMap"],[10,115,2,40],[10,127,2,40,"_interopRequireWildcard"],[10,150,2,40],[10,162,2,40,"_interopRequireWildcard"],[10,163,2,40,"e"],[10,164,2,40],[10,166,2,40,"t"],[10,167,2,40],[10,176,2,40,"t"],[10,177,2,40],[10,181,2,40,"e"],[10,182,2,40],[10,186,2,40,"e"],[10,187,2,40],[10,188,2,40,"__esModule"],[10,198,2,40],[10,207,2,40,"e"],[10,208,2,40],[10,214,2,40,"o"],[10,215,2,40],[10,217,2,40,"i"],[10,218,2,40],[10,220,2,40,"f"],[10,221,2,40],[10,226,2,40,"__proto__"],[10,235,2,40],[10,243,2,40,"default"],[10,250,2,40],[10,252,2,40,"e"],[10,253,2,40],[10,270,2,40,"e"],[10,271,2,40],[10,294,2,40,"e"],[10,295,2,40],[10,320,2,40,"e"],[10,321,2,40],[10,330,2,40,"f"],[10,331,2,40],[10,337,2,40,"o"],[10,338,2,40],[10,341,2,40,"t"],[10,342,2,40],[10,345,2,40,"n"],[10,346,2,40],[10,349,2,40,"r"],[10,350,2,40],[10,358,2,40,"o"],[10,359,2,40],[10,360,2,40,"has"],[10,363,2,40],[10,364,2,40,"e"],[10,365,2,40],[10,375,2,40,"o"],[10,376,2,40],[10,377,2,40,"get"],[10,380,2,40],[10,381,2,40,"e"],[10,382,2,40],[10,385,2,40,"o"],[10,386,2,40],[10,387,2,40,"set"],[10,390,2,40],[10,391,2,40,"e"],[10,392,2,40],[10,394,2,40,"f"],[10,395,2,40],[10,411,2,40,"t"],[10,412,2,40],[10,416,2,40,"e"],[10,417,2,40],[10,433,2,40,"t"],[10,434,2,40],[10,441,2,40,"hasOwnProperty"],[10,455,2,40],[10,456,2,40,"call"],[10,460,2,40],[10,461,2,40,"e"],[10,462,2,40],[10,464,2,40,"t"],[10,465,2,40],[10,472,2,40,"i"],[10,473,2,40],[10,477,2,40,"o"],[10,478,2,40],[10,481,2,40,"Object"],[10,487,2,40],[10,488,2,40,"defineProperty"],[10,502,2,40],[10,507,2,40,"Object"],[10,513,2,40],[10,514,2,40,"getOwnPropertyDescriptor"],[10,538,2,40],[10,539,2,40,"e"],[10,540,2,40],[10,542,2,40,"t"],[10,543,2,40],[10,550,2,40,"i"],[10,551,2,40],[10,552,2,40,"get"],[10,555,2,40],[10,559,2,40,"i"],[10,560,2,40],[10,561,2,40,"set"],[10,564,2,40],[10,568,2,40,"o"],[10,569,2,40],[10,570,2,40,"f"],[10,571,2,40],[10,573,2,40,"t"],[10,574,2,40],[10,576,2,40,"i"],[10,577,2,40],[10,581,2,40,"f"],[10,582,2,40],[10,583,2,40,"t"],[10,584,2,40],[10,588,2,40,"e"],[10,589,2,40],[10,590,2,40,"t"],[10,591,2,40],[10,602,2,40,"f"],[10,603,2,40],[10,608,2,40,"e"],[10,609,2,40],[10,611,2,40,"t"],[10,612,2,40],[11,2,17,0],[11,8,17,6,"WebSocketContext"],[11,24,17,22],[11,40,17,25],[11,44,17,25,"createContext"],[11,64,17,38],[11,66,17,73,"undefined"],[11,75,17,82],[11,76,17,83],[12,2,19,7],[12,8,19,13,"WebSocketProvider"],[12,25,19,71],[12,28,19,74,"WebSocketProvider"],[12,29,19,75],[13,4,19,77,"children"],[14,2,19,86],[14,3,19,87],[14,8,19,92],[15,4,20,2],[15,10,20,8],[16,6,20,10,"user"],[17,4,20,15],[17,5,20,16],[17,8,20,19],[17,12,20,19,"useAuth"],[17,32,20,26],[17,34,20,27],[17,35,20,28],[18,4,21,2],[18,10,21,8],[18,11,21,9,"isConnected"],[18,22,21,20],[18,24,21,22,"setIsConnected"],[18,38,21,36],[18,39,21,37],[18,42,21,40],[18,46,21,40,"useState"],[18,61,21,48],[18,63,21,49],[18,68,21,54],[18,69,21,55],[19,4,22,2],[19,10,22,8],[19,11,22,9,"connectionStatus"],[19,27,22,25],[19,29,22,27,"setConnectionStatus"],[19,48,22,46],[19,49,22,47],[19,52,22,50],[19,56,22,50,"useState"],[19,71,22,58],[19,73,22,114],[19,87,22,128],[19,88,22,129],[20,4,23,2],[20,10,23,8,"wsRef"],[20,15,23,13],[20,18,23,16],[20,22,23,16,"useRef"],[20,35,23,22],[20,37,23,41],[20,41,23,45],[20,42,23,46],[21,4,24,2],[21,10,24,8,"messageCallbacksRef"],[21,29,24,27],[21,32,24,30],[21,36,24,30,"useRef"],[21,49,24,36],[21,51,24,81],[21,53,24,83],[21,54,24,84],[22,4,25,2],[22,10,25,8,"reconnectTimeoutRef"],[22,29,25,27],[22,32,25,30],[22,36,25,30,"useRef"],[22,49,25,36],[22,51,25,60],[22,55,25,64],[22,56,25,65],[23,4,26,2],[23,10,26,8,"reconnectAttemptsRef"],[23,30,26,28],[23,33,26,31],[23,37,26,31,"useRef"],[23,50,26,37],[23,52,26,38],[23,53,26,39],[23,54,26,40],[24,4,27,2],[24,10,27,8,"maxReconnectAttempts"],[24,30,27,28],[24,33,27,31],[24,34,27,32],[25,4,29,2],[25,10,29,8,"getWebSocketUrl"],[25,25,29,23],[25,28,29,26,"getWebSocketUrl"],[25,29,29,26],[25,34,29,32],[26,6,30,4],[26,10,30,8],[26,11,30,9,"user"],[26,15,30,13],[26,17,30,15],[26,24,30,22],[26,28,30,26],[28,6,32,4],[29,6,33,4],[29,12,33,10,"baseUrl"],[29,19,33,17],[29,22,33,20,"process"],[29,29,33,27],[29,30,33,28,"env"],[29,33,33,31],[29,34,33,32,"EXPO_PUBLIC_API_URL"],[29,53,33,51],[29,57,33,55],[29,80,33,78],[30,6,34,4],[30,12,34,10,"wsUrl"],[30,17,34,15],[30,20,34,18,"baseUrl"],[30,27,34,25],[30,28,34,26,"replace"],[30,35,34,33],[30,36,34,34],[30,45,34,43],[30,47,34,45],[30,54,34,52],[30,55,34,53],[30,56,34,54,"replace"],[30,63,34,61],[30,64,34,62],[30,74,34,72],[30,76,34,74],[30,84,34,82],[30,85,34,83],[31,6,35,4],[31,13,35,11],[31,16,35,14,"wsUrl"],[31,21,35,19],[31,28,35,26,"user"],[31,32,35,30],[31,33,35,31,"id"],[31,35,35,33],[31,37,35,35],[32,4,36,2],[32,5,36,3],[33,4,38,2],[33,10,38,8,"connect"],[33,17,38,15],[33,20,38,18,"connect"],[33,21,38,18],[33,26,38,24],[34,6,39,4],[34,12,39,10,"wsUrl"],[34,17,39,15],[34,20,39,18,"getWebSocketUrl"],[34,35,39,33],[34,36,39,34],[34,37,39,35],[35,6,40,4],[35,10,40,8],[35,11,40,9,"wsUrl"],[35,16,40,14],[35,18,40,16],[36,6,42,4],[36,10,42,8],[37,8,43,6,"setConnectionStatus"],[37,27,43,25],[37,28,43,26],[37,40,43,38],[37,41,43,39],[38,8,44,6,"wsRef"],[38,13,44,11],[38,14,44,12,"current"],[38,21,44,19],[38,24,44,22],[38,28,44,26,"WebSocket"],[38,37,44,35],[38,38,44,36,"wsUrl"],[38,43,44,41],[38,44,44,42],[39,8,46,6,"wsRef"],[39,13,46,11],[39,14,46,12,"current"],[39,21,46,19],[39,22,46,20,"onopen"],[39,28,46,26],[39,31,46,29],[39,37,46,35],[40,10,47,8,"console"],[40,17,47,15],[40,18,47,16,"log"],[40,21,47,19],[40,22,47,20],[40,45,47,43],[40,46,47,44],[41,10,48,8,"setIsConnected"],[41,24,48,22],[41,25,48,23],[41,29,48,27],[41,30,48,28],[42,10,49,8,"setConnectionStatus"],[42,29,49,27],[42,30,49,28],[42,41,49,39],[42,42,49,40],[43,10,50,8,"reconnectAttemptsRef"],[43,30,50,28],[43,31,50,29,"current"],[43,38,50,36],[43,41,50,39],[43,42,50,40],[45,10,52,8],[46,10,53,8,"sendMessage"],[46,21,53,19],[46,22,53,20],[47,12,54,10,"type"],[47,16,54,14],[47,18,54,16],[47,30,54,28],[48,12,55,10,"user_id"],[48,19,55,17],[48,21,55,19,"user"],[48,25,55,23],[48,27,55,25,"id"],[48,29,55,27],[49,12,56,10,"timestamp"],[49,21,56,19],[49,23,56,21],[49,27,56,25,"Date"],[49,31,56,29],[49,32,56,30],[49,33,56,31],[49,34,56,32,"toISOString"],[49,45,56,43],[49,46,56,44],[50,10,57,8],[50,11,57,9],[50,12,57,10],[51,8,58,6],[51,9,58,7],[52,8,60,6,"wsRef"],[52,13,60,11],[52,14,60,12,"current"],[52,21,60,19],[52,22,60,20,"onmessage"],[52,31,60,29],[52,34,60,33,"event"],[52,39,60,38],[52,43,60,43],[53,10,61,8],[53,14,61,12],[54,12,62,10],[54,18,62,16,"message"],[54,25,62,41],[54,28,62,44,"JSON"],[54,32,62,48],[54,33,62,49,"parse"],[54,38,62,54],[54,39,62,55,"event"],[54,44,62,60],[54,45,62,61,"data"],[54,49,62,65],[54,50,62,66],[55,12,63,10,"console"],[55,19,63,17],[55,20,63,18,"log"],[55,23,63,21],[55,24,63,22],[55,56,63,54],[55,58,63,56,"message"],[55,65,63,63],[55,66,63,64],[57,12,65,10],[58,12,66,10,"messageCallbacksRef"],[58,31,66,29],[58,32,66,30,"current"],[58,39,66,37],[58,40,66,38,"forEach"],[58,47,66,45],[58,48,66,46,"callback"],[58,56,66,54],[58,60,66,58],[59,14,67,12],[59,18,67,16],[60,16,68,14,"callback"],[60,24,68,22],[60,25,68,23,"message"],[60,32,68,30],[60,33,68,31],[61,14,69,12],[61,15,69,13],[61,16,69,14],[61,23,69,21,"error"],[61,28,69,26],[61,30,69,28],[62,16,70,14,"console"],[62,23,70,21],[62,24,70,22,"error"],[62,29,70,27],[62,30,70,28],[62,58,70,56],[62,60,70,58,"error"],[62,65,70,63],[62,66,70,64],[63,14,71,12],[64,12,72,10],[64,13,72,11],[64,14,72,12],[65,10,73,8],[65,11,73,9],[65,12,73,10],[65,19,73,17,"error"],[65,24,73,22],[65,26,73,24],[66,12,74,10,"console"],[66,19,74,17],[66,20,74,18,"error"],[66,25,74,23],[66,26,74,24],[66,60,74,58],[66,62,74,60,"error"],[66,67,74,65],[66,68,74,66],[67,10,75,8],[68,8,76,6],[68,9,76,7],[69,8,78,6,"wsRef"],[69,13,78,11],[69,14,78,12,"current"],[69,21,78,19],[69,22,78,20,"onclose"],[69,29,78,27],[69,32,78,31,"event"],[69,37,78,36],[69,41,78,41],[70,10,79,8,"console"],[70,17,79,15],[70,18,79,16,"log"],[70,21,79,19],[70,22,79,20],[70,50,79,48],[70,52,79,50,"event"],[70,57,79,55],[70,58,79,56,"code"],[70,62,79,60],[70,64,79,62,"event"],[70,69,79,67],[70,70,79,68,"reason"],[70,76,79,74],[70,77,79,75],[71,10,80,8,"setIsConnected"],[71,24,80,22],[71,25,80,23],[71,30,80,28],[71,31,80,29],[72,10,81,8,"setConnectionStatus"],[72,29,81,27],[72,30,81,28],[72,44,81,42],[72,45,81,43],[74,10,83,8],[75,10,84,8],[75,14,84,12,"event"],[75,19,84,17],[75,20,84,18,"code"],[75,24,84,22],[75,29,84,27],[75,33,84,31],[75,37,84,35,"reconnectAttemptsRef"],[75,57,84,55],[75,58,84,56,"current"],[75,65,84,63],[75,68,84,66,"maxReconnectAttempts"],[75,88,84,86],[75,90,84,88],[76,12,85,10],[76,18,85,16,"delay"],[76,23,85,21],[76,26,85,24,"Math"],[76,30,85,28],[76,31,85,29,"min"],[76,34,85,32],[76,35,85,33],[76,39,85,37],[76,42,85,40,"Math"],[76,46,85,44],[76,47,85,45,"pow"],[76,50,85,48],[76,51,85,49],[76,52,85,50],[76,54,85,52,"reconnectAttemptsRef"],[76,74,85,72],[76,75,85,73,"current"],[76,82,85,80],[76,83,85,81],[76,85,85,83],[76,90,85,88],[76,91,85,89],[77,12,86,10,"console"],[77,19,86,17],[77,20,86,18,"log"],[77,23,86,21],[77,24,86,22],[77,57,86,55,"delay"],[77,62,86,60],[77,77,86,75,"reconnectAttemptsRef"],[77,97,86,95],[77,98,86,96,"current"],[77,105,86,103],[77,108,86,106],[77,109,86,107],[77,113,86,111,"maxReconnectAttempts"],[77,133,86,131],[77,136,86,134],[77,137,86,135],[78,12,88,10,"reconnectTimeoutRef"],[78,31,88,29],[78,32,88,30,"current"],[78,39,88,37],[78,42,88,40,"setTimeout"],[78,52,88,50],[78,53,88,51],[78,59,88,57],[79,14,89,12,"reconnectAttemptsRef"],[79,34,89,32],[79,35,89,33,"current"],[79,42,89,40],[79,44,89,42],[80,14,90,12,"connect"],[80,21,90,19],[80,22,90,20],[80,23,90,21],[81,12,91,10],[81,13,91,11],[81,15,91,13,"delay"],[81,20,91,18],[81,21,91,19],[82,10,92,8],[83,8,93,6],[83,9,93,7],[84,8,95,6,"wsRef"],[84,13,95,11],[84,14,95,12,"current"],[84,21,95,19],[84,22,95,20,"onerror"],[84,29,95,27],[84,32,95,31,"error"],[84,37,95,36],[84,41,95,41],[85,10,96,8,"console"],[85,17,96,15],[85,18,96,16,"error"],[85,23,96,21],[85,24,96,22],[85,44,96,42],[85,46,96,44,"error"],[85,51,96,49],[85,52,96,50],[86,10,97,8,"setConnectionStatus"],[86,29,97,27],[86,30,97,28],[86,37,97,35],[86,38,97,36],[87,8,98,6],[87,9,98,7],[88,6,100,4],[88,7,100,5],[88,8,100,6],[88,15,100,13,"error"],[88,20,100,18],[88,22,100,20],[89,8,101,6,"console"],[89,15,101,13],[89,16,101,14,"error"],[89,21,101,19],[89,22,101,20],[89,60,101,58],[89,62,101,60,"error"],[89,67,101,65],[89,68,101,66],[90,8,102,6,"setConnectionStatus"],[90,27,102,25],[90,28,102,26],[90,35,102,33],[90,36,102,34],[91,6,103,4],[92,4,104,2],[92,5,104,3],[93,4,106,2],[93,10,106,8,"disconnect"],[93,20,106,18],[93,23,106,21,"disconnect"],[93,24,106,21],[93,29,106,27],[94,6,107,4],[94,10,107,8,"reconnectTimeoutRef"],[94,29,107,27],[94,30,107,28,"current"],[94,37,107,35],[94,39,107,37],[95,8,108,6,"clearTimeout"],[95,20,108,18],[95,21,108,19,"reconnectTimeoutRef"],[95,40,108,38],[95,41,108,39,"current"],[95,48,108,46],[95,49,108,47],[96,8,109,6,"reconnectTimeoutRef"],[96,27,109,25],[96,28,109,26,"current"],[96,35,109,33],[96,38,109,36],[96,42,109,40],[97,6,110,4],[98,6,112,4],[98,10,112,8,"wsRef"],[98,15,112,13],[98,16,112,14,"current"],[98,23,112,21],[98,25,112,23],[99,8,113,6,"wsRef"],[99,13,113,11],[99,14,113,12,"current"],[99,21,113,19],[99,22,113,20,"close"],[99,27,113,25],[99,28,113,26],[99,32,113,30],[99,34,113,32],[99,53,113,51],[99,54,113,52],[100,8,114,6,"wsRef"],[100,13,114,11],[100,14,114,12,"current"],[100,21,114,19],[100,24,114,22],[100,28,114,26],[101,6,115,4],[102,6,117,4,"setIsConnected"],[102,20,117,18],[102,21,117,19],[102,26,117,24],[102,27,117,25],[103,6,118,4,"setConnectionStatus"],[103,25,118,23],[103,26,118,24],[103,40,118,38],[103,41,118,39],[104,4,119,2],[104,5,119,3],[105,4,121,2],[105,10,121,8,"sendMessage"],[105,21,121,19],[105,24,121,23,"message"],[105,31,121,35],[105,35,121,40],[106,6,122,4],[106,10,122,8,"wsRef"],[106,15,122,13],[106,16,122,14,"current"],[106,23,122,21],[106,27,122,25,"wsRef"],[106,32,122,30],[106,33,122,31,"current"],[106,40,122,38],[106,41,122,39,"readyState"],[106,51,122,49],[106,56,122,54,"WebSocket"],[106,65,122,63],[106,66,122,64,"OPEN"],[106,70,122,68],[106,72,122,70],[107,8,123,6],[107,12,123,10],[108,10,124,8,"wsRef"],[108,15,124,13],[108,16,124,14,"current"],[108,23,124,21],[108,24,124,22,"send"],[108,28,124,26],[108,29,124,27,"JSON"],[108,33,124,31],[108,34,124,32,"stringify"],[108,43,124,41],[108,44,124,42,"message"],[108,51,124,49],[108,52,124,50],[108,53,124,51],[109,10,125,8,"console"],[109,17,125,15],[109,18,125,16,"log"],[109,21,125,19],[109,22,125,20],[109,50,125,48],[109,52,125,50,"message"],[109,59,125,57],[109,60,125,58],[110,8,126,6],[110,9,126,7],[110,10,126,8],[110,17,126,15,"error"],[110,22,126,20],[110,24,126,22],[111,10,127,8,"console"],[111,17,127,15],[111,18,127,16,"error"],[111,23,127,21],[111,24,127,22],[111,58,127,56],[111,60,127,58,"error"],[111,65,127,63],[111,66,127,64],[112,8,128,6],[113,6,129,4],[113,7,129,5],[113,13,129,11],[114,8,130,6,"console"],[114,15,130,13],[114,16,130,14,"warn"],[114,20,130,18],[114,21,130,19],[114,68,130,66],[114,70,130,68,"message"],[114,77,130,75],[114,78,130,76],[115,6,131,4],[116,4,132,2],[116,5,132,3],[117,4,134,2],[117,10,134,8,"onMessage"],[117,19,134,17],[117,22,134,21,"callback"],[117,30,134,66],[117,34,134,71],[118,6,135,4,"messageCallbacksRef"],[118,25,135,23],[118,26,135,24,"current"],[118,33,135,31],[118,34,135,32,"push"],[118,38,135,36],[118,39,135,37,"callback"],[118,47,135,45],[118,48,135,46],[120,6,137,4],[121,6,138,4],[121,13,138,11],[121,19,138,17],[122,8,139,6],[122,14,139,12,"index"],[122,19,139,17],[122,22,139,20,"messageCallbacksRef"],[122,41,139,39],[122,42,139,40,"current"],[122,49,139,47],[122,50,139,48,"indexOf"],[122,57,139,55],[122,58,139,56,"callback"],[122,66,139,64],[122,67,139,65],[123,8,140,6],[123,12,140,10,"index"],[123,17,140,15],[123,20,140,18],[123,21,140,19],[123,22,140,20],[123,24,140,22],[124,10,141,8,"messageCallbacksRef"],[124,29,141,27],[124,30,141,28,"current"],[124,37,141,35],[124,38,141,36,"splice"],[124,44,141,42],[124,45,141,43,"index"],[124,50,141,48],[124,52,141,50],[124,53,141,51],[124,54,141,52],[125,8,142,6],[126,6,143,4],[126,7,143,5],[127,4,144,2],[127,5,144,3],[129,4,146,2],[130,4,147,2],[130,10,147,8,"sendLocationUpdate"],[130,28,147,26],[130,31,147,29,"sendLocationUpdate"],[130,32,147,30,"latitude"],[130,40,147,46],[130,42,147,48,"longitude"],[130,51,147,65],[130,56,147,70],[131,6,148,4,"sendMessage"],[131,17,148,15],[131,18,148,16],[132,8,149,6,"type"],[132,12,149,10],[132,14,149,12],[132,31,149,29],[133,8,150,6,"latitude"],[133,16,150,14],[134,8,151,6,"longitude"],[134,17,151,15],[135,8,152,6,"timestamp"],[135,17,152,15],[135,19,152,17],[135,23,152,21,"Date"],[135,27,152,25],[135,28,152,26],[135,29,152,27],[135,30,152,28,"toISOString"],[135,41,152,39],[135,42,152,40],[136,6,153,4],[136,7,153,5],[136,8,153,6],[137,4,154,2],[137,5,154,3],[139,4,156,2],[140,4,157,2],[140,10,157,8,"updateProviderStatus"],[140,30,157,28],[140,33,157,32,"isOnline"],[140,41,157,49],[140,45,157,54],[141,6,158,4,"sendMessage"],[141,17,158,15],[141,18,158,16],[142,8,159,6,"type"],[142,12,159,10],[142,14,159,12],[142,31,159,29],[143,8,160,6,"is_online"],[143,17,160,15],[143,19,160,17,"isOnline"],[143,27,160,25],[144,8,161,6,"timestamp"],[144,17,161,15],[144,19,161,17],[144,23,161,21,"Date"],[144,27,161,25],[144,28,161,26],[144,29,161,27],[144,30,161,28,"toISOString"],[144,41,161,39],[144,42,161,40],[145,6,162,4],[145,7,162,5],[145,8,162,6],[146,4,163,2],[146,5,163,3],[148,4,165,2],[149,4,166,2],[149,10,166,8,"respondToService"],[149,26,166,24],[149,29,166,27,"respondToService"],[149,30,166,28,"serviceId"],[149,39,166,45],[149,41,166,47,"response"],[149,49,166,76],[149,54,166,81],[150,6,167,4,"sendMessage"],[150,17,167,15],[150,18,167,16],[151,8,168,6,"type"],[151,12,168,10],[151,14,168,12],[151,32,168,30],[152,8,169,6,"service_id"],[152,18,169,16],[152,20,169,18,"serviceId"],[152,29,169,27],[153,8,170,6,"response"],[153,16,170,14],[154,8,171,6,"timestamp"],[154,17,171,15],[154,19,171,17],[154,23,171,21,"Date"],[154,27,171,25],[154,28,171,26],[154,29,171,27],[154,30,171,28,"toISOString"],[154,41,171,39],[154,42,171,40],[155,6,172,4],[155,7,172,5],[155,8,172,6],[156,4,173,2],[156,5,173,3],[158,4,175,2],[159,4,176,2],[159,8,176,2,"useEffect"],[159,24,176,11],[159,26,176,12],[159,32,176,18],[160,6,177,4],[160,10,177,8,"user"],[160,14,177,12],[160,16,177,14],[161,8,178,6,"connect"],[161,15,178,13],[161,16,178,14],[161,17,178,15],[162,6,179,4],[162,7,179,5],[162,13,179,11],[163,8,180,6,"disconnect"],[163,18,180,16],[163,19,180,17],[163,20,180,18],[164,6,181,4],[166,6,183,4],[167,6,184,4],[167,13,184,11],[167,19,184,17],[168,8,185,6,"disconnect"],[168,18,185,16],[168,19,185,17],[168,20,185,18],[169,6,186,4],[169,7,186,5],[170,4,187,2],[170,5,187,3],[170,7,187,5],[170,8,187,6,"user"],[170,12,187,10],[170,13,187,11],[170,14,187,12],[172,4,189,2],[173,4,190,2],[173,8,190,2,"useEffect"],[173,24,190,11],[173,26,190,12],[173,32,190,18],[174,6,191,4],[174,12,191,10,"handleAppStateChange"],[174,32,191,30],[174,35,191,34,"nextAppState"],[174,47,191,54],[174,51,191,59],[175,8,192,6],[175,12,192,10,"nextAppState"],[175,24,192,22],[175,29,192,27],[175,37,192,35],[175,41,192,39,"user"],[175,45,192,43],[175,49,192,47],[175,50,192,48,"isConnected"],[175,61,192,59],[175,63,192,61],[176,10,193,8,"connect"],[176,17,193,15],[176,18,193,16],[176,19,193,17],[177,8,194,6],[178,6,195,4],[178,7,195,5],[180,6,197,4],[181,6,198,4],[181,10,198,8],[182,8,198,8],[182,14,198,8,"AppState"],[182,22,198,8],[182,25,198,8,"require"],[182,32,198,8],[182,33,198,8,"_dependencyMap"],[182,47,198,8],[182,94,198,8,"default"],[182,101,198,8],[183,8,200,6],[183,14,200,12,"subscription"],[183,26,200,24],[183,29,200,27,"AppState"],[183,37,200,35],[183,38,200,36,"addEventListener"],[183,54,200,52],[183,55,200,53],[183,63,200,61],[183,65,200,63,"handleAppStateChange"],[183,85,200,83],[183,86,200,84],[184,8,202,6],[184,15,202,13],[184,21,202,19],[185,10,203,8,"subscription"],[185,22,203,20],[185,24,203,22,"remove"],[185,30,203,28],[185,31,203,29],[185,32,203,30],[186,8,204,6],[186,9,204,7],[187,6,205,4],[187,7,205,5],[187,8,205,6],[187,15,205,13,"error"],[187,20,205,18],[187,22,205,20],[188,8,206,6],[189,6,206,6],[190,4,208,2],[190,5,208,3],[190,7,208,5],[190,8,208,6,"user"],[190,12,208,10],[190,14,208,12,"isConnected"],[190,25,208,23],[190,26,208,24],[190,27,208,25],[191,4,210,2],[191,10,210,8,"contextValue"],[191,22,210,42],[191,25,210,45],[192,6,211,4,"isConnected"],[192,17,211,15],[193,6,212,4,"sendMessage"],[193,17,212,15],[194,6,213,4,"onMessage"],[194,15,213,13],[195,6,214,4,"connectionStatus"],[196,4,215,2],[196,5,215,3],[198,4,217,2],[199,4,218,3,"contextValue"],[199,16,218,15],[199,17,218,24,"sendLocationUpdate"],[199,35,218,42],[199,38,218,45,"sendLocationUpdate"],[199,56,218,63],[200,4,219,3,"contextValue"],[200,16,219,15],[200,17,219,24,"updateProviderStatus"],[200,37,219,44],[200,40,219,47,"updateProviderStatus"],[200,60,219,67],[201,4,220,3,"contextValue"],[201,16,220,15],[201,17,220,24,"respondToService"],[201,33,220,40],[201,36,220,43,"respondToService"],[201,52,220,59],[202,4,222,2],[202,24,223,4],[202,28,223,4,"_jsxDevRuntime"],[202,42,223,4],[202,43,223,4,"jsxDEV"],[202,49,223,4],[202,51,223,5,"WebSocketContext"],[202,67,223,21],[202,68,223,22,"Provider"],[202,76,223,30],[203,6,223,31,"value"],[203,11,223,36],[203,13,223,38,"contextValue"],[203,25,223,51],[204,6,223,51,"children"],[204,14,223,51],[204,16,224,7,"children"],[205,4,224,15],[206,6,224,15,"fileName"],[206,14,224,15],[206,16,224,15,"_jsxFileName"],[206,28,224,15],[207,6,224,15,"lineNumber"],[207,16,224,15],[208,6,224,15,"columnNumber"],[208,18,224,15],[209,4,224,15],[209,11,225,31],[209,12,225,32],[210,2,227,0],[210,3,227,1],[211,2,227,2,"exports"],[211,9,227,2],[211,10,227,2,"WebSocketProvider"],[211,27,227,2],[211,30,227,2,"WebSocketProvider"],[211,47,227,2],[212,2,229,7],[212,8,229,13,"useWebSocket"],[212,20,229,25],[212,23,229,28,"useWebSocket"],[212,24,229,28],[212,29,233,5],[213,4,234,2],[213,10,234,8,"context"],[213,17,234,15],[213,20,234,18],[213,24,234,18,"useContext"],[213,41,234,28],[213,43,234,29,"WebSocketContext"],[213,59,234,45],[213,60,234,46],[214,4,235,2],[214,8,235,6],[214,9,235,7,"context"],[214,16,235,14],[214,18,235,16],[215,6,236,4],[215,12,236,10],[215,16,236,14,"Error"],[215,21,236,19],[215,22,236,20],[215,76,236,74],[215,77,236,75],[216,4,237,2],[217,4,238,2],[217,11,238,9,"context"],[217,18,238,16],[218,2,239,0],[218,3,239,1],[219,2,239,2,"exports"],[219,9,239,2],[219,10,239,2,"useWebSocket"],[219,22,239,2],[219,25,239,2,"useWebSocket"],[219,37,239,2],[220,0,239,2],[220,3]],"functionMap":{"names":["<global>","WebSocketProvider","getWebSocketUrl","connect","wsRef.current.onopen","wsRef.current.onmessage","messageCallbacksRef.current.forEach$argument_0","wsRef.current.onclose","setTimeout$argument_0","wsRef.current.onerror","disconnect","sendMessage","onMessage","<anonymous>","sendLocationUpdate","updateProviderStatus","respondToService","useEffect$argument_0","handleAppStateChange","useWebSocket"],"mappings":"AAA;0ECkB;0BCU;GDO;kBEE;6BCQ;ODY;gCEE;8CCM;WDM;OFI;8BIE;mDCU;WDG;OJE;8BME;ONG;GFM;qBSE;GTa;sBUE;GVW;oBWE;WCI;KDK;GXC;6BaG;GbO;+BcG;GdM;2BeG;GfO;YgBG;WJQ;KIE;GhBC;YgBG;iCCC;KDI;aJO;OIE;GhBI;CDmB;4BmBE;CnBU"}},"type":"js/module"}]}