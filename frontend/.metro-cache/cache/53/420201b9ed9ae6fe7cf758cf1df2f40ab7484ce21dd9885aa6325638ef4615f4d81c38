{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./createHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":44,"index":59}}],"key":"j9sUgJL2drnBoAedJuo4/l2ILqw=","exportNames":["*"]}},{"name":"./gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":60},"end":{"line":4,"column":65,"index":125}}],"key":"M3YJtGPnWOlAL/cGsCkMRGpSLhc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PanGestureHandler = void 0;\n  exports.managePanProps = managePanProps;\n  exports.panHandlerName = exports.panGestureHandlerProps = exports.panGestureHandlerCustomNativeProps = void 0;\n  var _createHandler = _interopRequireDefault(require(_dependencyMap[1], \"./createHandler\"));\n  var _gestureHandlerCommon = require(_dependencyMap[2], \"./gestureHandlerCommon\");\n  const panGestureHandlerProps = exports.panGestureHandlerProps = ['activeOffsetY', 'activeOffsetX', 'failOffsetY', 'failOffsetX', 'minDist', 'minVelocity', 'minVelocityX', 'minVelocityY', 'minPointers', 'maxPointers', 'avgTouches', 'enableTrackpadTwoFingerGesture', 'activateAfterLongPress'];\n  const panGestureHandlerCustomNativeProps = exports.panGestureHandlerCustomNativeProps = ['activeOffsetYStart', 'activeOffsetYEnd', 'activeOffsetXStart', 'activeOffsetXEnd', 'failOffsetYStart', 'failOffsetYEnd', 'failOffsetXStart', 'failOffsetXEnd'];\n\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n\n  const panHandlerName = exports.panHandlerName = 'PanGestureHandler';\n\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\n  const PanGestureHandler = exports.PanGestureHandler = (0, _createHandler.default)({\n    name: panHandlerName,\n    allowedProps: [..._gestureHandlerCommon.baseGestureHandlerProps, ...panGestureHandlerProps],\n    config: {},\n    transformProps: managePanProps,\n    customNativeProps: panGestureHandlerCustomNativeProps\n  });\n  function validatePanGestureHandlerProps(props) {\n    if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n      throw new Error(`First element of activeOffsetX should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n      throw new Error(`First element of activeOffsetY should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n      throw new Error(`First element of failOffsetX should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n      throw new Error(`First element of failOffsetY should be negative, a the second one should be positive`);\n    }\n    if (props.minDist && (props.failOffsetX || props.failOffsetY)) {\n      throw new Error(`It is not supported to use minDist with failOffsetX or failOffsetY, use activeOffsetX and activeOffsetY instead`);\n    }\n    if (props.minDist && (props.activeOffsetX || props.activeOffsetY)) {\n      throw new Error(`It is not supported to use minDist with activeOffsetX or activeOffsetY`);\n    }\n  }\n  function transformPanGestureHandlerProps(props) {\n    const res = Object.assign({}, props);\n    if (props.activeOffsetX !== undefined) {\n      delete res.activeOffsetX;\n      if (Array.isArray(props.activeOffsetX)) {\n        res.activeOffsetXStart = props.activeOffsetX[0];\n        res.activeOffsetXEnd = props.activeOffsetX[1];\n      } else if (props.activeOffsetX < 0) {\n        res.activeOffsetXStart = props.activeOffsetX;\n      } else {\n        res.activeOffsetXEnd = props.activeOffsetX;\n      }\n    }\n    if (props.activeOffsetY !== undefined) {\n      delete res.activeOffsetY;\n      if (Array.isArray(props.activeOffsetY)) {\n        res.activeOffsetYStart = props.activeOffsetY[0];\n        res.activeOffsetYEnd = props.activeOffsetY[1];\n      } else if (props.activeOffsetY < 0) {\n        res.activeOffsetYStart = props.activeOffsetY;\n      } else {\n        res.activeOffsetYEnd = props.activeOffsetY;\n      }\n    }\n    if (props.failOffsetX !== undefined) {\n      delete res.failOffsetX;\n      if (Array.isArray(props.failOffsetX)) {\n        res.failOffsetXStart = props.failOffsetX[0];\n        res.failOffsetXEnd = props.failOffsetX[1];\n      } else if (props.failOffsetX < 0) {\n        res.failOffsetXStart = props.failOffsetX;\n      } else {\n        res.failOffsetXEnd = props.failOffsetX;\n      }\n    }\n    if (props.failOffsetY !== undefined) {\n      delete res.failOffsetY;\n      if (Array.isArray(props.failOffsetY)) {\n        res.failOffsetYStart = props.failOffsetY[0];\n        res.failOffsetYEnd = props.failOffsetY[1];\n      } else if (props.failOffsetY < 0) {\n        res.failOffsetYStart = props.failOffsetY;\n      } else {\n        res.failOffsetYEnd = props.failOffsetY;\n      }\n    }\n    return res;\n  }\n  function managePanProps(props) {\n    if (__DEV__) {\n      validatePanGestureHandlerProps(props);\n    }\n    return transformPanGestureHandlerProps(props);\n  }\n});","lineCount":111,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"PanGestureHandler"],[8,27,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"managePanProps"],[9,24,1,13],[9,27,1,13,"managePanProps"],[9,41,1,13],[10,2,1,13,"exports"],[10,9,1,13],[10,10,1,13,"panHandlerName"],[10,24,1,13],[10,27,1,13,"exports"],[10,34,1,13],[10,35,1,13,"panGestureHandlerProps"],[10,57,1,13],[10,60,1,13,"exports"],[10,67,1,13],[10,68,1,13,"panGestureHandlerCustomNativeProps"],[10,102,1,13],[11,2,3,0],[11,6,3,0,"_createHandler"],[11,20,3,0],[11,23,3,0,"_interopRequireDefault"],[11,45,3,0],[11,46,3,0,"require"],[11,53,3,0],[11,54,3,0,"_dependencyMap"],[11,68,3,0],[12,2,4,0],[12,6,4,0,"_gestureHandlerCommon"],[12,27,4,0],[12,30,4,0,"require"],[12,37,4,0],[12,38,4,0,"_dependencyMap"],[12,52,4,0],[13,2,5,7],[13,8,5,13,"panGestureHandlerProps"],[13,30,5,35],[13,33,5,35,"exports"],[13,40,5,35],[13,41,5,35,"panGestureHandlerProps"],[13,63,5,35],[13,66,5,38],[13,67,5,39],[13,82,5,54],[13,84,5,56],[13,99,5,71],[13,101,5,73],[13,114,5,86],[13,116,5,88],[13,129,5,101],[13,131,5,103],[13,140,5,112],[13,142,5,114],[13,155,5,127],[13,157,5,129],[13,171,5,143],[13,173,5,145],[13,187,5,159],[13,189,5,161],[13,202,5,174],[13,204,5,176],[13,217,5,189],[13,219,5,191],[13,231,5,203],[13,233,5,205],[13,265,5,237],[13,267,5,239],[13,291,5,263],[13,292,5,264],[14,2,6,7],[14,8,6,13,"panGestureHandlerCustomNativeProps"],[14,42,6,47],[14,45,6,47,"exports"],[14,52,6,47],[14,53,6,47,"panGestureHandlerCustomNativeProps"],[14,87,6,47],[14,90,6,50],[14,91,6,51],[14,111,6,71],[14,113,6,73],[14,131,6,91],[14,133,6,93],[14,153,6,113],[14,155,6,115],[14,173,6,133],[14,175,6,135],[14,193,6,153],[14,195,6,155],[14,211,6,171],[14,213,6,173],[14,231,6,191],[14,233,6,193],[14,249,6,209],[14,250,6,210],[16,2,8,0],[17,0,9,0],[18,0,10,0],[20,2,12,7],[20,8,12,13,"panHandlerName"],[20,22,12,27],[20,25,12,27,"exports"],[20,32,12,27],[20,33,12,27,"panHandlerName"],[20,47,12,27],[20,50,12,30],[20,69,12,49],[22,2,14,0],[23,0,15,0],[24,0,16,0],[26,2,18,0],[27,0,19,0],[28,0,20,0],[29,2,21,0],[30,2,22,7],[30,8,22,13,"PanGestureHandler"],[30,25,22,30],[30,28,22,30,"exports"],[30,35,22,30],[30,36,22,30,"PanGestureHandler"],[30,53,22,30],[30,56,22,33],[30,60,22,33,"createHandler"],[30,82,22,46],[30,84,22,47],[31,4,23,2,"name"],[31,8,23,6],[31,10,23,8,"panHandlerName"],[31,24,23,22],[32,4,24,2,"allowedProps"],[32,16,24,14],[32,18,24,16],[32,19,24,17],[32,22,24,20,"baseGestureHandlerProps"],[32,67,24,43],[32,69,24,45],[32,72,24,48,"panGestureHandlerProps"],[32,94,24,70],[32,95,24,71],[33,4,25,2,"config"],[33,10,25,8],[33,12,25,10],[33,13,25,11],[33,14,25,12],[34,4,26,2,"transformProps"],[34,18,26,16],[34,20,26,18,"managePanProps"],[34,34,26,32],[35,4,27,2,"customNativeProps"],[35,21,27,19],[35,23,27,21,"panGestureHandlerCustomNativeProps"],[36,2,28,0],[36,3,28,1],[36,4,28,2],[37,2,29,0],[37,11,29,9,"validatePanGestureHandlerProps"],[37,41,29,39,"validatePanGestureHandlerProps"],[37,42,29,40,"props"],[37,47,29,45],[37,49,29,47],[38,4,30,2],[38,8,30,6,"Array"],[38,13,30,11],[38,14,30,12,"isArray"],[38,21,30,19],[38,22,30,20,"props"],[38,27,30,25],[38,28,30,26,"activeOffsetX"],[38,41,30,39],[38,42,30,40],[38,47,30,45,"props"],[38,52,30,50],[38,53,30,51,"activeOffsetX"],[38,66,30,64],[38,67,30,65],[38,68,30,66],[38,69,30,67],[38,72,30,70],[38,73,30,71],[38,77,30,75,"props"],[38,82,30,80],[38,83,30,81,"activeOffsetX"],[38,96,30,94],[38,97,30,95],[38,98,30,96],[38,99,30,97],[38,102,30,100],[38,103,30,101],[38,104,30,102],[38,106,30,104],[39,6,31,4],[39,12,31,10],[39,16,31,14,"Error"],[39,21,31,19],[39,22,31,20],[39,110,31,108],[39,111,31,109],[40,4,32,2],[41,4,33,2],[41,8,33,6,"Array"],[41,13,33,11],[41,14,33,12,"isArray"],[41,21,33,19],[41,22,33,20,"props"],[41,27,33,25],[41,28,33,26,"activeOffsetY"],[41,41,33,39],[41,42,33,40],[41,47,33,45,"props"],[41,52,33,50],[41,53,33,51,"activeOffsetY"],[41,66,33,64],[41,67,33,65],[41,68,33,66],[41,69,33,67],[41,72,33,70],[41,73,33,71],[41,77,33,75,"props"],[41,82,33,80],[41,83,33,81,"activeOffsetY"],[41,96,33,94],[41,97,33,95],[41,98,33,96],[41,99,33,97],[41,102,33,100],[41,103,33,101],[41,104,33,102],[41,106,33,104],[42,6,34,4],[42,12,34,10],[42,16,34,14,"Error"],[42,21,34,19],[42,22,34,20],[42,110,34,108],[42,111,34,109],[43,4,35,2],[44,4,36,2],[44,8,36,6,"Array"],[44,13,36,11],[44,14,36,12,"isArray"],[44,21,36,19],[44,22,36,20,"props"],[44,27,36,25],[44,28,36,26,"failOffsetX"],[44,39,36,37],[44,40,36,38],[44,45,36,43,"props"],[44,50,36,48],[44,51,36,49,"failOffsetX"],[44,62,36,60],[44,63,36,61],[44,64,36,62],[44,65,36,63],[44,68,36,66],[44,69,36,67],[44,73,36,71,"props"],[44,78,36,76],[44,79,36,77,"failOffsetX"],[44,90,36,88],[44,91,36,89],[44,92,36,90],[44,93,36,91],[44,96,36,94],[44,97,36,95],[44,98,36,96],[44,100,36,98],[45,6,37,4],[45,12,37,10],[45,16,37,14,"Error"],[45,21,37,19],[45,22,37,20],[45,108,37,106],[45,109,37,107],[46,4,38,2],[47,4,39,2],[47,8,39,6,"Array"],[47,13,39,11],[47,14,39,12,"isArray"],[47,21,39,19],[47,22,39,20,"props"],[47,27,39,25],[47,28,39,26,"failOffsetY"],[47,39,39,37],[47,40,39,38],[47,45,39,43,"props"],[47,50,39,48],[47,51,39,49,"failOffsetY"],[47,62,39,60],[47,63,39,61],[47,64,39,62],[47,65,39,63],[47,68,39,66],[47,69,39,67],[47,73,39,71,"props"],[47,78,39,76],[47,79,39,77,"failOffsetY"],[47,90,39,88],[47,91,39,89],[47,92,39,90],[47,93,39,91],[47,96,39,94],[47,97,39,95],[47,98,39,96],[47,100,39,98],[48,6,40,4],[48,12,40,10],[48,16,40,14,"Error"],[48,21,40,19],[48,22,40,20],[48,108,40,106],[48,109,40,107],[49,4,41,2],[50,4,42,2],[50,8,42,6,"props"],[50,13,42,11],[50,14,42,12,"minDist"],[50,21,42,19],[50,26,42,24,"props"],[50,31,42,29],[50,32,42,30,"failOffsetX"],[50,43,42,41],[50,47,42,45,"props"],[50,52,42,50],[50,53,42,51,"failOffsetY"],[50,64,42,62],[50,65,42,63],[50,67,42,65],[51,6,43,4],[51,12,43,10],[51,16,43,14,"Error"],[51,21,43,19],[51,22,43,20],[51,135,43,133],[51,136,43,134],[52,4,44,2],[53,4,45,2],[53,8,45,6,"props"],[53,13,45,11],[53,14,45,12,"minDist"],[53,21,45,19],[53,26,45,24,"props"],[53,31,45,29],[53,32,45,30,"activeOffsetX"],[53,45,45,43],[53,49,45,47,"props"],[53,54,45,52],[53,55,45,53,"activeOffsetY"],[53,68,45,66],[53,69,45,67],[53,71,45,69],[54,6,46,4],[54,12,46,10],[54,16,46,14,"Error"],[54,21,46,19],[54,22,46,20],[54,94,46,92],[54,95,46,93],[55,4,47,2],[56,2,48,0],[57,2,49,0],[57,11,49,9,"transformPanGestureHandlerProps"],[57,42,49,40,"transformPanGestureHandlerProps"],[57,43,49,41,"props"],[57,48,49,46],[57,50,49,48],[58,4,50,2],[58,10,50,8,"res"],[58,13,50,11],[58,16,50,11,"Object"],[58,22,50,11],[58,23,50,11,"assign"],[58,29,50,11],[58,34,51,7,"props"],[58,39,51,12],[58,40,52,3],[59,4,53,2],[59,8,53,6,"props"],[59,13,53,11],[59,14,53,12,"activeOffsetX"],[59,27,53,25],[59,32,53,30,"undefined"],[59,41,53,39],[59,43,53,41],[60,6,54,4],[60,13,54,11,"res"],[60,16,54,14],[60,17,54,15,"activeOffsetX"],[60,30,54,28],[61,6,55,4],[61,10,55,8,"Array"],[61,15,55,13],[61,16,55,14,"isArray"],[61,23,55,21],[61,24,55,22,"props"],[61,29,55,27],[61,30,55,28,"activeOffsetX"],[61,43,55,41],[61,44,55,42],[61,46,55,44],[62,8,56,6,"res"],[62,11,56,9],[62,12,56,10,"activeOffsetXStart"],[62,30,56,28],[62,33,56,31,"props"],[62,38,56,36],[62,39,56,37,"activeOffsetX"],[62,52,56,50],[62,53,56,51],[62,54,56,52],[62,55,56,53],[63,8,57,6,"res"],[63,11,57,9],[63,12,57,10,"activeOffsetXEnd"],[63,28,57,26],[63,31,57,29,"props"],[63,36,57,34],[63,37,57,35,"activeOffsetX"],[63,50,57,48],[63,51,57,49],[63,52,57,50],[63,53,57,51],[64,6,58,4],[64,7,58,5],[64,13,58,11],[64,17,58,15,"props"],[64,22,58,20],[64,23,58,21,"activeOffsetX"],[64,36,58,34],[64,39,58,37],[64,40,58,38],[64,42,58,40],[65,8,59,6,"res"],[65,11,59,9],[65,12,59,10,"activeOffsetXStart"],[65,30,59,28],[65,33,59,31,"props"],[65,38,59,36],[65,39,59,37,"activeOffsetX"],[65,52,59,50],[66,6,60,4],[66,7,60,5],[66,13,60,11],[67,8,61,6,"res"],[67,11,61,9],[67,12,61,10,"activeOffsetXEnd"],[67,28,61,26],[67,31,61,29,"props"],[67,36,61,34],[67,37,61,35,"activeOffsetX"],[67,50,61,48],[68,6,62,4],[69,4,63,2],[70,4,64,2],[70,8,64,6,"props"],[70,13,64,11],[70,14,64,12,"activeOffsetY"],[70,27,64,25],[70,32,64,30,"undefined"],[70,41,64,39],[70,43,64,41],[71,6,65,4],[71,13,65,11,"res"],[71,16,65,14],[71,17,65,15,"activeOffsetY"],[71,30,65,28],[72,6,66,4],[72,10,66,8,"Array"],[72,15,66,13],[72,16,66,14,"isArray"],[72,23,66,21],[72,24,66,22,"props"],[72,29,66,27],[72,30,66,28,"activeOffsetY"],[72,43,66,41],[72,44,66,42],[72,46,66,44],[73,8,67,6,"res"],[73,11,67,9],[73,12,67,10,"activeOffsetYStart"],[73,30,67,28],[73,33,67,31,"props"],[73,38,67,36],[73,39,67,37,"activeOffsetY"],[73,52,67,50],[73,53,67,51],[73,54,67,52],[73,55,67,53],[74,8,68,6,"res"],[74,11,68,9],[74,12,68,10,"activeOffsetYEnd"],[74,28,68,26],[74,31,68,29,"props"],[74,36,68,34],[74,37,68,35,"activeOffsetY"],[74,50,68,48],[74,51,68,49],[74,52,68,50],[74,53,68,51],[75,6,69,4],[75,7,69,5],[75,13,69,11],[75,17,69,15,"props"],[75,22,69,20],[75,23,69,21,"activeOffsetY"],[75,36,69,34],[75,39,69,37],[75,40,69,38],[75,42,69,40],[76,8,70,6,"res"],[76,11,70,9],[76,12,70,10,"activeOffsetYStart"],[76,30,70,28],[76,33,70,31,"props"],[76,38,70,36],[76,39,70,37,"activeOffsetY"],[76,52,70,50],[77,6,71,4],[77,7,71,5],[77,13,71,11],[78,8,72,6,"res"],[78,11,72,9],[78,12,72,10,"activeOffsetYEnd"],[78,28,72,26],[78,31,72,29,"props"],[78,36,72,34],[78,37,72,35,"activeOffsetY"],[78,50,72,48],[79,6,73,4],[80,4,74,2],[81,4,75,2],[81,8,75,6,"props"],[81,13,75,11],[81,14,75,12,"failOffsetX"],[81,25,75,23],[81,30,75,28,"undefined"],[81,39,75,37],[81,41,75,39],[82,6,76,4],[82,13,76,11,"res"],[82,16,76,14],[82,17,76,15,"failOffsetX"],[82,28,76,26],[83,6,77,4],[83,10,77,8,"Array"],[83,15,77,13],[83,16,77,14,"isArray"],[83,23,77,21],[83,24,77,22,"props"],[83,29,77,27],[83,30,77,28,"failOffsetX"],[83,41,77,39],[83,42,77,40],[83,44,77,42],[84,8,78,6,"res"],[84,11,78,9],[84,12,78,10,"failOffsetXStart"],[84,28,78,26],[84,31,78,29,"props"],[84,36,78,34],[84,37,78,35,"failOffsetX"],[84,48,78,46],[84,49,78,47],[84,50,78,48],[84,51,78,49],[85,8,79,6,"res"],[85,11,79,9],[85,12,79,10,"failOffsetXEnd"],[85,26,79,24],[85,29,79,27,"props"],[85,34,79,32],[85,35,79,33,"failOffsetX"],[85,46,79,44],[85,47,79,45],[85,48,79,46],[85,49,79,47],[86,6,80,4],[86,7,80,5],[86,13,80,11],[86,17,80,15,"props"],[86,22,80,20],[86,23,80,21,"failOffsetX"],[86,34,80,32],[86,37,80,35],[86,38,80,36],[86,40,80,38],[87,8,81,6,"res"],[87,11,81,9],[87,12,81,10,"failOffsetXStart"],[87,28,81,26],[87,31,81,29,"props"],[87,36,81,34],[87,37,81,35,"failOffsetX"],[87,48,81,46],[88,6,82,4],[88,7,82,5],[88,13,82,11],[89,8,83,6,"res"],[89,11,83,9],[89,12,83,10,"failOffsetXEnd"],[89,26,83,24],[89,29,83,27,"props"],[89,34,83,32],[89,35,83,33,"failOffsetX"],[89,46,83,44],[90,6,84,4],[91,4,85,2],[92,4,86,2],[92,8,86,6,"props"],[92,13,86,11],[92,14,86,12,"failOffsetY"],[92,25,86,23],[92,30,86,28,"undefined"],[92,39,86,37],[92,41,86,39],[93,6,87,4],[93,13,87,11,"res"],[93,16,87,14],[93,17,87,15,"failOffsetY"],[93,28,87,26],[94,6,88,4],[94,10,88,8,"Array"],[94,15,88,13],[94,16,88,14,"isArray"],[94,23,88,21],[94,24,88,22,"props"],[94,29,88,27],[94,30,88,28,"failOffsetY"],[94,41,88,39],[94,42,88,40],[94,44,88,42],[95,8,89,6,"res"],[95,11,89,9],[95,12,89,10,"failOffsetYStart"],[95,28,89,26],[95,31,89,29,"props"],[95,36,89,34],[95,37,89,35,"failOffsetY"],[95,48,89,46],[95,49,89,47],[95,50,89,48],[95,51,89,49],[96,8,90,6,"res"],[96,11,90,9],[96,12,90,10,"failOffsetYEnd"],[96,26,90,24],[96,29,90,27,"props"],[96,34,90,32],[96,35,90,33,"failOffsetY"],[96,46,90,44],[96,47,90,45],[96,48,90,46],[96,49,90,47],[97,6,91,4],[97,7,91,5],[97,13,91,11],[97,17,91,15,"props"],[97,22,91,20],[97,23,91,21,"failOffsetY"],[97,34,91,32],[97,37,91,35],[97,38,91,36],[97,40,91,38],[98,8,92,6,"res"],[98,11,92,9],[98,12,92,10,"failOffsetYStart"],[98,28,92,26],[98,31,92,29,"props"],[98,36,92,34],[98,37,92,35,"failOffsetY"],[98,48,92,46],[99,6,93,4],[99,7,93,5],[99,13,93,11],[100,8,94,6,"res"],[100,11,94,9],[100,12,94,10,"failOffsetYEnd"],[100,26,94,24],[100,29,94,27,"props"],[100,34,94,32],[100,35,94,33,"failOffsetY"],[100,46,94,44],[101,6,95,4],[102,4,96,2],[103,4,97,2],[103,11,97,9,"res"],[103,14,97,12],[104,2,98,0],[105,2,99,7],[105,11,99,16,"managePanProps"],[105,25,99,30,"managePanProps"],[105,26,99,31,"props"],[105,31,99,36],[105,33,99,38],[106,4,100,2],[106,8,100,6,"__DEV__"],[106,15,100,13],[106,17,100,15],[107,6,101,4,"validatePanGestureHandlerProps"],[107,36,101,34],[107,37,101,35,"props"],[107,42,101,40],[107,43,101,41],[108,4,102,2],[109,4,103,2],[109,11,103,9,"transformPanGestureHandlerProps"],[109,42,103,40],[109,43,103,41,"props"],[109,48,103,46],[109,49,103,47],[110,2,104,0],[111,0,104,1],[111,3]],"functionMap":{"names":["<global>","validatePanGestureHandlerProps","transformPanGestureHandlerProps","managePanProps"],"mappings":"AAA;AC4B;CDmB;AEC;CFiD;OGC;CHK"}},"type":"js/module"}]}