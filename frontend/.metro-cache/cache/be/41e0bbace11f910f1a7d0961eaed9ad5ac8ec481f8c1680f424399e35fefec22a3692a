{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./EventManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":42,"index":57}}],"key":"+tTRfUGWY5rcrw6ZVLEgvlFTMQc=","exportNames":["*"]}},{"name":"../../handlers/gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":58},"end":{"line":4,"column":66,"index":124}}],"key":"xaaqCODkGxAwJpzGKT+4pXLUAXk=","exportNames":["*"]}},{"name":"../interfaces","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":125},"end":{"line":5,"column":43,"index":168}}],"key":"GMKh3a5g5xNaAog15vl07v6pG2U=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":169},"end":{"line":6,"column":107,"index":276}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}},{"name":"../../PointerType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":277},"end":{"line":7,"column":48,"index":325}}],"key":"PNpP2j+zRZwLQ3w6ZmXPMJNakiU=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _EventManager = _interopRequireDefault(require(_dependencyMap[1], \"./EventManager\"));\n  var _gestureHandlerCommon = require(_dependencyMap[2], \"../../handlers/gestureHandlerCommon\");\n  var _interfaces = require(_dependencyMap[3], \"../interfaces\");\n  var _utils = require(_dependencyMap[4], \"../utils\");\n  var _PointerType = require(_dependencyMap[5], \"../../PointerType\");\n  const POINTER_CAPTURE_EXCLUDE_LIST = new Set(['SELECT', 'INPUT']);\n  class PointerEventManager extends _EventManager.default {\n    trackedPointers = new Set();\n    mouseButtonsMapper = new Map();\n    constructor(view) {\n      super(view);\n      this.mouseButtonsMapper.set(0, _gestureHandlerCommon.MouseButton.LEFT);\n      this.mouseButtonsMapper.set(1, _gestureHandlerCommon.MouseButton.MIDDLE);\n      this.mouseButtonsMapper.set(2, _gestureHandlerCommon.MouseButton.RIGHT);\n      this.mouseButtonsMapper.set(3, _gestureHandlerCommon.MouseButton.BUTTON_4);\n      this.mouseButtonsMapper.set(4, _gestureHandlerCommon.MouseButton.BUTTON_5);\n      this.lastPosition = {\n        x: -Infinity,\n        y: -Infinity\n      };\n    }\n    pointerDownCallback = event => {\n      if (!(0, _utils.isPointerInBounds)(this.view, {\n        x: event.clientX,\n        y: event.clientY\n      })) {\n        return;\n      }\n      const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.DOWN);\n      const target = event.target;\n      if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n        target.setPointerCapture(adaptedEvent.pointerId);\n      }\n      this.markAsInBounds(adaptedEvent.pointerId);\n      this.trackedPointers.add(adaptedEvent.pointerId);\n      if (++this.activePointersCounter > 1) {\n        adaptedEvent.eventType = _interfaces.EventTypes.ADDITIONAL_POINTER_DOWN;\n        this.onPointerAdd(adaptedEvent);\n      } else {\n        this.onPointerDown(adaptedEvent);\n      }\n    };\n    pointerUpCallback = event => {\n      // When we call reset on gesture handlers, it also resets their event managers\n      // In some handlers (like RotationGestureHandler) reset is called before all pointers leave view\n      // This means, that activePointersCounter will be set to 0, while there are still remaining pointers on view\n      // Removing them will end in activePointersCounter going below 0, therefore handlers won't behave properly\n      if (this.activePointersCounter === 0) {\n        return;\n      }\n      const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.UP);\n      const target = event.target;\n      if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n        target.releasePointerCapture(adaptedEvent.pointerId);\n      }\n      this.markAsOutOfBounds(adaptedEvent.pointerId);\n      this.trackedPointers.delete(adaptedEvent.pointerId);\n      if (--this.activePointersCounter > 0) {\n        adaptedEvent.eventType = _interfaces.EventTypes.ADDITIONAL_POINTER_UP;\n        this.onPointerRemove(adaptedEvent);\n      } else {\n        this.onPointerUp(adaptedEvent);\n      }\n    };\n    pointerMoveCallback = event => {\n      const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.MOVE);\n      const target = event.target;\n\n      // You may be wondering why are we setting pointer capture here, when we\n      // already set it in `pointerdown` handler. Well, that's a great question,\n      // for which I don't have an answer. Specification (https://www.w3.org/TR/pointerevents2/#dom-element-setpointercapture)\n      // says that the requirement for `setPointerCapture` to work is that pointer\n      // must be in 'active buttons state`, otherwise it will fail silently, which\n      // is lovely. Obviously, when `pointerdown` is fired, one of the buttons\n      // (when using mouse) is pressed, but that doesn't mean that `setPointerCapture`\n      // will succeed, for some reason. Since it fails silently, we don't actually know\n      // if it worked or not (there's `gotpointercapture` event, but the complexity of\n      // incorporating it here seems stupid), so we just call it again here, every time\n      // pointer moves until it succeeds.\n      // God, I do love web development.\n      if (!target?.hasPointerCapture(event.pointerId) && !POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n        target.setPointerCapture(event.pointerId);\n      }\n      const inBounds = (0, _utils.isPointerInBounds)(this.view, {\n        x: adaptedEvent.x,\n        y: adaptedEvent.y\n      });\n      const pointerIndex = this.pointersInBounds.indexOf(adaptedEvent.pointerId);\n      if (inBounds) {\n        if (pointerIndex < 0) {\n          adaptedEvent.eventType = _interfaces.EventTypes.ENTER;\n          this.onPointerEnter(adaptedEvent);\n          this.markAsInBounds(adaptedEvent.pointerId);\n        } else {\n          this.onPointerMove(adaptedEvent);\n        }\n      } else {\n        if (pointerIndex >= 0) {\n          adaptedEvent.eventType = _interfaces.EventTypes.LEAVE;\n          this.onPointerLeave(adaptedEvent);\n          this.markAsOutOfBounds(adaptedEvent.pointerId);\n        } else {\n          this.onPointerOutOfBounds(adaptedEvent);\n        }\n      }\n      this.lastPosition.x = event.x;\n      this.lastPosition.y = event.y;\n    };\n    pointerCancelCallback = event => {\n      const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.CANCEL);\n      this.onPointerCancel(adaptedEvent);\n      this.markAsOutOfBounds(adaptedEvent.pointerId);\n      this.activePointersCounter = 0;\n      this.trackedPointers.clear();\n    };\n    pointerEnterCallback = event => {\n      const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.ENTER);\n      this.onPointerMoveOver(adaptedEvent);\n    };\n    pointerLeaveCallback = event => {\n      const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.LEAVE);\n      this.onPointerMoveOut(adaptedEvent);\n    };\n    lostPointerCaptureCallback = event => {\n      const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.CANCEL);\n      if (this.trackedPointers.has(adaptedEvent.pointerId)) {\n        // In some cases the `pointerup` event is not fired, but `lostpointercapture` is.\n        // Here we simulate the `pointercancel` event to make sure the gesture handler stops tracking it.\n        this.onPointerCancel(adaptedEvent);\n        this.activePointersCounter = 0;\n        this.trackedPointers.clear();\n      }\n    };\n    registerListeners() {\n      this.view.addEventListener('pointerdown', this.pointerDownCallback);\n      this.view.addEventListener('pointerup', this.pointerUpCallback);\n      this.view.addEventListener('pointermove', this.pointerMoveCallback);\n      this.view.addEventListener('pointercancel', this.pointerCancelCallback);\n\n      // onPointerEnter and onPointerLeave are triggered by a custom logic responsible for\n      // handling shouldCancelWhenOutside flag, and are unreliable unless the pointer is down.\n      // We therefore use pointerenter and pointerleave events to handle the hover gesture,\n      // mapping them to onPointerMoveOver and onPointerMoveOut respectively.\n      this.view.addEventListener('pointerenter', this.pointerEnterCallback);\n      this.view.addEventListener('pointerleave', this.pointerLeaveCallback);\n      this.view.addEventListener('lostpointercapture', this.lostPointerCaptureCallback);\n    }\n    unregisterListeners() {\n      this.view.removeEventListener('pointerdown', this.pointerDownCallback);\n      this.view.removeEventListener('pointerup', this.pointerUpCallback);\n      this.view.removeEventListener('pointermove', this.pointerMoveCallback);\n      this.view.removeEventListener('pointercancel', this.pointerCancelCallback);\n      this.view.removeEventListener('pointerenter', this.pointerEnterCallback);\n      this.view.removeEventListener('pointerleave', this.pointerLeaveCallback);\n      this.view.removeEventListener('lostpointercapture', this.lostPointerCaptureCallback);\n    }\n    mapEvent(event, eventType) {\n      const rect = this.view.getBoundingClientRect();\n      const {\n        scaleX,\n        scaleY\n      } = (0, _utils.calculateViewScale)(this.view);\n      return {\n        x: event.clientX,\n        y: event.clientY,\n        offsetX: (event.clientX - rect.left) / scaleX,\n        offsetY: (event.clientY - rect.top) / scaleY,\n        pointerId: event.pointerId,\n        eventType: eventType,\n        pointerType: _utils.PointerTypeMapping.get(event.pointerType) ?? _PointerType.PointerType.OTHER,\n        button: this.mouseButtonsMapper.get(event.button),\n        time: event.timeStamp,\n        stylusData: (0, _utils.tryExtractStylusData)(event)\n      };\n    }\n    resetManager() {\n      super.resetManager();\n      this.trackedPointers.clear();\n    }\n  }\n  exports.default = PointerEventManager;\n});","lineCount":190,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[9,2,3,0],[9,6,3,0,"_EventManager"],[9,19,3,0],[9,22,3,0,"_interopRequireDefault"],[9,44,3,0],[9,45,3,0,"require"],[9,52,3,0],[9,53,3,0,"_dependencyMap"],[9,67,3,0],[10,2,4,0],[10,6,4,0,"_gestureHandlerCommon"],[10,27,4,0],[10,30,4,0,"require"],[10,37,4,0],[10,38,4,0,"_dependencyMap"],[10,52,4,0],[11,2,5,0],[11,6,5,0,"_interfaces"],[11,17,5,0],[11,20,5,0,"require"],[11,27,5,0],[11,28,5,0,"_dependencyMap"],[11,42,5,0],[12,2,6,0],[12,6,6,0,"_utils"],[12,12,6,0],[12,15,6,0,"require"],[12,22,6,0],[12,23,6,0,"_dependencyMap"],[12,37,6,0],[13,2,7,0],[13,6,7,0,"_PointerType"],[13,18,7,0],[13,21,7,0,"require"],[13,28,7,0],[13,29,7,0,"_dependencyMap"],[13,43,7,0],[14,2,8,0],[14,8,8,6,"POINTER_CAPTURE_EXCLUDE_LIST"],[14,36,8,34],[14,39,8,37],[14,43,8,41,"Set"],[14,46,8,44],[14,47,8,45],[14,48,8,46],[14,56,8,54],[14,58,8,56],[14,65,8,63],[14,66,8,64],[14,67,8,65],[15,2,9,15],[15,8,9,21,"PointerEventManager"],[15,27,9,40],[15,36,9,49,"EventManager"],[15,57,9,61],[15,58,9,62],[16,4,10,2,"trackedPointers"],[16,19,10,17],[16,22,10,20],[16,26,10,24,"Set"],[16,29,10,27],[16,30,10,28],[16,31,10,29],[17,4,11,2,"mouseButtonsMapper"],[17,22,11,20],[17,25,11,23],[17,29,11,27,"Map"],[17,32,11,30],[17,33,11,31],[17,34,11,32],[18,4,12,2,"constructor"],[18,15,12,13,"constructor"],[18,16,12,14,"view"],[18,20,12,18],[18,22,12,20],[19,6,13,4],[19,11,13,9],[19,12,13,10,"view"],[19,16,13,14],[19,17,13,15],[20,6,14,4],[20,10,14,8],[20,11,14,9,"mouseButtonsMapper"],[20,29,14,27],[20,30,14,28,"set"],[20,33,14,31],[20,34,14,32],[20,35,14,33],[20,37,14,35,"MouseButton"],[20,70,14,46],[20,71,14,47,"LEFT"],[20,75,14,51],[20,76,14,52],[21,6,15,4],[21,10,15,8],[21,11,15,9,"mouseButtonsMapper"],[21,29,15,27],[21,30,15,28,"set"],[21,33,15,31],[21,34,15,32],[21,35,15,33],[21,37,15,35,"MouseButton"],[21,70,15,46],[21,71,15,47,"MIDDLE"],[21,77,15,53],[21,78,15,54],[22,6,16,4],[22,10,16,8],[22,11,16,9,"mouseButtonsMapper"],[22,29,16,27],[22,30,16,28,"set"],[22,33,16,31],[22,34,16,32],[22,35,16,33],[22,37,16,35,"MouseButton"],[22,70,16,46],[22,71,16,47,"RIGHT"],[22,76,16,52],[22,77,16,53],[23,6,17,4],[23,10,17,8],[23,11,17,9,"mouseButtonsMapper"],[23,29,17,27],[23,30,17,28,"set"],[23,33,17,31],[23,34,17,32],[23,35,17,33],[23,37,17,35,"MouseButton"],[23,70,17,46],[23,71,17,47,"BUTTON_4"],[23,79,17,55],[23,80,17,56],[24,6,18,4],[24,10,18,8],[24,11,18,9,"mouseButtonsMapper"],[24,29,18,27],[24,30,18,28,"set"],[24,33,18,31],[24,34,18,32],[24,35,18,33],[24,37,18,35,"MouseButton"],[24,70,18,46],[24,71,18,47,"BUTTON_5"],[24,79,18,55],[24,80,18,56],[25,6,19,4],[25,10,19,8],[25,11,19,9,"lastPosition"],[25,23,19,21],[25,26,19,24],[26,8,20,6,"x"],[26,9,20,7],[26,11,20,9],[26,12,20,10,"Infinity"],[26,20,20,18],[27,8,21,6,"y"],[27,9,21,7],[27,11,21,9],[27,12,21,10,"Infinity"],[28,6,22,4],[28,7,22,5],[29,4,23,2],[30,4,24,2,"pointerDownCallback"],[30,23,24,21],[30,26,24,24,"event"],[30,31,24,29],[30,35,24,33],[31,6,25,4],[31,10,25,8],[31,11,25,9],[31,15,25,9,"isPointerInBounds"],[31,39,25,26],[31,41,25,27],[31,45,25,31],[31,46,25,32,"view"],[31,50,25,36],[31,52,25,38],[32,8,26,6,"x"],[32,9,26,7],[32,11,26,9,"event"],[32,16,26,14],[32,17,26,15,"clientX"],[32,24,26,22],[33,8,27,6,"y"],[33,9,27,7],[33,11,27,9,"event"],[33,16,27,14],[33,17,27,15,"clientY"],[34,6,28,4],[34,7,28,5],[34,8,28,6],[34,10,28,8],[35,8,29,6],[36,6,30,4],[37,6,31,4],[37,12,31,10,"adaptedEvent"],[37,24,31,22],[37,27,31,25],[37,31,31,29],[37,32,31,30,"mapEvent"],[37,40,31,38],[37,41,31,39,"event"],[37,46,31,44],[37,48,31,46,"EventTypes"],[37,70,31,56],[37,71,31,57,"DOWN"],[37,75,31,61],[37,76,31,62],[38,6,32,4],[38,12,32,10,"target"],[38,18,32,16],[38,21,32,19,"event"],[38,26,32,24],[38,27,32,25,"target"],[38,33,32,31],[39,6,33,4],[39,10,33,8],[39,11,33,9,"POINTER_CAPTURE_EXCLUDE_LIST"],[39,39,33,37],[39,40,33,38,"has"],[39,43,33,41],[39,44,33,42,"target"],[39,50,33,48],[39,51,33,49,"tagName"],[39,58,33,56],[39,59,33,57],[39,61,33,59],[40,8,34,6,"target"],[40,14,34,12],[40,15,34,13,"setPointerCapture"],[40,32,34,30],[40,33,34,31,"adaptedEvent"],[40,45,34,43],[40,46,34,44,"pointerId"],[40,55,34,53],[40,56,34,54],[41,6,35,4],[42,6,36,4],[42,10,36,8],[42,11,36,9,"markAsInBounds"],[42,25,36,23],[42,26,36,24,"adaptedEvent"],[42,38,36,36],[42,39,36,37,"pointerId"],[42,48,36,46],[42,49,36,47],[43,6,37,4],[43,10,37,8],[43,11,37,9,"trackedPointers"],[43,26,37,24],[43,27,37,25,"add"],[43,30,37,28],[43,31,37,29,"adaptedEvent"],[43,43,37,41],[43,44,37,42,"pointerId"],[43,53,37,51],[43,54,37,52],[44,6,38,4],[44,10,38,8],[44,12,38,10],[44,16,38,14],[44,17,38,15,"activePointersCounter"],[44,38,38,36],[44,41,38,39],[44,42,38,40],[44,44,38,42],[45,8,39,6,"adaptedEvent"],[45,20,39,18],[45,21,39,19,"eventType"],[45,30,39,28],[45,33,39,31,"EventTypes"],[45,55,39,41],[45,56,39,42,"ADDITIONAL_POINTER_DOWN"],[45,79,39,65],[46,8,40,6],[46,12,40,10],[46,13,40,11,"onPointerAdd"],[46,25,40,23],[46,26,40,24,"adaptedEvent"],[46,38,40,36],[46,39,40,37],[47,6,41,4],[47,7,41,5],[47,13,41,11],[48,8,42,6],[48,12,42,10],[48,13,42,11,"onPointerDown"],[48,26,42,24],[48,27,42,25,"adaptedEvent"],[48,39,42,37],[48,40,42,38],[49,6,43,4],[50,4,44,2],[50,5,44,3],[51,4,45,2,"pointerUpCallback"],[51,21,45,19],[51,24,45,22,"event"],[51,29,45,27],[51,33,45,31],[52,6,46,4],[53,6,47,4],[54,6,48,4],[55,6,49,4],[56,6,50,4],[56,10,50,8],[56,14,50,12],[56,15,50,13,"activePointersCounter"],[56,36,50,34],[56,41,50,39],[56,42,50,40],[56,44,50,42],[57,8,51,6],[58,6,52,4],[59,6,53,4],[59,12,53,10,"adaptedEvent"],[59,24,53,22],[59,27,53,25],[59,31,53,29],[59,32,53,30,"mapEvent"],[59,40,53,38],[59,41,53,39,"event"],[59,46,53,44],[59,48,53,46,"EventTypes"],[59,70,53,56],[59,71,53,57,"UP"],[59,73,53,59],[59,74,53,60],[60,6,54,4],[60,12,54,10,"target"],[60,18,54,16],[60,21,54,19,"event"],[60,26,54,24],[60,27,54,25,"target"],[60,33,54,31],[61,6,55,4],[61,10,55,8],[61,11,55,9,"POINTER_CAPTURE_EXCLUDE_LIST"],[61,39,55,37],[61,40,55,38,"has"],[61,43,55,41],[61,44,55,42,"target"],[61,50,55,48],[61,51,55,49,"tagName"],[61,58,55,56],[61,59,55,57],[61,61,55,59],[62,8,56,6,"target"],[62,14,56,12],[62,15,56,13,"releasePointerCapture"],[62,36,56,34],[62,37,56,35,"adaptedEvent"],[62,49,56,47],[62,50,56,48,"pointerId"],[62,59,56,57],[62,60,56,58],[63,6,57,4],[64,6,58,4],[64,10,58,8],[64,11,58,9,"markAsOutOfBounds"],[64,28,58,26],[64,29,58,27,"adaptedEvent"],[64,41,58,39],[64,42,58,40,"pointerId"],[64,51,58,49],[64,52,58,50],[65,6,59,4],[65,10,59,8],[65,11,59,9,"trackedPointers"],[65,26,59,24],[65,27,59,25,"delete"],[65,33,59,31],[65,34,59,32,"adaptedEvent"],[65,46,59,44],[65,47,59,45,"pointerId"],[65,56,59,54],[65,57,59,55],[66,6,60,4],[66,10,60,8],[66,12,60,10],[66,16,60,14],[66,17,60,15,"activePointersCounter"],[66,38,60,36],[66,41,60,39],[66,42,60,40],[66,44,60,42],[67,8,61,6,"adaptedEvent"],[67,20,61,18],[67,21,61,19,"eventType"],[67,30,61,28],[67,33,61,31,"EventTypes"],[67,55,61,41],[67,56,61,42,"ADDITIONAL_POINTER_UP"],[67,77,61,63],[68,8,62,6],[68,12,62,10],[68,13,62,11,"onPointerRemove"],[68,28,62,26],[68,29,62,27,"adaptedEvent"],[68,41,62,39],[68,42,62,40],[69,6,63,4],[69,7,63,5],[69,13,63,11],[70,8,64,6],[70,12,64,10],[70,13,64,11,"onPointerUp"],[70,24,64,22],[70,25,64,23,"adaptedEvent"],[70,37,64,35],[70,38,64,36],[71,6,65,4],[72,4,66,2],[72,5,66,3],[73,4,67,2,"pointerMoveCallback"],[73,23,67,21],[73,26,67,24,"event"],[73,31,67,29],[73,35,67,33],[74,6,68,4],[74,12,68,10,"adaptedEvent"],[74,24,68,22],[74,27,68,25],[74,31,68,29],[74,32,68,30,"mapEvent"],[74,40,68,38],[74,41,68,39,"event"],[74,46,68,44],[74,48,68,46,"EventTypes"],[74,70,68,56],[74,71,68,57,"MOVE"],[74,75,68,61],[74,76,68,62],[75,6,69,4],[75,12,69,10,"target"],[75,18,69,16],[75,21,69,19,"event"],[75,26,69,24],[75,27,69,25,"target"],[75,33,69,31],[77,6,71,4],[78,6,72,4],[79,6,73,4],[80,6,74,4],[81,6,75,4],[82,6,76,4],[83,6,77,4],[84,6,78,4],[85,6,79,4],[86,6,80,4],[87,6,81,4],[88,6,82,4],[89,6,83,4],[89,10,83,8],[89,11,83,9,"target"],[89,17,83,15],[89,19,83,17,"hasPointerCapture"],[89,36,83,34],[89,37,83,35,"event"],[89,42,83,40],[89,43,83,41,"pointerId"],[89,52,83,50],[89,53,83,51],[89,57,83,55],[89,58,83,56,"POINTER_CAPTURE_EXCLUDE_LIST"],[89,86,83,84],[89,87,83,85,"has"],[89,90,83,88],[89,91,83,89,"target"],[89,97,83,95],[89,98,83,96,"tagName"],[89,105,83,103],[89,106,83,104],[89,108,83,106],[90,8,84,6,"target"],[90,14,84,12],[90,15,84,13,"setPointerCapture"],[90,32,84,30],[90,33,84,31,"event"],[90,38,84,36],[90,39,84,37,"pointerId"],[90,48,84,46],[90,49,84,47],[91,6,85,4],[92,6,86,4],[92,12,86,10,"inBounds"],[92,20,86,18],[92,23,86,21],[92,27,86,21,"isPointerInBounds"],[92,51,86,38],[92,53,86,39],[92,57,86,43],[92,58,86,44,"view"],[92,62,86,48],[92,64,86,50],[93,8,87,6,"x"],[93,9,87,7],[93,11,87,9,"adaptedEvent"],[93,23,87,21],[93,24,87,22,"x"],[93,25,87,23],[94,8,88,6,"y"],[94,9,88,7],[94,11,88,9,"adaptedEvent"],[94,23,88,21],[94,24,88,22,"y"],[95,6,89,4],[95,7,89,5],[95,8,89,6],[96,6,90,4],[96,12,90,10,"pointerIndex"],[96,24,90,22],[96,27,90,25],[96,31,90,29],[96,32,90,30,"pointersInBounds"],[96,48,90,46],[96,49,90,47,"indexOf"],[96,56,90,54],[96,57,90,55,"adaptedEvent"],[96,69,90,67],[96,70,90,68,"pointerId"],[96,79,90,77],[96,80,90,78],[97,6,91,4],[97,10,91,8,"inBounds"],[97,18,91,16],[97,20,91,18],[98,8,92,6],[98,12,92,10,"pointerIndex"],[98,24,92,22],[98,27,92,25],[98,28,92,26],[98,30,92,28],[99,10,93,8,"adaptedEvent"],[99,22,93,20],[99,23,93,21,"eventType"],[99,32,93,30],[99,35,93,33,"EventTypes"],[99,57,93,43],[99,58,93,44,"ENTER"],[99,63,93,49],[100,10,94,8],[100,14,94,12],[100,15,94,13,"onPointerEnter"],[100,29,94,27],[100,30,94,28,"adaptedEvent"],[100,42,94,40],[100,43,94,41],[101,10,95,8],[101,14,95,12],[101,15,95,13,"markAsInBounds"],[101,29,95,27],[101,30,95,28,"adaptedEvent"],[101,42,95,40],[101,43,95,41,"pointerId"],[101,52,95,50],[101,53,95,51],[102,8,96,6],[102,9,96,7],[102,15,96,13],[103,10,97,8],[103,14,97,12],[103,15,97,13,"onPointerMove"],[103,28,97,26],[103,29,97,27,"adaptedEvent"],[103,41,97,39],[103,42,97,40],[104,8,98,6],[105,6,99,4],[105,7,99,5],[105,13,99,11],[106,8,100,6],[106,12,100,10,"pointerIndex"],[106,24,100,22],[106,28,100,26],[106,29,100,27],[106,31,100,29],[107,10,101,8,"adaptedEvent"],[107,22,101,20],[107,23,101,21,"eventType"],[107,32,101,30],[107,35,101,33,"EventTypes"],[107,57,101,43],[107,58,101,44,"LEAVE"],[107,63,101,49],[108,10,102,8],[108,14,102,12],[108,15,102,13,"onPointerLeave"],[108,29,102,27],[108,30,102,28,"adaptedEvent"],[108,42,102,40],[108,43,102,41],[109,10,103,8],[109,14,103,12],[109,15,103,13,"markAsOutOfBounds"],[109,32,103,30],[109,33,103,31,"adaptedEvent"],[109,45,103,43],[109,46,103,44,"pointerId"],[109,55,103,53],[109,56,103,54],[110,8,104,6],[110,9,104,7],[110,15,104,13],[111,10,105,8],[111,14,105,12],[111,15,105,13,"onPointerOutOfBounds"],[111,35,105,33],[111,36,105,34,"adaptedEvent"],[111,48,105,46],[111,49,105,47],[112,8,106,6],[113,6,107,4],[114,6,108,4],[114,10,108,8],[114,11,108,9,"lastPosition"],[114,23,108,21],[114,24,108,22,"x"],[114,25,108,23],[114,28,108,26,"event"],[114,33,108,31],[114,34,108,32,"x"],[114,35,108,33],[115,6,109,4],[115,10,109,8],[115,11,109,9,"lastPosition"],[115,23,109,21],[115,24,109,22,"y"],[115,25,109,23],[115,28,109,26,"event"],[115,33,109,31],[115,34,109,32,"y"],[115,35,109,33],[116,4,110,2],[116,5,110,3],[117,4,111,2,"pointerCancelCallback"],[117,25,111,23],[117,28,111,26,"event"],[117,33,111,31],[117,37,111,35],[118,6,112,4],[118,12,112,10,"adaptedEvent"],[118,24,112,22],[118,27,112,25],[118,31,112,29],[118,32,112,30,"mapEvent"],[118,40,112,38],[118,41,112,39,"event"],[118,46,112,44],[118,48,112,46,"EventTypes"],[118,70,112,56],[118,71,112,57,"CANCEL"],[118,77,112,63],[118,78,112,64],[119,6,113,4],[119,10,113,8],[119,11,113,9,"onPointerCancel"],[119,26,113,24],[119,27,113,25,"adaptedEvent"],[119,39,113,37],[119,40,113,38],[120,6,114,4],[120,10,114,8],[120,11,114,9,"markAsOutOfBounds"],[120,28,114,26],[120,29,114,27,"adaptedEvent"],[120,41,114,39],[120,42,114,40,"pointerId"],[120,51,114,49],[120,52,114,50],[121,6,115,4],[121,10,115,8],[121,11,115,9,"activePointersCounter"],[121,32,115,30],[121,35,115,33],[121,36,115,34],[122,6,116,4],[122,10,116,8],[122,11,116,9,"trackedPointers"],[122,26,116,24],[122,27,116,25,"clear"],[122,32,116,30],[122,33,116,31],[122,34,116,32],[123,4,117,2],[123,5,117,3],[124,4,118,2,"pointerEnterCallback"],[124,24,118,22],[124,27,118,25,"event"],[124,32,118,30],[124,36,118,34],[125,6,119,4],[125,12,119,10,"adaptedEvent"],[125,24,119,22],[125,27,119,25],[125,31,119,29],[125,32,119,30,"mapEvent"],[125,40,119,38],[125,41,119,39,"event"],[125,46,119,44],[125,48,119,46,"EventTypes"],[125,70,119,56],[125,71,119,57,"ENTER"],[125,76,119,62],[125,77,119,63],[126,6,120,4],[126,10,120,8],[126,11,120,9,"onPointerMoveOver"],[126,28,120,26],[126,29,120,27,"adaptedEvent"],[126,41,120,39],[126,42,120,40],[127,4,121,2],[127,5,121,3],[128,4,122,2,"pointerLeaveCallback"],[128,24,122,22],[128,27,122,25,"event"],[128,32,122,30],[128,36,122,34],[129,6,123,4],[129,12,123,10,"adaptedEvent"],[129,24,123,22],[129,27,123,25],[129,31,123,29],[129,32,123,30,"mapEvent"],[129,40,123,38],[129,41,123,39,"event"],[129,46,123,44],[129,48,123,46,"EventTypes"],[129,70,123,56],[129,71,123,57,"LEAVE"],[129,76,123,62],[129,77,123,63],[130,6,124,4],[130,10,124,8],[130,11,124,9,"onPointerMoveOut"],[130,27,124,25],[130,28,124,26,"adaptedEvent"],[130,40,124,38],[130,41,124,39],[131,4,125,2],[131,5,125,3],[132,4,126,2,"lostPointerCaptureCallback"],[132,30,126,28],[132,33,126,31,"event"],[132,38,126,36],[132,42,126,40],[133,6,127,4],[133,12,127,10,"adaptedEvent"],[133,24,127,22],[133,27,127,25],[133,31,127,29],[133,32,127,30,"mapEvent"],[133,40,127,38],[133,41,127,39,"event"],[133,46,127,44],[133,48,127,46,"EventTypes"],[133,70,127,56],[133,71,127,57,"CANCEL"],[133,77,127,63],[133,78,127,64],[134,6,128,4],[134,10,128,8],[134,14,128,12],[134,15,128,13,"trackedPointers"],[134,30,128,28],[134,31,128,29,"has"],[134,34,128,32],[134,35,128,33,"adaptedEvent"],[134,47,128,45],[134,48,128,46,"pointerId"],[134,57,128,55],[134,58,128,56],[134,60,128,58],[135,8,129,6],[136,8,130,6],[137,8,131,6],[137,12,131,10],[137,13,131,11,"onPointerCancel"],[137,28,131,26],[137,29,131,27,"adaptedEvent"],[137,41,131,39],[137,42,131,40],[138,8,132,6],[138,12,132,10],[138,13,132,11,"activePointersCounter"],[138,34,132,32],[138,37,132,35],[138,38,132,36],[139,8,133,6],[139,12,133,10],[139,13,133,11,"trackedPointers"],[139,28,133,26],[139,29,133,27,"clear"],[139,34,133,32],[139,35,133,33],[139,36,133,34],[140,6,134,4],[141,4,135,2],[141,5,135,3],[142,4,136,2,"registerListeners"],[142,21,136,19,"registerListeners"],[142,22,136,19],[142,24,136,22],[143,6,137,4],[143,10,137,8],[143,11,137,9,"view"],[143,15,137,13],[143,16,137,14,"addEventListener"],[143,32,137,30],[143,33,137,31],[143,46,137,44],[143,48,137,46],[143,52,137,50],[143,53,137,51,"pointerDownCallback"],[143,72,137,70],[143,73,137,71],[144,6,138,4],[144,10,138,8],[144,11,138,9,"view"],[144,15,138,13],[144,16,138,14,"addEventListener"],[144,32,138,30],[144,33,138,31],[144,44,138,42],[144,46,138,44],[144,50,138,48],[144,51,138,49,"pointerUpCallback"],[144,68,138,66],[144,69,138,67],[145,6,139,4],[145,10,139,8],[145,11,139,9,"view"],[145,15,139,13],[145,16,139,14,"addEventListener"],[145,32,139,30],[145,33,139,31],[145,46,139,44],[145,48,139,46],[145,52,139,50],[145,53,139,51,"pointerMoveCallback"],[145,72,139,70],[145,73,139,71],[146,6,140,4],[146,10,140,8],[146,11,140,9,"view"],[146,15,140,13],[146,16,140,14,"addEventListener"],[146,32,140,30],[146,33,140,31],[146,48,140,46],[146,50,140,48],[146,54,140,52],[146,55,140,53,"pointerCancelCallback"],[146,76,140,74],[146,77,140,75],[148,6,142,4],[149,6,143,4],[150,6,144,4],[151,6,145,4],[152,6,146,4],[152,10,146,8],[152,11,146,9,"view"],[152,15,146,13],[152,16,146,14,"addEventListener"],[152,32,146,30],[152,33,146,31],[152,47,146,45],[152,49,146,47],[152,53,146,51],[152,54,146,52,"pointerEnterCallback"],[152,74,146,72],[152,75,146,73],[153,6,147,4],[153,10,147,8],[153,11,147,9,"view"],[153,15,147,13],[153,16,147,14,"addEventListener"],[153,32,147,30],[153,33,147,31],[153,47,147,45],[153,49,147,47],[153,53,147,51],[153,54,147,52,"pointerLeaveCallback"],[153,74,147,72],[153,75,147,73],[154,6,148,4],[154,10,148,8],[154,11,148,9,"view"],[154,15,148,13],[154,16,148,14,"addEventListener"],[154,32,148,30],[154,33,148,31],[154,53,148,51],[154,55,148,53],[154,59,148,57],[154,60,148,58,"lostPointerCaptureCallback"],[154,86,148,84],[154,87,148,85],[155,4,149,2],[156,4,150,2,"unregisterListeners"],[156,23,150,21,"unregisterListeners"],[156,24,150,21],[156,26,150,24],[157,6,151,4],[157,10,151,8],[157,11,151,9,"view"],[157,15,151,13],[157,16,151,14,"removeEventListener"],[157,35,151,33],[157,36,151,34],[157,49,151,47],[157,51,151,49],[157,55,151,53],[157,56,151,54,"pointerDownCallback"],[157,75,151,73],[157,76,151,74],[158,6,152,4],[158,10,152,8],[158,11,152,9,"view"],[158,15,152,13],[158,16,152,14,"removeEventListener"],[158,35,152,33],[158,36,152,34],[158,47,152,45],[158,49,152,47],[158,53,152,51],[158,54,152,52,"pointerUpCallback"],[158,71,152,69],[158,72,152,70],[159,6,153,4],[159,10,153,8],[159,11,153,9,"view"],[159,15,153,13],[159,16,153,14,"removeEventListener"],[159,35,153,33],[159,36,153,34],[159,49,153,47],[159,51,153,49],[159,55,153,53],[159,56,153,54,"pointerMoveCallback"],[159,75,153,73],[159,76,153,74],[160,6,154,4],[160,10,154,8],[160,11,154,9,"view"],[160,15,154,13],[160,16,154,14,"removeEventListener"],[160,35,154,33],[160,36,154,34],[160,51,154,49],[160,53,154,51],[160,57,154,55],[160,58,154,56,"pointerCancelCallback"],[160,79,154,77],[160,80,154,78],[161,6,155,4],[161,10,155,8],[161,11,155,9,"view"],[161,15,155,13],[161,16,155,14,"removeEventListener"],[161,35,155,33],[161,36,155,34],[161,50,155,48],[161,52,155,50],[161,56,155,54],[161,57,155,55,"pointerEnterCallback"],[161,77,155,75],[161,78,155,76],[162,6,156,4],[162,10,156,8],[162,11,156,9,"view"],[162,15,156,13],[162,16,156,14,"removeEventListener"],[162,35,156,33],[162,36,156,34],[162,50,156,48],[162,52,156,50],[162,56,156,54],[162,57,156,55,"pointerLeaveCallback"],[162,77,156,75],[162,78,156,76],[163,6,157,4],[163,10,157,8],[163,11,157,9,"view"],[163,15,157,13],[163,16,157,14,"removeEventListener"],[163,35,157,33],[163,36,157,34],[163,56,157,54],[163,58,157,56],[163,62,157,60],[163,63,157,61,"lostPointerCaptureCallback"],[163,89,157,87],[163,90,157,88],[164,4,158,2],[165,4,159,2,"mapEvent"],[165,12,159,10,"mapEvent"],[165,13,159,11,"event"],[165,18,159,16],[165,20,159,18,"eventType"],[165,29,159,27],[165,31,159,29],[166,6,160,4],[166,12,160,10,"rect"],[166,16,160,14],[166,19,160,17],[166,23,160,21],[166,24,160,22,"view"],[166,28,160,26],[166,29,160,27,"getBoundingClientRect"],[166,50,160,48],[166,51,160,49],[166,52,160,50],[167,6,161,4],[167,12,161,10],[168,8,162,6,"scaleX"],[168,14,162,12],[169,8,163,6,"scaleY"],[170,6,164,4],[170,7,164,5],[170,10,164,8],[170,14,164,8,"calculateViewScale"],[170,39,164,26],[170,41,164,27],[170,45,164,31],[170,46,164,32,"view"],[170,50,164,36],[170,51,164,37],[171,6,165,4],[171,13,165,11],[172,8,166,6,"x"],[172,9,166,7],[172,11,166,9,"event"],[172,16,166,14],[172,17,166,15,"clientX"],[172,24,166,22],[173,8,167,6,"y"],[173,9,167,7],[173,11,167,9,"event"],[173,16,167,14],[173,17,167,15,"clientY"],[173,24,167,22],[174,8,168,6,"offsetX"],[174,15,168,13],[174,17,168,15],[174,18,168,16,"event"],[174,23,168,21],[174,24,168,22,"clientX"],[174,31,168,29],[174,34,168,32,"rect"],[174,38,168,36],[174,39,168,37,"left"],[174,43,168,41],[174,47,168,45,"scaleX"],[174,53,168,51],[175,8,169,6,"offsetY"],[175,15,169,13],[175,17,169,15],[175,18,169,16,"event"],[175,23,169,21],[175,24,169,22,"clientY"],[175,31,169,29],[175,34,169,32,"rect"],[175,38,169,36],[175,39,169,37,"top"],[175,42,169,40],[175,46,169,44,"scaleY"],[175,52,169,50],[176,8,170,6,"pointerId"],[176,17,170,15],[176,19,170,17,"event"],[176,24,170,22],[176,25,170,23,"pointerId"],[176,34,170,32],[177,8,171,6,"eventType"],[177,17,171,15],[177,19,171,17,"eventType"],[177,28,171,26],[178,8,172,6,"pointerType"],[178,19,172,17],[178,21,172,19,"PointerTypeMapping"],[178,46,172,37],[178,47,172,38,"get"],[178,50,172,41],[178,51,172,42,"event"],[178,56,172,47],[178,57,172,48,"pointerType"],[178,68,172,59],[178,69,172,60],[178,73,172,64,"PointerType"],[178,97,172,75],[178,98,172,76,"OTHER"],[178,103,172,81],[179,8,173,6,"button"],[179,14,173,12],[179,16,173,14],[179,20,173,18],[179,21,173,19,"mouseButtonsMapper"],[179,39,173,37],[179,40,173,38,"get"],[179,43,173,41],[179,44,173,42,"event"],[179,49,173,47],[179,50,173,48,"button"],[179,56,173,54],[179,57,173,55],[180,8,174,6,"time"],[180,12,174,10],[180,14,174,12,"event"],[180,19,174,17],[180,20,174,18,"timeStamp"],[180,29,174,27],[181,8,175,6,"stylusData"],[181,18,175,16],[181,20,175,18],[181,24,175,18,"tryExtractStylusData"],[181,51,175,38],[181,53,175,39,"event"],[181,58,175,44],[182,6,176,4],[182,7,176,5],[183,4,177,2],[184,4,178,2,"resetManager"],[184,16,178,14,"resetManager"],[184,17,178,14],[184,19,178,17],[185,6,179,4],[185,11,179,9],[185,12,179,10,"resetManager"],[185,24,179,22],[185,25,179,23],[185,26,179,24],[186,6,180,4],[186,10,180,8],[186,11,180,9,"trackedPointers"],[186,26,180,24],[186,27,180,25,"clear"],[186,32,180,30],[186,33,180,31],[186,34,180,32],[187,4,181,2],[188,2,182,0],[189,2,182,1,"exports"],[189,9,182,1],[189,10,182,1,"default"],[189,17,182,1],[189,20,182,1,"PointerEventManager"],[189,39,182,1],[190,0,182,1],[190,3]],"functionMap":{"names":["<global>","PointerEventManager","constructor","pointerDownCallback","pointerUpCallback","pointerMoveCallback","pointerCancelCallback","pointerEnterCallback","pointerLeaveCallback","lostPointerCaptureCallback","registerListeners","unregisterListeners","mapEvent","resetManager"],"mappings":"AAA;eCQ;ECG;GDW;wBEC;GFoB;sBGC;GHqB;wBIC;GJ2C;0BKC;GLM;yBMC;GNG;yBOC;GPG;+BQC;GRS;ESC;GTa;EUC;GVQ;EWC;GXkB;EYC;GZG;CDC"}},"type":"js/module"}]}