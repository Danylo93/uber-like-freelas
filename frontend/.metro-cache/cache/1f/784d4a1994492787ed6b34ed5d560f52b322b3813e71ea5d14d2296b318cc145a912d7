{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":86,"index":86}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./AuthContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":87},"end":{"line":2,"column":40,"index":127}}],"key":"YmpzODa+dVz64UAAYTI+RwJeEt0=","exportNames":["*"]}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/AppState","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":198,"column":8,"index":6059},"end":{"line":205,"column":5,"index":6273}}],"key":"JfCM6WRyn2619+pzBJhEHd1+SSw=","exportNames":["*"],"isOptional":true}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useWebSocket = exports.WebSocketProvider = void 0;\n  var _env2 = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var _AuthContext = require(_dependencyMap[2], \"./AuthContext\");\n  var _jsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"/app/frontend/src/contexts/WebSocketContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const WebSocketContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const WebSocketProvider = ({\n    children\n  }) => {\n    _s();\n    const {\n      user\n    } = (0, _AuthContext.useAuth)();\n    const [isConnected, setIsConnected] = (0, _react.useState)(false);\n    const [connectionStatus, setConnectionStatus] = (0, _react.useState)('disconnected');\n    const wsRef = (0, _react.useRef)(null);\n    const messageCallbacksRef = (0, _react.useRef)([]);\n    const reconnectTimeoutRef = (0, _react.useRef)(null);\n    const reconnectAttemptsRef = (0, _react.useRef)(0);\n    const maxReconnectAttempts = 5;\n    const getWebSocketUrl = () => {\n      if (!user) return null;\n\n      // Get base URL from environment or use default\n      const baseUrl = _env2.env.EXPO_PUBLIC_API_URL || 'http://localhost:8001';\n      const wsUrl = baseUrl.replace('http://', 'ws://').replace('https://', 'wss://');\n      return `${wsUrl}/ws/${user.id}`;\n    };\n    const connect = () => {\n      const wsUrl = getWebSocketUrl();\n      if (!wsUrl) return;\n      try {\n        setConnectionStatus('connecting');\n        wsRef.current = new WebSocket(wsUrl);\n        wsRef.current.onopen = () => {\n          console.log('✅ WebSocket connected');\n          setIsConnected(true);\n          setConnectionStatus('connected');\n          reconnectAttemptsRef.current = 0;\n\n          // Send initial connection message\n          sendMessage({\n            type: 'connection',\n            user_id: user?.id,\n            timestamp: new Date().toISOString()\n          });\n        };\n        wsRef.current.onmessage = event => {\n          try {\n            const message = JSON.parse(event.data);\n            console.log('📨 WebSocket message received:', message);\n\n            // Notify all registered callbacks\n            messageCallbacksRef.current.forEach(callback => {\n              try {\n                callback(message);\n              } catch (error) {\n                console.error('Error in message callback:', error);\n              }\n            });\n          } catch (error) {\n            console.error('Error parsing WebSocket message:', error);\n          }\n        };\n        wsRef.current.onclose = event => {\n          console.log('🔌 WebSocket disconnected:', event.code, event.reason);\n          setIsConnected(false);\n          setConnectionStatus('disconnected');\n\n          // Attempt to reconnect if not intentionally closed\n          if (event.code !== 1000 && reconnectAttemptsRef.current < maxReconnectAttempts) {\n            const delay = Math.min(1000 * Math.pow(2, reconnectAttemptsRef.current), 30000);\n            console.log(`🔄 Attempting to reconnect in ${delay}ms (attempt ${reconnectAttemptsRef.current + 1}/${maxReconnectAttempts})`);\n            reconnectTimeoutRef.current = setTimeout(() => {\n              reconnectAttemptsRef.current++;\n              connect();\n            }, delay);\n          }\n        };\n        wsRef.current.onerror = error => {\n          console.error('❌ WebSocket error:', error);\n          setConnectionStatus('error');\n        };\n      } catch (error) {\n        console.error('Error creating WebSocket connection:', error);\n        setConnectionStatus('error');\n      }\n    };\n    const disconnect = () => {\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n      if (wsRef.current) {\n        wsRef.current.close(1000, 'User disconnected');\n        wsRef.current = null;\n      }\n      setIsConnected(false);\n      setConnectionStatus('disconnected');\n    };\n    const sendMessage = message => {\n      if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n        try {\n          wsRef.current.send(JSON.stringify(message));\n          console.log('📤 WebSocket message sent:', message);\n        } catch (error) {\n          console.error('Error sending WebSocket message:', error);\n        }\n      } else {\n        console.warn('⚠️ WebSocket not connected. Message not sent:', message);\n      }\n    };\n    const onMessage = callback => {\n      messageCallbacksRef.current.push(callback);\n\n      // Return unsubscribe function\n      return () => {\n        const index = messageCallbacksRef.current.indexOf(callback);\n        if (index > -1) {\n          messageCallbacksRef.current.splice(index, 1);\n        }\n      };\n    };\n\n    // Location update helper\n    const sendLocationUpdate = (latitude, longitude) => {\n      sendMessage({\n        type: 'location_update',\n        latitude,\n        longitude,\n        timestamp: new Date().toISOString()\n      });\n    };\n\n    // Provider status update helper\n    const updateProviderStatus = isOnline => {\n      sendMessage({\n        type: 'provider_status',\n        is_online: isOnline,\n        timestamp: new Date().toISOString()\n      });\n    };\n\n    // Service response helper\n    const respondToService = (serviceId, response) => {\n      sendMessage({\n        type: 'service_response',\n        service_id: serviceId,\n        response,\n        timestamp: new Date().toISOString()\n      });\n    };\n\n    // Connect when user is available\n    (0, _react.useEffect)(() => {\n      if (user) {\n        connect();\n      } else {\n        disconnect();\n      }\n\n      // Cleanup on unmount\n      return () => {\n        disconnect();\n      };\n    }, [user]);\n\n    // Auto-reconnect when app comes back to foreground (mobile)\n    (0, _react.useEffect)(() => {\n      const handleAppStateChange = nextAppState => {\n        if (nextAppState === 'active' && user && !isConnected) {\n          connect();\n        }\n      };\n\n      // For React Native\n      try {\n        const AppState = require(_dependencyMap[4], \"react-native-web/dist/exports/AppState\").default;\n        const subscription = AppState.addEventListener('change', handleAppStateChange);\n        return () => {\n          subscription?.remove();\n        };\n      } catch (error) {\n        // Not in React Native environment\n      }\n    }, [user, isConnected]);\n    const contextValue = {\n      isConnected,\n      sendMessage,\n      onMessage,\n      connectionStatus\n    };\n\n    // Add helper methods to the context value\n    contextValue.sendLocationUpdate = sendLocationUpdate;\n    contextValue.updateProviderStatus = updateProviderStatus;\n    contextValue.respondToService = respondToService;\n    return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(WebSocketContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }, this);\n  };\n  exports.WebSocketProvider = WebSocketProvider;\n  _s(WebSocketProvider, \"4+KrjcaN4prbm9oft1cr2PQZMr0=\", false, function () {\n    return [_AuthContext.useAuth];\n  });\n  _c = WebSocketProvider;\n  const useWebSocket = () => {\n    _s2();\n    const context = (0, _react.useContext)(WebSocketContext);\n    if (!context) {\n      throw new Error('useWebSocket must be used within a WebSocketProvider');\n    }\n    return context;\n  };\n  exports.useWebSocket = useWebSocket;\n  _s2(useWebSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"WebSocketProvider\");\n});","lineCount":232,"map":[[7,2,1,0],[7,6,1,0,"_react"],[7,12,1,0],[7,15,1,0,"_interopRequireWildcard"],[7,38,1,0],[7,39,1,0,"require"],[7,46,1,0],[7,47,1,0,"_dependencyMap"],[7,61,1,0],[8,2,2,0],[8,6,2,0,"_AuthContext"],[8,18,2,0],[8,21,2,0,"require"],[8,28,2,0],[8,29,2,0,"_dependencyMap"],[8,43,2,0],[9,2,2,40],[9,6,2,40,"_jsxDevRuntime"],[9,20,2,40],[9,23,2,40,"require"],[9,30,2,40],[9,31,2,40,"_dependencyMap"],[9,45,2,40],[10,2,2,40],[10,6,2,40,"_jsxFileName"],[10,18,2,40],[11,4,2,40,"_s"],[11,6,2,40],[11,9,2,40,"$RefreshSig$"],[11,21,2,40],[12,4,2,40,"_s2"],[12,7,2,40],[12,10,2,40,"$RefreshSig$"],[12,22,2,40],[13,2,2,40],[13,11,2,40,"_interopRequireWildcard"],[13,35,2,40,"e"],[13,36,2,40],[13,38,2,40,"t"],[13,39,2,40],[13,68,2,40,"WeakMap"],[13,75,2,40],[13,81,2,40,"r"],[13,82,2,40],[13,89,2,40,"WeakMap"],[13,96,2,40],[13,100,2,40,"n"],[13,101,2,40],[13,108,2,40,"WeakMap"],[13,115,2,40],[13,127,2,40,"_interopRequireWildcard"],[13,150,2,40],[13,162,2,40,"_interopRequireWildcard"],[13,163,2,40,"e"],[13,164,2,40],[13,166,2,40,"t"],[13,167,2,40],[13,176,2,40,"t"],[13,177,2,40],[13,181,2,40,"e"],[13,182,2,40],[13,186,2,40,"e"],[13,187,2,40],[13,188,2,40,"__esModule"],[13,198,2,40],[13,207,2,40,"e"],[13,208,2,40],[13,214,2,40,"o"],[13,215,2,40],[13,217,2,40,"i"],[13,218,2,40],[13,220,2,40,"f"],[13,221,2,40],[13,226,2,40,"__proto__"],[13,235,2,40],[13,243,2,40,"default"],[13,250,2,40],[13,252,2,40,"e"],[13,253,2,40],[13,270,2,40,"e"],[13,271,2,40],[13,294,2,40,"e"],[13,295,2,40],[13,320,2,40,"e"],[13,321,2,40],[13,330,2,40,"f"],[13,331,2,40],[13,337,2,40,"o"],[13,338,2,40],[13,341,2,40,"t"],[13,342,2,40],[13,345,2,40,"n"],[13,346,2,40],[13,349,2,40,"r"],[13,350,2,40],[13,358,2,40,"o"],[13,359,2,40],[13,360,2,40,"has"],[13,363,2,40],[13,364,2,40,"e"],[13,365,2,40],[13,375,2,40,"o"],[13,376,2,40],[13,377,2,40,"get"],[13,380,2,40],[13,381,2,40,"e"],[13,382,2,40],[13,385,2,40,"o"],[13,386,2,40],[13,387,2,40,"set"],[13,390,2,40],[13,391,2,40,"e"],[13,392,2,40],[13,394,2,40,"f"],[13,395,2,40],[13,411,2,40,"t"],[13,412,2,40],[13,416,2,40,"e"],[13,417,2,40],[13,433,2,40,"t"],[13,434,2,40],[13,441,2,40,"hasOwnProperty"],[13,455,2,40],[13,456,2,40,"call"],[13,460,2,40],[13,461,2,40,"e"],[13,462,2,40],[13,464,2,40,"t"],[13,465,2,40],[13,472,2,40,"i"],[13,473,2,40],[13,477,2,40,"o"],[13,478,2,40],[13,481,2,40,"Object"],[13,487,2,40],[13,488,2,40,"defineProperty"],[13,502,2,40],[13,507,2,40,"Object"],[13,513,2,40],[13,514,2,40,"getOwnPropertyDescriptor"],[13,538,2,40],[13,539,2,40,"e"],[13,540,2,40],[13,542,2,40,"t"],[13,543,2,40],[13,550,2,40,"i"],[13,551,2,40],[13,552,2,40,"get"],[13,555,2,40],[13,559,2,40,"i"],[13,560,2,40],[13,561,2,40,"set"],[13,564,2,40],[13,568,2,40,"o"],[13,569,2,40],[13,570,2,40,"f"],[13,571,2,40],[13,573,2,40,"t"],[13,574,2,40],[13,576,2,40,"i"],[13,577,2,40],[13,581,2,40,"f"],[13,582,2,40],[13,583,2,40,"t"],[13,584,2,40],[13,588,2,40,"e"],[13,589,2,40],[13,590,2,40,"t"],[13,591,2,40],[13,602,2,40,"f"],[13,603,2,40],[13,608,2,40,"e"],[13,609,2,40],[13,611,2,40,"t"],[13,612,2,40],[14,2,17,0],[14,8,17,6,"WebSocketContext"],[14,24,17,22],[14,40,17,25],[14,44,17,25,"createContext"],[14,64,17,38],[14,66,17,73,"undefined"],[14,75,17,82],[14,76,17,83],[15,2,19,7],[15,8,19,13,"WebSocketProvider"],[15,25,19,71],[15,28,19,74,"WebSocketProvider"],[15,29,19,75],[16,4,19,77,"children"],[17,2,19,86],[17,3,19,87],[17,8,19,92],[18,4,19,92,"_s"],[18,6,19,92],[19,4,20,2],[19,10,20,8],[20,6,20,10,"user"],[21,4,20,15],[21,5,20,16],[21,8,20,19],[21,12,20,19,"useAuth"],[21,32,20,26],[21,34,20,27],[21,35,20,28],[22,4,21,2],[22,10,21,8],[22,11,21,9,"isConnected"],[22,22,21,20],[22,24,21,22,"setIsConnected"],[22,38,21,36],[22,39,21,37],[22,42,21,40],[22,46,21,40,"useState"],[22,61,21,48],[22,63,21,49],[22,68,21,54],[22,69,21,55],[23,4,22,2],[23,10,22,8],[23,11,22,9,"connectionStatus"],[23,27,22,25],[23,29,22,27,"setConnectionStatus"],[23,48,22,46],[23,49,22,47],[23,52,22,50],[23,56,22,50,"useState"],[23,71,22,58],[23,73,22,114],[23,87,22,128],[23,88,22,129],[24,4,23,2],[24,10,23,8,"wsRef"],[24,15,23,13],[24,18,23,16],[24,22,23,16,"useRef"],[24,35,23,22],[24,37,23,41],[24,41,23,45],[24,42,23,46],[25,4,24,2],[25,10,24,8,"messageCallbacksRef"],[25,29,24,27],[25,32,24,30],[25,36,24,30,"useRef"],[25,49,24,36],[25,51,24,81],[25,53,24,83],[25,54,24,84],[26,4,25,2],[26,10,25,8,"reconnectTimeoutRef"],[26,29,25,27],[26,32,25,30],[26,36,25,30,"useRef"],[26,49,25,36],[26,51,25,60],[26,55,25,64],[26,56,25,65],[27,4,26,2],[27,10,26,8,"reconnectAttemptsRef"],[27,30,26,28],[27,33,26,31],[27,37,26,31,"useRef"],[27,50,26,37],[27,52,26,38],[27,53,26,39],[27,54,26,40],[28,4,27,2],[28,10,27,8,"maxReconnectAttempts"],[28,30,27,28],[28,33,27,31],[28,34,27,32],[29,4,29,2],[29,10,29,8,"getWebSocketUrl"],[29,25,29,23],[29,28,29,26,"getWebSocketUrl"],[29,29,29,26],[29,34,29,32],[30,6,30,4],[30,10,30,8],[30,11,30,9,"user"],[30,15,30,13],[30,17,30,15],[30,24,30,22],[30,28,30,26],[32,6,32,4],[33,6,33,4],[33,12,33,10,"baseUrl"],[33,19,33,17],[33,22,33,20,"_env2"],[33,27,33,20],[33,28,33,20,"env"],[33,31,33,20],[33,32,33,20,"EXPO_PUBLIC_API_URL"],[33,51,33,20],[33,55,33,55],[33,78,33,78],[34,6,34,4],[34,12,34,10,"wsUrl"],[34,17,34,15],[34,20,34,18,"baseUrl"],[34,27,34,25],[34,28,34,26,"replace"],[34,35,34,33],[34,36,34,34],[34,45,34,43],[34,47,34,45],[34,54,34,52],[34,55,34,53],[34,56,34,54,"replace"],[34,63,34,61],[34,64,34,62],[34,74,34,72],[34,76,34,74],[34,84,34,82],[34,85,34,83],[35,6,35,4],[35,13,35,11],[35,16,35,14,"wsUrl"],[35,21,35,19],[35,28,35,26,"user"],[35,32,35,30],[35,33,35,31,"id"],[35,35,35,33],[35,37,35,35],[36,4,36,2],[36,5,36,3],[37,4,38,2],[37,10,38,8,"connect"],[37,17,38,15],[37,20,38,18,"connect"],[37,21,38,18],[37,26,38,24],[38,6,39,4],[38,12,39,10,"wsUrl"],[38,17,39,15],[38,20,39,18,"getWebSocketUrl"],[38,35,39,33],[38,36,39,34],[38,37,39,35],[39,6,40,4],[39,10,40,8],[39,11,40,9,"wsUrl"],[39,16,40,14],[39,18,40,16],[40,6,42,4],[40,10,42,8],[41,8,43,6,"setConnectionStatus"],[41,27,43,25],[41,28,43,26],[41,40,43,38],[41,41,43,39],[42,8,44,6,"wsRef"],[42,13,44,11],[42,14,44,12,"current"],[42,21,44,19],[42,24,44,22],[42,28,44,26,"WebSocket"],[42,37,44,35],[42,38,44,36,"wsUrl"],[42,43,44,41],[42,44,44,42],[43,8,46,6,"wsRef"],[43,13,46,11],[43,14,46,12,"current"],[43,21,46,19],[43,22,46,20,"onopen"],[43,28,46,26],[43,31,46,29],[43,37,46,35],[44,10,47,8,"console"],[44,17,47,15],[44,18,47,16,"log"],[44,21,47,19],[44,22,47,20],[44,45,47,43],[44,46,47,44],[45,10,48,8,"setIsConnected"],[45,24,48,22],[45,25,48,23],[45,29,48,27],[45,30,48,28],[46,10,49,8,"setConnectionStatus"],[46,29,49,27],[46,30,49,28],[46,41,49,39],[46,42,49,40],[47,10,50,8,"reconnectAttemptsRef"],[47,30,50,28],[47,31,50,29,"current"],[47,38,50,36],[47,41,50,39],[47,42,50,40],[49,10,52,8],[50,10,53,8,"sendMessage"],[50,21,53,19],[50,22,53,20],[51,12,54,10,"type"],[51,16,54,14],[51,18,54,16],[51,30,54,28],[52,12,55,10,"user_id"],[52,19,55,17],[52,21,55,19,"user"],[52,25,55,23],[52,27,55,25,"id"],[52,29,55,27],[53,12,56,10,"timestamp"],[53,21,56,19],[53,23,56,21],[53,27,56,25,"Date"],[53,31,56,29],[53,32,56,30],[53,33,56,31],[53,34,56,32,"toISOString"],[53,45,56,43],[53,46,56,44],[54,10,57,8],[54,11,57,9],[54,12,57,10],[55,8,58,6],[55,9,58,7],[56,8,60,6,"wsRef"],[56,13,60,11],[56,14,60,12,"current"],[56,21,60,19],[56,22,60,20,"onmessage"],[56,31,60,29],[56,34,60,33,"event"],[56,39,60,38],[56,43,60,43],[57,10,61,8],[57,14,61,12],[58,12,62,10],[58,18,62,16,"message"],[58,25,62,41],[58,28,62,44,"JSON"],[58,32,62,48],[58,33,62,49,"parse"],[58,38,62,54],[58,39,62,55,"event"],[58,44,62,60],[58,45,62,61,"data"],[58,49,62,65],[58,50,62,66],[59,12,63,10,"console"],[59,19,63,17],[59,20,63,18,"log"],[59,23,63,21],[59,24,63,22],[59,56,63,54],[59,58,63,56,"message"],[59,65,63,63],[59,66,63,64],[61,12,65,10],[62,12,66,10,"messageCallbacksRef"],[62,31,66,29],[62,32,66,30,"current"],[62,39,66,37],[62,40,66,38,"forEach"],[62,47,66,45],[62,48,66,46,"callback"],[62,56,66,54],[62,60,66,58],[63,14,67,12],[63,18,67,16],[64,16,68,14,"callback"],[64,24,68,22],[64,25,68,23,"message"],[64,32,68,30],[64,33,68,31],[65,14,69,12],[65,15,69,13],[65,16,69,14],[65,23,69,21,"error"],[65,28,69,26],[65,30,69,28],[66,16,70,14,"console"],[66,23,70,21],[66,24,70,22,"error"],[66,29,70,27],[66,30,70,28],[66,58,70,56],[66,60,70,58,"error"],[66,65,70,63],[66,66,70,64],[67,14,71,12],[68,12,72,10],[68,13,72,11],[68,14,72,12],[69,10,73,8],[69,11,73,9],[69,12,73,10],[69,19,73,17,"error"],[69,24,73,22],[69,26,73,24],[70,12,74,10,"console"],[70,19,74,17],[70,20,74,18,"error"],[70,25,74,23],[70,26,74,24],[70,60,74,58],[70,62,74,60,"error"],[70,67,74,65],[70,68,74,66],[71,10,75,8],[72,8,76,6],[72,9,76,7],[73,8,78,6,"wsRef"],[73,13,78,11],[73,14,78,12,"current"],[73,21,78,19],[73,22,78,20,"onclose"],[73,29,78,27],[73,32,78,31,"event"],[73,37,78,36],[73,41,78,41],[74,10,79,8,"console"],[74,17,79,15],[74,18,79,16,"log"],[74,21,79,19],[74,22,79,20],[74,50,79,48],[74,52,79,50,"event"],[74,57,79,55],[74,58,79,56,"code"],[74,62,79,60],[74,64,79,62,"event"],[74,69,79,67],[74,70,79,68,"reason"],[74,76,79,74],[74,77,79,75],[75,10,80,8,"setIsConnected"],[75,24,80,22],[75,25,80,23],[75,30,80,28],[75,31,80,29],[76,10,81,8,"setConnectionStatus"],[76,29,81,27],[76,30,81,28],[76,44,81,42],[76,45,81,43],[78,10,83,8],[79,10,84,8],[79,14,84,12,"event"],[79,19,84,17],[79,20,84,18,"code"],[79,24,84,22],[79,29,84,27],[79,33,84,31],[79,37,84,35,"reconnectAttemptsRef"],[79,57,84,55],[79,58,84,56,"current"],[79,65,84,63],[79,68,84,66,"maxReconnectAttempts"],[79,88,84,86],[79,90,84,88],[80,12,85,10],[80,18,85,16,"delay"],[80,23,85,21],[80,26,85,24,"Math"],[80,30,85,28],[80,31,85,29,"min"],[80,34,85,32],[80,35,85,33],[80,39,85,37],[80,42,85,40,"Math"],[80,46,85,44],[80,47,85,45,"pow"],[80,50,85,48],[80,51,85,49],[80,52,85,50],[80,54,85,52,"reconnectAttemptsRef"],[80,74,85,72],[80,75,85,73,"current"],[80,82,85,80],[80,83,85,81],[80,85,85,83],[80,90,85,88],[80,91,85,89],[81,12,86,10,"console"],[81,19,86,17],[81,20,86,18,"log"],[81,23,86,21],[81,24,86,22],[81,57,86,55,"delay"],[81,62,86,60],[81,77,86,75,"reconnectAttemptsRef"],[81,97,86,95],[81,98,86,96,"current"],[81,105,86,103],[81,108,86,106],[81,109,86,107],[81,113,86,111,"maxReconnectAttempts"],[81,133,86,131],[81,136,86,134],[81,137,86,135],[82,12,88,10,"reconnectTimeoutRef"],[82,31,88,29],[82,32,88,30,"current"],[82,39,88,37],[82,42,88,40,"setTimeout"],[82,52,88,50],[82,53,88,51],[82,59,88,57],[83,14,89,12,"reconnectAttemptsRef"],[83,34,89,32],[83,35,89,33,"current"],[83,42,89,40],[83,44,89,42],[84,14,90,12,"connect"],[84,21,90,19],[84,22,90,20],[84,23,90,21],[85,12,91,10],[85,13,91,11],[85,15,91,13,"delay"],[85,20,91,18],[85,21,91,19],[86,10,92,8],[87,8,93,6],[87,9,93,7],[88,8,95,6,"wsRef"],[88,13,95,11],[88,14,95,12,"current"],[88,21,95,19],[88,22,95,20,"onerror"],[88,29,95,27],[88,32,95,31,"error"],[88,37,95,36],[88,41,95,41],[89,10,96,8,"console"],[89,17,96,15],[89,18,96,16,"error"],[89,23,96,21],[89,24,96,22],[89,44,96,42],[89,46,96,44,"error"],[89,51,96,49],[89,52,96,50],[90,10,97,8,"setConnectionStatus"],[90,29,97,27],[90,30,97,28],[90,37,97,35],[90,38,97,36],[91,8,98,6],[91,9,98,7],[92,6,100,4],[92,7,100,5],[92,8,100,6],[92,15,100,13,"error"],[92,20,100,18],[92,22,100,20],[93,8,101,6,"console"],[93,15,101,13],[93,16,101,14,"error"],[93,21,101,19],[93,22,101,20],[93,60,101,58],[93,62,101,60,"error"],[93,67,101,65],[93,68,101,66],[94,8,102,6,"setConnectionStatus"],[94,27,102,25],[94,28,102,26],[94,35,102,33],[94,36,102,34],[95,6,103,4],[96,4,104,2],[96,5,104,3],[97,4,106,2],[97,10,106,8,"disconnect"],[97,20,106,18],[97,23,106,21,"disconnect"],[97,24,106,21],[97,29,106,27],[98,6,107,4],[98,10,107,8,"reconnectTimeoutRef"],[98,29,107,27],[98,30,107,28,"current"],[98,37,107,35],[98,39,107,37],[99,8,108,6,"clearTimeout"],[99,20,108,18],[99,21,108,19,"reconnectTimeoutRef"],[99,40,108,38],[99,41,108,39,"current"],[99,48,108,46],[99,49,108,47],[100,8,109,6,"reconnectTimeoutRef"],[100,27,109,25],[100,28,109,26,"current"],[100,35,109,33],[100,38,109,36],[100,42,109,40],[101,6,110,4],[102,6,112,4],[102,10,112,8,"wsRef"],[102,15,112,13],[102,16,112,14,"current"],[102,23,112,21],[102,25,112,23],[103,8,113,6,"wsRef"],[103,13,113,11],[103,14,113,12,"current"],[103,21,113,19],[103,22,113,20,"close"],[103,27,113,25],[103,28,113,26],[103,32,113,30],[103,34,113,32],[103,53,113,51],[103,54,113,52],[104,8,114,6,"wsRef"],[104,13,114,11],[104,14,114,12,"current"],[104,21,114,19],[104,24,114,22],[104,28,114,26],[105,6,115,4],[106,6,117,4,"setIsConnected"],[106,20,117,18],[106,21,117,19],[106,26,117,24],[106,27,117,25],[107,6,118,4,"setConnectionStatus"],[107,25,118,23],[107,26,118,24],[107,40,118,38],[107,41,118,39],[108,4,119,2],[108,5,119,3],[109,4,121,2],[109,10,121,8,"sendMessage"],[109,21,121,19],[109,24,121,23,"message"],[109,31,121,35],[109,35,121,40],[110,6,122,4],[110,10,122,8,"wsRef"],[110,15,122,13],[110,16,122,14,"current"],[110,23,122,21],[110,27,122,25,"wsRef"],[110,32,122,30],[110,33,122,31,"current"],[110,40,122,38],[110,41,122,39,"readyState"],[110,51,122,49],[110,56,122,54,"WebSocket"],[110,65,122,63],[110,66,122,64,"OPEN"],[110,70,122,68],[110,72,122,70],[111,8,123,6],[111,12,123,10],[112,10,124,8,"wsRef"],[112,15,124,13],[112,16,124,14,"current"],[112,23,124,21],[112,24,124,22,"send"],[112,28,124,26],[112,29,124,27,"JSON"],[112,33,124,31],[112,34,124,32,"stringify"],[112,43,124,41],[112,44,124,42,"message"],[112,51,124,49],[112,52,124,50],[112,53,124,51],[113,10,125,8,"console"],[113,17,125,15],[113,18,125,16,"log"],[113,21,125,19],[113,22,125,20],[113,50,125,48],[113,52,125,50,"message"],[113,59,125,57],[113,60,125,58],[114,8,126,6],[114,9,126,7],[114,10,126,8],[114,17,126,15,"error"],[114,22,126,20],[114,24,126,22],[115,10,127,8,"console"],[115,17,127,15],[115,18,127,16,"error"],[115,23,127,21],[115,24,127,22],[115,58,127,56],[115,60,127,58,"error"],[115,65,127,63],[115,66,127,64],[116,8,128,6],[117,6,129,4],[117,7,129,5],[117,13,129,11],[118,8,130,6,"console"],[118,15,130,13],[118,16,130,14,"warn"],[118,20,130,18],[118,21,130,19],[118,68,130,66],[118,70,130,68,"message"],[118,77,130,75],[118,78,130,76],[119,6,131,4],[120,4,132,2],[120,5,132,3],[121,4,134,2],[121,10,134,8,"onMessage"],[121,19,134,17],[121,22,134,21,"callback"],[121,30,134,66],[121,34,134,71],[122,6,135,4,"messageCallbacksRef"],[122,25,135,23],[122,26,135,24,"current"],[122,33,135,31],[122,34,135,32,"push"],[122,38,135,36],[122,39,135,37,"callback"],[122,47,135,45],[122,48,135,46],[124,6,137,4],[125,6,138,4],[125,13,138,11],[125,19,138,17],[126,8,139,6],[126,14,139,12,"index"],[126,19,139,17],[126,22,139,20,"messageCallbacksRef"],[126,41,139,39],[126,42,139,40,"current"],[126,49,139,47],[126,50,139,48,"indexOf"],[126,57,139,55],[126,58,139,56,"callback"],[126,66,139,64],[126,67,139,65],[127,8,140,6],[127,12,140,10,"index"],[127,17,140,15],[127,20,140,18],[127,21,140,19],[127,22,140,20],[127,24,140,22],[128,10,141,8,"messageCallbacksRef"],[128,29,141,27],[128,30,141,28,"current"],[128,37,141,35],[128,38,141,36,"splice"],[128,44,141,42],[128,45,141,43,"index"],[128,50,141,48],[128,52,141,50],[128,53,141,51],[128,54,141,52],[129,8,142,6],[130,6,143,4],[130,7,143,5],[131,4,144,2],[131,5,144,3],[133,4,146,2],[134,4,147,2],[134,10,147,8,"sendLocationUpdate"],[134,28,147,26],[134,31,147,29,"sendLocationUpdate"],[134,32,147,30,"latitude"],[134,40,147,46],[134,42,147,48,"longitude"],[134,51,147,65],[134,56,147,70],[135,6,148,4,"sendMessage"],[135,17,148,15],[135,18,148,16],[136,8,149,6,"type"],[136,12,149,10],[136,14,149,12],[136,31,149,29],[137,8,150,6,"latitude"],[137,16,150,14],[138,8,151,6,"longitude"],[138,17,151,15],[139,8,152,6,"timestamp"],[139,17,152,15],[139,19,152,17],[139,23,152,21,"Date"],[139,27,152,25],[139,28,152,26],[139,29,152,27],[139,30,152,28,"toISOString"],[139,41,152,39],[139,42,152,40],[140,6,153,4],[140,7,153,5],[140,8,153,6],[141,4,154,2],[141,5,154,3],[143,4,156,2],[144,4,157,2],[144,10,157,8,"updateProviderStatus"],[144,30,157,28],[144,33,157,32,"isOnline"],[144,41,157,49],[144,45,157,54],[145,6,158,4,"sendMessage"],[145,17,158,15],[145,18,158,16],[146,8,159,6,"type"],[146,12,159,10],[146,14,159,12],[146,31,159,29],[147,8,160,6,"is_online"],[147,17,160,15],[147,19,160,17,"isOnline"],[147,27,160,25],[148,8,161,6,"timestamp"],[148,17,161,15],[148,19,161,17],[148,23,161,21,"Date"],[148,27,161,25],[148,28,161,26],[148,29,161,27],[148,30,161,28,"toISOString"],[148,41,161,39],[148,42,161,40],[149,6,162,4],[149,7,162,5],[149,8,162,6],[150,4,163,2],[150,5,163,3],[152,4,165,2],[153,4,166,2],[153,10,166,8,"respondToService"],[153,26,166,24],[153,29,166,27,"respondToService"],[153,30,166,28,"serviceId"],[153,39,166,45],[153,41,166,47,"response"],[153,49,166,76],[153,54,166,81],[154,6,167,4,"sendMessage"],[154,17,167,15],[154,18,167,16],[155,8,168,6,"type"],[155,12,168,10],[155,14,168,12],[155,32,168,30],[156,8,169,6,"service_id"],[156,18,169,16],[156,20,169,18,"serviceId"],[156,29,169,27],[157,8,170,6,"response"],[157,16,170,14],[158,8,171,6,"timestamp"],[158,17,171,15],[158,19,171,17],[158,23,171,21,"Date"],[158,27,171,25],[158,28,171,26],[158,29,171,27],[158,30,171,28,"toISOString"],[158,41,171,39],[158,42,171,40],[159,6,172,4],[159,7,172,5],[159,8,172,6],[160,4,173,2],[160,5,173,3],[162,4,175,2],[163,4,176,2],[163,8,176,2,"useEffect"],[163,24,176,11],[163,26,176,12],[163,32,176,18],[164,6,177,4],[164,10,177,8,"user"],[164,14,177,12],[164,16,177,14],[165,8,178,6,"connect"],[165,15,178,13],[165,16,178,14],[165,17,178,15],[166,6,179,4],[166,7,179,5],[166,13,179,11],[167,8,180,6,"disconnect"],[167,18,180,16],[167,19,180,17],[167,20,180,18],[168,6,181,4],[170,6,183,4],[171,6,184,4],[171,13,184,11],[171,19,184,17],[172,8,185,6,"disconnect"],[172,18,185,16],[172,19,185,17],[172,20,185,18],[173,6,186,4],[173,7,186,5],[174,4,187,2],[174,5,187,3],[174,7,187,5],[174,8,187,6,"user"],[174,12,187,10],[174,13,187,11],[174,14,187,12],[176,4,189,2],[177,4,190,2],[177,8,190,2,"useEffect"],[177,24,190,11],[177,26,190,12],[177,32,190,18],[178,6,191,4],[178,12,191,10,"handleAppStateChange"],[178,32,191,30],[178,35,191,34,"nextAppState"],[178,47,191,54],[178,51,191,59],[179,8,192,6],[179,12,192,10,"nextAppState"],[179,24,192,22],[179,29,192,27],[179,37,192,35],[179,41,192,39,"user"],[179,45,192,43],[179,49,192,47],[179,50,192,48,"isConnected"],[179,61,192,59],[179,63,192,61],[180,10,193,8,"connect"],[180,17,193,15],[180,18,193,16],[180,19,193,17],[181,8,194,6],[182,6,195,4],[182,7,195,5],[184,6,197,4],[185,6,198,4],[185,10,198,8],[186,8,198,8],[186,14,198,8,"AppState"],[186,22,198,8],[186,25,198,8,"require"],[186,32,198,8],[186,33,198,8,"_dependencyMap"],[186,47,198,8],[186,94,198,8,"default"],[186,101,198,8],[187,8,200,6],[187,14,200,12,"subscription"],[187,26,200,24],[187,29,200,27,"AppState"],[187,37,200,35],[187,38,200,36,"addEventListener"],[187,54,200,52],[187,55,200,53],[187,63,200,61],[187,65,200,63,"handleAppStateChange"],[187,85,200,83],[187,86,200,84],[188,8,202,6],[188,15,202,13],[188,21,202,19],[189,10,203,8,"subscription"],[189,22,203,20],[189,24,203,22,"remove"],[189,30,203,28],[189,31,203,29],[189,32,203,30],[190,8,204,6],[190,9,204,7],[191,6,205,4],[191,7,205,5],[191,8,205,6],[191,15,205,13,"error"],[191,20,205,18],[191,22,205,20],[192,8,206,6],[193,6,206,6],[194,4,208,2],[194,5,208,3],[194,7,208,5],[194,8,208,6,"user"],[194,12,208,10],[194,14,208,12,"isConnected"],[194,25,208,23],[194,26,208,24],[194,27,208,25],[195,4,210,2],[195,10,210,8,"contextValue"],[195,22,210,42],[195,25,210,45],[196,6,211,4,"isConnected"],[196,17,211,15],[197,6,212,4,"sendMessage"],[197,17,212,15],[198,6,213,4,"onMessage"],[198,15,213,13],[199,6,214,4,"connectionStatus"],[200,4,215,2],[200,5,215,3],[202,4,217,2],[203,4,218,3,"contextValue"],[203,16,218,15],[203,17,218,24,"sendLocationUpdate"],[203,35,218,42],[203,38,218,45,"sendLocationUpdate"],[203,56,218,63],[204,4,219,3,"contextValue"],[204,16,219,15],[204,17,219,24,"updateProviderStatus"],[204,37,219,44],[204,40,219,47,"updateProviderStatus"],[204,60,219,67],[205,4,220,3,"contextValue"],[205,16,220,15],[205,17,220,24,"respondToService"],[205,33,220,40],[205,36,220,43,"respondToService"],[205,52,220,59],[206,4,222,2],[206,24,223,4],[206,28,223,4,"_jsxDevRuntime"],[206,42,223,4],[206,43,223,4,"jsxDEV"],[206,49,223,4],[206,51,223,5,"WebSocketContext"],[206,67,223,21],[206,68,223,22,"Provider"],[206,76,223,30],[207,6,223,31,"value"],[207,11,223,36],[207,13,223,38,"contextValue"],[207,25,223,51],[208,6,223,51,"children"],[208,14,223,51],[208,16,224,7,"children"],[209,4,224,15],[210,6,224,15,"fileName"],[210,14,224,15],[210,16,224,15,"_jsxFileName"],[210,28,224,15],[211,6,224,15,"lineNumber"],[211,16,224,15],[212,6,224,15,"columnNumber"],[212,18,224,15],[213,4,224,15],[213,11,225,31],[213,12,225,32],[214,2,227,0],[214,3,227,1],[215,2,227,2,"exports"],[215,9,227,2],[215,10,227,2,"WebSocketProvider"],[215,27,227,2],[215,30,227,2,"WebSocketProvider"],[215,47,227,2],[216,2,227,2,"_s"],[216,4,227,2],[216,5,19,13,"WebSocketProvider"],[216,22,19,71],[217,4,19,71],[217,12,20,19,"useAuth"],[217,32,20,26],[218,2,20,26],[219,2,20,26,"_c"],[219,4,20,26],[219,7,19,13,"WebSocketProvider"],[219,24,19,71],[220,2,229,7],[220,8,229,13,"useWebSocket"],[220,20,229,25],[220,23,229,28,"useWebSocket"],[220,24,229,28],[220,29,233,5],[221,4,233,5,"_s2"],[221,7,233,5],[222,4,234,2],[222,10,234,8,"context"],[222,17,234,15],[222,20,234,18],[222,24,234,18,"useContext"],[222,41,234,28],[222,43,234,29,"WebSocketContext"],[222,59,234,45],[222,60,234,46],[223,4,235,2],[223,8,235,6],[223,9,235,7,"context"],[223,16,235,14],[223,18,235,16],[224,6,236,4],[224,12,236,10],[224,16,236,14,"Error"],[224,21,236,19],[224,22,236,20],[224,76,236,74],[224,77,236,75],[225,4,237,2],[226,4,238,2],[226,11,238,9,"context"],[226,18,238,16],[227,2,239,0],[227,3,239,1],[228,2,239,2,"exports"],[228,9,239,2],[228,10,239,2,"useWebSocket"],[228,22,239,2],[228,25,239,2,"useWebSocket"],[228,37,239,2],[229,2,239,2,"_s2"],[229,5,239,2],[229,6,229,13,"useWebSocket"],[229,18,229,25],[230,2,229,25],[230,6,229,25,"_c"],[230,8,229,25],[231,2,229,25,"$RefreshReg$"],[231,14,229,25],[231,15,229,25,"_c"],[231,17,229,25],[232,0,229,25],[232,3]],"functionMap":{"names":["<global>","WebSocketProvider","getWebSocketUrl","connect","wsRef.current.onopen","wsRef.current.onmessage","messageCallbacksRef.current.forEach$argument_0","wsRef.current.onclose","setTimeout$argument_0","wsRef.current.onerror","disconnect","sendMessage","onMessage","<anonymous>","sendLocationUpdate","updateProviderStatus","respondToService","useEffect$argument_0","handleAppStateChange","useWebSocket"],"mappings":"AAA;0ECkB;0BCU;GDO;kBEE;6BCQ;ODY;gCEE;8CCM;WDM;OFI;8BIE;mDCU;WDG;OJE;8BME;ONG;GFM;qBSE;GTa;sBUE;GVW;oBWE;WCI;KDK;GXC;6BaG;GbO;+BcG;GdM;2BeG;GfO;YgBG;WJQ;KIE;GhBC;YgBG;iCCC;KDI;aJO;OIE;GhBI;CDmB;4BmBE;CnBU"}},"type":"js/module"}]}