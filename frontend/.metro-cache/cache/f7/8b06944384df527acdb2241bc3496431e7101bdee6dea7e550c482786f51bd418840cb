{"dependencies":[{"name":"./ring_buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":17,"index":32},"end":{"line":3,"column":41,"index":56}}],"key":"Z/QYm52/JCo8EwOg+ZdzaUofuzE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var RingBuffer = require(_dependencyMap[0], \"./ring_buffer\");\n  var Functor = function (session, method) {\n    this._session = session;\n    this._method = method;\n    this._queue = new RingBuffer(Functor.QUEUE_SIZE);\n    this._stopped = false;\n    this.pending = 0;\n  };\n  Functor.QUEUE_SIZE = 8;\n  Functor.prototype.call = function (error, message, callback, context) {\n    if (this._stopped) return;\n    var record = {\n        error: error,\n        message: message,\n        callback: callback,\n        context: context,\n        done: false\n      },\n      called = false,\n      self = this;\n    this._queue.push(record);\n    if (record.error) {\n      record.done = true;\n      this._stop();\n      return this._flushQueue();\n    }\n    var handler = function (err, msg) {\n      if (!(called ^ (called = true))) return;\n      if (err) {\n        self._stop();\n        record.error = err;\n        record.message = null;\n      } else {\n        record.message = msg;\n      }\n      record.done = true;\n      self._flushQueue();\n    };\n    try {\n      this._session[this._method](message, handler);\n    } catch (err) {\n      handler(err);\n    }\n  };\n  Functor.prototype._stop = function () {\n    this.pending = this._queue.length;\n    this._stopped = true;\n  };\n  Functor.prototype._flushQueue = function () {\n    var queue = this._queue,\n      record;\n    while (queue.length > 0 && queue.peek().done) {\n      record = queue.shift();\n      if (record.error) {\n        this.pending = 0;\n        queue.clear();\n      } else {\n        this.pending -= 1;\n      }\n      record.callback.call(record.context, record.error, record.message);\n    }\n  };\n  module.exports = Functor;\n});","lineCount":67,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"RingBuffer"],[4,16,3,14],[4,19,3,17,"require"],[4,26,3,24],[4,27,3,24,"_dependencyMap"],[4,41,3,24],[4,61,3,40],[4,62,3,41],[5,2,5,0],[5,6,5,4,"Functor"],[5,13,5,11],[5,16,5,14],[5,25,5,14,"Functor"],[5,26,5,23,"session"],[5,33,5,30],[5,35,5,32,"method"],[5,41,5,38],[5,43,5,40],[6,4,6,2],[6,8,6,6],[6,9,6,7,"_session"],[6,17,6,15],[6,20,6,18,"session"],[6,27,6,25],[7,4,7,2],[7,8,7,6],[7,9,7,7,"_method"],[7,16,7,14],[7,19,7,18,"method"],[7,25,7,24],[8,4,8,2],[8,8,8,6],[8,9,8,7,"_queue"],[8,15,8,13],[8,18,8,18],[8,22,8,22,"RingBuffer"],[8,32,8,32],[8,33,8,33,"Functor"],[8,40,8,40],[8,41,8,41,"QUEUE_SIZE"],[8,51,8,51],[8,52,8,52],[9,4,9,2],[9,8,9,6],[9,9,9,7,"_stopped"],[9,17,9,15],[9,20,9,18],[9,25,9,23],[10,4,10,2],[10,8,10,6],[10,9,10,7,"pending"],[10,16,10,14],[10,19,10,18],[10,20,10,19],[11,2,11,0],[11,3,11,1],[12,2,13,0,"Functor"],[12,9,13,7],[12,10,13,8,"QUEUE_SIZE"],[12,20,13,18],[12,23,13,21],[12,24,13,22],[13,2,15,0,"Functor"],[13,9,15,7],[13,10,15,8,"prototype"],[13,19,15,17],[13,20,15,18,"call"],[13,24,15,22],[13,27,15,25],[13,37,15,34,"error"],[13,42,15,39],[13,44,15,41,"message"],[13,51,15,48],[13,53,15,50,"callback"],[13,61,15,58],[13,63,15,60,"context"],[13,70,15,67],[13,72,15,69],[14,4,16,2],[14,8,16,6],[14,12,16,10],[14,13,16,11,"_stopped"],[14,21,16,19],[14,23,16,21],[15,4,18,2],[15,8,18,6,"record"],[15,14,18,12],[15,17,18,15],[16,8,18,17,"error"],[16,13,18,22],[16,15,18,24,"error"],[16,20,18,29],[17,8,18,31,"message"],[17,15,18,38],[17,17,18,40,"message"],[17,24,18,47],[18,8,18,49,"callback"],[18,16,18,57],[18,18,18,59,"callback"],[18,26,18,67],[19,8,18,69,"context"],[19,15,18,76],[19,17,18,78,"context"],[19,24,18,85],[20,8,18,87,"done"],[20,12,18,91],[20,14,18,93],[21,6,18,99],[21,7,18,100],[22,6,19,6,"called"],[22,12,19,12],[22,15,19,15],[22,20,19,20],[23,6,20,6,"self"],[23,10,20,10],[23,13,20,15],[23,17,20,19],[24,4,22,2],[24,8,22,6],[24,9,22,7,"_queue"],[24,15,22,13],[24,16,22,14,"push"],[24,20,22,18],[24,21,22,19,"record"],[24,27,22,25],[24,28,22,26],[25,4,24,2],[25,8,24,6,"record"],[25,14,24,12],[25,15,24,13,"error"],[25,20,24,18],[25,22,24,20],[26,6,25,4,"record"],[26,12,25,10],[26,13,25,11,"done"],[26,17,25,15],[26,20,25,18],[26,24,25,22],[27,6,26,4],[27,10,26,8],[27,11,26,9,"_stop"],[27,16,26,14],[27,17,26,15],[27,18,26,16],[28,6,27,4],[28,13,27,11],[28,17,27,15],[28,18,27,16,"_flushQueue"],[28,29,27,27],[28,30,27,28],[28,31,27,29],[29,4,28,2],[30,4,30,2],[30,8,30,6,"handler"],[30,15,30,13],[30,18,30,16],[30,27,30,16,"handler"],[30,28,30,25,"err"],[30,31,30,28],[30,33,30,30,"msg"],[30,36,30,33],[30,38,30,35],[31,6,31,4],[31,10,31,8],[31,12,31,10,"called"],[31,18,31,16],[31,22,31,20,"called"],[31,28,31,26],[31,31,31,29],[31,35,31,33],[31,36,31,34],[31,37,31,35],[31,39,31,37],[32,6,33,4],[32,10,33,8,"err"],[32,13,33,11],[32,15,33,13],[33,8,34,6,"self"],[33,12,34,10],[33,13,34,11,"_stop"],[33,18,34,16],[33,19,34,17],[33,20,34,18],[34,8,35,6,"record"],[34,14,35,12],[34,15,35,13,"error"],[34,20,35,18],[34,23,35,23,"err"],[34,26,35,26],[35,8,36,6,"record"],[35,14,36,12],[35,15,36,13,"message"],[35,22,36,20],[35,25,36,23],[35,29,36,27],[36,6,37,4],[36,7,37,5],[36,13,37,11],[37,8,38,6,"record"],[37,14,38,12],[37,15,38,13,"message"],[37,22,38,20],[37,25,38,23,"msg"],[37,28,38,26],[38,6,39,4],[39,6,41,4,"record"],[39,12,41,10],[39,13,41,11,"done"],[39,17,41,15],[39,20,41,18],[39,24,41,22],[40,6,42,4,"self"],[40,10,42,8],[40,11,42,9,"_flushQueue"],[40,22,42,20],[40,23,42,21],[40,24,42,22],[41,4,43,2],[41,5,43,3],[42,4,45,2],[42,8,45,6],[43,6,46,4],[43,10,46,8],[43,11,46,9,"_session"],[43,19,46,17],[43,20,46,18],[43,24,46,22],[43,25,46,23,"_method"],[43,32,46,30],[43,33,46,31],[43,34,46,32,"message"],[43,41,46,39],[43,43,46,41,"handler"],[43,50,46,48],[43,51,46,49],[44,4,47,2],[44,5,47,3],[44,6,47,4],[44,13,47,11,"err"],[44,16,47,14],[44,18,47,16],[45,6,48,4,"handler"],[45,13,48,11],[45,14,48,12,"err"],[45,17,48,15],[45,18,48,16],[46,4,49,2],[47,2,50,0],[47,3,50,1],[48,2,52,0,"Functor"],[48,9,52,7],[48,10,52,8,"prototype"],[48,19,52,17],[48,20,52,18,"_stop"],[48,25,52,23],[48,28,52,26],[48,40,52,37],[49,4,53,2],[49,8,53,6],[49,9,53,7,"pending"],[49,16,53,14],[49,19,53,18],[49,23,53,22],[49,24,53,23,"_queue"],[49,30,53,29],[49,31,53,30,"length"],[49,37,53,36],[50,4,54,2],[50,8,54,6],[50,9,54,7,"_stopped"],[50,17,54,15],[50,20,54,18],[50,24,54,22],[51,2,55,0],[51,3,55,1],[52,2,57,0,"Functor"],[52,9,57,7],[52,10,57,8,"prototype"],[52,19,57,17],[52,20,57,18,"_flushQueue"],[52,31,57,29],[52,34,57,32],[52,46,57,43],[53,4,58,2],[53,8,58,6,"queue"],[53,13,58,11],[53,16,58,14],[53,20,58,18],[53,21,58,19,"_queue"],[53,27,58,25],[54,6,58,27,"record"],[54,12,58,33],[55,4,60,2],[55,11,60,9,"queue"],[55,16,60,14],[55,17,60,15,"length"],[55,23,60,21],[55,26,60,24],[55,27,60,25],[55,31,60,29,"queue"],[55,36,60,34],[55,37,60,35,"peek"],[55,41,60,39],[55,42,60,40],[55,43,60,41],[55,44,60,42,"done"],[55,48,60,46],[55,50,60,48],[56,6,61,4,"record"],[56,12,61,10],[56,15,61,13,"queue"],[56,20,61,18],[56,21,61,19,"shift"],[56,26,61,24],[56,27,61,25],[56,28,61,26],[57,6,62,4],[57,10,62,8,"record"],[57,16,62,14],[57,17,62,15,"error"],[57,22,62,20],[57,24,62,22],[58,8,63,6],[58,12,63,10],[58,13,63,11,"pending"],[58,20,63,18],[58,23,63,21],[58,24,63,22],[59,8,64,6,"queue"],[59,13,64,11],[59,14,64,12,"clear"],[59,19,64,17],[59,20,64,18],[59,21,64,19],[60,6,65,4],[60,7,65,5],[60,13,65,11],[61,8,66,6],[61,12,66,10],[61,13,66,11,"pending"],[61,20,66,18],[61,24,66,22],[61,25,66,23],[62,6,67,4],[63,6,68,4,"record"],[63,12,68,10],[63,13,68,11,"callback"],[63,21,68,19],[63,22,68,20,"call"],[63,26,68,24],[63,27,68,25,"record"],[63,33,68,31],[63,34,68,32,"context"],[63,41,68,39],[63,43,68,41,"record"],[63,49,68,47],[63,50,68,48,"error"],[63,55,68,53],[63,57,68,55,"record"],[63,63,68,61],[63,64,68,62,"message"],[63,71,68,69],[63,72,68,70],[64,4,69,2],[65,2,70,0],[65,3,70,1],[66,2,72,0,"module"],[66,8,72,6],[66,9,72,7,"exports"],[66,16,72,14],[66,19,72,17,"Functor"],[66,26,72,24],[67,0,72,25],[67,3]],"functionMap":{"names":["<global>","Functor","Functor.prototype.call","handler","Functor.prototype._stop","Functor.prototype._flushQueue"],"mappings":"AAA;cCI;CDM;yBEI;gBCe;GDa;CFO;0BIE;CJG;gCKE;CLa"}},"type":"js/module"}]}