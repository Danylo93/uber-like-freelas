{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":57,"index":57}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../contexts/WebSocketContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":58},"end":{"line":2,"column":78,"index":136}}],"key":"RXtWqdqDCzQ/KmE1Xu4nrP0NWpQ=","exportNames":["*"]}},{"name":"../contexts/AuthContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":137},"end":{"line":3,"column":50,"index":187}}],"key":"oNCgyH4yx4pAIVZXLqqRGB2kuCY=","exportNames":["*"]}},{"name":"../services/api","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":188},"end":{"line":4,"column":45,"index":233}}],"key":"Pr5/EB33W7mJGi+ygccy+pUf1E8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useRealTimeService = void 0;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _WebSocketContext = require(_dependencyMap[1], \"../contexts/WebSocketContext\");\n  var _AuthContext = require(_dependencyMap[2], \"../contexts/AuthContext\");\n  var _api = require(_dependencyMap[3], \"../services/api\");\n  var _s = $RefreshSig$();\n  const useRealTimeService = () => {\n    _s();\n    const {\n      user\n    } = (0, _AuthContext.useAuth)();\n    const {\n      isConnected,\n      onMessage,\n      sendMessage,\n      sendLocationUpdate,\n      updateProviderStatus,\n      respondToService\n    } = (0, _WebSocketContext.useWebSocket)();\n    const [activeService, setActiveService] = (0, _react.useState)(null);\n    const [incomingRequests, setIncomingRequests] = (0, _react.useState)([]);\n    const [receivedOffers, setReceivedOffers] = (0, _react.useState)([]);\n    const [isProviderOnline, setIsProviderOnline] = (0, _react.useState)(false);\n    const [nearbyProviders, setNearbyProviders] = (0, _react.useState)([]);\n\n    // Handle incoming WebSocket messages\n    (0, _react.useEffect)(() => {\n      if (!isConnected) return;\n      const unsubscribe = onMessage(message => {\n        console.log('ðŸ”” Real-time service message:', message);\n        switch (message.type) {\n          case 'new_service_request':\n            handleNewServiceRequest(message.data.service);\n            break;\n          case 'service_status_update':\n            handleServiceStatusUpdate(message.data);\n            break;\n          case 'service_offer':\n            handleServiceOffer(message.data);\n            break;\n          case 'provider_status_change':\n            handleProviderStatusChange(message.data);\n            break;\n          case 'location_update':\n            handleLocationUpdate(message.data);\n            break;\n          default:\n            console.log('Unhandled message type:', message.type);\n        }\n      });\n      return unsubscribe;\n    }, [isConnected]);\n    const handleNewServiceRequest = service => {\n      // Only show to providers\n      if (user?.role === 'provider' && isProviderOnline) {\n        setIncomingRequests(prev => {\n          // Avoid duplicates\n          if (prev.find(req => req.id === service.id)) {\n            return prev;\n          }\n          return [...prev, service];\n        });\n\n        // Auto-remove after 30 seconds if not responded\n        setTimeout(() => {\n          setIncomingRequests(prev => prev.filter(req => req.id !== service.id));\n        }, 30000);\n      }\n    };\n    const handleServiceStatusUpdate = data => {\n      const {\n        service_id,\n        status,\n        service\n      } = data;\n      if (activeService && activeService.id === service_id) {\n        setActiveService(prev => prev ? {\n          ...prev,\n          status,\n          ...service\n        } : null);\n      }\n    };\n    const handleServiceOffer = offer => {\n      // Only show to clients\n      if (user?.role === 'client') {\n        setReceivedOffers(prev => {\n          // Avoid duplicates\n          if (prev.find(o => o.id === offer.id)) {\n            return prev;\n          }\n          return [...prev, offer];\n        });\n      }\n    };\n    const handleProviderStatusChange = data => {\n      const {\n        provider_id,\n        is_online\n      } = data;\n      setNearbyProviders(prev => prev.map(provider => provider.id === provider_id ? {\n        ...provider,\n        is_online\n      } : provider));\n    };\n    const handleLocationUpdate = data => {\n      const {\n        user_id,\n        latitude,\n        longitude\n      } = data;\n\n      // Update provider location if tracking active service\n      if (activeService && activeService.provider_id === user_id) {\n        setActiveService(prev => prev ? {\n          ...prev,\n          provider_location: {\n            latitude,\n            longitude\n          }\n        } : null);\n      }\n    };\n\n    // Client functions\n    const createServiceRequest = async serviceData => {\n      try {\n        const response = await _api.apiService.post('/services/requests', serviceData);\n        const newService = response.data;\n        setActiveService(newService);\n        return newService;\n      } catch (error) {\n        console.error('Error creating service request:', error);\n        throw error;\n      }\n    };\n    const acceptOffer = async offerId => {\n      try {\n        const response = await _api.apiService.post(`/services/offers/${offerId}/accept`);\n        const acceptedService = response.data;\n        setActiveService(acceptedService);\n\n        // Clear other offers\n        setReceivedOffers([]);\n        return acceptedService;\n      } catch (error) {\n        console.error('Error accepting offer:', error);\n        throw error;\n      }\n    };\n    const cancelService = async () => {\n      if (!activeService) return;\n      try {\n        await _api.apiService.put(`/services/requests/${activeService.id}/status`, {\n          status: 'cancelled'\n        });\n        setActiveService(null);\n      } catch (error) {\n        console.error('Error cancelling service:', error);\n        throw error;\n      }\n    };\n\n    // Provider functions\n    const toggleProviderStatus = async online => {\n      try {\n        await _api.apiService.put('/providers/status', {\n          is_online: online\n        });\n        setIsProviderOnline(online);\n        updateProviderStatus(online);\n      } catch (error) {\n        console.error('Error updating provider status:', error);\n        throw error;\n      }\n    };\n    const acceptServiceRequest = async serviceId => {\n      try {\n        respondToService(serviceId, 'accept');\n\n        // Remove from incoming requests\n        setIncomingRequests(prev => prev.filter(req => req.id !== serviceId));\n\n        // Set as active service\n        const service = incomingRequests.find(req => req.id === serviceId);\n        if (service) {\n          setActiveService({\n            ...service,\n            status: 'accepted',\n            provider_id: user?.id\n          });\n        }\n      } catch (error) {\n        console.error('Error accepting service request:', error);\n        throw error;\n      }\n    };\n    const rejectServiceRequest = async serviceId => {\n      try {\n        respondToService(serviceId, 'reject');\n\n        // Remove from incoming requests\n        setIncomingRequests(prev => prev.filter(req => req.id !== serviceId));\n      } catch (error) {\n        console.error('Error rejecting service request:', error);\n        throw error;\n      }\n    };\n    const updateServiceStatus = async status => {\n      if (!activeService) return;\n      try {\n        await _api.apiService.put(`/services/requests/${activeService.id}/status`, {\n          status\n        });\n        setActiveService(prev => prev ? {\n          ...prev,\n          status\n        } : null);\n\n        // Clear active service if completed or cancelled\n        if (status === 'completed' || status === 'cancelled') {\n          setTimeout(() => setActiveService(null), 2000);\n        }\n      } catch (error) {\n        console.error('Error updating service status:', error);\n        throw error;\n      }\n    };\n\n    // Location tracking\n    const startLocationTracking = (0, _react.useCallback)(() => {\n      if (!navigator.geolocation) return;\n      const watchId = navigator.geolocation.watchPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        sendLocationUpdate(latitude, longitude);\n      }, error => {\n        console.error('Location tracking error:', error);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 60000\n      });\n      return () => {\n        navigator.geolocation.clearWatch(watchId);\n      };\n    }, [sendLocationUpdate]);\n\n    // Load nearby providers for clients\n    const loadNearbyProviders = async (latitude, longitude) => {\n      try {\n        const params = new URLSearchParams();\n        if (latitude) params.append('latitude', latitude.toString());\n        if (longitude) params.append('longitude', longitude.toString());\n        const response = await _api.apiService.get(`/providers/nearby?${params.toString()}`);\n        setNearbyProviders(response.data.providers || []);\n      } catch (error) {\n        console.error('Error loading nearby providers:', error);\n      }\n    };\n    return {\n      // State\n      activeService,\n      incomingRequests,\n      receivedOffers,\n      isProviderOnline,\n      nearbyProviders,\n      isConnected,\n      // Client functions\n      createServiceRequest,\n      acceptOffer,\n      cancelService,\n      loadNearbyProviders,\n      // Provider functions\n      toggleProviderStatus,\n      acceptServiceRequest,\n      rejectServiceRequest,\n      updateServiceStatus,\n      // Location tracking\n      startLocationTracking\n    };\n  };\n  exports.useRealTimeService = useRealTimeService;\n  _s(useRealTimeService, \"i8lc8jTC+wD80V/gJZ8MoBlPtng=\", false, function () {\n    return [_AuthContext.useAuth, _WebSocketContext.useWebSocket];\n  });\n});","lineCount":293,"map":[[6,2,1,0],[6,6,1,0,"_react"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,2,0],[7,6,2,0,"_WebSocketContext"],[7,23,2,0],[7,26,2,0,"require"],[7,33,2,0],[7,34,2,0,"_dependencyMap"],[7,48,2,0],[8,2,3,0],[8,6,3,0,"_AuthContext"],[8,18,3,0],[8,21,3,0,"require"],[8,28,3,0],[8,29,3,0,"_dependencyMap"],[8,43,3,0],[9,2,4,0],[9,6,4,0,"_api"],[9,10,4,0],[9,13,4,0,"require"],[9,20,4,0],[9,21,4,0,"_dependencyMap"],[9,35,4,0],[10,2,4,45],[10,6,4,45,"_s"],[10,8,4,45],[10,11,4,45,"$RefreshSig$"],[10,23,4,45],[11,2,36,7],[11,8,36,13,"useRealTimeService"],[11,26,36,31],[11,29,36,34,"useRealTimeService"],[11,30,36,34],[11,35,36,40],[12,4,36,40,"_s"],[12,6,36,40],[13,4,37,2],[13,10,37,8],[14,6,37,10,"user"],[15,4,37,15],[15,5,37,16],[15,8,37,19],[15,12,37,19,"useAuth"],[15,32,37,26],[15,34,37,27],[15,35,37,28],[16,4,38,2],[16,10,38,8],[17,6,38,10,"isConnected"],[17,17,38,21],[18,6,38,23,"onMessage"],[18,15,38,32],[19,6,38,34,"sendMessage"],[19,17,38,45],[20,6,38,47,"sendLocationUpdate"],[20,24,38,65],[21,6,38,67,"updateProviderStatus"],[21,26,38,87],[22,6,38,89,"respondToService"],[23,4,38,106],[23,5,38,107],[23,8,38,110],[23,12,38,110,"useWebSocket"],[23,42,38,122],[23,44,38,123],[23,45,38,124],[24,4,40,2],[24,10,40,8],[24,11,40,9,"activeService"],[24,24,40,22],[24,26,40,24,"setActiveService"],[24,42,40,40],[24,43,40,41],[24,46,40,44],[24,50,40,44,"useState"],[24,65,40,52],[24,67,40,76],[24,71,40,80],[24,72,40,81],[25,4,41,2],[25,10,41,8],[25,11,41,9,"incomingRequests"],[25,27,41,25],[25,29,41,27,"setIncomingRequests"],[25,48,41,46],[25,49,41,47],[25,52,41,50],[25,56,41,50,"useState"],[25,71,41,58],[25,73,41,77],[25,75,41,79],[25,76,41,80],[26,4,42,2],[26,10,42,8],[26,11,42,9,"receivedOffers"],[26,25,42,23],[26,27,42,25,"setReceivedOffers"],[26,44,42,42],[26,45,42,43],[26,48,42,46],[26,52,42,46,"useState"],[26,67,42,54],[26,69,42,71],[26,71,42,73],[26,72,42,74],[27,4,43,2],[27,10,43,8],[27,11,43,9,"isProviderOnline"],[27,27,43,25],[27,29,43,27,"setIsProviderOnline"],[27,48,43,46],[27,49,43,47],[27,52,43,50],[27,56,43,50,"useState"],[27,71,43,58],[27,73,43,59],[27,78,43,64],[27,79,43,65],[28,4,44,2],[28,10,44,8],[28,11,44,9,"nearbyProviders"],[28,26,44,24],[28,28,44,26,"setNearbyProviders"],[28,46,44,44],[28,47,44,45],[28,50,44,48],[28,54,44,48,"useState"],[28,69,44,56],[28,71,44,64],[28,73,44,66],[28,74,44,67],[30,4,46,2],[31,4,47,2],[31,8,47,2,"useEffect"],[31,24,47,11],[31,26,47,12],[31,32,47,18],[32,6,48,4],[32,10,48,8],[32,11,48,9,"isConnected"],[32,22,48,20],[32,24,48,22],[33,6,50,4],[33,12,50,10,"unsubscribe"],[33,23,50,21],[33,26,50,24,"onMessage"],[33,35,50,33],[33,36,50,35,"message"],[33,43,50,60],[33,47,50,65],[34,8,51,6,"console"],[34,15,51,13],[34,16,51,14,"log"],[34,19,51,17],[34,20,51,18],[34,51,51,49],[34,53,51,51,"message"],[34,60,51,58],[34,61,51,59],[35,8,53,6],[35,16,53,14,"message"],[35,23,53,21],[35,24,53,22,"type"],[35,28,53,26],[36,10,54,8],[36,15,54,13],[36,36,54,34],[37,12,55,10,"handleNewServiceRequest"],[37,35,55,33],[37,36,55,34,"message"],[37,43,55,41],[37,44,55,42,"data"],[37,48,55,46],[37,49,55,47,"service"],[37,56,55,54],[37,57,55,55],[38,12,56,10],[39,10,58,8],[39,15,58,13],[39,38,58,36],[40,12,59,10,"handleServiceStatusUpdate"],[40,37,59,35],[40,38,59,36,"message"],[40,45,59,43],[40,46,59,44,"data"],[40,50,59,48],[40,51,59,49],[41,12,60,10],[42,10,62,8],[42,15,62,13],[42,30,62,28],[43,12,63,10,"handleServiceOffer"],[43,30,63,28],[43,31,63,29,"message"],[43,38,63,36],[43,39,63,37,"data"],[43,43,63,41],[43,44,63,42],[44,12,64,10],[45,10,66,8],[45,15,66,13],[45,39,66,37],[46,12,67,10,"handleProviderStatusChange"],[46,38,67,36],[46,39,67,37,"message"],[46,46,67,44],[46,47,67,45,"data"],[46,51,67,49],[46,52,67,50],[47,12,68,10],[48,10,70,8],[48,15,70,13],[48,32,70,30],[49,12,71,10,"handleLocationUpdate"],[49,32,71,30],[49,33,71,31,"message"],[49,40,71,38],[49,41,71,39,"data"],[49,45,71,43],[49,46,71,44],[50,12,72,10],[51,10,74,8],[52,12,75,10,"console"],[52,19,75,17],[52,20,75,18,"log"],[52,23,75,21],[52,24,75,22],[52,49,75,47],[52,51,75,49,"message"],[52,58,75,56],[52,59,75,57,"type"],[52,63,75,61],[52,64,75,62],[53,8,76,6],[54,6,77,4],[54,7,77,5],[54,8,77,6],[55,6,79,4],[55,13,79,11,"unsubscribe"],[55,24,79,22],[56,4,80,2],[56,5,80,3],[56,7,80,5],[56,8,80,6,"isConnected"],[56,19,80,17],[56,20,80,18],[56,21,80,19],[57,4,82,2],[57,10,82,8,"handleNewServiceRequest"],[57,33,82,31],[57,36,82,35,"service"],[57,43,82,58],[57,47,82,63],[58,6,83,4],[59,6,84,4],[59,10,84,8,"user"],[59,14,84,12],[59,16,84,14,"role"],[59,20,84,18],[59,25,84,23],[59,35,84,33],[59,39,84,37,"isProviderOnline"],[59,55,84,53],[59,57,84,55],[60,8,85,6,"setIncomingRequests"],[60,27,85,25],[60,28,85,26,"prev"],[60,32,85,30],[60,36,85,34],[61,10,86,8],[62,10,87,8],[62,14,87,12,"prev"],[62,18,87,16],[62,19,87,17,"find"],[62,23,87,21],[62,24,87,22,"req"],[62,27,87,25],[62,31,87,29,"req"],[62,34,87,32],[62,35,87,33,"id"],[62,37,87,35],[62,42,87,40,"service"],[62,49,87,47],[62,50,87,48,"id"],[62,52,87,50],[62,53,87,51],[62,55,87,53],[63,12,88,10],[63,19,88,17,"prev"],[63,23,88,21],[64,10,89,8],[65,10,90,8],[65,17,90,15],[65,18,90,16],[65,21,90,19,"prev"],[65,25,90,23],[65,27,90,25,"service"],[65,34,90,32],[65,35,90,33],[66,8,91,6],[66,9,91,7],[66,10,91,8],[68,8,93,6],[69,8,94,6,"setTimeout"],[69,18,94,16],[69,19,94,17],[69,25,94,23],[70,10,95,8,"setIncomingRequests"],[70,29,95,27],[70,30,95,28,"prev"],[70,34,95,32],[70,38,95,36,"prev"],[70,42,95,40],[70,43,95,41,"filter"],[70,49,95,47],[70,50,95,48,"req"],[70,53,95,51],[70,57,95,55,"req"],[70,60,95,58],[70,61,95,59,"id"],[70,63,95,61],[70,68,95,66,"service"],[70,75,95,73],[70,76,95,74,"id"],[70,78,95,76],[70,79,95,77],[70,80,95,78],[71,8,96,6],[71,9,96,7],[71,11,96,9],[71,16,96,14],[71,17,96,15],[72,6,97,4],[73,4,98,2],[73,5,98,3],[74,4,100,2],[74,10,100,8,"handleServiceStatusUpdate"],[74,35,100,33],[74,38,100,37,"data"],[74,42,100,46],[74,46,100,51],[75,6,101,4],[75,12,101,10],[76,8,101,12,"service_id"],[76,18,101,22],[77,8,101,24,"status"],[77,14,101,30],[78,8,101,32,"service"],[79,6,101,40],[79,7,101,41],[79,10,101,44,"data"],[79,14,101,48],[80,6,103,4],[80,10,103,8,"activeService"],[80,23,103,21],[80,27,103,25,"activeService"],[80,40,103,38],[80,41,103,39,"id"],[80,43,103,41],[80,48,103,46,"service_id"],[80,58,103,56],[80,60,103,58],[81,8,104,6,"setActiveService"],[81,24,104,22],[81,25,104,23,"prev"],[81,29,104,27],[81,33,104,31,"prev"],[81,37,104,35],[81,40,104,38],[82,10,104,40],[82,13,104,43,"prev"],[82,17,104,47],[83,10,104,49,"status"],[83,16,104,55],[84,10,104,57],[84,13,104,60,"service"],[85,8,104,68],[85,9,104,69],[85,12,104,72],[85,16,104,76],[85,17,104,77],[86,6,105,4],[87,4,106,2],[87,5,106,3],[88,4,108,2],[88,10,108,8,"handleServiceOffer"],[88,28,108,26],[88,31,108,30,"offer"],[88,36,108,49],[88,40,108,54],[89,6,109,4],[90,6,110,4],[90,10,110,8,"user"],[90,14,110,12],[90,16,110,14,"role"],[90,20,110,18],[90,25,110,23],[90,33,110,31],[90,35,110,33],[91,8,111,6,"setReceivedOffers"],[91,25,111,23],[91,26,111,24,"prev"],[91,30,111,28],[91,34,111,32],[92,10,112,8],[93,10,113,8],[93,14,113,12,"prev"],[93,18,113,16],[93,19,113,17,"find"],[93,23,113,21],[93,24,113,22,"o"],[93,25,113,23],[93,29,113,27,"o"],[93,30,113,28],[93,31,113,29,"id"],[93,33,113,31],[93,38,113,36,"offer"],[93,43,113,41],[93,44,113,42,"id"],[93,46,113,44],[93,47,113,45],[93,49,113,47],[94,12,114,10],[94,19,114,17,"prev"],[94,23,114,21],[95,10,115,8],[96,10,116,8],[96,17,116,15],[96,18,116,16],[96,21,116,19,"prev"],[96,25,116,23],[96,27,116,25,"offer"],[96,32,116,30],[96,33,116,31],[97,8,117,6],[97,9,117,7],[97,10,117,8],[98,6,118,4],[99,4,119,2],[99,5,119,3],[100,4,121,2],[100,10,121,8,"handleProviderStatusChange"],[100,36,121,34],[100,39,121,38,"data"],[100,43,121,47],[100,47,121,52],[101,6,122,4],[101,12,122,10],[102,8,122,12,"provider_id"],[102,19,122,23],[103,8,122,25,"is_online"],[104,6,122,35],[104,7,122,36],[104,10,122,39,"data"],[104,14,122,43],[105,6,124,4,"setNearbyProviders"],[105,24,124,22],[105,25,124,23,"prev"],[105,29,124,27],[105,33,125,6,"prev"],[105,37,125,10],[105,38,125,11,"map"],[105,41,125,14],[105,42,125,15,"provider"],[105,50,125,23],[105,54,126,8,"provider"],[105,62,126,16],[105,63,126,17,"id"],[105,65,126,19],[105,70,126,24,"provider_id"],[105,81,126,35],[105,84,127,12],[106,8,127,14],[106,11,127,17,"provider"],[106,19,127,25],[107,8,127,27,"is_online"],[108,6,127,37],[108,7,127,38],[108,10,128,12,"provider"],[108,18,129,6],[108,19,130,4],[108,20,130,5],[109,4,131,2],[109,5,131,3],[110,4,133,2],[110,10,133,8,"handleLocationUpdate"],[110,30,133,28],[110,33,133,32,"data"],[110,37,133,41],[110,41,133,46],[111,6,134,4],[111,12,134,10],[112,8,134,12,"user_id"],[112,15,134,19],[113,8,134,21,"latitude"],[113,16,134,29],[114,8,134,31,"longitude"],[115,6,134,41],[115,7,134,42],[115,10,134,45,"data"],[115,14,134,49],[117,6,136,4],[118,6,137,4],[118,10,137,8,"activeService"],[118,23,137,21],[118,27,137,25,"activeService"],[118,40,137,38],[118,41,137,39,"provider_id"],[118,52,137,50],[118,57,137,55,"user_id"],[118,64,137,62],[118,66,137,64],[119,8,138,6,"setActiveService"],[119,24,138,22],[119,25,138,23,"prev"],[119,29,138,27],[119,33,138,31,"prev"],[119,37,138,35],[119,40,138,38],[120,10,139,8],[120,13,139,11,"prev"],[120,17,139,15],[121,10,140,8,"provider_location"],[121,27,140,25],[121,29,140,27],[122,12,140,29,"latitude"],[122,20,140,37],[123,12,140,39,"longitude"],[124,10,140,49],[125,8,141,6],[125,9,141,7],[125,12,141,10],[125,16,141,14],[125,17,141,15],[126,6,142,4],[127,4,143,2],[127,5,143,3],[129,4,145,2],[130,4,146,2],[130,10,146,8,"createServiceRequest"],[130,30,146,28],[130,33,146,31],[130,39,146,38,"serviceData"],[130,50,150,3],[130,54,150,8],[131,6,151,4],[131,10,151,8],[132,8,152,6],[132,14,152,12,"response"],[132,22,152,20],[132,25,152,23],[132,31,152,29,"apiService"],[132,46,152,39],[132,47,152,40,"post"],[132,51,152,44],[132,52,152,45],[132,72,152,65],[132,74,152,67,"serviceData"],[132,85,152,78],[132,86,152,79],[133,8,153,6],[133,14,153,12,"newService"],[133,24,153,22],[133,27,153,25,"response"],[133,35,153,33],[133,36,153,34,"data"],[133,40,153,38],[134,8,154,6,"setActiveService"],[134,24,154,22],[134,25,154,23,"newService"],[134,35,154,33],[134,36,154,34],[135,8,155,6],[135,15,155,13,"newService"],[135,25,155,23],[136,6,156,4],[136,7,156,5],[136,8,156,6],[136,15,156,13,"error"],[136,20,156,18],[136,22,156,20],[137,8,157,6,"console"],[137,15,157,13],[137,16,157,14,"error"],[137,21,157,19],[137,22,157,20],[137,55,157,53],[137,57,157,55,"error"],[137,62,157,60],[137,63,157,61],[138,8,158,6],[138,14,158,12,"error"],[138,19,158,17],[139,6,159,4],[140,4,160,2],[140,5,160,3],[141,4,162,2],[141,10,162,8,"acceptOffer"],[141,21,162,19],[141,24,162,22],[141,30,162,29,"offerId"],[141,37,162,44],[141,41,162,49],[142,6,163,4],[142,10,163,8],[143,8,164,6],[143,14,164,12,"response"],[143,22,164,20],[143,25,164,23],[143,31,164,29,"apiService"],[143,46,164,39],[143,47,164,40,"post"],[143,51,164,44],[143,52,164,45],[143,72,164,65,"offerId"],[143,79,164,72],[143,88,164,81],[143,89,164,82],[144,8,165,6],[144,14,165,12,"acceptedService"],[144,29,165,27],[144,32,165,30,"response"],[144,40,165,38],[144,41,165,39,"data"],[144,45,165,43],[145,8,166,6,"setActiveService"],[145,24,166,22],[145,25,166,23,"acceptedService"],[145,40,166,38],[145,41,166,39],[147,8,168,6],[148,8,169,6,"setReceivedOffers"],[148,25,169,23],[148,26,169,24],[148,28,169,26],[148,29,169,27],[149,8,171,6],[149,15,171,13,"acceptedService"],[149,30,171,28],[150,6,172,4],[150,7,172,5],[150,8,172,6],[150,15,172,13,"error"],[150,20,172,18],[150,22,172,20],[151,8,173,6,"console"],[151,15,173,13],[151,16,173,14,"error"],[151,21,173,19],[151,22,173,20],[151,46,173,44],[151,48,173,46,"error"],[151,53,173,51],[151,54,173,52],[152,8,174,6],[152,14,174,12,"error"],[152,19,174,17],[153,6,175,4],[154,4,176,2],[154,5,176,3],[155,4,178,2],[155,10,178,8,"cancelService"],[155,23,178,21],[155,26,178,24],[155,32,178,24,"cancelService"],[155,33,178,24],[155,38,178,36],[156,6,179,4],[156,10,179,8],[156,11,179,9,"activeService"],[156,24,179,22],[156,26,179,24],[157,6,181,4],[157,10,181,8],[158,8,182,6],[158,14,182,12,"apiService"],[158,29,182,22],[158,30,182,23,"put"],[158,33,182,26],[158,34,182,27],[158,56,182,49,"activeService"],[158,69,182,62],[158,70,182,63,"id"],[158,72,182,65],[158,81,182,74],[158,83,182,76],[159,10,183,8,"status"],[159,16,183,14],[159,18,183,16],[160,8,184,6],[160,9,184,7],[160,10,184,8],[161,8,186,6,"setActiveService"],[161,24,186,22],[161,25,186,23],[161,29,186,27],[161,30,186,28],[162,6,187,4],[162,7,187,5],[162,8,187,6],[162,15,187,13,"error"],[162,20,187,18],[162,22,187,20],[163,8,188,6,"console"],[163,15,188,13],[163,16,188,14,"error"],[163,21,188,19],[163,22,188,20],[163,49,188,47],[163,51,188,49,"error"],[163,56,188,54],[163,57,188,55],[164,8,189,6],[164,14,189,12,"error"],[164,19,189,17],[165,6,190,4],[166,4,191,2],[166,5,191,3],[168,4,193,2],[169,4,194,2],[169,10,194,8,"toggleProviderStatus"],[169,30,194,28],[169,33,194,31],[169,39,194,38,"online"],[169,45,194,53],[169,49,194,58],[170,6,195,4],[170,10,195,8],[171,8,196,6],[171,14,196,12,"apiService"],[171,29,196,22],[171,30,196,23,"put"],[171,33,196,26],[171,34,196,27],[171,53,196,46],[171,55,196,48],[172,10,196,50,"is_online"],[172,19,196,59],[172,21,196,61,"online"],[173,8,196,68],[173,9,196,69],[173,10,196,70],[174,8,197,6,"setIsProviderOnline"],[174,27,197,25],[174,28,197,26,"online"],[174,34,197,32],[174,35,197,33],[175,8,198,6,"updateProviderStatus"],[175,28,198,26],[175,29,198,27,"online"],[175,35,198,33],[175,36,198,34],[176,6,199,4],[176,7,199,5],[176,8,199,6],[176,15,199,13,"error"],[176,20,199,18],[176,22,199,20],[177,8,200,6,"console"],[177,15,200,13],[177,16,200,14,"error"],[177,21,200,19],[177,22,200,20],[177,55,200,53],[177,57,200,55,"error"],[177,62,200,60],[177,63,200,61],[178,8,201,6],[178,14,201,12,"error"],[178,19,201,17],[179,6,202,4],[180,4,203,2],[180,5,203,3],[181,4,205,2],[181,10,205,8,"acceptServiceRequest"],[181,30,205,28],[181,33,205,31],[181,39,205,38,"serviceId"],[181,48,205,55],[181,52,205,60],[182,6,206,4],[182,10,206,8],[183,8,207,6,"respondToService"],[183,24,207,22],[183,25,207,23,"serviceId"],[183,34,207,32],[183,36,207,34],[183,44,207,42],[183,45,207,43],[185,8,209,6],[186,8,210,6,"setIncomingRequests"],[186,27,210,25],[186,28,210,26,"prev"],[186,32,210,30],[186,36,210,34,"prev"],[186,40,210,38],[186,41,210,39,"filter"],[186,47,210,45],[186,48,210,46,"req"],[186,51,210,49],[186,55,210,53,"req"],[186,58,210,56],[186,59,210,57,"id"],[186,61,210,59],[186,66,210,64,"serviceId"],[186,75,210,73],[186,76,210,74],[186,77,210,75],[188,8,212,6],[189,8,213,6],[189,14,213,12,"service"],[189,21,213,19],[189,24,213,22,"incomingRequests"],[189,40,213,38],[189,41,213,39,"find"],[189,45,213,43],[189,46,213,44,"req"],[189,49,213,47],[189,53,213,51,"req"],[189,56,213,54],[189,57,213,55,"id"],[189,59,213,57],[189,64,213,62,"serviceId"],[189,73,213,71],[189,74,213,72],[190,8,214,6],[190,12,214,10,"service"],[190,19,214,17],[190,21,214,19],[191,10,215,8,"setActiveService"],[191,26,215,24],[191,27,215,25],[192,12,215,27],[192,15,215,30,"service"],[192,22,215,37],[193,12,215,39,"status"],[193,18,215,45],[193,20,215,47],[193,30,215,57],[194,12,215,59,"provider_id"],[194,23,215,70],[194,25,215,72,"user"],[194,29,215,76],[194,31,215,78,"id"],[195,10,215,81],[195,11,215,82],[195,12,215,83],[196,8,216,6],[197,6,217,4],[197,7,217,5],[197,8,217,6],[197,15,217,13,"error"],[197,20,217,18],[197,22,217,20],[198,8,218,6,"console"],[198,15,218,13],[198,16,218,14,"error"],[198,21,218,19],[198,22,218,20],[198,56,218,54],[198,58,218,56,"error"],[198,63,218,61],[198,64,218,62],[199,8,219,6],[199,14,219,12,"error"],[199,19,219,17],[200,6,220,4],[201,4,221,2],[201,5,221,3],[202,4,223,2],[202,10,223,8,"rejectServiceRequest"],[202,30,223,28],[202,33,223,31],[202,39,223,38,"serviceId"],[202,48,223,55],[202,52,223,60],[203,6,224,4],[203,10,224,8],[204,8,225,6,"respondToService"],[204,24,225,22],[204,25,225,23,"serviceId"],[204,34,225,32],[204,36,225,34],[204,44,225,42],[204,45,225,43],[206,8,227,6],[207,8,228,6,"setIncomingRequests"],[207,27,228,25],[207,28,228,26,"prev"],[207,32,228,30],[207,36,228,34,"prev"],[207,40,228,38],[207,41,228,39,"filter"],[207,47,228,45],[207,48,228,46,"req"],[207,51,228,49],[207,55,228,53,"req"],[207,58,228,56],[207,59,228,57,"id"],[207,61,228,59],[207,66,228,64,"serviceId"],[207,75,228,73],[207,76,228,74],[207,77,228,75],[208,6,229,4],[208,7,229,5],[208,8,229,6],[208,15,229,13,"error"],[208,20,229,18],[208,22,229,20],[209,8,230,6,"console"],[209,15,230,13],[209,16,230,14,"error"],[209,21,230,19],[209,22,230,20],[209,56,230,54],[209,58,230,56,"error"],[209,63,230,61],[209,64,230,62],[210,8,231,6],[210,14,231,12,"error"],[210,19,231,17],[211,6,232,4],[212,4,233,2],[212,5,233,3],[213,4,235,2],[213,10,235,8,"updateServiceStatus"],[213,29,235,27],[213,32,235,30],[213,38,235,37,"status"],[213,44,235,69],[213,48,235,74],[214,6,236,4],[214,10,236,8],[214,11,236,9,"activeService"],[214,24,236,22],[214,26,236,24],[215,6,238,4],[215,10,238,8],[216,8,239,6],[216,14,239,12,"apiService"],[216,29,239,22],[216,30,239,23,"put"],[216,33,239,26],[216,34,239,27],[216,56,239,49,"activeService"],[216,69,239,62],[216,70,239,63,"id"],[216,72,239,65],[216,81,239,74],[216,83,239,76],[217,10,239,78,"status"],[218,8,239,85],[218,9,239,86],[218,10,239,87],[219,8,241,6,"setActiveService"],[219,24,241,22],[219,25,241,23,"prev"],[219,29,241,27],[219,33,241,31,"prev"],[219,37,241,35],[219,40,241,38],[220,10,241,40],[220,13,241,43,"prev"],[220,17,241,47],[221,10,241,49,"status"],[222,8,241,56],[222,9,241,57],[222,12,241,60],[222,16,241,64],[222,17,241,65],[224,8,243,6],[225,8,244,6],[225,12,244,10,"status"],[225,18,244,16],[225,23,244,21],[225,34,244,32],[225,38,244,36,"status"],[225,44,244,42],[225,49,244,47],[225,60,244,58],[225,62,244,60],[226,10,245,8,"setTimeout"],[226,20,245,18],[226,21,245,19],[226,27,245,25,"setActiveService"],[226,43,245,41],[226,44,245,42],[226,48,245,46],[226,49,245,47],[226,51,245,49],[226,55,245,53],[226,56,245,54],[227,8,246,6],[228,6,247,4],[228,7,247,5],[228,8,247,6],[228,15,247,13,"error"],[228,20,247,18],[228,22,247,20],[229,8,248,6,"console"],[229,15,248,13],[229,16,248,14,"error"],[229,21,248,19],[229,22,248,20],[229,54,248,52],[229,56,248,54,"error"],[229,61,248,59],[229,62,248,60],[230,8,249,6],[230,14,249,12,"error"],[230,19,249,17],[231,6,250,4],[232,4,251,2],[232,5,251,3],[234,4,253,2],[235,4,254,2],[235,10,254,8,"startLocationTracking"],[235,31,254,29],[235,34,254,32],[235,38,254,32,"useCallback"],[235,56,254,43],[235,58,254,44],[235,64,254,50],[236,6,255,4],[236,10,255,8],[236,11,255,9,"navigator"],[236,20,255,18],[236,21,255,19,"geolocation"],[236,32,255,30],[236,34,255,32],[237,6,257,4],[237,12,257,10,"watchId"],[237,19,257,17],[237,22,257,20,"navigator"],[237,31,257,29],[237,32,257,30,"geolocation"],[237,43,257,41],[237,44,257,42,"watchPosition"],[237,57,257,55],[237,58,258,7,"position"],[237,66,258,15],[237,70,258,20],[238,8,259,8],[238,14,259,14],[239,10,259,16,"latitude"],[239,18,259,24],[240,10,259,26,"longitude"],[241,8,259,36],[241,9,259,37],[241,12,259,40,"position"],[241,20,259,48],[241,21,259,49,"coords"],[241,27,259,55],[242,8,260,8,"sendLocationUpdate"],[242,26,260,26],[242,27,260,27,"latitude"],[242,35,260,35],[242,37,260,37,"longitude"],[242,46,260,46],[242,47,260,47],[243,6,261,6],[243,7,261,7],[243,9,262,7,"error"],[243,14,262,12],[243,18,262,17],[244,8,263,8,"console"],[244,15,263,15],[244,16,263,16,"error"],[244,21,263,21],[244,22,263,22],[244,48,263,48],[244,50,263,50,"error"],[244,55,263,55],[244,56,263,56],[245,6,264,6],[245,7,264,7],[245,9,265,6],[246,8,266,8,"enableHighAccuracy"],[246,26,266,26],[246,28,266,28],[246,32,266,32],[247,8,267,8,"timeout"],[247,15,267,15],[247,17,267,17],[247,22,267,22],[248,8,268,8,"maximumAge"],[248,18,268,18],[248,20,268,20],[249,6,269,6],[249,7,270,4],[249,8,270,5],[250,6,272,4],[250,13,272,11],[250,19,272,17],[251,8,273,6,"navigator"],[251,17,273,15],[251,18,273,16,"geolocation"],[251,29,273,27],[251,30,273,28,"clearWatch"],[251,40,273,38],[251,41,273,39,"watchId"],[251,48,273,46],[251,49,273,47],[252,6,274,4],[252,7,274,5],[253,4,275,2],[253,5,275,3],[253,7,275,5],[253,8,275,6,"sendLocationUpdate"],[253,26,275,24],[253,27,275,25],[253,28,275,26],[255,4,277,2],[256,4,278,2],[256,10,278,8,"loadNearbyProviders"],[256,29,278,27],[256,32,278,30],[256,38,278,30,"loadNearbyProviders"],[256,39,278,37,"latitude"],[256,47,278,54],[256,49,278,56,"longitude"],[256,58,278,74],[256,63,278,79],[257,6,279,4],[257,10,279,8],[258,8,280,6],[258,14,280,12,"params"],[258,20,280,18],[258,23,280,21],[258,27,280,25,"URLSearchParams"],[258,42,280,40],[258,43,280,41],[258,44,280,42],[259,8,281,6],[259,12,281,10,"latitude"],[259,20,281,18],[259,22,281,20,"params"],[259,28,281,26],[259,29,281,27,"append"],[259,35,281,33],[259,36,281,34],[259,46,281,44],[259,48,281,46,"latitude"],[259,56,281,54],[259,57,281,55,"toString"],[259,65,281,63],[259,66,281,64],[259,67,281,65],[259,68,281,66],[260,8,282,6],[260,12,282,10,"longitude"],[260,21,282,19],[260,23,282,21,"params"],[260,29,282,27],[260,30,282,28,"append"],[260,36,282,34],[260,37,282,35],[260,48,282,46],[260,50,282,48,"longitude"],[260,59,282,57],[260,60,282,58,"toString"],[260,68,282,66],[260,69,282,67],[260,70,282,68],[260,71,282,69],[261,8,284,6],[261,14,284,12,"response"],[261,22,284,20],[261,25,284,23],[261,31,284,29,"apiService"],[261,46,284,39],[261,47,284,40,"get"],[261,50,284,43],[261,51,284,44],[261,72,284,65,"params"],[261,78,284,71],[261,79,284,72,"toString"],[261,87,284,80],[261,88,284,81],[261,89,284,82],[261,91,284,84],[261,92,284,85],[262,8,285,6,"setNearbyProviders"],[262,26,285,24],[262,27,285,25,"response"],[262,35,285,33],[262,36,285,34,"data"],[262,40,285,38],[262,41,285,39,"providers"],[262,50,285,48],[262,54,285,52],[262,56,285,54],[262,57,285,55],[263,6,286,4],[263,7,286,5],[263,8,286,6],[263,15,286,13,"error"],[263,20,286,18],[263,22,286,20],[264,8,287,6,"console"],[264,15,287,13],[264,16,287,14,"error"],[264,21,287,19],[264,22,287,20],[264,55,287,53],[264,57,287,55,"error"],[264,62,287,60],[264,63,287,61],[265,6,288,4],[266,4,289,2],[266,5,289,3],[267,4,291,2],[267,11,291,9],[268,6,292,4],[269,6,293,4,"activeService"],[269,19,293,17],[270,6,294,4,"incomingRequests"],[270,22,294,20],[271,6,295,4,"receivedOffers"],[271,20,295,18],[272,6,296,4,"isProviderOnline"],[272,22,296,20],[273,6,297,4,"nearbyProviders"],[273,21,297,19],[274,6,298,4,"isConnected"],[274,17,298,15],[275,6,300,4],[276,6,301,4,"createServiceRequest"],[276,26,301,24],[277,6,302,4,"acceptOffer"],[277,17,302,15],[278,6,303,4,"cancelService"],[278,19,303,17],[279,6,304,4,"loadNearbyProviders"],[279,25,304,23],[280,6,306,4],[281,6,307,4,"toggleProviderStatus"],[281,26,307,24],[282,6,308,4,"acceptServiceRequest"],[282,26,308,24],[283,6,309,4,"rejectServiceRequest"],[283,26,309,24],[284,6,310,4,"updateServiceStatus"],[284,25,310,23],[285,6,312,4],[286,6,313,4,"startLocationTracking"],[287,4,314,2],[287,5,314,3],[288,2,315,0],[288,3,315,1],[289,2,315,2,"exports"],[289,9,315,2],[289,10,315,2,"useRealTimeService"],[289,28,315,2],[289,31,315,2,"useRealTimeService"],[289,49,315,2],[290,2,315,2,"_s"],[290,4,315,2],[290,5,36,13,"useRealTimeService"],[290,23,36,31],[291,4,36,31],[291,12,37,19,"useAuth"],[291,32,37,26],[291,34,38,110,"useWebSocket"],[291,64,38,122],[292,2,38,122],[293,0,38,122],[293,3]],"functionMap":{"names":["<global>","useRealTimeService","useEffect$argument_0","onMessage$argument_0","handleNewServiceRequest","setIncomingRequests$argument_0","prev.find$argument_0","setTimeout$argument_0","prev.filter$argument_0","handleServiceStatusUpdate","setActiveService$argument_0","handleServiceOffer","setReceivedOffers$argument_0","handleProviderStatusChange","setNearbyProviders$argument_0","prev.map$argument_0","handleLocationUpdate","createServiceRequest","acceptOffer","cancelService","toggleProviderStatus","acceptServiceRequest","incomingRequests.find$argument_0","rejectServiceRequest","updateServiceStatus","startLocationTracking","navigator.geolocation.watchPosition$argument_0","navigator.geolocation.watchPosition$argument_1","<anonymous>","loadNearbyProviders"],"mappings":"AAA;kCCmC;YCW;kCCG;KD2B;GDG;kCGE;0BCG;sBCE,4BD;ODI;iBGG;4BFC,oBG,4BH,CE;OHC;GHE;oCQE;uBCI,qDD;GRE;6BUE;wBCG;sBNE,sBM;ODI;GVE;qCYE;uBCG;eCC;oBDG;ODC;GZE;+BeE;uBNK;cMG;GfE;+BgBG;GhBc;sBiBE;GjBc;wBkBE;GlBa;+BmBG;GnBS;+BoBE;0BhBK,oBG,2BH,CgB;4CCG,2BD;GpBQ;+BsBE;0BlBK,oBG,2BH,CkB;GtBK;8BuBE;uBdM,yCc;mBjBI,4BiB;GvBM;4CwBG;MCI;ODG;MEC;OFE;WGQ;KHE;GxBC;8B4BG;G5BW;CD0B"}},"type":"js/module"}]}