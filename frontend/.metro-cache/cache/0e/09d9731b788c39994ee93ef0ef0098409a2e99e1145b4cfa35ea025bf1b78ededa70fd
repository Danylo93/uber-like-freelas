{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../services/googleDirections","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":55},"end":{"line":2,"column":100,"index":155}}],"key":"Mu3y/9XU+lYPWUrA2nyTVt32apM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useDirections = void 0;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _googleDirections = require(_dependencyMap[1], \"../services/googleDirections\");\n  const useDirections = () => {\n    const [routeInfo, setRouteInfo] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(false);\n    const [error, setError] = (0, _react.useState)(null);\n    const [isNavigating, setIsNavigating] = (0, _react.useState)(false);\n    const [currentStepIndex, setCurrentStepIndex] = (0, _react.useState)(0);\n\n    // Store route parameters for recalculation\n    const routeParams = (0, _react.useRef)(null);\n    const currentLocation = (0, _react.useRef)(null);\n    const processDirectionsResponse = (0, _react.useCallback)(route => {\n      const leg = route.legs[0]; // For now, handle single leg routes\n\n      // Process steps into navigation format\n      const steps = leg.steps.map((step, index) => ({\n        id: `step_${index}`,\n        instruction: step.html_instructions.replace(/<[^>]*>/g, ''),\n        // Strip HTML tags\n        distance: step.distance.text,\n        duration: step.duration.text,\n        maneuver: step.maneuver,\n        coordinates: {\n          start: {\n            latitude: step.start_location.lat,\n            longitude: step.start_location.lng\n          },\n          end: {\n            latitude: step.end_location.lat,\n            longitude: step.end_location.lng\n          }\n        }\n      }));\n\n      // Decode polyline for route visualization\n      const polylinePoints = _googleDirections.googleDirectionsService.decodePolyline(route.overview_polyline.points);\n\n      // Calculate ETA\n      const estimatedArrival = _googleDirections.googleDirectionsService.calculateETA(route.duration.value);\n      return {\n        distance: route.distance.text,\n        duration: route.duration.text,\n        estimatedArrival,\n        steps,\n        polylinePoints\n      };\n    }, []);\n    const getRoute = (0, _react.useCallback)(async (origin, destination, waypoints) => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        console.log('🗺️ Getting route from', origin, 'to', destination);\n\n        // Store parameters for potential recalculation\n        routeParams.current = {\n          origin,\n          destination,\n          waypoints\n        };\n        const response = await _googleDirections.googleDirectionsService.getDirections(origin, destination, waypoints, {\n          mode: 'driving',\n          avoidTolls: false,\n          avoidHighways: false\n        });\n        if (response.status !== 'OK' || response.routes.length === 0) {\n          throw new Error(`No route found: ${response.status}`);\n        }\n        const processedRoute = processDirectionsResponse(response.routes[0]);\n        setRouteInfo(processedRoute);\n        setCurrentStepIndex(0);\n        console.log('✅ Route calculated successfully:', processedRoute);\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'Failed to get directions';\n        setError(errorMessage);\n        console.error('❌ Error getting route:', errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    }, [processDirectionsResponse]);\n    const clearRoute = (0, _react.useCallback)(() => {\n      setRouteInfo(null);\n      setError(null);\n      setIsNavigating(false);\n      setCurrentStepIndex(0);\n      routeParams.current = null;\n      currentLocation.current = null;\n      console.log('🗺️ Route cleared');\n    }, []);\n    const startNavigation = (0, _react.useCallback)(() => {\n      if (!routeInfo) {\n        console.warn('⚠️ Cannot start navigation: no route available');\n        return;\n      }\n      setIsNavigating(true);\n      setCurrentStepIndex(0);\n      console.log('🧭 Navigation started');\n    }, [routeInfo]);\n    const stopNavigation = (0, _react.useCallback)(() => {\n      setIsNavigating(false);\n      console.log('🛑 Navigation stopped');\n    }, []);\n    const getCurrentStep = (0, _react.useCallback)(() => {\n      if (!routeInfo || currentStepIndex >= routeInfo.steps.length) {\n        return null;\n      }\n      return routeInfo.steps[currentStepIndex];\n    }, [routeInfo, currentStepIndex]);\n    const getNextStep = (0, _react.useCallback)(() => {\n      if (!routeInfo || currentStepIndex + 1 >= routeInfo.steps.length) {\n        return null;\n      }\n      return routeInfo.steps[currentStepIndex + 1];\n    }, [routeInfo, currentStepIndex]);\n    const updateCurrentLocation = (0, _react.useCallback)(location => {\n      currentLocation.current = location;\n      if (!isNavigating || !routeInfo) return;\n\n      // Simple logic to advance to next step based on proximity\n      const currentStep = getCurrentStep();\n      if (currentStep) {\n        const distanceToEnd = calculateDistance(location, currentStep.coordinates.end);\n\n        // If within 50m of step end, advance to next step\n        if (distanceToEnd < 0.05) {\n          // 50 meters\n          const nextIndex = currentStepIndex + 1;\n          if (nextIndex < routeInfo.steps.length) {\n            setCurrentStepIndex(nextIndex);\n            console.log(`🧭 Advanced to step ${nextIndex + 1}/${routeInfo.steps.length}`);\n          } else {\n            console.log('🎉 Navigation completed!');\n            setIsNavigating(false);\n          }\n        }\n      }\n    }, [isNavigating, routeInfo, getCurrentStep, currentStepIndex]);\n    const recalculateRoute = (0, _react.useCallback)(async () => {\n      if (!routeParams.current || !currentLocation.current) {\n        console.warn('⚠️ Cannot recalculate: missing route parameters or current location');\n        return;\n      }\n      console.log('🔄 Recalculating route from current location');\n      await getRoute(currentLocation.current, routeParams.current.destination, routeParams.current.waypoints);\n    }, [getRoute]);\n    const getProgressPercentage = (0, _react.useCallback)(() => {\n      if (!routeInfo || routeInfo.steps.length === 0) return 0;\n      return Math.round(currentStepIndex / routeInfo.steps.length * 100);\n    }, [routeInfo, currentStepIndex]);\n    const getRemainingDistance = (0, _react.useCallback)(() => {\n      if (!routeInfo) return '0 km';\n\n      // Calculate remaining distance from current step\n      let remainingMeters = 0;\n      for (let i = currentStepIndex; i < routeInfo.steps.length; i++) {\n        // This is a simplification - would need more precise calculation\n        remainingMeters += parseDistance(routeInfo.steps[i].distance);\n      }\n      return _googleDirections.googleDirectionsService.formatDistance(remainingMeters);\n    }, [routeInfo, currentStepIndex]);\n    const getRemainingTime = (0, _react.useCallback)(() => {\n      if (!routeInfo) return '0 min';\n\n      // Calculate remaining time from current step\n      let remainingSeconds = 0;\n      for (let i = currentStepIndex; i < routeInfo.steps.length; i++) {\n        remainingSeconds += parseDuration(routeInfo.steps[i].duration);\n      }\n      return _googleDirections.googleDirectionsService.formatDuration(remainingSeconds);\n    }, [routeInfo, currentStepIndex]);\n    return {\n      routeInfo,\n      isLoading,\n      error,\n      // Methods\n      getRoute,\n      clearRoute,\n      getCurrentStep,\n      getNextStep,\n      // Navigation\n      startNavigation,\n      stopNavigation,\n      isNavigating,\n      currentStepIndex,\n      // Real-time updates\n      updateCurrentLocation,\n      recalculateRoute,\n      // Progress tracking\n      getProgressPercentage,\n      getRemainingDistance,\n      getRemainingTime\n    };\n  };\n\n  // Helper functions\n  exports.useDirections = useDirections;\n  function calculateDistance(coord1, coord2) {\n    const R = 6371; // Earth's radius in km\n    const dLat = (coord2.latitude - coord1.latitude) * Math.PI / 180;\n    const dLng = (coord2.longitude - coord1.longitude) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(coord1.latitude * Math.PI / 180) * Math.cos(coord2.latitude * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  }\n  function parseDistance(distanceText) {\n    const match = distanceText.match(/(\\d+\\.?\\d*)\\s*(km|m)/);\n    if (!match) return 0;\n    const value = parseFloat(match[1]);\n    const unit = match[2];\n    return unit === 'km' ? value * 1000 : value;\n  }\n  function parseDuration(durationText) {\n    const match = durationText.match(/(\\d+)\\s*min/);\n    if (!match) return 0;\n    return parseInt(match[1]) * 60; // Convert to seconds\n  }\n});","lineCount":222,"map":[[6,2,1,0],[6,6,1,0,"_react"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,2,0],[7,6,2,0,"_googleDirections"],[7,23,2,0],[7,26,2,0,"require"],[7,33,2,0],[7,34,2,0,"_dependencyMap"],[7,48,2,0],[8,2,51,7],[8,8,51,13,"useDirections"],[8,21,51,26],[8,24,51,29,"useDirections"],[8,25,51,29],[8,30,51,56],[9,4,52,2],[9,10,52,8],[9,11,52,9,"routeInfo"],[9,20,52,18],[9,22,52,20,"setRouteInfo"],[9,34,52,32],[9,35,52,33],[9,38,52,36],[9,42,52,36,"useState"],[9,57,52,44],[9,59,52,63],[9,63,52,67],[9,64,52,68],[10,4,53,2],[10,10,53,8],[10,11,53,9,"isLoading"],[10,20,53,18],[10,22,53,20,"setIsLoading"],[10,34,53,32],[10,35,53,33],[10,38,53,36],[10,42,53,36,"useState"],[10,57,53,44],[10,59,53,45],[10,64,53,50],[10,65,53,51],[11,4,54,2],[11,10,54,8],[11,11,54,9,"error"],[11,16,54,14],[11,18,54,16,"setError"],[11,26,54,24],[11,27,54,25],[11,30,54,28],[11,34,54,28,"useState"],[11,49,54,36],[11,51,54,52],[11,55,54,56],[11,56,54,57],[12,4,55,2],[12,10,55,8],[12,11,55,9,"isNavigating"],[12,23,55,21],[12,25,55,23,"setIsNavigating"],[12,40,55,38],[12,41,55,39],[12,44,55,42],[12,48,55,42,"useState"],[12,63,55,50],[12,65,55,51],[12,70,55,56],[12,71,55,57],[13,4,56,2],[13,10,56,8],[13,11,56,9,"currentStepIndex"],[13,27,56,25],[13,29,56,27,"setCurrentStepIndex"],[13,48,56,46],[13,49,56,47],[13,52,56,50],[13,56,56,50,"useState"],[13,71,56,58],[13,73,56,59],[13,74,56,60],[13,75,56,61],[15,4,58,2],[16,4,59,2],[16,10,59,8,"routeParams"],[16,21,59,19],[16,24,59,22],[16,28,59,22,"useRef"],[16,41,59,28],[16,43,63,12],[16,47,63,16],[16,48,63,17],[17,4,65,2],[17,10,65,8,"currentLocation"],[17,25,65,23],[17,28,65,26],[17,32,65,26,"useRef"],[17,45,65,32],[17,47,65,52],[17,51,65,56],[17,52,65,57],[18,4,67,2],[18,10,67,8,"processDirectionsResponse"],[18,35,67,33],[18,38,67,36],[18,42,67,36,"useCallback"],[18,60,67,47],[18,62,67,49,"route"],[18,67,67,71],[18,71,67,87],[19,6,68,4],[19,12,68,10,"leg"],[19,15,68,13],[19,18,68,16,"route"],[19,23,68,21],[19,24,68,22,"legs"],[19,28,68,26],[19,29,68,27],[19,30,68,28],[19,31,68,29],[19,32,68,30],[19,33,68,31],[21,6,70,4],[22,6,71,4],[22,12,71,10,"steps"],[22,17,71,33],[22,20,71,36,"leg"],[22,23,71,39],[22,24,71,40,"steps"],[22,29,71,45],[22,30,71,46,"map"],[22,33,71,49],[22,34,71,50],[22,35,71,51,"step"],[22,39,71,55],[22,41,71,57,"index"],[22,46,71,62],[22,52,71,68],[23,8,72,6,"id"],[23,10,72,8],[23,12,72,10],[23,20,72,18,"index"],[23,25,72,23],[23,27,72,25],[24,8,73,6,"instruction"],[24,19,73,17],[24,21,73,19,"step"],[24,25,73,23],[24,26,73,24,"html_instructions"],[24,43,73,41],[24,44,73,42,"replace"],[24,51,73,49],[24,52,73,50],[24,62,73,60],[24,64,73,62],[24,66,73,64],[24,67,73,65],[25,8,73,67],[26,8,74,6,"distance"],[26,16,74,14],[26,18,74,16,"step"],[26,22,74,20],[26,23,74,21,"distance"],[26,31,74,29],[26,32,74,30,"text"],[26,36,74,34],[27,8,75,6,"duration"],[27,16,75,14],[27,18,75,16,"step"],[27,22,75,20],[27,23,75,21,"duration"],[27,31,75,29],[27,32,75,30,"text"],[27,36,75,34],[28,8,76,6,"maneuver"],[28,16,76,14],[28,18,76,16,"step"],[28,22,76,20],[28,23,76,21,"maneuver"],[28,31,76,29],[29,8,77,6,"coordinates"],[29,19,77,17],[29,21,77,19],[30,10,78,8,"start"],[30,15,78,13],[30,17,78,15],[31,12,79,10,"latitude"],[31,20,79,18],[31,22,79,20,"step"],[31,26,79,24],[31,27,79,25,"start_location"],[31,41,79,39],[31,42,79,40,"lat"],[31,45,79,43],[32,12,80,10,"longitude"],[32,21,80,19],[32,23,80,21,"step"],[32,27,80,25],[32,28,80,26,"start_location"],[32,42,80,40],[32,43,80,41,"lng"],[33,10,81,8],[33,11,81,9],[34,10,82,8,"end"],[34,13,82,11],[34,15,82,13],[35,12,83,10,"latitude"],[35,20,83,18],[35,22,83,20,"step"],[35,26,83,24],[35,27,83,25,"end_location"],[35,39,83,37],[35,40,83,38,"lat"],[35,43,83,41],[36,12,84,10,"longitude"],[36,21,84,19],[36,23,84,21,"step"],[36,27,84,25],[36,28,84,26,"end_location"],[36,40,84,38],[36,41,84,39,"lng"],[37,10,85,8],[38,8,86,6],[39,6,87,4],[39,7,87,5],[39,8,87,6],[39,9,87,7],[41,6,89,4],[42,6,90,4],[42,12,90,10,"polylinePoints"],[42,26,90,24],[42,29,90,27,"googleDirectionsService"],[42,70,90,50],[42,71,90,51,"decodePolyline"],[42,85,90,65],[42,86,90,66,"route"],[42,91,90,71],[42,92,90,72,"overview_polyline"],[42,109,90,89],[42,110,90,90,"points"],[42,116,90,96],[42,117,90,97],[44,6,92,4],[45,6,93,4],[45,12,93,10,"estimatedArrival"],[45,28,93,26],[45,31,93,29,"googleDirectionsService"],[45,72,93,52],[45,73,93,53,"calculateETA"],[45,85,93,65],[45,86,93,66,"route"],[45,91,93,71],[45,92,93,72,"duration"],[45,100,93,80],[45,101,93,81,"value"],[45,106,93,86],[45,107,93,87],[46,6,95,4],[46,13,95,11],[47,8,96,6,"distance"],[47,16,96,14],[47,18,96,16,"route"],[47,23,96,21],[47,24,96,22,"distance"],[47,32,96,30],[47,33,96,31,"text"],[47,37,96,35],[48,8,97,6,"duration"],[48,16,97,14],[48,18,97,16,"route"],[48,23,97,21],[48,24,97,22,"duration"],[48,32,97,30],[48,33,97,31,"text"],[48,37,97,35],[49,8,98,6,"estimatedArrival"],[49,24,98,22],[50,8,99,6,"steps"],[50,13,99,11],[51,8,100,6,"polylinePoints"],[52,6,101,4],[52,7,101,5],[53,4,102,2],[53,5,102,3],[53,7,102,5],[53,9,102,7],[53,10,102,8],[54,4,104,2],[54,10,104,8,"getRoute"],[54,18,104,16],[54,21,104,19],[54,25,104,19,"useCallback"],[54,43,104,30],[54,45,104,31],[54,52,105,4,"origin"],[54,58,105,22],[54,60,106,4,"destination"],[54,71,106,27],[54,73,107,4,"waypoints"],[54,82,107,28],[54,87,108,7],[55,6,109,4],[55,10,109,8],[56,8,110,6,"setIsLoading"],[56,20,110,18],[56,21,110,19],[56,25,110,23],[56,26,110,24],[57,8,111,6,"setError"],[57,16,111,14],[57,17,111,15],[57,21,111,19],[57,22,111,20],[58,8,113,6,"console"],[58,15,113,13],[58,16,113,14,"log"],[58,19,113,17],[58,20,113,18],[58,44,113,42],[58,46,113,44,"origin"],[58,52,113,50],[58,54,113,52],[58,58,113,56],[58,60,113,58,"destination"],[58,71,113,69],[58,72,113,70],[60,8,115,6],[61,8,116,6,"routeParams"],[61,19,116,17],[61,20,116,18,"current"],[61,27,116,25],[61,30,116,28],[62,10,116,30,"origin"],[62,16,116,36],[63,10,116,38,"destination"],[63,21,116,49],[64,10,116,51,"waypoints"],[65,8,116,61],[65,9,116,62],[66,8,118,6],[66,14,118,12,"response"],[66,22,118,20],[66,25,118,23],[66,31,118,29,"googleDirectionsService"],[66,72,118,52],[66,73,118,53,"getDirections"],[66,86,118,66],[66,87,119,8,"origin"],[66,93,119,14],[66,95,120,8,"destination"],[66,106,120,19],[66,108,121,8,"waypoints"],[66,117,121,17],[66,119,122,8],[67,10,123,10,"mode"],[67,14,123,14],[67,16,123,16],[67,25,123,25],[68,10,124,10,"avoidTolls"],[68,20,124,20],[68,22,124,22],[68,27,124,27],[69,10,125,10,"avoidHighways"],[69,23,125,23],[69,25,125,25],[70,8,126,8],[70,9,127,6],[70,10,127,7],[71,8,129,6],[71,12,129,10,"response"],[71,20,129,18],[71,21,129,19,"status"],[71,27,129,25],[71,32,129,30],[71,36,129,34],[71,40,129,38,"response"],[71,48,129,46],[71,49,129,47,"routes"],[71,55,129,53],[71,56,129,54,"length"],[71,62,129,60],[71,67,129,65],[71,68,129,66],[71,70,129,68],[72,10,130,8],[72,16,130,14],[72,20,130,18,"Error"],[72,25,130,23],[72,26,130,24],[72,45,130,43,"response"],[72,53,130,51],[72,54,130,52,"status"],[72,60,130,58],[72,62,130,60],[72,63,130,61],[73,8,131,6],[74,8,133,6],[74,14,133,12,"processedRoute"],[74,28,133,26],[74,31,133,29,"processDirectionsResponse"],[74,56,133,54],[74,57,133,55,"response"],[74,65,133,63],[74,66,133,64,"routes"],[74,72,133,70],[74,73,133,71],[74,74,133,72],[74,75,133,73],[74,76,133,74],[75,8,134,6,"setRouteInfo"],[75,20,134,18],[75,21,134,19,"processedRoute"],[75,35,134,33],[75,36,134,34],[76,8,135,6,"setCurrentStepIndex"],[76,27,135,25],[76,28,135,26],[76,29,135,27],[76,30,135,28],[77,8,137,6,"console"],[77,15,137,13],[77,16,137,14,"log"],[77,19,137,17],[77,20,137,18],[77,54,137,52],[77,56,137,54,"processedRoute"],[77,70,137,68],[77,71,137,69],[78,6,138,4],[78,7,138,5],[78,8,138,6],[78,15,138,13,"err"],[78,18,138,16],[78,20,138,18],[79,8,139,6],[79,14,139,12,"errorMessage"],[79,26,139,24],[79,29,139,27,"err"],[79,32,139,30],[79,44,139,42,"Error"],[79,49,139,47],[79,52,139,50,"err"],[79,55,139,53],[79,56,139,54,"message"],[79,63,139,61],[79,66,139,64],[79,92,139,90],[80,8,140,6,"setError"],[80,16,140,14],[80,17,140,15,"errorMessage"],[80,29,140,27],[80,30,140,28],[81,8,141,6,"console"],[81,15,141,13],[81,16,141,14,"error"],[81,21,141,19],[81,22,141,20],[81,46,141,44],[81,48,141,46,"errorMessage"],[81,60,141,58],[81,61,141,59],[82,6,142,4],[82,7,142,5],[82,16,142,14],[83,8,143,6,"setIsLoading"],[83,20,143,18],[83,21,143,19],[83,26,143,24],[83,27,143,25],[84,6,144,4],[85,4,145,2],[85,5,145,3],[85,7,145,5],[85,8,145,6,"processDirectionsResponse"],[85,33,145,31],[85,34,145,32],[85,35,145,33],[86,4,147,2],[86,10,147,8,"clearRoute"],[86,20,147,18],[86,23,147,21],[86,27,147,21,"useCallback"],[86,45,147,32],[86,47,147,33],[86,53,147,39],[87,6,148,4,"setRouteInfo"],[87,18,148,16],[87,19,148,17],[87,23,148,21],[87,24,148,22],[88,6,149,4,"setError"],[88,14,149,12],[88,15,149,13],[88,19,149,17],[88,20,149,18],[89,6,150,4,"setIsNavigating"],[89,21,150,19],[89,22,150,20],[89,27,150,25],[89,28,150,26],[90,6,151,4,"setCurrentStepIndex"],[90,25,151,23],[90,26,151,24],[90,27,151,25],[90,28,151,26],[91,6,152,4,"routeParams"],[91,17,152,15],[91,18,152,16,"current"],[91,25,152,23],[91,28,152,26],[91,32,152,30],[92,6,153,4,"currentLocation"],[92,21,153,19],[92,22,153,20,"current"],[92,29,153,27],[92,32,153,30],[92,36,153,34],[93,6,154,4,"console"],[93,13,154,11],[93,14,154,12,"log"],[93,17,154,15],[93,18,154,16],[93,37,154,35],[93,38,154,36],[94,4,155,2],[94,5,155,3],[94,7,155,5],[94,9,155,7],[94,10,155,8],[95,4,157,2],[95,10,157,8,"startNavigation"],[95,25,157,23],[95,28,157,26],[95,32,157,26,"useCallback"],[95,50,157,37],[95,52,157,38],[95,58,157,44],[96,6,158,4],[96,10,158,8],[96,11,158,9,"routeInfo"],[96,20,158,18],[96,22,158,20],[97,8,159,6,"console"],[97,15,159,13],[97,16,159,14,"warn"],[97,20,159,18],[97,21,159,19],[97,69,159,67],[97,70,159,68],[98,8,160,6],[99,6,161,4],[100,6,163,4,"setIsNavigating"],[100,21,163,19],[100,22,163,20],[100,26,163,24],[100,27,163,25],[101,6,164,4,"setCurrentStepIndex"],[101,25,164,23],[101,26,164,24],[101,27,164,25],[101,28,164,26],[102,6,165,4,"console"],[102,13,165,11],[102,14,165,12,"log"],[102,17,165,15],[102,18,165,16],[102,41,165,39],[102,42,165,40],[103,4,166,2],[103,5,166,3],[103,7,166,5],[103,8,166,6,"routeInfo"],[103,17,166,15],[103,18,166,16],[103,19,166,17],[104,4,168,2],[104,10,168,8,"stopNavigation"],[104,24,168,22],[104,27,168,25],[104,31,168,25,"useCallback"],[104,49,168,36],[104,51,168,37],[104,57,168,43],[105,6,169,4,"setIsNavigating"],[105,21,169,19],[105,22,169,20],[105,27,169,25],[105,28,169,26],[106,6,170,4,"console"],[106,13,170,11],[106,14,170,12,"log"],[106,17,170,15],[106,18,170,16],[106,41,170,39],[106,42,170,40],[107,4,171,2],[107,5,171,3],[107,7,171,5],[107,9,171,7],[107,10,171,8],[108,4,173,2],[108,10,173,8,"getCurrentStep"],[108,24,173,22],[108,27,173,25],[108,31,173,25,"useCallback"],[108,49,173,36],[108,51,173,37],[108,57,173,66],[109,6,174,4],[109,10,174,8],[109,11,174,9,"routeInfo"],[109,20,174,18],[109,24,174,22,"currentStepIndex"],[109,40,174,38],[109,44,174,42,"routeInfo"],[109,53,174,51],[109,54,174,52,"steps"],[109,59,174,57],[109,60,174,58,"length"],[109,66,174,64],[109,68,174,66],[110,8,175,6],[110,15,175,13],[110,19,175,17],[111,6,176,4],[112,6,177,4],[112,13,177,11,"routeInfo"],[112,22,177,20],[112,23,177,21,"steps"],[112,28,177,26],[112,29,177,27,"currentStepIndex"],[112,45,177,43],[112,46,177,44],[113,4,178,2],[113,5,178,3],[113,7,178,5],[113,8,178,6,"routeInfo"],[113,17,178,15],[113,19,178,17,"currentStepIndex"],[113,35,178,33],[113,36,178,34],[113,37,178,35],[114,4,180,2],[114,10,180,8,"getNextStep"],[114,21,180,19],[114,24,180,22],[114,28,180,22,"useCallback"],[114,46,180,33],[114,48,180,34],[114,54,180,63],[115,6,181,4],[115,10,181,8],[115,11,181,9,"routeInfo"],[115,20,181,18],[115,24,181,22,"currentStepIndex"],[115,40,181,38],[115,43,181,41],[115,44,181,42],[115,48,181,46,"routeInfo"],[115,57,181,55],[115,58,181,56,"steps"],[115,63,181,61],[115,64,181,62,"length"],[115,70,181,68],[115,72,181,70],[116,8,182,6],[116,15,182,13],[116,19,182,17],[117,6,183,4],[118,6,184,4],[118,13,184,11,"routeInfo"],[118,22,184,20],[118,23,184,21,"steps"],[118,28,184,26],[118,29,184,27,"currentStepIndex"],[118,45,184,43],[118,48,184,46],[118,49,184,47],[118,50,184,48],[119,4,185,2],[119,5,185,3],[119,7,185,5],[119,8,185,6,"routeInfo"],[119,17,185,15],[119,19,185,17,"currentStepIndex"],[119,35,185,33],[119,36,185,34],[119,37,185,35],[120,4,187,2],[120,10,187,8,"updateCurrentLocation"],[120,31,187,29],[120,34,187,32],[120,38,187,32,"useCallback"],[120,56,187,43],[120,58,187,45,"location"],[120,66,187,65],[120,70,187,70],[121,6,188,4,"currentLocation"],[121,21,188,19],[121,22,188,20,"current"],[121,29,188,27],[121,32,188,30,"location"],[121,40,188,38],[122,6,190,4],[122,10,190,8],[122,11,190,9,"isNavigating"],[122,23,190,21],[122,27,190,25],[122,28,190,26,"routeInfo"],[122,37,190,35],[122,39,190,37],[124,6,192,4],[125,6,193,4],[125,12,193,10,"currentStep"],[125,23,193,21],[125,26,193,24,"getCurrentStep"],[125,40,193,38],[125,41,193,39],[125,42,193,40],[126,6,194,4],[126,10,194,8,"currentStep"],[126,21,194,19],[126,23,194,21],[127,8,195,6],[127,14,195,12,"distanceToEnd"],[127,27,195,25],[127,30,195,28,"calculateDistance"],[127,47,195,45],[127,48,196,8,"location"],[127,56,196,16],[127,58,197,8,"currentStep"],[127,69,197,19],[127,70,197,20,"coordinates"],[127,81,197,31],[127,82,197,32,"end"],[127,85,198,6],[127,86,198,7],[129,8,200,6],[130,8,201,6],[130,12,201,10,"distanceToEnd"],[130,25,201,23],[130,28,201,26],[130,32,201,30],[130,34,201,32],[131,10,201,34],[132,10,202,8],[132,16,202,14,"nextIndex"],[132,25,202,23],[132,28,202,26,"currentStepIndex"],[132,44,202,42],[132,47,202,45],[132,48,202,46],[133,10,203,8],[133,14,203,12,"nextIndex"],[133,23,203,21],[133,26,203,24,"routeInfo"],[133,35,203,33],[133,36,203,34,"steps"],[133,41,203,39],[133,42,203,40,"length"],[133,48,203,46],[133,50,203,48],[134,12,204,10,"setCurrentStepIndex"],[134,31,204,29],[134,32,204,30,"nextIndex"],[134,41,204,39],[134,42,204,40],[135,12,205,10,"console"],[135,19,205,17],[135,20,205,18,"log"],[135,23,205,21],[135,24,205,22],[135,47,205,45,"nextIndex"],[135,56,205,54],[135,59,205,57],[135,60,205,58],[135,64,205,62,"routeInfo"],[135,73,205,71],[135,74,205,72,"steps"],[135,79,205,77],[135,80,205,78,"length"],[135,86,205,84],[135,88,205,86],[135,89,205,87],[136,10,206,8],[136,11,206,9],[136,17,206,15],[137,12,207,10,"console"],[137,19,207,17],[137,20,207,18,"log"],[137,23,207,21],[137,24,207,22],[137,50,207,48],[137,51,207,49],[138,12,208,10,"setIsNavigating"],[138,27,208,25],[138,28,208,26],[138,33,208,31],[138,34,208,32],[139,10,209,8],[140,8,210,6],[141,6,211,4],[142,4,212,2],[142,5,212,3],[142,7,212,5],[142,8,212,6,"isNavigating"],[142,20,212,18],[142,22,212,20,"routeInfo"],[142,31,212,29],[142,33,212,31,"getCurrentStep"],[142,47,212,45],[142,49,212,47,"currentStepIndex"],[142,65,212,63],[142,66,212,64],[142,67,212,65],[143,4,214,2],[143,10,214,8,"recalculateRoute"],[143,26,214,24],[143,29,214,27],[143,33,214,27,"useCallback"],[143,51,214,38],[143,53,214,39],[143,65,214,51],[144,6,215,4],[144,10,215,8],[144,11,215,9,"routeParams"],[144,22,215,20],[144,23,215,21,"current"],[144,30,215,28],[144,34,215,32],[144,35,215,33,"currentLocation"],[144,50,215,48],[144,51,215,49,"current"],[144,58,215,56],[144,60,215,58],[145,8,216,6,"console"],[145,15,216,13],[145,16,216,14,"warn"],[145,20,216,18],[145,21,216,19],[145,90,216,88],[145,91,216,89],[146,8,217,6],[147,6,218,4],[148,6,220,4,"console"],[148,13,220,11],[148,14,220,12,"log"],[148,17,220,15],[148,18,220,16],[148,64,220,62],[148,65,220,63],[149,6,222,4],[149,12,222,10,"getRoute"],[149,20,222,18],[149,21,223,6,"currentLocation"],[149,36,223,21],[149,37,223,22,"current"],[149,44,223,29],[149,46,224,6,"routeParams"],[149,57,224,17],[149,58,224,18,"current"],[149,65,224,25],[149,66,224,26,"destination"],[149,77,224,37],[149,79,225,6,"routeParams"],[149,90,225,17],[149,91,225,18,"current"],[149,98,225,25],[149,99,225,26,"waypoints"],[149,108,226,4],[149,109,226,5],[150,4,227,2],[150,5,227,3],[150,7,227,5],[150,8,227,6,"getRoute"],[150,16,227,14],[150,17,227,15],[150,18,227,16],[151,4,229,2],[151,10,229,8,"getProgressPercentage"],[151,31,229,29],[151,34,229,32],[151,38,229,32,"useCallback"],[151,56,229,43],[151,58,229,44],[151,64,229,58],[152,6,230,4],[152,10,230,8],[152,11,230,9,"routeInfo"],[152,20,230,18],[152,24,230,22,"routeInfo"],[152,33,230,31],[152,34,230,32,"steps"],[152,39,230,37],[152,40,230,38,"length"],[152,46,230,44],[152,51,230,49],[152,52,230,50],[152,54,230,52],[152,61,230,59],[152,62,230,60],[153,6,231,4],[153,13,231,11,"Math"],[153,17,231,15],[153,18,231,16,"round"],[153,23,231,21],[153,24,231,23,"currentStepIndex"],[153,40,231,39],[153,43,231,42,"routeInfo"],[153,52,231,51],[153,53,231,52,"steps"],[153,58,231,57],[153,59,231,58,"length"],[153,65,231,64],[153,68,231,68],[153,71,231,71],[153,72,231,72],[154,4,232,2],[154,5,232,3],[154,7,232,5],[154,8,232,6,"routeInfo"],[154,17,232,15],[154,19,232,17,"currentStepIndex"],[154,35,232,33],[154,36,232,34],[154,37,232,35],[155,4,234,2],[155,10,234,8,"getRemainingDistance"],[155,30,234,28],[155,33,234,31],[155,37,234,31,"useCallback"],[155,55,234,42],[155,57,234,43],[155,63,234,57],[156,6,235,4],[156,10,235,8],[156,11,235,9,"routeInfo"],[156,20,235,18],[156,22,235,20],[156,29,235,27],[156,35,235,33],[158,6,237,4],[159,6,238,4],[159,10,238,8,"remainingMeters"],[159,25,238,23],[159,28,238,26],[159,29,238,27],[160,6,239,4],[160,11,239,9],[160,15,239,13,"i"],[160,16,239,14],[160,19,239,17,"currentStepIndex"],[160,35,239,33],[160,37,239,35,"i"],[160,38,239,36],[160,41,239,39,"routeInfo"],[160,50,239,48],[160,51,239,49,"steps"],[160,56,239,54],[160,57,239,55,"length"],[160,63,239,61],[160,65,239,63,"i"],[160,66,239,64],[160,68,239,66],[160,70,239,68],[161,8,240,6],[162,8,241,6,"remainingMeters"],[162,23,241,21],[162,27,241,25,"parseDistance"],[162,40,241,38],[162,41,241,39,"routeInfo"],[162,50,241,48],[162,51,241,49,"steps"],[162,56,241,54],[162,57,241,55,"i"],[162,58,241,56],[162,59,241,57],[162,60,241,58,"distance"],[162,68,241,66],[162,69,241,67],[163,6,242,4],[164,6,244,4],[164,13,244,11,"googleDirectionsService"],[164,54,244,34],[164,55,244,35,"formatDistance"],[164,69,244,49],[164,70,244,50,"remainingMeters"],[164,85,244,65],[164,86,244,66],[165,4,245,2],[165,5,245,3],[165,7,245,5],[165,8,245,6,"routeInfo"],[165,17,245,15],[165,19,245,17,"currentStepIndex"],[165,35,245,33],[165,36,245,34],[165,37,245,35],[166,4,247,2],[166,10,247,8,"getRemainingTime"],[166,26,247,24],[166,29,247,27],[166,33,247,27,"useCallback"],[166,51,247,38],[166,53,247,39],[166,59,247,53],[167,6,248,4],[167,10,248,8],[167,11,248,9,"routeInfo"],[167,20,248,18],[167,22,248,20],[167,29,248,27],[167,36,248,34],[169,6,250,4],[170,6,251,4],[170,10,251,8,"remainingSeconds"],[170,26,251,24],[170,29,251,27],[170,30,251,28],[171,6,252,4],[171,11,252,9],[171,15,252,13,"i"],[171,16,252,14],[171,19,252,17,"currentStepIndex"],[171,35,252,33],[171,37,252,35,"i"],[171,38,252,36],[171,41,252,39,"routeInfo"],[171,50,252,48],[171,51,252,49,"steps"],[171,56,252,54],[171,57,252,55,"length"],[171,63,252,61],[171,65,252,63,"i"],[171,66,252,64],[171,68,252,66],[171,70,252,68],[172,8,253,6,"remainingSeconds"],[172,24,253,22],[172,28,253,26,"parseDuration"],[172,41,253,39],[172,42,253,40,"routeInfo"],[172,51,253,49],[172,52,253,50,"steps"],[172,57,253,55],[172,58,253,56,"i"],[172,59,253,57],[172,60,253,58],[172,61,253,59,"duration"],[172,69,253,67],[172,70,253,68],[173,6,254,4],[174,6,256,4],[174,13,256,11,"googleDirectionsService"],[174,54,256,34],[174,55,256,35,"formatDuration"],[174,69,256,49],[174,70,256,50,"remainingSeconds"],[174,86,256,66],[174,87,256,67],[175,4,257,2],[175,5,257,3],[175,7,257,5],[175,8,257,6,"routeInfo"],[175,17,257,15],[175,19,257,17,"currentStepIndex"],[175,35,257,33],[175,36,257,34],[175,37,257,35],[176,4,259,2],[176,11,259,9],[177,6,260,4,"routeInfo"],[177,15,260,13],[178,6,261,4,"isLoading"],[178,15,261,13],[179,6,262,4,"error"],[179,11,262,9],[180,6,264,4],[181,6,265,4,"getRoute"],[181,14,265,12],[182,6,266,4,"clearRoute"],[182,16,266,14],[183,6,267,4,"getCurrentStep"],[183,20,267,18],[184,6,268,4,"getNextStep"],[184,17,268,15],[185,6,270,4],[186,6,271,4,"startNavigation"],[186,21,271,19],[187,6,272,4,"stopNavigation"],[187,20,272,18],[188,6,273,4,"isNavigating"],[188,18,273,16],[189,6,274,4,"currentStepIndex"],[189,22,274,20],[190,6,276,4],[191,6,277,4,"updateCurrentLocation"],[191,27,277,25],[192,6,278,4,"recalculateRoute"],[192,22,278,20],[193,6,280,4],[194,6,281,4,"getProgressPercentage"],[194,27,281,25],[195,6,282,4,"getRemainingDistance"],[195,26,282,24],[196,6,283,4,"getRemainingTime"],[197,4,284,2],[197,5,284,3],[198,2,285,0],[198,3,285,1],[200,2,287,0],[201,2,287,0,"exports"],[201,9,287,0],[201,10,287,0,"useDirections"],[201,23,287,0],[201,26,287,0,"useDirections"],[201,39,287,0],[202,2,288,0],[202,11,288,9,"calculateDistance"],[202,28,288,26,"calculateDistance"],[202,29,288,27,"coord1"],[202,35,288,45],[202,37,288,47,"coord2"],[202,43,288,65],[202,45,288,75],[203,4,289,2],[203,10,289,8,"R"],[203,11,289,9],[203,14,289,12],[203,18,289,16],[203,19,289,17],[203,20,289,18],[204,4,290,2],[204,10,290,8,"dLat"],[204,14,290,12],[204,17,290,15],[204,18,290,16,"coord2"],[204,24,290,22],[204,25,290,23,"latitude"],[204,33,290,31],[204,36,290,34,"coord1"],[204,42,290,40],[204,43,290,41,"latitude"],[204,51,290,49],[204,55,290,53,"Math"],[204,59,290,57],[204,60,290,58,"PI"],[204,62,290,60],[204,65,290,63],[204,68,290,66],[205,4,291,2],[205,10,291,8,"dLng"],[205,14,291,12],[205,17,291,15],[205,18,291,16,"coord2"],[205,24,291,22],[205,25,291,23,"longitude"],[205,34,291,32],[205,37,291,35,"coord1"],[205,43,291,41],[205,44,291,42,"longitude"],[205,53,291,51],[205,57,291,55,"Math"],[205,61,291,59],[205,62,291,60,"PI"],[205,64,291,62],[205,67,291,65],[205,70,291,68],[206,4,292,2],[206,10,292,8,"a"],[206,11,292,9],[206,14,293,4,"Math"],[206,18,293,8],[206,19,293,9,"sin"],[206,22,293,12],[206,23,293,13,"dLat"],[206,27,293,17],[206,30,293,18],[206,31,293,19],[206,32,293,20],[206,35,293,23,"Math"],[206,39,293,27],[206,40,293,28,"sin"],[206,43,293,31],[206,44,293,32,"dLat"],[206,48,293,36],[206,51,293,37],[206,52,293,38],[206,53,293,39],[206,56,294,4,"Math"],[206,60,294,8],[206,61,294,9,"cos"],[206,64,294,12],[206,65,294,13,"coord1"],[206,71,294,19],[206,72,294,20,"latitude"],[206,80,294,28],[206,83,294,31,"Math"],[206,87,294,35],[206,88,294,36,"PI"],[206,90,294,38],[206,93,294,41],[206,96,294,44],[206,97,294,45],[206,100,294,48,"Math"],[206,104,294,52],[206,105,294,53,"cos"],[206,108,294,56],[206,109,294,57,"coord2"],[206,115,294,63],[206,116,294,64,"latitude"],[206,124,294,72],[206,127,294,75,"Math"],[206,131,294,79],[206,132,294,80,"PI"],[206,134,294,82],[206,137,294,85],[206,140,294,88],[206,141,294,89],[206,144,295,4,"Math"],[206,148,295,8],[206,149,295,9,"sin"],[206,152,295,12],[206,153,295,13,"dLng"],[206,157,295,17],[206,160,295,18],[206,161,295,19],[206,162,295,20],[206,165,295,23,"Math"],[206,169,295,27],[206,170,295,28,"sin"],[206,173,295,31],[206,174,295,32,"dLng"],[206,178,295,36],[206,181,295,37],[206,182,295,38],[206,183,295,39],[207,4,296,2],[207,10,296,8,"c"],[207,11,296,9],[207,14,296,12],[207,15,296,13],[207,18,296,16,"Math"],[207,22,296,20],[207,23,296,21,"atan2"],[207,28,296,26],[207,29,296,27,"Math"],[207,33,296,31],[207,34,296,32,"sqrt"],[207,38,296,36],[207,39,296,37,"a"],[207,40,296,38],[207,41,296,39],[207,43,296,41,"Math"],[207,47,296,45],[207,48,296,46,"sqrt"],[207,52,296,50],[207,53,296,51],[207,54,296,52],[207,57,296,53,"a"],[207,58,296,54],[207,59,296,55],[207,60,296,56],[208,4,297,2],[208,11,297,9,"R"],[208,12,297,10],[208,15,297,13,"c"],[208,16,297,14],[209,2,298,0],[210,2,300,0],[210,11,300,9,"parseDistance"],[210,24,300,22,"parseDistance"],[210,25,300,23,"distanceText"],[210,37,300,43],[210,39,300,53],[211,4,301,2],[211,10,301,8,"match"],[211,15,301,13],[211,18,301,16,"distanceText"],[211,30,301,28],[211,31,301,29,"match"],[211,36,301,34],[211,37,301,35],[211,59,301,57],[211,60,301,58],[212,4,302,2],[212,8,302,6],[212,9,302,7,"match"],[212,14,302,12],[212,16,302,14],[212,23,302,21],[212,24,302,22],[213,4,304,2],[213,10,304,8,"value"],[213,15,304,13],[213,18,304,16,"parseFloat"],[213,28,304,26],[213,29,304,27,"match"],[213,34,304,32],[213,35,304,33],[213,36,304,34],[213,37,304,35],[213,38,304,36],[214,4,305,2],[214,10,305,8,"unit"],[214,14,305,12],[214,17,305,15,"match"],[214,22,305,20],[214,23,305,21],[214,24,305,22],[214,25,305,23],[215,4,307,2],[215,11,307,9,"unit"],[215,15,307,13],[215,20,307,18],[215,24,307,22],[215,27,307,25,"value"],[215,32,307,30],[215,35,307,33],[215,39,307,37],[215,42,307,40,"value"],[215,47,307,45],[216,2,308,0],[217,2,310,0],[217,11,310,9,"parseDuration"],[217,24,310,22,"parseDuration"],[217,25,310,23,"durationText"],[217,37,310,43],[217,39,310,53],[218,4,311,2],[218,10,311,8,"match"],[218,15,311,13],[218,18,311,16,"durationText"],[218,30,311,28],[218,31,311,29,"match"],[218,36,311,34],[218,37,311,35],[218,50,311,48],[218,51,311,49],[219,4,312,2],[219,8,312,6],[219,9,312,7,"match"],[219,14,312,12],[219,16,312,14],[219,23,312,21],[219,24,312,22],[220,4,314,2],[220,11,314,9,"parseInt"],[220,19,314,17],[220,20,314,18,"match"],[220,25,314,23],[220,26,314,24],[220,27,314,25],[220,28,314,26],[220,29,314,27],[220,32,314,30],[220,34,314,32],[220,35,314,33],[220,36,314,34],[221,2,315,0],[222,0,315,1],[222,3]],"functionMap":{"names":["<global>","useDirections","processDirectionsResponse","leg.steps.map$argument_0","getRoute","clearRoute","startNavigation","stopNavigation","getCurrentStep","getNextStep","updateCurrentLocation","recalculateRoute","getProgressPercentage","getRemainingDistance","getRemainingTime","calculateDistance","parseDistance","parseDuration"],"mappings":"AAA;6BCkD;gDCgB;kDCI;MDgB;GDe;+BGE;GHyC;iCIE;GJQ;sCKE;GLS;qCME;GNG;qCOE;GPK;kCQE;GRK;4CSE;GTyB;uCUE;GVa;4CWE;GXG;2CYE;GZW;uCaE;GbU;CD4B;AeG;CfU;AgBE;ChBQ;AiBE"}},"type":"js/module"}]}