{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":63},"end":{"line":4,"column":87,"index":150}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"../../../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":192},"end":{"line":6,"column":53,"index":245}}],"key":"k+xfarWxri7fB3IShKFMK0oi5UQ=","exportNames":["*"]}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":246},"end":{"line":7,"column":43,"index":289}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE=","exportNames":["*"]}},{"name":"../../../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":290},"end":{"line":8,"column":83,"index":373}}],"key":"v6b9cfauRqYeWu9wWOEUTyMIHSA=","exportNames":["*"]}},{"name":"./useAnimatedGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":374},"end":{"line":9,"column":58,"index":432}}],"key":"2qsvw/0Wn5ZQ0k+d9VbJV8PW2us=","exportNames":["*"]}},{"name":"./attachHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":433},"end":{"line":10,"column":50,"index":483}}],"key":"3mjR74KCCo5t43evU8Hvoyi9yu0=","exportNames":["*"]}},{"name":"./needsToReattach","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":484},"end":{"line":11,"column":52,"index":536}}],"key":"AnC4N1Crd90FP+3Mxk358neOkRo=","exportNames":["*"]}},{"name":"./dropHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":537},"end":{"line":12,"column":46,"index":583}}],"key":"3pg09hFbTrtcJ+KzQ97dAmmPlSE=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":584},"end":{"line":13,"column":46,"index":630}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"./Wrap","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":631},"end":{"line":14,"column":44,"index":675}}],"key":"3O9fTt6BDgaEKEy9t1chSR0HFNQ=","exportNames":["*"]}},{"name":"./useDetectorUpdater","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":676},"end":{"line":15,"column":58,"index":734}}],"key":"707zRwYZ3uzpHSm+Rwc2R1MvfJw=","exportNames":["*"]}},{"name":"./useViewRefHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":735},"end":{"line":16,"column":56,"index":791}}],"key":"tm4O9dzaDCUn7KS1TB05c8nzNaA=","exportNames":["*"]}},{"name":"./useMountReactions","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":792},"end":{"line":17,"column":56,"index":848}}],"key":"PrdD1p6YXRuOP5neQrVF/37n7P4=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":849},"end":{"line":18,"column":48,"index":897}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /* eslint-disable react/no-unused-prop-types */\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.GestureDetector = void 0;\n  var _react = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\"));\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[3], \"../../../findNodeHandle\"));\n  var _utils = require(_dependencyMap[4], \"../../../utils\");\n  var _GestureHandlerRootViewContext = _interopRequireDefault(require(_dependencyMap[5], \"../../../GestureHandlerRootViewContext\"));\n  var _useAnimatedGesture = require(_dependencyMap[6], \"./useAnimatedGesture\");\n  var _attachHandlers = require(_dependencyMap[7], \"./attachHandlers\");\n  var _needsToReattach = require(_dependencyMap[8], \"./needsToReattach\");\n  var _dropHandlers = require(_dependencyMap[9], \"./dropHandlers\");\n  var _utils2 = require(_dependencyMap[10], \"./utils\");\n  var _Wrap = require(_dependencyMap[11], \"./Wrap\");\n  var _useDetectorUpdater = require(_dependencyMap[12], \"./useDetectorUpdater\");\n  var _useViewRefHandler = require(_dependencyMap[13], \"./useViewRefHandler\");\n  var _useMountReactions = require(_dependencyMap[14], \"./useMountReactions\");\n  var _jsxRuntime = require(_dependencyMap[15], \"react/jsx-runtime\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  function propagateDetectorConfig(props, gesture) {\n    const keysToPropagate = ['userSelect', 'enableContextMenu', 'touchAction'];\n    for (const key of keysToPropagate) {\n      const value = props[key];\n      if (value === undefined) {\n        continue;\n      }\n      for (const g of gesture.toGestureArray()) {\n        const config = g.config;\n        config[key] = value;\n      }\n    }\n  }\n  /**\n   * `GestureDetector` is responsible for creating and updating native gesture handlers based on the config of provided gesture.\n   *\n   * ### Props\n   * - `gesture`\n   * - `userSelect` (**Web only**)\n   * - `enableContextMenu` (**Web only**)\n   * - `touchAction` (**Web only**)\n   *\n   * ### Remarks\n   * - Gesture Detector will use first native view in its subtree to recognize gestures, however if this view is used only to group its children it may get automatically collapsed.\n   * - Using the same instance of a gesture across multiple Gesture Detectors is not possible.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture-detector\n   */\n  const GestureDetector = props => {\n    const rootViewContext = (0, _react.useContext)(_GestureHandlerRootViewContext.default);\n    if (__DEV__ && !rootViewContext && !(0, _utils.isTestEnv)() && _Platform.default.OS !== 'web') {\n      throw new Error('GestureDetector must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/installation for more details.');\n    }\n\n    // Gesture config should be wrapped with useMemo to prevent unnecessary re-renders\n    const gestureConfig = props.gesture;\n    propagateDetectorConfig(props, gestureConfig);\n    const gesturesToAttach = (0, _react.useMemo)(() => gestureConfig.toGestureArray(), [gestureConfig]);\n    const shouldUseReanimated = gesturesToAttach.some(g => g.shouldUseReanimated);\n    const webEventHandlersRef = (0, _utils2.useWebEventHandlers)();\n    // Store state in ref to prevent unnecessary renders\n    const state = (0, _react.useRef)({\n      firstRender: true,\n      viewRef: null,\n      previousViewTag: -1,\n      forceRebuildReanimatedEvent: false\n    }).current;\n    const preparedGesture = _react.default.useRef({\n      attachedGestures: [],\n      animatedEventHandler: null,\n      animatedHandlers: null,\n      shouldUseReanimated: shouldUseReanimated,\n      isMounted: false\n    }).current;\n    const updateAttachedGestures = (0, _useDetectorUpdater.useDetectorUpdater)(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef);\n    const refHandler = (0, _useViewRefHandler.useViewRefHandler)(state, updateAttachedGestures);\n\n    // Reanimated event should be rebuilt only when gestures are reattached, otherwise\n    // config update will be enough as all necessary items are stored in shared values anyway\n    const needsToRebuildReanimatedEvent = state.firstRender || state.forceRebuildReanimatedEvent || (0, _needsToReattach.needsToReattach)(preparedGesture, gesturesToAttach);\n    state.forceRebuildReanimatedEvent = false;\n    (0, _useAnimatedGesture.useAnimatedGesture)(preparedGesture, needsToRebuildReanimatedEvent);\n    (0, _react.useLayoutEffect)(() => {\n      const viewTag = (0, _findNodeHandle.default)(state.viewRef);\n      preparedGesture.isMounted = true;\n      (0, _attachHandlers.attachHandlers)({\n        preparedGesture,\n        gestureConfig,\n        gesturesToAttach,\n        webEventHandlersRef,\n        viewTag\n      });\n      return () => {\n        preparedGesture.isMounted = false;\n        (0, _dropHandlers.dropHandlers)(preparedGesture);\n      };\n    }, []);\n    (0, _react.useEffect)(() => {\n      if (state.firstRender) {\n        state.firstRender = false;\n      } else {\n        updateAttachedGestures();\n      }\n    }, [props]);\n    (0, _useMountReactions.useMountReactions)(updateAttachedGestures, preparedGesture);\n    if (shouldUseReanimated) {\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Wrap.AnimatedWrap, {\n        ref: refHandler,\n        onGestureHandlerEvent: preparedGesture.animatedEventHandler,\n        children: props.children\n      });\n    } else {\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Wrap.Wrap, {\n        ref: refHandler,\n        children: props.children\n      });\n    }\n  };\n  exports.GestureDetector = GestureDetector;\n});","lineCount":125,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0],[5,6,3,0,"_interopRequireDefault"],[5,28,3,0],[5,31,3,0,"require"],[5,38,3,0],[5,39,3,0,"_dependencyMap"],[5,53,3,0],[6,2,3,0,"Object"],[6,8,3,0],[6,9,3,0,"defineProperty"],[6,23,3,0],[6,24,3,0,"exports"],[6,31,3,0],[7,4,3,0,"value"],[7,9,3,0],[8,2,3,0],[9,2,3,0,"exports"],[9,9,3,0],[9,10,3,0,"GestureDetector"],[9,25,3,0],[10,2,4,0],[10,6,4,0,"_react"],[10,12,4,0],[10,15,4,0,"_interopRequireWildcard"],[10,38,4,0],[10,39,4,0,"require"],[10,46,4,0],[10,47,4,0,"_dependencyMap"],[10,61,4,0],[11,2,4,87],[11,6,4,87,"_Platform"],[11,15,4,87],[11,18,4,87,"_interopRequireDefault"],[11,40,4,87],[11,41,4,87,"require"],[11,48,4,87],[11,49,4,87,"_dependencyMap"],[11,63,4,87],[12,2,6,0],[12,6,6,0,"_findNodeHandle"],[12,21,6,0],[12,24,6,0,"_interopRequireDefault"],[12,46,6,0],[12,47,6,0,"require"],[12,54,6,0],[12,55,6,0,"_dependencyMap"],[12,69,6,0],[13,2,7,0],[13,6,7,0,"_utils"],[13,12,7,0],[13,15,7,0,"require"],[13,22,7,0],[13,23,7,0,"_dependencyMap"],[13,37,7,0],[14,2,8,0],[14,6,8,0,"_GestureHandlerRootViewContext"],[14,36,8,0],[14,39,8,0,"_interopRequireDefault"],[14,61,8,0],[14,62,8,0,"require"],[14,69,8,0],[14,70,8,0,"_dependencyMap"],[14,84,8,0],[15,2,9,0],[15,6,9,0,"_useAnimatedGesture"],[15,25,9,0],[15,28,9,0,"require"],[15,35,9,0],[15,36,9,0,"_dependencyMap"],[15,50,9,0],[16,2,10,0],[16,6,10,0,"_attachHandlers"],[16,21,10,0],[16,24,10,0,"require"],[16,31,10,0],[16,32,10,0,"_dependencyMap"],[16,46,10,0],[17,2,11,0],[17,6,11,0,"_needsToReattach"],[17,22,11,0],[17,25,11,0,"require"],[17,32,11,0],[17,33,11,0,"_dependencyMap"],[17,47,11,0],[18,2,12,0],[18,6,12,0,"_dropHandlers"],[18,19,12,0],[18,22,12,0,"require"],[18,29,12,0],[18,30,12,0,"_dependencyMap"],[18,44,12,0],[19,2,13,0],[19,6,13,0,"_utils2"],[19,13,13,0],[19,16,13,0,"require"],[19,23,13,0],[19,24,13,0,"_dependencyMap"],[19,38,13,0],[20,2,14,0],[20,6,14,0,"_Wrap"],[20,11,14,0],[20,14,14,0,"require"],[20,21,14,0],[20,22,14,0,"_dependencyMap"],[20,36,14,0],[21,2,15,0],[21,6,15,0,"_useDetectorUpdater"],[21,25,15,0],[21,28,15,0,"require"],[21,35,15,0],[21,36,15,0,"_dependencyMap"],[21,50,15,0],[22,2,16,0],[22,6,16,0,"_useViewRefHandler"],[22,24,16,0],[22,27,16,0,"require"],[22,34,16,0],[22,35,16,0,"_dependencyMap"],[22,49,16,0],[23,2,17,0],[23,6,17,0,"_useMountReactions"],[23,24,17,0],[23,27,17,0,"require"],[23,34,17,0],[23,35,17,0,"_dependencyMap"],[23,49,17,0],[24,2,18,0],[24,6,18,0,"_jsxRuntime"],[24,17,18,0],[24,20,18,0,"require"],[24,27,18,0],[24,28,18,0,"_dependencyMap"],[24,42,18,0],[25,2,18,48],[25,11,18,48,"_interopRequireWildcard"],[25,35,18,48,"e"],[25,36,18,48],[25,38,18,48,"t"],[25,39,18,48],[25,68,18,48,"WeakMap"],[25,75,18,48],[25,81,18,48,"r"],[25,82,18,48],[25,89,18,48,"WeakMap"],[25,96,18,48],[25,100,18,48,"n"],[25,101,18,48],[25,108,18,48,"WeakMap"],[25,115,18,48],[25,127,18,48,"_interopRequireWildcard"],[25,150,18,48],[25,162,18,48,"_interopRequireWildcard"],[25,163,18,48,"e"],[25,164,18,48],[25,166,18,48,"t"],[25,167,18,48],[25,176,18,48,"t"],[25,177,18,48],[25,181,18,48,"e"],[25,182,18,48],[25,186,18,48,"e"],[25,187,18,48],[25,188,18,48,"__esModule"],[25,198,18,48],[25,207,18,48,"e"],[25,208,18,48],[25,214,18,48,"o"],[25,215,18,48],[25,217,18,48,"i"],[25,218,18,48],[25,220,18,48,"f"],[25,221,18,48],[25,226,18,48,"__proto__"],[25,235,18,48],[25,243,18,48,"default"],[25,250,18,48],[25,252,18,48,"e"],[25,253,18,48],[25,270,18,48,"e"],[25,271,18,48],[25,294,18,48,"e"],[25,295,18,48],[25,320,18,48,"e"],[25,321,18,48],[25,330,18,48,"f"],[25,331,18,48],[25,337,18,48,"o"],[25,338,18,48],[25,341,18,48,"t"],[25,342,18,48],[25,345,18,48,"n"],[25,346,18,48],[25,349,18,48,"r"],[25,350,18,48],[25,358,18,48,"o"],[25,359,18,48],[25,360,18,48,"has"],[25,363,18,48],[25,364,18,48,"e"],[25,365,18,48],[25,375,18,48,"o"],[25,376,18,48],[25,377,18,48,"get"],[25,380,18,48],[25,381,18,48,"e"],[25,382,18,48],[25,385,18,48,"o"],[25,386,18,48],[25,387,18,48,"set"],[25,390,18,48],[25,391,18,48,"e"],[25,392,18,48],[25,394,18,48,"f"],[25,395,18,48],[25,411,18,48,"t"],[25,412,18,48],[25,416,18,48,"e"],[25,417,18,48],[25,433,18,48,"t"],[25,434,18,48],[25,441,18,48,"hasOwnProperty"],[25,455,18,48],[25,456,18,48,"call"],[25,460,18,48],[25,461,18,48,"e"],[25,462,18,48],[25,464,18,48,"t"],[25,465,18,48],[25,472,18,48,"i"],[25,473,18,48],[25,477,18,48,"o"],[25,478,18,48],[25,481,18,48,"Object"],[25,487,18,48],[25,488,18,48,"defineProperty"],[25,502,18,48],[25,507,18,48,"Object"],[25,513,18,48],[25,514,18,48,"getOwnPropertyDescriptor"],[25,538,18,48],[25,539,18,48,"e"],[25,540,18,48],[25,542,18,48,"t"],[25,543,18,48],[25,550,18,48,"i"],[25,551,18,48],[25,552,18,48,"get"],[25,555,18,48],[25,559,18,48,"i"],[25,560,18,48],[25,561,18,48,"set"],[25,564,18,48],[25,568,18,48,"o"],[25,569,18,48],[25,570,18,48,"f"],[25,571,18,48],[25,573,18,48,"t"],[25,574,18,48],[25,576,18,48,"i"],[25,577,18,48],[25,581,18,48,"f"],[25,582,18,48],[25,583,18,48,"t"],[25,584,18,48],[25,588,18,48,"e"],[25,589,18,48],[25,590,18,48,"t"],[25,591,18,48],[25,602,18,48,"f"],[25,603,18,48],[25,608,18,48,"e"],[25,609,18,48],[25,611,18,48,"t"],[25,612,18,48],[26,2,19,0],[26,11,19,9,"propagateDetectorConfig"],[26,34,19,32,"propagateDetectorConfig"],[26,35,19,33,"props"],[26,40,19,38],[26,42,19,40,"gesture"],[26,49,19,47],[26,51,19,49],[27,4,20,2],[27,10,20,8,"keysToPropagate"],[27,25,20,23],[27,28,20,26],[27,29,20,27],[27,41,20,39],[27,43,20,41],[27,62,20,60],[27,64,20,62],[27,77,20,75],[27,78,20,76],[28,4,21,2],[28,9,21,7],[28,15,21,13,"key"],[28,18,21,16],[28,22,21,20,"keysToPropagate"],[28,37,21,35],[28,39,21,37],[29,6,22,4],[29,12,22,10,"value"],[29,17,22,15],[29,20,22,18,"props"],[29,25,22,23],[29,26,22,24,"key"],[29,29,22,27],[29,30,22,28],[30,6,23,4],[30,10,23,8,"value"],[30,15,23,13],[30,20,23,18,"undefined"],[30,29,23,27],[30,31,23,29],[31,8,24,6],[32,6,25,4],[33,6,26,4],[33,11,26,9],[33,17,26,15,"g"],[33,18,26,16],[33,22,26,20,"gesture"],[33,29,26,27],[33,30,26,28,"toGestureArray"],[33,44,26,42],[33,45,26,43],[33,46,26,44],[33,48,26,46],[34,8,27,6],[34,14,27,12,"config"],[34,20,27,18],[34,23,27,21,"g"],[34,24,27,22],[34,25,27,23,"config"],[34,31,27,29],[35,8,28,6,"config"],[35,14,28,12],[35,15,28,13,"key"],[35,18,28,16],[35,19,28,17],[35,22,28,20,"value"],[35,27,28,25],[36,6,29,4],[37,4,30,2],[38,2,31,0],[39,2,32,0],[40,0,33,0],[41,0,34,0],[42,0,35,0],[43,0,36,0],[44,0,37,0],[45,0,38,0],[46,0,39,0],[47,0,40,0],[48,0,41,0],[49,0,42,0],[50,0,43,0],[51,0,44,0],[52,0,45,0],[53,0,46,0],[54,2,47,7],[54,8,47,13,"GestureDetector"],[54,23,47,28],[54,26,47,31,"props"],[54,31,47,36],[54,35,47,40],[55,4,48,2],[55,10,48,8,"rootViewContext"],[55,25,48,23],[55,28,48,26],[55,32,48,26,"useContext"],[55,49,48,36],[55,51,48,37,"GestureHandlerRootViewContext"],[55,89,48,66],[55,90,48,67],[56,4,49,2],[56,8,49,6,"__DEV__"],[56,15,49,13],[56,19,49,17],[56,20,49,18,"rootViewContext"],[56,35,49,33],[56,39,49,37],[56,40,49,38],[56,44,49,38,"isTestEnv"],[56,60,49,47],[56,62,49,48],[56,63,49,49],[56,67,49,53,"Platform"],[56,84,49,61],[56,85,49,62,"OS"],[56,87,49,64],[56,92,49,69],[56,97,49,74],[56,99,49,76],[57,6,50,4],[57,12,50,10],[57,16,50,14,"Error"],[57,21,50,19],[57,22,50,20],[57,251,50,249],[57,252,50,250],[58,4,51,2],[60,4,53,2],[61,4,54,2],[61,10,54,8,"gestureConfig"],[61,23,54,21],[61,26,54,24,"props"],[61,31,54,29],[61,32,54,30,"gesture"],[61,39,54,37],[62,4,55,2,"propagateDetectorConfig"],[62,27,55,25],[62,28,55,26,"props"],[62,33,55,31],[62,35,55,33,"gestureConfig"],[62,48,55,46],[62,49,55,47],[63,4,56,2],[63,10,56,8,"gesturesToAttach"],[63,26,56,24],[63,29,56,27],[63,33,56,27,"useMemo"],[63,47,56,34],[63,49,56,35],[63,55,56,41,"gestureConfig"],[63,68,56,54],[63,69,56,55,"toGestureArray"],[63,83,56,69],[63,84,56,70],[63,85,56,71],[63,87,56,73],[63,88,56,74,"gestureConfig"],[63,101,56,87],[63,102,56,88],[63,103,56,89],[64,4,57,2],[64,10,57,8,"shouldUseReanimated"],[64,29,57,27],[64,32,57,30,"gesturesToAttach"],[64,48,57,46],[64,49,57,47,"some"],[64,53,57,51],[64,54,57,52,"g"],[64,55,57,53],[64,59,57,57,"g"],[64,60,57,58],[64,61,57,59,"shouldUseReanimated"],[64,80,57,78],[64,81,57,79],[65,4,58,2],[65,10,58,8,"webEventHandlersRef"],[65,29,58,27],[65,32,58,30],[65,36,58,30,"useWebEventHandlers"],[65,63,58,49],[65,65,58,50],[65,66,58,51],[66,4,59,2],[67,4,60,2],[67,10,60,8,"state"],[67,15,60,13],[67,18,60,16],[67,22,60,16,"useRef"],[67,35,60,22],[67,37,60,23],[68,6,61,4,"firstRender"],[68,17,61,15],[68,19,61,17],[68,23,61,21],[69,6,62,4,"viewRef"],[69,13,62,11],[69,15,62,13],[69,19,62,17],[70,6,63,4,"previousViewTag"],[70,21,63,19],[70,23,63,21],[70,24,63,22],[70,25,63,23],[71,6,64,4,"forceRebuildReanimatedEvent"],[71,33,64,31],[71,35,64,33],[72,4,65,2],[72,5,65,3],[72,6,65,4],[72,7,65,5,"current"],[72,14,65,12],[73,4,66,2],[73,10,66,8,"preparedGesture"],[73,25,66,23],[73,28,66,26,"React"],[73,42,66,31],[73,43,66,32,"useRef"],[73,49,66,38],[73,50,66,39],[74,6,67,4,"attachedGestures"],[74,22,67,20],[74,24,67,22],[74,26,67,24],[75,6,68,4,"animatedEventHandler"],[75,26,68,24],[75,28,68,26],[75,32,68,30],[76,6,69,4,"animatedHandlers"],[76,22,69,20],[76,24,69,22],[76,28,69,26],[77,6,70,4,"shouldUseReanimated"],[77,25,70,23],[77,27,70,25,"shouldUseReanimated"],[77,46,70,44],[78,6,71,4,"isMounted"],[78,15,71,13],[78,17,71,15],[79,4,72,2],[79,5,72,3],[79,6,72,4],[79,7,72,5,"current"],[79,14,72,12],[80,4,73,2],[80,10,73,8,"updateAttachedGestures"],[80,32,73,30],[80,35,73,33],[80,39,73,33,"useDetectorUpdater"],[80,77,73,51],[80,79,73,52,"state"],[80,84,73,57],[80,86,73,59,"preparedGesture"],[80,101,73,74],[80,103,73,76,"gesturesToAttach"],[80,119,73,92],[80,121,73,94,"gestureConfig"],[80,134,73,107],[80,136,73,109,"webEventHandlersRef"],[80,155,73,128],[80,156,73,129],[81,4,74,2],[81,10,74,8,"refHandler"],[81,20,74,18],[81,23,74,21],[81,27,74,21,"useViewRefHandler"],[81,63,74,38],[81,65,74,39,"state"],[81,70,74,44],[81,72,74,46,"updateAttachedGestures"],[81,94,74,68],[81,95,74,69],[83,4,76,2],[84,4,77,2],[85,4,78,2],[85,10,78,8,"needsToRebuildReanimatedEvent"],[85,39,78,37],[85,42,78,40,"state"],[85,47,78,45],[85,48,78,46,"firstRender"],[85,59,78,57],[85,63,78,61,"state"],[85,68,78,66],[85,69,78,67,"forceRebuildReanimatedEvent"],[85,96,78,94],[85,100,78,98],[85,104,78,98,"needsToReattach"],[85,136,78,113],[85,138,78,114,"preparedGesture"],[85,153,78,129],[85,155,78,131,"gesturesToAttach"],[85,171,78,147],[85,172,78,148],[86,4,79,2,"state"],[86,9,79,7],[86,10,79,8,"forceRebuildReanimatedEvent"],[86,37,79,35],[86,40,79,38],[86,45,79,43],[87,4,80,2],[87,8,80,2,"useAnimatedGesture"],[87,46,80,20],[87,48,80,21,"preparedGesture"],[87,63,80,36],[87,65,80,38,"needsToRebuildReanimatedEvent"],[87,94,80,67],[87,95,80,68],[88,4,81,2],[88,8,81,2,"useLayoutEffect"],[88,30,81,17],[88,32,81,18],[88,38,81,24],[89,6,82,4],[89,12,82,10,"viewTag"],[89,19,82,17],[89,22,82,20],[89,26,82,20,"findNodeHandle"],[89,49,82,34],[89,51,82,35,"state"],[89,56,82,40],[89,57,82,41,"viewRef"],[89,64,82,48],[89,65,82,49],[90,6,83,4,"preparedGesture"],[90,21,83,19],[90,22,83,20,"isMounted"],[90,31,83,29],[90,34,83,32],[90,38,83,36],[91,6,84,4],[91,10,84,4,"attachHandlers"],[91,40,84,18],[91,42,84,19],[92,8,85,6,"preparedGesture"],[92,23,85,21],[93,8,86,6,"gestureConfig"],[93,21,86,19],[94,8,87,6,"gesturesToAttach"],[94,24,87,22],[95,8,88,6,"webEventHandlersRef"],[95,27,88,25],[96,8,89,6,"viewTag"],[97,6,90,4],[97,7,90,5],[97,8,90,6],[98,6,91,4],[98,13,91,11],[98,19,91,17],[99,8,92,6,"preparedGesture"],[99,23,92,21],[99,24,92,22,"isMounted"],[99,33,92,31],[99,36,92,34],[99,41,92,39],[100,8,93,6],[100,12,93,6,"dropHandlers"],[100,38,93,18],[100,40,93,19,"preparedGesture"],[100,55,93,34],[100,56,93,35],[101,6,94,4],[101,7,94,5],[102,4,95,2],[102,5,95,3],[102,7,95,5],[102,9,95,7],[102,10,95,8],[103,4,96,2],[103,8,96,2,"useEffect"],[103,24,96,11],[103,26,96,12],[103,32,96,18],[104,6,97,4],[104,10,97,8,"state"],[104,15,97,13],[104,16,97,14,"firstRender"],[104,27,97,25],[104,29,97,27],[105,8,98,6,"state"],[105,13,98,11],[105,14,98,12,"firstRender"],[105,25,98,23],[105,28,98,26],[105,33,98,31],[106,6,99,4],[106,7,99,5],[106,13,99,11],[107,8,100,6,"updateAttachedGestures"],[107,30,100,28],[107,31,100,29],[107,32,100,30],[108,6,101,4],[109,4,102,2],[109,5,102,3],[109,7,102,5],[109,8,102,6,"props"],[109,13,102,11],[109,14,102,12],[109,15,102,13],[110,4,103,2],[110,8,103,2,"useMountReactions"],[110,44,103,19],[110,46,103,20,"updateAttachedGestures"],[110,68,103,42],[110,70,103,44,"preparedGesture"],[110,85,103,59],[110,86,103,60],[111,4,104,2],[111,8,104,6,"shouldUseReanimated"],[111,27,104,25],[111,29,104,27],[112,6,105,4],[112,13,105,11],[112,26,105,24],[112,30,105,24,"_jsx"],[112,45,105,28],[112,47,105,29,"AnimatedWrap"],[112,65,105,41],[112,67,105,43],[113,8,106,6,"ref"],[113,11,106,9],[113,13,106,11,"refHandler"],[113,23,106,21],[114,8,107,6,"onGestureHandlerEvent"],[114,29,107,27],[114,31,107,29,"preparedGesture"],[114,46,107,44],[114,47,107,45,"animatedEventHandler"],[114,67,107,65],[115,8,108,6,"children"],[115,16,108,14],[115,18,108,16,"props"],[115,23,108,21],[115,24,108,22,"children"],[116,6,109,4],[116,7,109,5],[116,8,109,6],[117,4,110,2],[117,5,110,3],[117,11,110,9],[118,6,111,4],[118,13,111,11],[118,26,111,24],[118,30,111,24,"_jsx"],[118,45,111,28],[118,47,111,29,"Wrap"],[118,57,111,33],[118,59,111,35],[119,8,112,6,"ref"],[119,11,112,9],[119,13,112,11,"refHandler"],[119,23,112,21],[120,8,113,6,"children"],[120,16,113,14],[120,18,113,16,"props"],[120,23,113,21],[120,24,113,22,"children"],[121,6,114,4],[121,7,114,5],[121,8,114,6],[122,4,115,2],[123,2,116,0],[123,3,116,1],[124,2,116,2,"exports"],[124,9,116,2],[124,10,116,2,"GestureDetector"],[124,25,116,2],[124,28,116,2,"GestureDetector"],[124,43,116,2],[125,0,116,2],[125,3]],"functionMap":{"names":["<global>","propagateDetectorConfig","GestureDetector","useMemo$argument_0","gesturesToAttach.some$argument_0","useLayoutEffect$argument_0","<anonymous>","useEffect$argument_0"],"mappings":"AAA;ACkB;CDY;+BEgB;mCCS,oCD;oDEC,0BF;kBGwB;WCU;KDG;GHC;YKC;GLM;CFc"}},"type":"js/module"}]}