{"dependencies":[{"name":"../PointerType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":45,"index":60}}],"key":"hYk7sjMJT+Y27KGuBYSPOC2Jih8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RNSVGElements = exports.PointerTypeMapping = void 0;\n  exports.calculateViewScale = calculateViewScale;\n  exports.degToRad = exports.coneToDeviation = void 0;\n  exports.isPointerInBounds = isPointerInBounds;\n  exports.isRNSVGElement = isRNSVGElement;\n  exports.isRNSVGNode = isRNSVGNode;\n  exports.tryExtractStylusData = tryExtractStylusData;\n  var _PointerType = require(_dependencyMap[0], \"../PointerType\");\n  function isPointerInBounds(view, {\n    x,\n    y\n  }) {\n    const rect = view.getBoundingClientRect();\n    return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n  }\n  const PointerTypeMapping = exports.PointerTypeMapping = new Map([['mouse', _PointerType.PointerType.MOUSE], ['touch', _PointerType.PointerType.TOUCH], ['pen', _PointerType.PointerType.STYLUS], ['none', _PointerType.PointerType.OTHER]]);\n  const degToRad = degrees => degrees * Math.PI / 180;\n  exports.degToRad = degToRad;\n  const coneToDeviation = degrees => Math.cos(degToRad(degrees / 2));\n  exports.coneToDeviation = coneToDeviation;\n  function calculateViewScale(view) {\n    const styles = getComputedStyle(view);\n    const resultScales = {\n      scaleX: 1,\n      scaleY: 1\n    };\n\n    // Get scales from scale property\n    if (styles.scale !== undefined && styles.scale !== 'none') {\n      const scales = styles.scale.split(' ');\n      if (scales[0]) {\n        resultScales.scaleX = parseFloat(scales[0]);\n      }\n      resultScales.scaleY = scales[1] ? parseFloat(scales[1]) : parseFloat(scales[0]);\n    }\n\n    // Get scales from transform property\n    const matrixElements = new RegExp(/matrix\\((.+)\\)/).exec(styles.transform)?.[1];\n    if (matrixElements) {\n      const matrixElementsArray = matrixElements.split(', ');\n      resultScales.scaleX *= parseFloat(matrixElementsArray[0]);\n      resultScales.scaleY *= parseFloat(matrixElementsArray[3]);\n    }\n    return resultScales;\n  }\n  function tryExtractStylusData(event) {\n    const pointerType = PointerTypeMapping.get(event.pointerType);\n    if (pointerType !== _PointerType.PointerType.STYLUS) {\n      return;\n    }\n\n    // @ts-ignore This property exists (https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent#instance_properties)\n    const eventAzimuthAngle = event.azimuthAngle;\n    // @ts-ignore This property exists (https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent#instance_properties)\n    const eventAltitudeAngle = event.altitudeAngle;\n    if (event.tiltX === 0 && event.tiltY === 0) {\n      // If we are in this branch, it means that either tilt properties are not supported and we have to calculate them from altitude and azimuth angles,\n      // or stylus is perpendicular to the screen and we can use altitude / azimuth instead of tilt\n\n      // If azimuth and altitude are undefined in this branch, it means that we are either perpendicular to the screen,\n      // or that none of the position sets is supported. In that case, we can treat stylus as perpendicular\n      if (eventAzimuthAngle === undefined || eventAltitudeAngle === undefined) {\n        return {\n          tiltX: 0,\n          tiltY: 0,\n          azimuthAngle: Math.PI / 2,\n          altitudeAngle: Math.PI / 2,\n          pressure: event.pressure\n        };\n      }\n      const {\n        tiltX,\n        tiltY\n      } = spherical2tilt(eventAltitudeAngle, eventAzimuthAngle);\n      return {\n        tiltX,\n        tiltY,\n        azimuthAngle: eventAzimuthAngle,\n        altitudeAngle: eventAltitudeAngle,\n        pressure: event.pressure\n      };\n    }\n    const {\n      altitudeAngle,\n      azimuthAngle\n    } = tilt2spherical(event.tiltX, event.tiltY);\n    return {\n      tiltX: event.tiltX,\n      tiltY: event.tiltY,\n      azimuthAngle,\n      altitudeAngle,\n      pressure: event.pressure\n    };\n  }\n\n  // `altitudeAngle` and `azimuthAngle` are experimental properties, which are not supported on Firefox and Safari.\n  // Given that, we use `tilt` properties and algorithm that converts one value to another.\n  //\n  // Source: https://w3c.github.io/pointerevents/#converting-between-tiltx-tilty-and-altitudeangle-azimuthangle\n  function tilt2spherical(tiltX, tiltY) {\n    const tiltXrad = tiltX * Math.PI / 180;\n    const tiltYrad = tiltY * Math.PI / 180;\n\n    // calculate azimuth angle\n    let azimuthAngle = 0;\n    if (tiltX === 0) {\n      if (tiltY > 0) {\n        azimuthAngle = Math.PI / 2;\n      } else if (tiltY < 0) {\n        azimuthAngle = 3 * Math.PI / 2;\n      }\n    } else if (tiltY === 0) {\n      if (tiltX < 0) {\n        azimuthAngle = Math.PI;\n      }\n    } else if (Math.abs(tiltX) === 90 || Math.abs(tiltY) === 90) {\n      // not enough information to calculate azimuth\n      azimuthAngle = 0;\n    } else {\n      // Non-boundary case: neither tiltX nor tiltY is equal to 0 or +-90\n      const tanX = Math.tan(tiltXrad);\n      const tanY = Math.tan(tiltYrad);\n      azimuthAngle = Math.atan2(tanY, tanX);\n      if (azimuthAngle < 0) {\n        azimuthAngle += 2 * Math.PI;\n      }\n    }\n\n    // calculate altitude angle\n    let altitudeAngle = 0;\n    if (Math.abs(tiltX) === 90 || Math.abs(tiltY) === 90) {\n      altitudeAngle = 0;\n    } else if (tiltX === 0) {\n      altitudeAngle = Math.PI / 2 - Math.abs(tiltYrad);\n    } else if (tiltY === 0) {\n      altitudeAngle = Math.PI / 2 - Math.abs(tiltXrad);\n    } else {\n      // Non-boundary case: neither tiltX nor tiltY is equal to 0 or +-90\n      altitudeAngle = Math.atan(1.0 / Math.sqrt(Math.pow(Math.tan(tiltXrad), 2) + Math.pow(Math.tan(tiltYrad), 2)));\n    }\n    return {\n      altitudeAngle: altitudeAngle,\n      azimuthAngle: azimuthAngle\n    };\n  }\n\n  // If we are on a platform that doesn't support `tiltX` and `tiltY`, we have to calculate them from `altitude` and `azimuth` angles.\n  //\n  // Source: https://w3c.github.io/pointerevents/#converting-between-tiltx-tilty-and-altitudeangle-azimuthangle\n  function spherical2tilt(altitudeAngle, azimuthAngle) {\n    const radToDeg = 180 / Math.PI;\n    let tiltXrad = 0;\n    let tiltYrad = 0;\n    if (altitudeAngle === 0) {\n      // the pen is in the X-Y plane\n      if (azimuthAngle === 0 || azimuthAngle === 2 * Math.PI) {\n        // pen is on positive X axis\n        tiltXrad = Math.PI / 2;\n      }\n      if (azimuthAngle === Math.PI / 2) {\n        // pen is on positive Y axis\n        tiltYrad = Math.PI / 2;\n      }\n      if (azimuthAngle === Math.PI) {\n        // pen is on negative X axis\n        tiltXrad = -Math.PI / 2;\n      }\n      if (azimuthAngle === 3 * Math.PI / 2) {\n        // pen is on negative Y axis\n        tiltYrad = -Math.PI / 2;\n      }\n      if (azimuthAngle > 0 && azimuthAngle < Math.PI / 2) {\n        tiltXrad = Math.PI / 2;\n        tiltYrad = Math.PI / 2;\n      }\n      if (azimuthAngle > Math.PI / 2 && azimuthAngle < Math.PI) {\n        tiltXrad = -Math.PI / 2;\n        tiltYrad = Math.PI / 2;\n      }\n      if (azimuthAngle > Math.PI && azimuthAngle < 3 * Math.PI / 2) {\n        tiltXrad = -Math.PI / 2;\n        tiltYrad = -Math.PI / 2;\n      }\n      if (azimuthAngle > 3 * Math.PI / 2 && azimuthAngle < 2 * Math.PI) {\n        tiltXrad = Math.PI / 2;\n        tiltYrad = -Math.PI / 2;\n      }\n    }\n    if (altitudeAngle !== 0) {\n      const tanAlt = Math.tan(altitudeAngle);\n      tiltXrad = Math.atan(Math.cos(azimuthAngle) / tanAlt);\n      tiltYrad = Math.atan(Math.sin(azimuthAngle) / tanAlt);\n    }\n    const tiltX = Math.round(tiltXrad * radToDeg);\n    const tiltY = Math.round(tiltYrad * radToDeg);\n    return {\n      tiltX,\n      tiltY\n    };\n  }\n  const RNSVGElements = exports.RNSVGElements = new Set(['Circle', 'ClipPath', 'Ellipse', 'ForeignObject', 'G', 'Image', 'Line', 'Marker', 'Mask', 'Path', 'Pattern', 'Polygon', 'Polyline', 'Rect', 'Svg', 'Symbol', 'TSpan', 'Text', 'TextPath', 'Use']);\n\n  // This function helps us determine whether given node is SVGElement or not. In our implementation of\n  // findNodeHandle, we can encounter such element in 2 forms - SVG tag or ref to SVG Element. Since Gesture Handler\n  // does not depend on SVG, we use our simplified SVGRef type that has `elementRef` field. This is something that is present\n  // in actual SVG ref object.\n  //\n  // In order to make sure that node passed into this function is in fact SVG element, first we check if its constructor name\n  // corresponds to one of the possible SVG elements. Then we also check if `elementRef` field exists.\n  // By doing both steps we decrease probability of detecting situations where, for example, user makes custom `Circle` and\n  // we treat it as SVG.\n  function isRNSVGElement(viewRef) {\n    const componentClassName = Object.getPrototypeOf(viewRef).constructor.name;\n    return RNSVGElements.has(componentClassName) && Object.hasOwn(viewRef, 'elementRef');\n  }\n\n  // This function checks if given node is SVGElement. Unlike the function above, this one\n  // operates on React Nodes, not DOM nodes.\n  //\n  // Second condition was introduced to handle case where SVG element was wrapped with\n  // `createAnimatedComponent` from Reanimated.\n  function isRNSVGNode(node) {\n    // If `ref` has `rngh` field, it means that component comes from Gesture Handler. This is a special case for\n    // `Text` component, which is present in `RNSVGElements` set, yet we don't want to treat it as SVG.\n    if (node.ref?.rngh) {\n      return false;\n    }\n    return Object.getPrototypeOf(node?.type)?.name === 'WebShape' || RNSVGElements.has(node?.type?.displayName);\n  }\n});","lineCount":236,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"RNSVGElements"],[7,23,1,13],[7,26,1,13,"exports"],[7,33,1,13],[7,34,1,13,"PointerTypeMapping"],[7,52,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"calculateViewScale"],[8,28,1,13],[8,31,1,13,"calculateViewScale"],[8,49,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"degToRad"],[9,18,1,13],[9,21,1,13,"exports"],[9,28,1,13],[9,29,1,13,"coneToDeviation"],[9,44,1,13],[10,2,1,13,"exports"],[10,9,1,13],[10,10,1,13,"isPointerInBounds"],[10,27,1,13],[10,30,1,13,"isPointerInBounds"],[10,47,1,13],[11,2,1,13,"exports"],[11,9,1,13],[11,10,1,13,"isRNSVGElement"],[11,24,1,13],[11,27,1,13,"isRNSVGElement"],[11,41,1,13],[12,2,1,13,"exports"],[12,9,1,13],[12,10,1,13,"isRNSVGNode"],[12,21,1,13],[12,24,1,13,"isRNSVGNode"],[12,35,1,13],[13,2,1,13,"exports"],[13,9,1,13],[13,10,1,13,"tryExtractStylusData"],[13,30,1,13],[13,33,1,13,"tryExtractStylusData"],[13,53,1,13],[14,2,3,0],[14,6,3,0,"_PointerType"],[14,18,3,0],[14,21,3,0,"require"],[14,28,3,0],[14,29,3,0,"_dependencyMap"],[14,43,3,0],[15,2,4,7],[15,11,4,16,"isPointerInBounds"],[15,28,4,33,"isPointerInBounds"],[15,29,4,34,"view"],[15,33,4,38],[15,35,4,40],[16,4,5,2,"x"],[16,5,5,3],[17,4,6,2,"y"],[18,2,7,0],[18,3,7,1],[18,5,7,3],[19,4,8,2],[19,10,8,8,"rect"],[19,14,8,12],[19,17,8,15,"view"],[19,21,8,19],[19,22,8,20,"getBoundingClientRect"],[19,43,8,41],[19,44,8,42],[19,45,8,43],[20,4,9,2],[20,11,9,9,"x"],[20,12,9,10],[20,16,9,14,"rect"],[20,20,9,18],[20,21,9,19,"left"],[20,25,9,23],[20,29,9,27,"x"],[20,30,9,28],[20,34,9,32,"rect"],[20,38,9,36],[20,39,9,37,"right"],[20,44,9,42],[20,48,9,46,"y"],[20,49,9,47],[20,53,9,51,"rect"],[20,57,9,55],[20,58,9,56,"top"],[20,61,9,59],[20,65,9,63,"y"],[20,66,9,64],[20,70,9,68,"rect"],[20,74,9,72],[20,75,9,73,"bottom"],[20,81,9,79],[21,2,10,0],[22,2,11,7],[22,8,11,13,"PointerTypeMapping"],[22,26,11,31],[22,29,11,31,"exports"],[22,36,11,31],[22,37,11,31,"PointerTypeMapping"],[22,55,11,31],[22,58,11,34],[22,62,11,38,"Map"],[22,65,11,41],[22,66,11,42],[22,67,11,43],[22,68,11,44],[22,75,11,51],[22,77,11,53,"PointerType"],[22,101,11,64],[22,102,11,65,"MOUSE"],[22,107,11,70],[22,108,11,71],[22,110,11,73],[22,111,11,74],[22,118,11,81],[22,120,11,83,"PointerType"],[22,144,11,94],[22,145,11,95,"TOUCH"],[22,150,11,100],[22,151,11,101],[22,153,11,103],[22,154,11,104],[22,159,11,109],[22,161,11,111,"PointerType"],[22,185,11,122],[22,186,11,123,"STYLUS"],[22,192,11,129],[22,193,11,130],[22,195,11,132],[22,196,11,133],[22,202,11,139],[22,204,11,141,"PointerType"],[22,228,11,152],[22,229,11,153,"OTHER"],[22,234,11,158],[22,235,11,159],[22,236,11,160],[22,237,11,161],[23,2,12,7],[23,8,12,13,"degToRad"],[23,16,12,21],[23,19,12,24,"degrees"],[23,26,12,31],[23,30,12,35,"degrees"],[23,37,12,42],[23,40,12,45,"Math"],[23,44,12,49],[23,45,12,50,"PI"],[23,47,12,52],[23,50,12,55],[23,53,12,58],[24,2,12,59,"exports"],[24,9,12,59],[24,10,12,59,"degToRad"],[24,18,12,59],[24,21,12,59,"degToRad"],[24,29,12,59],[25,2,13,7],[25,8,13,13,"coneToDeviation"],[25,23,13,28],[25,26,13,31,"degrees"],[25,33,13,38],[25,37,13,42,"Math"],[25,41,13,46],[25,42,13,47,"cos"],[25,45,13,50],[25,46,13,51,"degToRad"],[25,54,13,59],[25,55,13,60,"degrees"],[25,62,13,67],[25,65,13,70],[25,66,13,71],[25,67,13,72],[25,68,13,73],[26,2,13,74,"exports"],[26,9,13,74],[26,10,13,74,"coneToDeviation"],[26,25,13,74],[26,28,13,74,"coneToDeviation"],[26,43,13,74],[27,2,14,7],[27,11,14,16,"calculateViewScale"],[27,29,14,34,"calculateViewScale"],[27,30,14,35,"view"],[27,34,14,39],[27,36,14,41],[28,4,15,2],[28,10,15,8,"styles"],[28,16,15,14],[28,19,15,17,"getComputedStyle"],[28,35,15,33],[28,36,15,34,"view"],[28,40,15,38],[28,41,15,39],[29,4,16,2],[29,10,16,8,"resultScales"],[29,22,16,20],[29,25,16,23],[30,6,17,4,"scaleX"],[30,12,17,10],[30,14,17,12],[30,15,17,13],[31,6,18,4,"scaleY"],[31,12,18,10],[31,14,18,12],[32,4,19,2],[32,5,19,3],[34,4,21,2],[35,4,22,2],[35,8,22,6,"styles"],[35,14,22,12],[35,15,22,13,"scale"],[35,20,22,18],[35,25,22,23,"undefined"],[35,34,22,32],[35,38,22,36,"styles"],[35,44,22,42],[35,45,22,43,"scale"],[35,50,22,48],[35,55,22,53],[35,61,22,59],[35,63,22,61],[36,6,23,4],[36,12,23,10,"scales"],[36,18,23,16],[36,21,23,19,"styles"],[36,27,23,25],[36,28,23,26,"scale"],[36,33,23,31],[36,34,23,32,"split"],[36,39,23,37],[36,40,23,38],[36,43,23,41],[36,44,23,42],[37,6,24,4],[37,10,24,8,"scales"],[37,16,24,14],[37,17,24,15],[37,18,24,16],[37,19,24,17],[37,21,24,19],[38,8,25,6,"resultScales"],[38,20,25,18],[38,21,25,19,"scaleX"],[38,27,25,25],[38,30,25,28,"parseFloat"],[38,40,25,38],[38,41,25,39,"scales"],[38,47,25,45],[38,48,25,46],[38,49,25,47],[38,50,25,48],[38,51,25,49],[39,6,26,4],[40,6,27,4,"resultScales"],[40,18,27,16],[40,19,27,17,"scaleY"],[40,25,27,23],[40,28,27,26,"scales"],[40,34,27,32],[40,35,27,33],[40,36,27,34],[40,37,27,35],[40,40,27,38,"parseFloat"],[40,50,27,48],[40,51,27,49,"scales"],[40,57,27,55],[40,58,27,56],[40,59,27,57],[40,60,27,58],[40,61,27,59],[40,64,27,62,"parseFloat"],[40,74,27,72],[40,75,27,73,"scales"],[40,81,27,79],[40,82,27,80],[40,83,27,81],[40,84,27,82],[40,85,27,83],[41,4,28,2],[43,4,30,2],[44,4,31,2],[44,10,31,8,"matrixElements"],[44,24,31,22],[44,27,31,25],[44,31,31,29,"RegExp"],[44,37,31,35],[44,38,31,36],[44,54,31,52],[44,55,31,53],[44,56,31,54,"exec"],[44,60,31,58],[44,61,31,59,"styles"],[44,67,31,65],[44,68,31,66,"transform"],[44,77,31,75],[44,78,31,76],[44,81,31,79],[44,82,31,80],[44,83,31,81],[45,4,32,2],[45,8,32,6,"matrixElements"],[45,22,32,20],[45,24,32,22],[46,6,33,4],[46,12,33,10,"matrixElementsArray"],[46,31,33,29],[46,34,33,32,"matrixElements"],[46,48,33,46],[46,49,33,47,"split"],[46,54,33,52],[46,55,33,53],[46,59,33,57],[46,60,33,58],[47,6,34,4,"resultScales"],[47,18,34,16],[47,19,34,17,"scaleX"],[47,25,34,23],[47,29,34,27,"parseFloat"],[47,39,34,37],[47,40,34,38,"matrixElementsArray"],[47,59,34,57],[47,60,34,58],[47,61,34,59],[47,62,34,60],[47,63,34,61],[48,6,35,4,"resultScales"],[48,18,35,16],[48,19,35,17,"scaleY"],[48,25,35,23],[48,29,35,27,"parseFloat"],[48,39,35,37],[48,40,35,38,"matrixElementsArray"],[48,59,35,57],[48,60,35,58],[48,61,35,59],[48,62,35,60],[48,63,35,61],[49,4,36,2],[50,4,37,2],[50,11,37,9,"resultScales"],[50,23,37,21],[51,2,38,0],[52,2,39,7],[52,11,39,16,"tryExtractStylusData"],[52,31,39,36,"tryExtractStylusData"],[52,32,39,37,"event"],[52,37,39,42],[52,39,39,44],[53,4,40,2],[53,10,40,8,"pointerType"],[53,21,40,19],[53,24,40,22,"PointerTypeMapping"],[53,42,40,40],[53,43,40,41,"get"],[53,46,40,44],[53,47,40,45,"event"],[53,52,40,50],[53,53,40,51,"pointerType"],[53,64,40,62],[53,65,40,63],[54,4,41,2],[54,8,41,6,"pointerType"],[54,19,41,17],[54,24,41,22,"PointerType"],[54,48,41,33],[54,49,41,34,"STYLUS"],[54,55,41,40],[54,57,41,42],[55,6,42,4],[56,4,43,2],[58,4,45,2],[59,4,46,2],[59,10,46,8,"eventAzimuthAngle"],[59,27,46,25],[59,30,46,28,"event"],[59,35,46,33],[59,36,46,34,"azimuthAngle"],[59,48,46,46],[60,4,47,2],[61,4,48,2],[61,10,48,8,"eventAltitudeAngle"],[61,28,48,26],[61,31,48,29,"event"],[61,36,48,34],[61,37,48,35,"altitudeAngle"],[61,50,48,48],[62,4,49,2],[62,8,49,6,"event"],[62,13,49,11],[62,14,49,12,"tiltX"],[62,19,49,17],[62,24,49,22],[62,25,49,23],[62,29,49,27,"event"],[62,34,49,32],[62,35,49,33,"tiltY"],[62,40,49,38],[62,45,49,43],[62,46,49,44],[62,48,49,46],[63,6,50,4],[64,6,51,4],[66,6,53,4],[67,6,54,4],[68,6,55,4],[68,10,55,8,"eventAzimuthAngle"],[68,27,55,25],[68,32,55,30,"undefined"],[68,41,55,39],[68,45,55,43,"eventAltitudeAngle"],[68,63,55,61],[68,68,55,66,"undefined"],[68,77,55,75],[68,79,55,77],[69,8,56,6],[69,15,56,13],[70,10,57,8,"tiltX"],[70,15,57,13],[70,17,57,15],[70,18,57,16],[71,10,58,8,"tiltY"],[71,15,58,13],[71,17,58,15],[71,18,58,16],[72,10,59,8,"azimuthAngle"],[72,22,59,20],[72,24,59,22,"Math"],[72,28,59,26],[72,29,59,27,"PI"],[72,31,59,29],[72,34,59,32],[72,35,59,33],[73,10,60,8,"altitudeAngle"],[73,23,60,21],[73,25,60,23,"Math"],[73,29,60,27],[73,30,60,28,"PI"],[73,32,60,30],[73,35,60,33],[73,36,60,34],[74,10,61,8,"pressure"],[74,18,61,16],[74,20,61,18,"event"],[74,25,61,23],[74,26,61,24,"pressure"],[75,8,62,6],[75,9,62,7],[76,6,63,4],[77,6,64,4],[77,12,64,10],[78,8,65,6,"tiltX"],[78,13,65,11],[79,8,66,6,"tiltY"],[80,6,67,4],[80,7,67,5],[80,10,67,8,"spherical2tilt"],[80,24,67,22],[80,25,67,23,"eventAltitudeAngle"],[80,43,67,41],[80,45,67,43,"eventAzimuthAngle"],[80,62,67,60],[80,63,67,61],[81,6,68,4],[81,13,68,11],[82,8,69,6,"tiltX"],[82,13,69,11],[83,8,70,6,"tiltY"],[83,13,70,11],[84,8,71,6,"azimuthAngle"],[84,20,71,18],[84,22,71,20,"eventAzimuthAngle"],[84,39,71,37],[85,8,72,6,"altitudeAngle"],[85,21,72,19],[85,23,72,21,"eventAltitudeAngle"],[85,41,72,39],[86,8,73,6,"pressure"],[86,16,73,14],[86,18,73,16,"event"],[86,23,73,21],[86,24,73,22,"pressure"],[87,6,74,4],[87,7,74,5],[88,4,75,2],[89,4,76,2],[89,10,76,8],[90,6,77,4,"altitudeAngle"],[90,19,77,17],[91,6,78,4,"azimuthAngle"],[92,4,79,2],[92,5,79,3],[92,8,79,6,"tilt2spherical"],[92,22,79,20],[92,23,79,21,"event"],[92,28,79,26],[92,29,79,27,"tiltX"],[92,34,79,32],[92,36,79,34,"event"],[92,41,79,39],[92,42,79,40,"tiltY"],[92,47,79,45],[92,48,79,46],[93,4,80,2],[93,11,80,9],[94,6,81,4,"tiltX"],[94,11,81,9],[94,13,81,11,"event"],[94,18,81,16],[94,19,81,17,"tiltX"],[94,24,81,22],[95,6,82,4,"tiltY"],[95,11,82,9],[95,13,82,11,"event"],[95,18,82,16],[95,19,82,17,"tiltY"],[95,24,82,22],[96,6,83,4,"azimuthAngle"],[96,18,83,16],[97,6,84,4,"altitudeAngle"],[97,19,84,17],[98,6,85,4,"pressure"],[98,14,85,12],[98,16,85,14,"event"],[98,21,85,19],[98,22,85,20,"pressure"],[99,4,86,2],[99,5,86,3],[100,2,87,0],[102,2,89,0],[103,2,90,0],[104,2,91,0],[105,2,92,0],[106,2,93,0],[106,11,93,9,"tilt2spherical"],[106,25,93,23,"tilt2spherical"],[106,26,93,24,"tiltX"],[106,31,93,29],[106,33,93,31,"tiltY"],[106,38,93,36],[106,40,93,38],[107,4,94,2],[107,10,94,8,"tiltXrad"],[107,18,94,16],[107,21,94,19,"tiltX"],[107,26,94,24],[107,29,94,27,"Math"],[107,33,94,31],[107,34,94,32,"PI"],[107,36,94,34],[107,39,94,37],[107,42,94,40],[108,4,95,2],[108,10,95,8,"tiltYrad"],[108,18,95,16],[108,21,95,19,"tiltY"],[108,26,95,24],[108,29,95,27,"Math"],[108,33,95,31],[108,34,95,32,"PI"],[108,36,95,34],[108,39,95,37],[108,42,95,40],[110,4,97,2],[111,4,98,2],[111,8,98,6,"azimuthAngle"],[111,20,98,18],[111,23,98,21],[111,24,98,22],[112,4,99,2],[112,8,99,6,"tiltX"],[112,13,99,11],[112,18,99,16],[112,19,99,17],[112,21,99,19],[113,6,100,4],[113,10,100,8,"tiltY"],[113,15,100,13],[113,18,100,16],[113,19,100,17],[113,21,100,19],[114,8,101,6,"azimuthAngle"],[114,20,101,18],[114,23,101,21,"Math"],[114,27,101,25],[114,28,101,26,"PI"],[114,30,101,28],[114,33,101,31],[114,34,101,32],[115,6,102,4],[115,7,102,5],[115,13,102,11],[115,17,102,15,"tiltY"],[115,22,102,20],[115,25,102,23],[115,26,102,24],[115,28,102,26],[116,8,103,6,"azimuthAngle"],[116,20,103,18],[116,23,103,21],[116,24,103,22],[116,27,103,25,"Math"],[116,31,103,29],[116,32,103,30,"PI"],[116,34,103,32],[116,37,103,35],[116,38,103,36],[117,6,104,4],[118,4,105,2],[118,5,105,3],[118,11,105,9],[118,15,105,13,"tiltY"],[118,20,105,18],[118,25,105,23],[118,26,105,24],[118,28,105,26],[119,6,106,4],[119,10,106,8,"tiltX"],[119,15,106,13],[119,18,106,16],[119,19,106,17],[119,21,106,19],[120,8,107,6,"azimuthAngle"],[120,20,107,18],[120,23,107,21,"Math"],[120,27,107,25],[120,28,107,26,"PI"],[120,30,107,28],[121,6,108,4],[122,4,109,2],[122,5,109,3],[122,11,109,9],[122,15,109,13,"Math"],[122,19,109,17],[122,20,109,18,"abs"],[122,23,109,21],[122,24,109,22,"tiltX"],[122,29,109,27],[122,30,109,28],[122,35,109,33],[122,37,109,35],[122,41,109,39,"Math"],[122,45,109,43],[122,46,109,44,"abs"],[122,49,109,47],[122,50,109,48,"tiltY"],[122,55,109,53],[122,56,109,54],[122,61,109,59],[122,63,109,61],[122,65,109,63],[123,6,110,4],[124,6,111,4,"azimuthAngle"],[124,18,111,16],[124,21,111,19],[124,22,111,20],[125,4,112,2],[125,5,112,3],[125,11,112,9],[126,6,113,4],[127,6,114,4],[127,12,114,10,"tanX"],[127,16,114,14],[127,19,114,17,"Math"],[127,23,114,21],[127,24,114,22,"tan"],[127,27,114,25],[127,28,114,26,"tiltXrad"],[127,36,114,34],[127,37,114,35],[128,6,115,4],[128,12,115,10,"tanY"],[128,16,115,14],[128,19,115,17,"Math"],[128,23,115,21],[128,24,115,22,"tan"],[128,27,115,25],[128,28,115,26,"tiltYrad"],[128,36,115,34],[128,37,115,35],[129,6,116,4,"azimuthAngle"],[129,18,116,16],[129,21,116,19,"Math"],[129,25,116,23],[129,26,116,24,"atan2"],[129,31,116,29],[129,32,116,30,"tanY"],[129,36,116,34],[129,38,116,36,"tanX"],[129,42,116,40],[129,43,116,41],[130,6,117,4],[130,10,117,8,"azimuthAngle"],[130,22,117,20],[130,25,117,23],[130,26,117,24],[130,28,117,26],[131,8,118,6,"azimuthAngle"],[131,20,118,18],[131,24,118,22],[131,25,118,23],[131,28,118,26,"Math"],[131,32,118,30],[131,33,118,31,"PI"],[131,35,118,33],[132,6,119,4],[133,4,120,2],[135,4,122,2],[136,4,123,2],[136,8,123,6,"altitudeAngle"],[136,21,123,19],[136,24,123,22],[136,25,123,23],[137,4,124,2],[137,8,124,6,"Math"],[137,12,124,10],[137,13,124,11,"abs"],[137,16,124,14],[137,17,124,15,"tiltX"],[137,22,124,20],[137,23,124,21],[137,28,124,26],[137,30,124,28],[137,34,124,32,"Math"],[137,38,124,36],[137,39,124,37,"abs"],[137,42,124,40],[137,43,124,41,"tiltY"],[137,48,124,46],[137,49,124,47],[137,54,124,52],[137,56,124,54],[137,58,124,56],[138,6,125,4,"altitudeAngle"],[138,19,125,17],[138,22,125,20],[138,23,125,21],[139,4,126,2],[139,5,126,3],[139,11,126,9],[139,15,126,13,"tiltX"],[139,20,126,18],[139,25,126,23],[139,26,126,24],[139,28,126,26],[140,6,127,4,"altitudeAngle"],[140,19,127,17],[140,22,127,20,"Math"],[140,26,127,24],[140,27,127,25,"PI"],[140,29,127,27],[140,32,127,30],[140,33,127,31],[140,36,127,34,"Math"],[140,40,127,38],[140,41,127,39,"abs"],[140,44,127,42],[140,45,127,43,"tiltYrad"],[140,53,127,51],[140,54,127,52],[141,4,128,2],[141,5,128,3],[141,11,128,9],[141,15,128,13,"tiltY"],[141,20,128,18],[141,25,128,23],[141,26,128,24],[141,28,128,26],[142,6,129,4,"altitudeAngle"],[142,19,129,17],[142,22,129,20,"Math"],[142,26,129,24],[142,27,129,25,"PI"],[142,29,129,27],[142,32,129,30],[142,33,129,31],[142,36,129,34,"Math"],[142,40,129,38],[142,41,129,39,"abs"],[142,44,129,42],[142,45,129,43,"tiltXrad"],[142,53,129,51],[142,54,129,52],[143,4,130,2],[143,5,130,3],[143,11,130,9],[144,6,131,4],[145,6,132,4,"altitudeAngle"],[145,19,132,17],[145,22,132,20,"Math"],[145,26,132,24],[145,27,132,25,"atan"],[145,31,132,29],[145,32,132,30],[145,35,132,33],[145,38,132,36,"Math"],[145,42,132,40],[145,43,132,41,"sqrt"],[145,47,132,45],[145,48,132,46,"Math"],[145,52,132,50],[145,53,132,51,"pow"],[145,56,132,54],[145,57,132,55,"Math"],[145,61,132,59],[145,62,132,60,"tan"],[145,65,132,63],[145,66,132,64,"tiltXrad"],[145,74,132,72],[145,75,132,73],[145,77,132,75],[145,78,132,76],[145,79,132,77],[145,82,132,80,"Math"],[145,86,132,84],[145,87,132,85,"pow"],[145,90,132,88],[145,91,132,89,"Math"],[145,95,132,93],[145,96,132,94,"tan"],[145,99,132,97],[145,100,132,98,"tiltYrad"],[145,108,132,106],[145,109,132,107],[145,111,132,109],[145,112,132,110],[145,113,132,111],[145,114,132,112],[145,115,132,113],[146,4,133,2],[147,4,134,2],[147,11,134,9],[148,6,135,4,"altitudeAngle"],[148,19,135,17],[148,21,135,19,"altitudeAngle"],[148,34,135,32],[149,6,136,4,"azimuthAngle"],[149,18,136,16],[149,20,136,18,"azimuthAngle"],[150,4,137,2],[150,5,137,3],[151,2,138,0],[153,2,140,0],[154,2,141,0],[155,2,142,0],[156,2,143,0],[156,11,143,9,"spherical2tilt"],[156,25,143,23,"spherical2tilt"],[156,26,143,24,"altitudeAngle"],[156,39,143,37],[156,41,143,39,"azimuthAngle"],[156,53,143,51],[156,55,143,53],[157,4,144,2],[157,10,144,8,"radToDeg"],[157,18,144,16],[157,21,144,19],[157,24,144,22],[157,27,144,25,"Math"],[157,31,144,29],[157,32,144,30,"PI"],[157,34,144,32],[158,4,145,2],[158,8,145,6,"tiltXrad"],[158,16,145,14],[158,19,145,17],[158,20,145,18],[159,4,146,2],[159,8,146,6,"tiltYrad"],[159,16,146,14],[159,19,146,17],[159,20,146,18],[160,4,147,2],[160,8,147,6,"altitudeAngle"],[160,21,147,19],[160,26,147,24],[160,27,147,25],[160,29,147,27],[161,6,148,4],[162,6,149,4],[162,10,149,8,"azimuthAngle"],[162,22,149,20],[162,27,149,25],[162,28,149,26],[162,32,149,30,"azimuthAngle"],[162,44,149,42],[162,49,149,47],[162,50,149,48],[162,53,149,51,"Math"],[162,57,149,55],[162,58,149,56,"PI"],[162,60,149,58],[162,62,149,60],[163,8,150,6],[164,8,151,6,"tiltXrad"],[164,16,151,14],[164,19,151,17,"Math"],[164,23,151,21],[164,24,151,22,"PI"],[164,26,151,24],[164,29,151,27],[164,30,151,28],[165,6,152,4],[166,6,153,4],[166,10,153,8,"azimuthAngle"],[166,22,153,20],[166,27,153,25,"Math"],[166,31,153,29],[166,32,153,30,"PI"],[166,34,153,32],[166,37,153,35],[166,38,153,36],[166,40,153,38],[167,8,154,6],[168,8,155,6,"tiltYrad"],[168,16,155,14],[168,19,155,17,"Math"],[168,23,155,21],[168,24,155,22,"PI"],[168,26,155,24],[168,29,155,27],[168,30,155,28],[169,6,156,4],[170,6,157,4],[170,10,157,8,"azimuthAngle"],[170,22,157,20],[170,27,157,25,"Math"],[170,31,157,29],[170,32,157,30,"PI"],[170,34,157,32],[170,36,157,34],[171,8,158,6],[172,8,159,6,"tiltXrad"],[172,16,159,14],[172,19,159,17],[172,20,159,18,"Math"],[172,24,159,22],[172,25,159,23,"PI"],[172,27,159,25],[172,30,159,28],[172,31,159,29],[173,6,160,4],[174,6,161,4],[174,10,161,8,"azimuthAngle"],[174,22,161,20],[174,27,161,25],[174,28,161,26],[174,31,161,29,"Math"],[174,35,161,33],[174,36,161,34,"PI"],[174,38,161,36],[174,41,161,39],[174,42,161,40],[174,44,161,42],[175,8,162,6],[176,8,163,6,"tiltYrad"],[176,16,163,14],[176,19,163,17],[176,20,163,18,"Math"],[176,24,163,22],[176,25,163,23,"PI"],[176,27,163,25],[176,30,163,28],[176,31,163,29],[177,6,164,4],[178,6,165,4],[178,10,165,8,"azimuthAngle"],[178,22,165,20],[178,25,165,23],[178,26,165,24],[178,30,165,28,"azimuthAngle"],[178,42,165,40],[178,45,165,43,"Math"],[178,49,165,47],[178,50,165,48,"PI"],[178,52,165,50],[178,55,165,53],[178,56,165,54],[178,58,165,56],[179,8,166,6,"tiltXrad"],[179,16,166,14],[179,19,166,17,"Math"],[179,23,166,21],[179,24,166,22,"PI"],[179,26,166,24],[179,29,166,27],[179,30,166,28],[180,8,167,6,"tiltYrad"],[180,16,167,14],[180,19,167,17,"Math"],[180,23,167,21],[180,24,167,22,"PI"],[180,26,167,24],[180,29,167,27],[180,30,167,28],[181,6,168,4],[182,6,169,4],[182,10,169,8,"azimuthAngle"],[182,22,169,20],[182,25,169,23,"Math"],[182,29,169,27],[182,30,169,28,"PI"],[182,32,169,30],[182,35,169,33],[182,36,169,34],[182,40,169,38,"azimuthAngle"],[182,52,169,50],[182,55,169,53,"Math"],[182,59,169,57],[182,60,169,58,"PI"],[182,62,169,60],[182,64,169,62],[183,8,170,6,"tiltXrad"],[183,16,170,14],[183,19,170,17],[183,20,170,18,"Math"],[183,24,170,22],[183,25,170,23,"PI"],[183,27,170,25],[183,30,170,28],[183,31,170,29],[184,8,171,6,"tiltYrad"],[184,16,171,14],[184,19,171,17,"Math"],[184,23,171,21],[184,24,171,22,"PI"],[184,26,171,24],[184,29,171,27],[184,30,171,28],[185,6,172,4],[186,6,173,4],[186,10,173,8,"azimuthAngle"],[186,22,173,20],[186,25,173,23,"Math"],[186,29,173,27],[186,30,173,28,"PI"],[186,32,173,30],[186,36,173,34,"azimuthAngle"],[186,48,173,46],[186,51,173,49],[186,52,173,50],[186,55,173,53,"Math"],[186,59,173,57],[186,60,173,58,"PI"],[186,62,173,60],[186,65,173,63],[186,66,173,64],[186,68,173,66],[187,8,174,6,"tiltXrad"],[187,16,174,14],[187,19,174,17],[187,20,174,18,"Math"],[187,24,174,22],[187,25,174,23,"PI"],[187,27,174,25],[187,30,174,28],[187,31,174,29],[188,8,175,6,"tiltYrad"],[188,16,175,14],[188,19,175,17],[188,20,175,18,"Math"],[188,24,175,22],[188,25,175,23,"PI"],[188,27,175,25],[188,30,175,28],[188,31,175,29],[189,6,176,4],[190,6,177,4],[190,10,177,8,"azimuthAngle"],[190,22,177,20],[190,25,177,23],[190,26,177,24],[190,29,177,27,"Math"],[190,33,177,31],[190,34,177,32,"PI"],[190,36,177,34],[190,39,177,37],[190,40,177,38],[190,44,177,42,"azimuthAngle"],[190,56,177,54],[190,59,177,57],[190,60,177,58],[190,63,177,61,"Math"],[190,67,177,65],[190,68,177,66,"PI"],[190,70,177,68],[190,72,177,70],[191,8,178,6,"tiltXrad"],[191,16,178,14],[191,19,178,17,"Math"],[191,23,178,21],[191,24,178,22,"PI"],[191,26,178,24],[191,29,178,27],[191,30,178,28],[192,8,179,6,"tiltYrad"],[192,16,179,14],[192,19,179,17],[192,20,179,18,"Math"],[192,24,179,22],[192,25,179,23,"PI"],[192,27,179,25],[192,30,179,28],[192,31,179,29],[193,6,180,4],[194,4,181,2],[195,4,182,2],[195,8,182,6,"altitudeAngle"],[195,21,182,19],[195,26,182,24],[195,27,182,25],[195,29,182,27],[196,6,183,4],[196,12,183,10,"tanAlt"],[196,18,183,16],[196,21,183,19,"Math"],[196,25,183,23],[196,26,183,24,"tan"],[196,29,183,27],[196,30,183,28,"altitudeAngle"],[196,43,183,41],[196,44,183,42],[197,6,184,4,"tiltXrad"],[197,14,184,12],[197,17,184,15,"Math"],[197,21,184,19],[197,22,184,20,"atan"],[197,26,184,24],[197,27,184,25,"Math"],[197,31,184,29],[197,32,184,30,"cos"],[197,35,184,33],[197,36,184,34,"azimuthAngle"],[197,48,184,46],[197,49,184,47],[197,52,184,50,"tanAlt"],[197,58,184,56],[197,59,184,57],[198,6,185,4,"tiltYrad"],[198,14,185,12],[198,17,185,15,"Math"],[198,21,185,19],[198,22,185,20,"atan"],[198,26,185,24],[198,27,185,25,"Math"],[198,31,185,29],[198,32,185,30,"sin"],[198,35,185,33],[198,36,185,34,"azimuthAngle"],[198,48,185,46],[198,49,185,47],[198,52,185,50,"tanAlt"],[198,58,185,56],[198,59,185,57],[199,4,186,2],[200,4,187,2],[200,10,187,8,"tiltX"],[200,15,187,13],[200,18,187,16,"Math"],[200,22,187,20],[200,23,187,21,"round"],[200,28,187,26],[200,29,187,27,"tiltXrad"],[200,37,187,35],[200,40,187,38,"radToDeg"],[200,48,187,46],[200,49,187,47],[201,4,188,2],[201,10,188,8,"tiltY"],[201,15,188,13],[201,18,188,16,"Math"],[201,22,188,20],[201,23,188,21,"round"],[201,28,188,26],[201,29,188,27,"tiltYrad"],[201,37,188,35],[201,40,188,38,"radToDeg"],[201,48,188,46],[201,49,188,47],[202,4,189,2],[202,11,189,9],[203,6,190,4,"tiltX"],[203,11,190,9],[204,6,191,4,"tiltY"],[205,4,192,2],[205,5,192,3],[206,2,193,0],[207,2,194,7],[207,8,194,13,"RNSVGElements"],[207,21,194,26],[207,24,194,26,"exports"],[207,31,194,26],[207,32,194,26,"RNSVGElements"],[207,45,194,26],[207,48,194,29],[207,52,194,33,"Set"],[207,55,194,36],[207,56,194,37],[207,57,194,38],[207,65,194,46],[207,67,194,48],[207,77,194,58],[207,79,194,60],[207,88,194,69],[207,90,194,71],[207,105,194,86],[207,107,194,88],[207,110,194,91],[207,112,194,93],[207,119,194,100],[207,121,194,102],[207,127,194,108],[207,129,194,110],[207,137,194,118],[207,139,194,120],[207,145,194,126],[207,147,194,128],[207,153,194,134],[207,155,194,136],[207,164,194,145],[207,166,194,147],[207,175,194,156],[207,177,194,158],[207,187,194,168],[207,189,194,170],[207,195,194,176],[207,197,194,178],[207,202,194,183],[207,204,194,185],[207,212,194,193],[207,214,194,195],[207,221,194,202],[207,223,194,204],[207,229,194,210],[207,231,194,212],[207,241,194,222],[207,243,194,224],[207,248,194,229],[207,249,194,230],[207,250,194,231],[209,2,196,0],[210,2,197,0],[211,2,198,0],[212,2,199,0],[213,2,200,0],[214,2,201,0],[215,2,202,0],[216,2,203,0],[217,2,204,0],[218,2,205,7],[218,11,205,16,"isRNSVGElement"],[218,25,205,30,"isRNSVGElement"],[218,26,205,31,"viewRef"],[218,33,205,38],[218,35,205,40],[219,4,206,2],[219,10,206,8,"componentClassName"],[219,28,206,26],[219,31,206,29,"Object"],[219,37,206,35],[219,38,206,36,"getPrototypeOf"],[219,52,206,50],[219,53,206,51,"viewRef"],[219,60,206,58],[219,61,206,59],[219,62,206,60,"constructor"],[219,73,206,71],[219,74,206,72,"name"],[219,78,206,76],[220,4,207,2],[220,11,207,9,"RNSVGElements"],[220,24,207,22],[220,25,207,23,"has"],[220,28,207,26],[220,29,207,27,"componentClassName"],[220,47,207,45],[220,48,207,46],[220,52,207,50,"Object"],[220,58,207,56],[220,59,207,57,"hasOwn"],[220,65,207,63],[220,66,207,64,"viewRef"],[220,73,207,71],[220,75,207,73],[220,87,207,85],[220,88,207,86],[221,2,208,0],[223,2,210,0],[224,2,211,0],[225,2,212,0],[226,2,213,0],[227,2,214,0],[228,2,215,7],[228,11,215,16,"isRNSVGNode"],[228,22,215,27,"isRNSVGNode"],[228,23,215,28,"node"],[228,27,215,32],[228,29,215,34],[229,4,216,2],[230,4,217,2],[231,4,218,2],[231,8,218,6,"node"],[231,12,218,10],[231,13,218,11,"ref"],[231,16,218,14],[231,18,218,16,"rngh"],[231,22,218,20],[231,24,218,22],[232,6,219,4],[232,13,219,11],[232,18,219,16],[233,4,220,2],[234,4,221,2],[234,11,221,9,"Object"],[234,17,221,15],[234,18,221,16,"getPrototypeOf"],[234,32,221,30],[234,33,221,31,"node"],[234,37,221,35],[234,39,221,37,"type"],[234,43,221,41],[234,44,221,42],[234,46,221,44,"name"],[234,50,221,48],[234,55,221,53],[234,65,221,63],[234,69,221,67,"RNSVGElements"],[234,82,221,80],[234,83,221,81,"has"],[234,86,221,84],[234,87,221,85,"node"],[234,91,221,89],[234,93,221,91,"type"],[234,97,221,95],[234,99,221,97,"displayName"],[234,110,221,108],[234,111,221,109],[235,2,222,0],[236,0,222,1],[236,3]],"functionMap":{"names":["<global>","isPointerInBounds","degToRad","coneToDeviation","calculateViewScale","tryExtractStylusData","tilt2spherical","spherical2tilt","isRNSVGElement","isRNSVGNode"],"mappings":"AAA;OCG;CDM;wBEE,kCF;+BGC,0CH;OIC;CJwB;OKC;CLgD;AMM;CN6C;AOK;CPkD;OQY;CRG;OSO;CTO"}},"type":"js/module"}]}