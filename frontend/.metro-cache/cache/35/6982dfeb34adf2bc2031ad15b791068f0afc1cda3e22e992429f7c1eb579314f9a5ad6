{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":49,"index":64}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SimultaneousGesture = exports.ExclusiveGesture = exports.ComposedGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function extendRelation(currentRelation, extendWith) {\n    if (currentRelation === undefined) {\n      return [...extendWith];\n    } else {\n      return [...currentRelation, ...extendWith];\n    }\n  }\n  class ComposedGesture extends _gesture.Gesture {\n    gestures = [];\n    simultaneousGestures = [];\n    requireGesturesToFail = [];\n    constructor(...gestures) {\n      super();\n      this.gestures = gestures;\n    }\n    prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {\n      if (gesture instanceof _gesture.BaseGesture) {\n        const newConfig = Object.assign({}, gesture.config);\n\n        // No need to extend `blocksHandlers` here, because it's not changed in composition.\n        // The same effect is achieved by reversing the order of 2 gestures in `Exclusive`\n        newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);\n        newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);\n        gesture.config = newConfig;\n      } else if (gesture instanceof ComposedGesture) {\n        gesture.simultaneousGestures = simultaneousGestures;\n        gesture.requireGesturesToFail = requireGesturesToFail;\n        gesture.prepare();\n      }\n    }\n    prepare() {\n      for (const gesture of this.gestures) {\n        this.prepareSingleGesture(gesture, this.simultaneousGestures, this.requireGesturesToFail);\n      }\n    }\n    initialize() {\n      for (const gesture of this.gestures) {\n        gesture.initialize();\n      }\n    }\n    toGestureArray() {\n      return this.gestures.flatMap(gesture => gesture.toGestureArray());\n    }\n  }\n  exports.ComposedGesture = ComposedGesture;\n  class SimultaneousGesture extends ComposedGesture {\n    prepare() {\n      // This piece of magic works something like this:\n      // for every gesture in the array\n      const simultaneousArrays = this.gestures.map(gesture =>\n      // we take the array it's in\n      this.gestures\n      // and make a copy without it\n      .filter(x => x !== gesture)\n      // then we flatmap the result to get list of raw (not composed) gestures\n      // this way we don't make the gestures simultaneous with themselves, which is\n      // important when the gesture is `ExclusiveGesture` - we don't want to make\n      // exclusive gestures simultaneous\n      .flatMap(x => x.toGestureArray()));\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], simultaneousArrays[i], this.requireGesturesToFail);\n      }\n    }\n  }\n  exports.SimultaneousGesture = SimultaneousGesture;\n  class ExclusiveGesture extends ComposedGesture {\n    prepare() {\n      // Transforms the array of gestures into array of grouped raw (not composed) gestures\n      // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n      const gestureArrays = this.gestures.map(gesture => gesture.toGestureArray());\n      let requireToFail = [];\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail));\n\n        // Every group gets to wait for all groups before it\n        requireToFail = requireToFail.concat(gestureArrays[i]);\n      }\n    }\n  }\n  exports.ExclusiveGesture = ExclusiveGesture;\n});","lineCount":89,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"SimultaneousGesture"],[7,29,1,13],[7,32,1,13,"exports"],[7,39,1,13],[7,40,1,13,"ExclusiveGesture"],[7,56,1,13],[7,59,1,13,"exports"],[7,66,1,13],[7,67,1,13,"ComposedGesture"],[7,82,1,13],[8,2,3,0],[8,6,3,0,"_gesture"],[8,14,3,0],[8,17,3,0,"require"],[8,24,3,0],[8,25,3,0,"_dependencyMap"],[8,39,3,0],[9,2,4,0],[9,11,4,9,"extendRelation"],[9,25,4,23,"extendRelation"],[9,26,4,24,"currentRelation"],[9,41,4,39],[9,43,4,41,"extendWith"],[9,53,4,51],[9,55,4,53],[10,4,5,2],[10,8,5,6,"currentRelation"],[10,23,5,21],[10,28,5,26,"undefined"],[10,37,5,35],[10,39,5,37],[11,6,6,4],[11,13,6,11],[11,14,6,12],[11,17,6,15,"extendWith"],[11,27,6,25],[11,28,6,26],[12,4,7,2],[12,5,7,3],[12,11,7,9],[13,6,8,4],[13,13,8,11],[13,14,8,12],[13,17,8,15,"currentRelation"],[13,32,8,30],[13,34,8,32],[13,37,8,35,"extendWith"],[13,47,8,45],[13,48,8,46],[14,4,9,2],[15,2,10,0],[16,2,11,7],[16,8,11,13,"ComposedGesture"],[16,23,11,28],[16,32,11,37,"Gesture"],[16,48,11,44],[16,49,11,45],[17,4,12,2,"gestures"],[17,12,12,10],[17,15,12,13],[17,17,12,15],[18,4,13,2,"simultaneousGestures"],[18,24,13,22],[18,27,13,25],[18,29,13,27],[19,4,14,2,"requireGesturesToFail"],[19,25,14,23],[19,28,14,26],[19,30,14,28],[20,4,15,2,"constructor"],[20,15,15,13,"constructor"],[20,16,15,14],[20,19,15,17,"gestures"],[20,27,15,25],[20,29,15,27],[21,6,16,4],[21,11,16,9],[21,12,16,10],[21,13,16,11],[22,6,17,4],[22,10,17,8],[22,11,17,9,"gestures"],[22,19,17,17],[22,22,17,20,"gestures"],[22,30,17,28],[23,4,18,2],[24,4,19,2,"prepareSingleGesture"],[24,24,19,22,"prepareSingleGesture"],[24,25,19,23,"gesture"],[24,32,19,30],[24,34,19,32,"simultaneousGestures"],[24,54,19,52],[24,56,19,54,"requireGesturesToFail"],[24,77,19,75],[24,79,19,77],[25,6,20,4],[25,10,20,8,"gesture"],[25,17,20,15],[25,29,20,27,"BaseGesture"],[25,49,20,38],[25,51,20,40],[26,8,21,6],[26,14,21,12,"newConfig"],[26,23,21,21],[26,26,21,21,"Object"],[26,32,21,21],[26,33,21,21,"assign"],[26,39,21,21],[26,44,22,11,"gesture"],[26,51,22,18],[26,52,22,19,"config"],[26,58,22,25],[26,59,23,7],[28,8,25,6],[29,8,26,6],[30,8,27,6,"newConfig"],[30,17,27,15],[30,18,27,16,"simultaneousWith"],[30,34,27,32],[30,37,27,35,"extendRelation"],[30,51,27,49],[30,52,27,50,"newConfig"],[30,61,27,59],[30,62,27,60,"simultaneousWith"],[30,78,27,76],[30,80,27,78,"simultaneousGestures"],[30,100,27,98],[30,101,27,99],[31,8,28,6,"newConfig"],[31,17,28,15],[31,18,28,16,"requireToFail"],[31,31,28,29],[31,34,28,32,"extendRelation"],[31,48,28,46],[31,49,28,47,"newConfig"],[31,58,28,56],[31,59,28,57,"requireToFail"],[31,72,28,70],[31,74,28,72,"requireGesturesToFail"],[31,95,28,93],[31,96,28,94],[32,8,29,6,"gesture"],[32,15,29,13],[32,16,29,14,"config"],[32,22,29,20],[32,25,29,23,"newConfig"],[32,34,29,32],[33,6,30,4],[33,7,30,5],[33,13,30,11],[33,17,30,15,"gesture"],[33,24,30,22],[33,36,30,34,"ComposedGesture"],[33,51,30,49],[33,53,30,51],[34,8,31,6,"gesture"],[34,15,31,13],[34,16,31,14,"simultaneousGestures"],[34,36,31,34],[34,39,31,37,"simultaneousGestures"],[34,59,31,57],[35,8,32,6,"gesture"],[35,15,32,13],[35,16,32,14,"requireGesturesToFail"],[35,37,32,35],[35,40,32,38,"requireGesturesToFail"],[35,61,32,59],[36,8,33,6,"gesture"],[36,15,33,13],[36,16,33,14,"prepare"],[36,23,33,21],[36,24,33,22],[36,25,33,23],[37,6,34,4],[38,4,35,2],[39,4,36,2,"prepare"],[39,11,36,9,"prepare"],[39,12,36,9],[39,14,36,12],[40,6,37,4],[40,11,37,9],[40,17,37,15,"gesture"],[40,24,37,22],[40,28,37,26],[40,32,37,30],[40,33,37,31,"gestures"],[40,41,37,39],[40,43,37,41],[41,8,38,6],[41,12,38,10],[41,13,38,11,"prepareSingleGesture"],[41,33,38,31],[41,34,38,32,"gesture"],[41,41,38,39],[41,43,38,41],[41,47,38,45],[41,48,38,46,"simultaneousGestures"],[41,68,38,66],[41,70,38,68],[41,74,38,72],[41,75,38,73,"requireGesturesToFail"],[41,96,38,94],[41,97,38,95],[42,6,39,4],[43,4,40,2],[44,4,41,2,"initialize"],[44,14,41,12,"initialize"],[44,15,41,12],[44,17,41,15],[45,6,42,4],[45,11,42,9],[45,17,42,15,"gesture"],[45,24,42,22],[45,28,42,26],[45,32,42,30],[45,33,42,31,"gestures"],[45,41,42,39],[45,43,42,41],[46,8,43,6,"gesture"],[46,15,43,13],[46,16,43,14,"initialize"],[46,26,43,24],[46,27,43,25],[46,28,43,26],[47,6,44,4],[48,4,45,2],[49,4,46,2,"toGestureArray"],[49,18,46,16,"toGestureArray"],[49,19,46,16],[49,21,46,19],[50,6,47,4],[50,13,47,11],[50,17,47,15],[50,18,47,16,"gestures"],[50,26,47,24],[50,27,47,25,"flatMap"],[50,34,47,32],[50,35,47,33,"gesture"],[50,42,47,40],[50,46,47,44,"gesture"],[50,53,47,51],[50,54,47,52,"toGestureArray"],[50,68,47,66],[50,69,47,67],[50,70,47,68],[50,71,47,69],[51,4,48,2],[52,2,49,0],[53,2,49,1,"exports"],[53,9,49,1],[53,10,49,1,"ComposedGesture"],[53,25,49,1],[53,28,49,1,"ComposedGesture"],[53,43,49,1],[54,2,50,7],[54,8,50,13,"SimultaneousGesture"],[54,27,50,32],[54,36,50,41,"ComposedGesture"],[54,51,50,56],[54,52,50,57],[55,4,51,2,"prepare"],[55,11,51,9,"prepare"],[55,12,51,9],[55,14,51,12],[56,6,52,4],[57,6,53,4],[58,6,54,4],[58,12,54,10,"simultaneousArrays"],[58,30,54,28],[58,33,54,31],[58,37,54,35],[58,38,54,36,"gestures"],[58,46,54,44],[58,47,54,45,"map"],[58,50,54,48],[58,51,54,49,"gesture"],[58,58,54,56],[59,6,55,4],[60,6,56,4],[60,10,56,8],[60,11,56,9,"gestures"],[61,6,57,4],[62,6,57,4],[62,7,58,5,"filter"],[62,13,58,11],[62,14,58,12,"x"],[62,15,58,13],[62,19,58,17,"x"],[62,20,58,18],[62,25,58,23,"gesture"],[62,32,58,30],[63,6,59,4],[64,6,60,4],[65,6,61,4],[66,6,62,4],[67,6,62,4],[67,7,63,5,"flatMap"],[67,14,63,12],[67,15,63,13,"x"],[67,16,63,14],[67,20,63,18,"x"],[67,21,63,19],[67,22,63,20,"toGestureArray"],[67,36,63,34],[67,37,63,35],[67,38,63,36],[67,39,63,37],[67,40,63,38],[68,6,64,4],[68,11,64,9],[68,15,64,13,"i"],[68,16,64,14],[68,19,64,17],[68,20,64,18],[68,22,64,20,"i"],[68,23,64,21],[68,26,64,24],[68,30,64,28],[68,31,64,29,"gestures"],[68,39,64,37],[68,40,64,38,"length"],[68,46,64,44],[68,48,64,46,"i"],[68,49,64,47],[68,51,64,49],[68,53,64,51],[69,8,65,6],[69,12,65,10],[69,13,65,11,"prepareSingleGesture"],[69,33,65,31],[69,34,65,32],[69,38,65,36],[69,39,65,37,"gestures"],[69,47,65,45],[69,48,65,46,"i"],[69,49,65,47],[69,50,65,48],[69,52,65,50,"simultaneousArrays"],[69,70,65,68],[69,71,65,69,"i"],[69,72,65,70],[69,73,65,71],[69,75,65,73],[69,79,65,77],[69,80,65,78,"requireGesturesToFail"],[69,101,65,99],[69,102,65,100],[70,6,66,4],[71,4,67,2],[72,2,68,0],[73,2,68,1,"exports"],[73,9,68,1],[73,10,68,1,"SimultaneousGesture"],[73,29,68,1],[73,32,68,1,"SimultaneousGesture"],[73,51,68,1],[74,2,69,7],[74,8,69,13,"ExclusiveGesture"],[74,24,69,29],[74,33,69,38,"ComposedGesture"],[74,48,69,53],[74,49,69,54],[75,4,70,2,"prepare"],[75,11,70,9,"prepare"],[75,12,70,9],[75,14,70,12],[76,6,71,4],[77,6,72,4],[78,6,73,4],[78,12,73,10,"gestureArrays"],[78,25,73,23],[78,28,73,26],[78,32,73,30],[78,33,73,31,"gestures"],[78,41,73,39],[78,42,73,40,"map"],[78,45,73,43],[78,46,73,44,"gesture"],[78,53,73,51],[78,57,73,55,"gesture"],[78,64,73,62],[78,65,73,63,"toGestureArray"],[78,79,73,77],[78,80,73,78],[78,81,73,79],[78,82,73,80],[79,6,74,4],[79,10,74,8,"requireToFail"],[79,23,74,21],[79,26,74,24],[79,28,74,26],[80,6,75,4],[80,11,75,9],[80,15,75,13,"i"],[80,16,75,14],[80,19,75,17],[80,20,75,18],[80,22,75,20,"i"],[80,23,75,21],[80,26,75,24],[80,30,75,28],[80,31,75,29,"gestures"],[80,39,75,37],[80,40,75,38,"length"],[80,46,75,44],[80,48,75,46,"i"],[80,49,75,47],[80,51,75,49],[80,53,75,51],[81,8,76,6],[81,12,76,10],[81,13,76,11,"prepareSingleGesture"],[81,33,76,31],[81,34,76,32],[81,38,76,36],[81,39,76,37,"gestures"],[81,47,76,45],[81,48,76,46,"i"],[81,49,76,47],[81,50,76,48],[81,52,76,50],[81,56,76,54],[81,57,76,55,"simultaneousGestures"],[81,77,76,75],[81,79,76,77],[81,83,76,81],[81,84,76,82,"requireGesturesToFail"],[81,105,76,103],[81,106,76,104,"concat"],[81,112,76,110],[81,113,76,111,"requireToFail"],[81,126,76,124],[81,127,76,125],[81,128,76,126],[83,8,78,6],[84,8,79,6,"requireToFail"],[84,21,79,19],[84,24,79,22,"requireToFail"],[84,37,79,35],[84,38,79,36,"concat"],[84,44,79,42],[84,45,79,43,"gestureArrays"],[84,58,79,56],[84,59,79,57,"i"],[84,60,79,58],[84,61,79,59],[84,62,79,60],[85,6,80,4],[86,4,81,2],[87,2,82,0],[88,2,82,1,"exports"],[88,9,82,1],[88,10,82,1,"ExclusiveGesture"],[88,26,82,1],[88,29,82,1,"ExclusiveGesture"],[88,45,82,1],[89,0,82,1],[89,3]],"functionMap":{"names":["<global>","extendRelation","ComposedGesture","ComposedGesture#constructor","ComposedGesture#prepareSingleGesture","ComposedGesture#prepare","ComposedGesture#initialize","ComposedGesture#toGestureArray","gestures.flatMap$argument_0","SimultaneousGesture","SimultaneousGesture#prepare","gestures.map$argument_0","gestures.filter$argument_0","gestures.filter.flatMap$argument_0","ExclusiveGesture","ExclusiveGesture#prepare"],"mappings":"AAA;ACG;CDM;OEC;ECI;GDG;EEC;GFgB;EGC;GHI;EIC;GJI;EKC;iCCC,mCD;GLC;CFC;OSC;ECC;iDCG;YCI,kBD;aEK,uBF,CD;GDI;CTC;OcC;ECC;4CJG,mCI;GDQ;CdC"}},"type":"js/module"}]}