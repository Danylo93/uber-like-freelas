{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/UIManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"7C1XCUhVWjU661dof+/eeoL/fDY=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"]}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":119},"end":{"line":5,"column":66,"index":185}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"]}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":186},"end":{"line":6,"column":63,"index":249}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":250},"end":{"line":7,"column":33,"index":283}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":284},"end":{"line":8,"column":108,"index":392}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"]}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":393},"end":{"line":9,"column":56,"index":449}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":450},"end":{"line":10,"column":64,"index":514}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":515},"end":{"line":11,"column":47,"index":562}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":563},"end":{"line":12,"column":81,"index":644}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":645},"end":{"line":13,"column":43,"index":688}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"]}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":689},"end":{"line":14,"column":64,"index":753}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"]}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":754},"end":{"line":15,"column":77,"index":831}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"]}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":832},"end":{"line":16,"column":55,"index":887}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"]}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":888},"end":{"line":17,"column":49,"index":937}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":938},"end":{"line":18,"column":48,"index":986}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var React = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\"));\n  var _UIManager = _interopRequireDefault(require(_dependencyMap[3], \"react-native-web/dist/exports/UIManager\"));\n  var _DeviceEventEmitter = _interopRequireDefault(require(_dependencyMap[4], \"react-native-web/dist/exports/DeviceEventEmitter\"));\n  var _customDirectEventTypes = require(_dependencyMap[5], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[6], \"../RNGestureHandlerModule\"));\n  var _State = require(_dependencyMap[7], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[8], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[9], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[10], \"./utils\");\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[11], \"../findNodeHandle\"));\n  var _utils2 = require(_dependencyMap[12], \"../utils\");\n  var _ActionType = require(_dependencyMap[13], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[14], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = _interopRequireDefault(require(_dependencyMap[15], \"../GestureHandlerRootViewContext\"));\n  var _ghQueueMicrotask = require(_dependencyMap[16], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[17], \"../mountRegistry\");\n  var _jsxRuntime = require(_dependencyMap[18], \"react/jsx-runtime\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const UIManagerAny = _UIManager.default;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  const customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  const customGHEventsConfig = Object.assign({\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  }, (0, _utils2.isFabric)() && _Platform.default.OS === 'android' && customGHEventsConfigFabricAndroid);\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = Object.assign({}, UIManagerAny.genericDirectEventTypes, customGHEventsConfig);\n  const UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants');\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = Object.assign({}, UIManagerConstants.genericDirectEventTypes, customGHEventsConfig);\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  const {\n    setJSResponder: oldSetJSResponder = () => {\n      // no-op\n    },\n    clearJSResponder: oldClearJSResponder = () => {\n      // no-op\n    }\n  } = UIManagerAny;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  let allowTouches = true;\n  const DEV_ON_ANDROID = __DEV__ && _Platform.default.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    const extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  const stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  const UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler({\n    name,\n    allowedProps = [],\n    config = {},\n    transformProps,\n    customNativeProps = []\n  }) {\n    class Handler extends React.Component {\n      static displayName = name;\n      static contextType = _GestureHandlerRootViewContext.default;\n      handlerTag = -1;\n      constructor(props) {\n        super(props);\n        this.config = {};\n        this.propsRef = /*#__PURE__*/React.createRef();\n        this.isMountedRef = /*#__PURE__*/React.createRef();\n        this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = this.handlerTag;\n        }\n      }\n      componentDidMount() {\n        const props = this.props;\n        this.isMountedRef.current = true;\n        if (DEV_ON_ANDROID) {\n          this.inspectorToggleListener = _DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n            this.setState(_ => ({\n              allowTouches\n            }));\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        if (hasUnresolvedRefs(props)) {\n          // If there are unresolved refs (e.g. \".current\" has not yet been set)\n          // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n          // _update method that will try to update native handler props using\n          // queueMicrotask. This makes it so update() function gets called after all\n          // react components are mounted and we expect the missing ref object to\n          // be resolved by then.\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n        if (!this.viewNode) {\n          throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n        }\n        this.attachGestureHandler((0, _findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n      }\n      componentDidUpdate() {\n        const viewTag = (0, _findNodeHandle.default)(this.viewNode);\n        if (this.viewTag !== viewTag) {\n          this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n        }\n        this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n      }\n      componentWillUnmount() {\n        this.inspectorToggleListener?.remove();\n        this.isMountedRef.current = false;\n        if (_Platform.default.OS !== 'web') {\n          (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n        }\n        _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n        (0, _utils.scheduleFlushOperations)();\n        // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n        const handlerID = this.props.id;\n        if (handlerID) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete _handlersRegistry.handlerIDToTag[handlerID];\n        }\n        _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n      }\n      onGestureHandlerEvent = event => {\n        if (event.nativeEvent.handlerTag === this.handlerTag) {\n          if (typeof this.props.onGestureEvent === 'function') {\n            this.props.onGestureEvent?.(event);\n          }\n        } else {\n          this.props.onGestureHandlerEvent?.(event);\n        }\n      };\n\n      // TODO(TS) - make sure this is right type for event\n      onGestureHandlerStateChange = event => {\n        if (event.nativeEvent.handlerTag === this.handlerTag) {\n          if (typeof this.props.onHandlerStateChange === 'function') {\n            this.props.onHandlerStateChange?.(event);\n          }\n          const state = event.nativeEvent.state;\n          const stateEventName = stateToPropMappings[state];\n          const eventHandler = stateEventName && this.props[stateEventName];\n          if (eventHandler && typeof eventHandler === 'function') {\n            eventHandler(event);\n          }\n        } else {\n          this.props.onGestureHandlerStateChange?.(event);\n        }\n      };\n      refHandler = node => {\n        this.viewNode = node;\n        const child = React.Children.only(this.props.children);\n        // @ts-ignore Since React 19 ref is accessible as standard prop\n        // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n        const ref = (0, _utils2.isReact19)() ? child.props?.ref : child?.ref;\n        if (!ref) {\n          return;\n        }\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      };\n      createGestureHandler = newConfig => {\n        this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        this.config = newConfig;\n        _RNGestureHandlerModule.default.createGestureHandler(name, this.handlerTag, newConfig);\n      };\n      attachGestureHandler = newViewTag => {\n        this.viewTag = newViewTag;\n        if (_Platform.default.OS === 'web') {\n          // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n          _RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n          // ignored on web\n          this.propsRef);\n        } else {\n          (0, _handlersRegistry.registerOldGestureHandler)(this.handlerTag, {\n            onGestureEvent: this.onGestureHandlerEvent,\n            onGestureStateChange: this.onGestureHandlerStateChange\n          });\n          const actionType = (() => {\n            const onGestureEvent = this.props?.onGestureEvent;\n            const isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n            const onHandlerStateChange = this.props?.onHandlerStateChange;\n            const isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n            const isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n            if (isReanimatedHandler) {\n              // Reanimated worklet\n              return _ActionType.ActionType.REANIMATED_WORKLET;\n            } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n              // Animated.event with useNativeDriver: true\n              return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n            } else {\n              // JS callback or Animated.event with useNativeDriver: false\n              return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n            }\n          })();\n          _RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, actionType);\n        }\n        (0, _utils.scheduleFlushOperations)();\n        (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n          _mountRegistry.MountRegistry.gestureHandlerWillMount(this);\n        });\n      };\n      updateGestureHandler = newConfig => {\n        this.config = newConfig;\n        _RNGestureHandlerModule.default.updateGestureHandler(this.handlerTag, newConfig);\n        (0, _utils.scheduleFlushOperations)();\n      };\n      update(remainingTries) {\n        if (!this.isMountedRef.current) {\n          return;\n        }\n        const props = this.props;\n\n        // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n        // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n        // again is easy enough fix.\n        if (hasUnresolvedRefs(props) && remainingTries > 0) {\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(remainingTries - 1);\n          });\n        } else {\n          const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n          if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }\n\n      // eslint-disable-next-line @eslint-react/no-unused-class-component-members\n      setNativeProps(updates) {\n        const mergedProps = Object.assign({}, this.props, updates);\n        const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n        this.updateGestureHandler(newConfig);\n      }\n      render() {\n        if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && _Platform.default.OS !== 'web') {\n          throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/installation for more details.');\n        }\n        let gestureEventHandler = this.onGestureHandlerEvent;\n        // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onGestureEvent,\n          onGestureHandlerEvent\n        } = this.props;\n        if (onGestureEvent && typeof onGestureEvent !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerEvent) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureEventHandler = onGestureEvent;\n        } else {\n          if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        let gestureStateEventHandler = this.onGestureHandlerStateChange;\n        // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onHandlerStateChange,\n          onGestureHandlerStateChange\n        } = this.props;\n        if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerStateChange) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureStateEventHandler = onHandlerStateChange;\n        } else {\n          if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        const events = {\n          onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n          onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n        };\n        this.propsRef.current = events;\n        let child = null;\n        try {\n          child = React.Children.only(this.props.children);\n        } catch (e) {\n          throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n        }\n        let grandChildren = child.props.children;\n        if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n          grandChildren = React.Children.toArray(grandChildren);\n          grandChildren.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_PressabilityDebugView.PressabilityDebugView, {\n            color: \"mediumspringgreen\",\n            hitSlop: child.props.hitSlop\n          }, \"pressabilityDebugView\"));\n        }\n        return /*#__PURE__*/React.cloneElement(child, Object.assign({\n          ref: this.refHandler,\n          collapsable: false\n        }, (0, _utils2.isTestEnv)() ? {\n          handlerType: name,\n          handlerTag: this.handlerTag,\n          enabled: this.props.enabled\n        } : {}, {\n          testID: this.props.testID ?? child.props.testID\n        }, events), grandChildren);\n      }\n    }\n    return Handler;\n  }\n});","lineCount":377,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[8,20,1,13,"createHandler"],[8,33,1,13],[9,2,3,0],[9,6,3,0,"React"],[9,11,3,0],[9,14,3,0,"_interopRequireWildcard"],[9,37,3,0],[9,38,3,0,"require"],[9,45,3,0],[9,46,3,0,"_dependencyMap"],[9,60,3,0],[10,2,3,31],[10,6,3,31,"_Platform"],[10,15,3,31],[10,18,3,31,"_interopRequireDefault"],[10,40,3,31],[10,41,3,31,"require"],[10,48,3,31],[10,49,3,31,"_dependencyMap"],[10,63,3,31],[11,2,3,31],[11,6,3,31,"_UIManager"],[11,16,3,31],[11,19,3,31,"_interopRequireDefault"],[11,41,3,31],[11,42,3,31,"require"],[11,49,3,31],[11,50,3,31,"_dependencyMap"],[11,64,3,31],[12,2,3,31],[12,6,3,31,"_DeviceEventEmitter"],[12,25,3,31],[12,28,3,31,"_interopRequireDefault"],[12,50,3,31],[12,51,3,31,"require"],[12,58,3,31],[12,59,3,31,"_dependencyMap"],[12,73,3,31],[13,2,5,0],[13,6,5,0,"_customDirectEventTypes"],[13,29,5,0],[13,32,5,0,"require"],[13,39,5,0],[13,40,5,0,"_dependencyMap"],[13,54,5,0],[14,2,6,0],[14,6,6,0,"_RNGestureHandlerModule"],[14,29,6,0],[14,32,6,0,"_interopRequireDefault"],[14,54,6,0],[14,55,6,0,"require"],[14,62,6,0],[14,63,6,0,"_dependencyMap"],[14,77,6,0],[15,2,7,0],[15,6,7,0,"_State"],[15,12,7,0],[15,15,7,0,"require"],[15,22,7,0],[15,23,7,0,"_dependencyMap"],[15,37,7,0],[16,2,8,0],[16,6,8,0,"_handlersRegistry"],[16,23,8,0],[16,26,8,0,"require"],[16,33,8,0],[16,34,8,0,"_dependencyMap"],[16,48,8,0],[17,2,9,0],[17,6,9,0,"_getNextHandlerTag"],[17,24,9,0],[17,27,9,0,"require"],[17,34,9,0],[17,35,9,0,"_dependencyMap"],[17,49,9,0],[18,2,10,0],[18,6,10,0,"_utils"],[18,12,10,0],[18,15,10,0,"require"],[18,22,10,0],[18,23,10,0,"_dependencyMap"],[18,37,10,0],[19,2,11,0],[19,6,11,0,"_findNodeHandle"],[19,21,11,0],[19,24,11,0,"_interopRequireDefault"],[19,46,11,0],[19,47,11,0,"require"],[19,54,11,0],[19,55,11,0,"_dependencyMap"],[19,69,11,0],[20,2,12,0],[20,6,12,0,"_utils2"],[20,13,12,0],[20,16,12,0,"require"],[20,23,12,0],[20,24,12,0,"_dependencyMap"],[20,38,12,0],[21,2,13,0],[21,6,13,0,"_ActionType"],[21,17,13,0],[21,20,13,0,"require"],[21,27,13,0],[21,28,13,0,"_dependencyMap"],[21,42,13,0],[22,2,14,0],[22,6,14,0,"_PressabilityDebugView"],[22,28,14,0],[22,31,14,0,"require"],[22,38,14,0],[22,39,14,0,"_dependencyMap"],[22,53,14,0],[23,2,15,0],[23,6,15,0,"_GestureHandlerRootViewContext"],[23,36,15,0],[23,39,15,0,"_interopRequireDefault"],[23,61,15,0],[23,62,15,0,"require"],[23,69,15,0],[23,70,15,0,"_dependencyMap"],[23,84,15,0],[24,2,16,0],[24,6,16,0,"_ghQueueMicrotask"],[24,23,16,0],[24,26,16,0,"require"],[24,33,16,0],[24,34,16,0,"_dependencyMap"],[24,48,16,0],[25,2,17,0],[25,6,17,0,"_mountRegistry"],[25,20,17,0],[25,23,17,0,"require"],[25,30,17,0],[25,31,17,0,"_dependencyMap"],[25,45,17,0],[26,2,18,0],[26,6,18,0,"_jsxRuntime"],[26,17,18,0],[26,20,18,0,"require"],[26,27,18,0],[26,28,18,0,"_dependencyMap"],[26,42,18,0],[27,2,18,48],[27,11,18,48,"_interopRequireWildcard"],[27,35,18,48,"e"],[27,36,18,48],[27,38,18,48,"t"],[27,39,18,48],[27,68,18,48,"WeakMap"],[27,75,18,48],[27,81,18,48,"r"],[27,82,18,48],[27,89,18,48,"WeakMap"],[27,96,18,48],[27,100,18,48,"n"],[27,101,18,48],[27,108,18,48,"WeakMap"],[27,115,18,48],[27,127,18,48,"_interopRequireWildcard"],[27,150,18,48],[27,162,18,48,"_interopRequireWildcard"],[27,163,18,48,"e"],[27,164,18,48],[27,166,18,48,"t"],[27,167,18,48],[27,176,18,48,"t"],[27,177,18,48],[27,181,18,48,"e"],[27,182,18,48],[27,186,18,48,"e"],[27,187,18,48],[27,188,18,48,"__esModule"],[27,198,18,48],[27,207,18,48,"e"],[27,208,18,48],[27,214,18,48,"o"],[27,215,18,48],[27,217,18,48,"i"],[27,218,18,48],[27,220,18,48,"f"],[27,221,18,48],[27,226,18,48,"__proto__"],[27,235,18,48],[27,243,18,48,"default"],[27,250,18,48],[27,252,18,48,"e"],[27,253,18,48],[27,270,18,48,"e"],[27,271,18,48],[27,294,18,48,"e"],[27,295,18,48],[27,320,18,48,"e"],[27,321,18,48],[27,330,18,48,"f"],[27,331,18,48],[27,337,18,48,"o"],[27,338,18,48],[27,341,18,48,"t"],[27,342,18,48],[27,345,18,48,"n"],[27,346,18,48],[27,349,18,48,"r"],[27,350,18,48],[27,358,18,48,"o"],[27,359,18,48],[27,360,18,48,"has"],[27,363,18,48],[27,364,18,48,"e"],[27,365,18,48],[27,375,18,48,"o"],[27,376,18,48],[27,377,18,48,"get"],[27,380,18,48],[27,381,18,48,"e"],[27,382,18,48],[27,385,18,48,"o"],[27,386,18,48],[27,387,18,48,"set"],[27,390,18,48],[27,391,18,48,"e"],[27,392,18,48],[27,394,18,48,"f"],[27,395,18,48],[27,411,18,48,"t"],[27,412,18,48],[27,416,18,48,"e"],[27,417,18,48],[27,433,18,48,"t"],[27,434,18,48],[27,441,18,48,"hasOwnProperty"],[27,455,18,48],[27,456,18,48,"call"],[27,460,18,48],[27,461,18,48,"e"],[27,462,18,48],[27,464,18,48,"t"],[27,465,18,48],[27,472,18,48,"i"],[27,473,18,48],[27,477,18,48,"o"],[27,478,18,48],[27,481,18,48,"Object"],[27,487,18,48],[27,488,18,48,"defineProperty"],[27,502,18,48],[27,507,18,48,"Object"],[27,513,18,48],[27,514,18,48,"getOwnPropertyDescriptor"],[27,538,18,48],[27,539,18,48,"e"],[27,540,18,48],[27,542,18,48,"t"],[27,543,18,48],[27,550,18,48,"i"],[27,551,18,48],[27,552,18,48,"get"],[27,555,18,48],[27,559,18,48,"i"],[27,560,18,48],[27,561,18,48,"set"],[27,564,18,48],[27,568,18,48,"o"],[27,569,18,48],[27,570,18,48,"f"],[27,571,18,48],[27,573,18,48,"t"],[27,574,18,48],[27,576,18,48,"i"],[27,577,18,48],[27,581,18,48,"f"],[27,582,18,48],[27,583,18,48,"t"],[27,584,18,48],[27,588,18,48,"e"],[27,589,18,48],[27,590,18,48,"t"],[27,591,18,48],[27,602,18,48,"f"],[27,603,18,48],[27,608,18,48,"e"],[27,609,18,48],[27,611,18,48,"t"],[27,612,18,48],[28,2,19,0],[28,8,19,6,"UIManagerAny"],[28,20,19,18],[28,23,19,21,"UIManager"],[28,41,19,30],[29,2,20,0,"customDirectEventTypes"],[29,48,20,22],[29,49,20,23,"topGestureHandlerEvent"],[29,71,20,45],[29,74,20,48],[30,4,21,2,"registrationName"],[30,20,21,18],[30,22,21,20],[31,2,22,0],[31,3,22,1],[32,2,23,0],[32,8,23,6,"customGHEventsConfigFabricAndroid"],[32,41,23,39],[32,44,23,42],[33,4,24,2,"topOnGestureHandlerEvent"],[33,28,24,26],[33,30,24,28],[34,6,25,4,"registrationName"],[34,22,25,20],[34,24,25,22],[35,4,26,2],[35,5,26,3],[36,4,27,2,"topOnGestureHandlerStateChange"],[36,34,27,32],[36,36,27,34],[37,6,28,4,"registrationName"],[37,22,28,20],[37,24,28,22],[38,4,29,2],[39,2,30,0],[39,3,30,1],[40,2,31,0],[40,8,31,6,"customGHEventsConfig"],[40,28,31,26],[40,31,31,26,"Object"],[40,37,31,26],[40,38,31,26,"assign"],[40,44,31,26],[41,4,32,2,"onGestureHandlerEvent"],[41,25,32,23],[41,27,32,25],[42,6,33,4,"registrationName"],[42,22,33,20],[42,24,33,22],[43,4,34,2],[43,5,34,3],[44,4,35,2,"onGestureHandlerStateChange"],[44,31,35,29],[44,33,35,31],[45,6,36,4,"registrationName"],[45,22,36,20],[45,24,36,22],[46,4,37,2],[47,2,37,3],[47,5,46,6],[47,9,46,6,"isFabric"],[47,25,46,14],[47,27,46,15],[47,28,46,16],[47,32,46,20,"Platform"],[47,49,46,28],[47,50,46,29,"OS"],[47,52,46,31],[47,57,46,36],[47,66,46,45],[47,70,46,49,"customGHEventsConfigFabricAndroid"],[47,103,46,82],[47,104,47,1],[49,2,49,0],[50,2,50,0],[51,2,51,0],[52,2,52,0],[53,2,53,0,"UIManagerAny"],[53,14,53,12],[53,15,53,13,"genericDirectEventTypes"],[53,38,53,36],[53,41,53,36,"Object"],[53,47,53,36],[53,48,53,36,"assign"],[53,54,53,36],[53,59,54,5,"UIManagerAny"],[53,71,54,17],[53,72,54,18,"genericDirectEventTypes"],[53,95,54,41],[53,97,55,5,"customGHEventsConfig"],[53,117,55,25],[53,118,56,1],[54,2,57,0],[54,8,57,6,"UIManagerConstants"],[54,26,57,24],[54,29,57,27,"UIManagerAny"],[54,41,57,39],[54,42,57,40,"getViewManagerConfig"],[54,62,57,60],[54,65,57,63],[54,79,57,77],[54,80,57,78],[55,2,58,0],[55,6,58,4,"UIManagerConstants"],[55,24,58,22],[55,26,58,24],[56,4,59,2,"UIManagerConstants"],[56,22,59,20],[56,23,59,21,"genericDirectEventTypes"],[56,46,59,44],[56,49,59,44,"Object"],[56,55,59,44],[56,56,59,44,"assign"],[56,62,59,44],[56,67,60,7,"UIManagerConstants"],[56,85,60,25],[56,86,60,26,"genericDirectEventTypes"],[56,109,60,49],[56,111,61,7,"customGHEventsConfig"],[56,131,61,27],[56,132,62,3],[57,2,63,0],[59,2,65,0],[60,2,66,0],[60,8,66,6],[61,4,67,2,"setJSResponder"],[61,18,67,16],[61,20,67,18,"oldSetJSResponder"],[61,37,67,35],[61,40,67,38,"oldSetJSResponder"],[61,41,67,38],[61,46,67,44],[62,6,68,4],[63,4,68,4],[63,5,69,3],[64,4,70,2,"clearJSResponder"],[64,20,70,18],[64,22,70,20,"oldClearJSResponder"],[64,41,70,39],[64,44,70,42,"oldClearJSResponder"],[64,45,70,42],[64,50,70,48],[65,6,71,4],[66,4,71,4],[67,2,73,0],[67,3,73,1],[67,6,73,4,"UIManagerAny"],[67,18,73,16],[68,2,74,0,"UIManagerAny"],[68,14,74,12],[68,15,74,13,"setJSResponder"],[68,29,74,27],[68,32,74,30],[68,33,74,31,"tag"],[68,36,74,34],[68,38,74,36,"blockNativeResponder"],[68,58,74,56],[68,63,74,61],[69,4,75,2,"RNGestureHandlerModule"],[69,35,75,24],[69,36,75,25,"handleSetJSResponder"],[69,56,75,45],[69,57,75,46,"tag"],[69,60,75,49],[69,62,75,51,"blockNativeResponder"],[69,82,75,71],[69,83,75,72],[70,4,76,2,"oldSetJSResponder"],[70,21,76,19],[70,22,76,20,"tag"],[70,25,76,23],[70,27,76,25,"blockNativeResponder"],[70,47,76,45],[70,48,76,46],[71,2,77,0],[71,3,77,1],[72,2,78,0,"UIManagerAny"],[72,14,78,12],[72,15,78,13,"clearJSResponder"],[72,31,78,29],[72,34,78,32],[72,40,78,38],[73,4,79,2,"RNGestureHandlerModule"],[73,35,79,24],[73,36,79,25,"handleClearJSResponder"],[73,58,79,47],[73,59,79,48],[73,60,79,49],[74,4,80,2,"oldClearJSResponder"],[74,23,80,21],[74,24,80,22],[74,25,80,23],[75,2,81,0],[75,3,81,1],[76,2,82,0],[76,6,82,4,"allowTouches"],[76,18,82,16],[76,21,82,19],[76,25,82,23],[77,2,83,0],[77,8,83,6,"DEV_ON_ANDROID"],[77,22,83,20],[77,25,83,23,"__DEV__"],[77,32,83,30],[77,36,83,34,"Platform"],[77,53,83,42],[77,54,83,43,"OS"],[77,56,83,45],[77,61,83,50],[77,70,83,59],[78,2,84,0],[79,2,85,0],[80,2,86,0],[80,6,86,4,"DEV_ON_ANDROID"],[80,20,86,18],[80,22,86,20],[81,4,87,2,"DeviceEventEmitter"],[81,31,87,20],[81,32,87,21,"addListener"],[81,43,87,32],[81,44,87,33],[81,68,87,57],[81,70,87,59],[81,76,87,65],[82,6,88,4,"allowTouches"],[82,18,88,16],[82,21,88,19],[82,22,88,20,"allowTouches"],[82,34,88,32],[83,4,89,2],[83,5,89,3],[83,6,89,4],[84,2,90,0],[85,2,91,0],[85,11,91,9,"hasUnresolvedRefs"],[85,28,91,26,"hasUnresolvedRefs"],[85,29,91,27,"props"],[85,34,91,32],[85,36,91,34],[86,4,92,2],[87,4,93,2],[87,10,93,8,"extract"],[87,17,93,15],[87,20,93,18,"refs"],[87,24,93,22],[87,28,93,26],[88,6,94,4],[88,10,94,8],[88,11,94,9,"Array"],[88,16,94,14],[88,17,94,15,"isArray"],[88,24,94,22],[88,25,94,23,"refs"],[88,29,94,27],[88,30,94,28],[88,32,94,30],[89,8,95,6],[89,15,95,13,"refs"],[89,19,95,17],[89,23,95,21,"refs"],[89,27,95,25],[89,28,95,26,"current"],[89,35,95,33],[89,40,95,38],[89,44,95,42],[90,6,96,4],[91,6,97,4],[91,13,97,11,"refs"],[91,17,97,15],[91,18,97,16,"some"],[91,22,97,20],[91,23,97,21,"r"],[91,24,97,22],[91,28,97,26,"r"],[91,29,97,27],[91,33,97,31,"r"],[91,34,97,32],[91,35,97,33,"current"],[91,42,97,40],[91,47,97,45],[91,51,97,49],[91,52,97,50],[92,4,98,2],[92,5,98,3],[93,4,99,2],[93,11,99,9,"extract"],[93,18,99,16],[93,19,99,17,"props"],[93,24,99,22],[93,25,99,23],[93,47,99,45],[93,48,99,46],[93,49,99,47],[93,53,99,51,"extract"],[93,60,99,58],[93,61,99,59,"props"],[93,66,99,64],[93,67,99,65],[93,76,99,74],[93,77,99,75],[93,78,99,76],[94,2,100,0],[95,2,101,0],[95,8,101,6,"stateToPropMappings"],[95,27,101,25],[95,30,101,28],[96,4,102,2],[96,5,102,3,"State"],[96,17,102,8],[96,18,102,9,"UNDETERMINED"],[96,30,102,21],[96,33,102,24,"undefined"],[96,42,102,33],[97,4,103,2],[97,5,103,3,"State"],[97,17,103,8],[97,18,103,9,"BEGAN"],[97,23,103,14],[97,26,103,17],[97,35,103,26],[98,4,104,2],[98,5,104,3,"State"],[98,17,104,8],[98,18,104,9,"FAILED"],[98,24,104,15],[98,27,104,18],[98,37,104,28],[99,4,105,2],[99,5,105,3,"State"],[99,17,105,8],[99,18,105,9,"CANCELLED"],[99,27,105,18],[99,30,105,21],[99,43,105,34],[100,4,106,2],[100,5,106,3,"State"],[100,17,106,8],[100,18,106,9,"ACTIVE"],[100,24,106,15],[100,27,106,18],[100,40,106,31],[101,4,107,2],[101,5,107,3,"State"],[101,17,107,8],[101,18,107,9,"END"],[101,21,107,12],[101,24,107,15],[102,2,108,0],[102,3,108,1],[104,2,110,0],[106,2,112,0],[106,8,112,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[106,35,112,33],[106,38,112,36],[106,39,112,37],[108,2,114,0],[109,2,115,15],[109,11,115,24,"createHandler"],[109,24,115,37,"createHandler"],[109,25,115,38],[110,4,116,2,"name"],[110,8,116,6],[111,4,117,2,"allowedProps"],[111,16,117,14],[111,19,117,17],[111,21,117,19],[112,4,118,2,"config"],[112,10,118,8],[112,13,118,11],[112,14,118,12],[112,15,118,13],[113,4,119,2,"transformProps"],[113,18,119,16],[114,4,120,2,"customNativeProps"],[114,21,120,19],[114,24,120,22],[115,2,121,0],[115,3,121,1],[115,5,121,3],[116,4,122,2],[116,10,122,8,"Handler"],[116,17,122,15],[116,26,122,24,"React"],[116,31,122,29],[116,32,122,30,"Component"],[116,41,122,39],[116,42,122,40],[117,6,123,4],[117,13,123,11,"displayName"],[117,24,123,22],[117,27,123,25,"name"],[117,31,123,29],[118,6,124,4],[118,13,124,11,"contextType"],[118,24,124,22],[118,27,124,25,"GestureHandlerRootViewContext"],[118,65,124,54],[119,6,125,4,"handlerTag"],[119,16,125,14],[119,19,125,17],[119,20,125,18],[119,21,125,19],[120,6,126,4,"constructor"],[120,17,126,15,"constructor"],[120,18,126,16,"props"],[120,23,126,21],[120,25,126,23],[121,8,127,6],[121,13,127,11],[121,14,127,12,"props"],[121,19,127,17],[121,20,127,18],[122,8,128,6],[122,12,128,10],[122,13,128,11,"config"],[122,19,128,17],[122,22,128,20],[122,23,128,21],[122,24,128,22],[123,8,129,6],[123,12,129,10],[123,13,129,11,"propsRef"],[123,21,129,19],[123,24,129,22],[123,37,129,35,"React"],[123,42,129,40],[123,43,129,41,"createRef"],[123,52,129,50],[123,53,129,51],[123,54,129,52],[124,8,130,6],[124,12,130,10],[124,13,130,11,"isMountedRef"],[124,25,130,23],[124,28,130,26],[124,41,130,39,"React"],[124,46,130,44],[124,47,130,45,"createRef"],[124,56,130,54],[124,57,130,55],[124,58,130,56],[125,8,131,6],[125,12,131,10],[125,13,131,11,"state"],[125,18,131,16],[125,21,131,19],[126,10,132,8,"allowTouches"],[127,8,133,6],[127,9,133,7],[128,8,134,6],[128,12,134,10,"props"],[128,17,134,15],[128,18,134,16,"id"],[128,20,134,18],[128,22,134,20],[129,10,135,8],[129,14,135,12,"handlerIDToTag"],[129,46,135,26],[129,47,135,27,"props"],[129,52,135,32],[129,53,135,33,"id"],[129,55,135,35],[129,56,135,36],[129,61,135,41,"undefined"],[129,70,135,50],[129,72,135,52],[130,12,136,10],[130,18,136,16],[130,22,136,20,"Error"],[130,27,136,25],[130,28,136,26],[130,48,136,46,"props"],[130,53,136,51],[130,54,136,52,"id"],[130,56,136,54],[130,78,136,76],[130,79,136,77],[131,10,137,8],[132,10,138,8,"handlerIDToTag"],[132,42,138,22],[132,43,138,23,"props"],[132,48,138,28],[132,49,138,29,"id"],[132,51,138,31],[132,52,138,32],[132,55,138,35],[132,59,138,39],[132,60,138,40,"handlerTag"],[132,70,138,50],[133,8,139,6],[134,6,140,4],[135,6,141,4,"componentDidMount"],[135,23,141,21,"componentDidMount"],[135,24,141,21],[135,26,141,24],[136,8,142,6],[136,14,142,12,"props"],[136,19,142,17],[136,22,142,20],[136,26,142,24],[136,27,142,25,"props"],[136,32,142,30],[137,8,143,6],[137,12,143,10],[137,13,143,11,"isMountedRef"],[137,25,143,23],[137,26,143,24,"current"],[137,33,143,31],[137,36,143,34],[137,40,143,38],[138,8,144,6],[138,12,144,10,"DEV_ON_ANDROID"],[138,26,144,24],[138,28,144,26],[139,10,145,8],[139,14,145,12],[139,15,145,13,"inspectorToggleListener"],[139,38,145,36],[139,41,145,39,"DeviceEventEmitter"],[139,68,145,57],[139,69,145,58,"addListener"],[139,80,145,69],[139,81,145,70],[139,105,145,94],[139,107,145,96],[139,113,145,102],[140,12,146,10],[140,16,146,14],[140,17,146,15,"setState"],[140,25,146,23],[140,26,146,24,"_"],[140,27,146,25],[140,32,146,30],[141,14,147,12,"allowTouches"],[142,12,148,10],[142,13,148,11],[142,14,148,12],[142,15,148,13],[143,12,149,10],[143,16,149,14],[143,17,149,15,"update"],[143,23,149,21],[143,24,149,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[143,51,149,49],[143,52,149,50],[144,10,150,8],[144,11,150,9],[144,12,150,10],[145,8,151,6],[146,8,152,6],[146,12,152,10,"hasUnresolvedRefs"],[146,29,152,27],[146,30,152,28,"props"],[146,35,152,33],[146,36,152,34],[146,38,152,36],[147,10,153,8],[148,10,154,8],[149,10,155,8],[150,10,156,8],[151,10,157,8],[152,10,158,8],[153,10,159,8],[153,14,159,8,"ghQueueMicrotask"],[153,48,159,24],[153,50,159,25],[153,56,159,31],[154,12,160,10],[154,16,160,14],[154,17,160,15,"update"],[154,23,160,21],[154,24,160,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[154,51,160,49],[154,52,160,50],[155,10,161,8],[155,11,161,9],[155,12,161,10],[156,8,162,6],[157,8,163,6],[157,12,163,10],[157,13,163,11,"createGestureHandler"],[157,33,163,31],[157,34,163,32],[157,38,163,32,"filterConfig"],[157,57,163,44],[157,59,163,45,"transformProps"],[157,73,163,59],[157,76,163,62,"transformProps"],[157,90,163,76],[157,91,163,77],[157,95,163,81],[157,96,163,82,"props"],[157,101,163,87],[157,102,163,88],[157,105,163,91],[157,109,163,95],[157,110,163,96,"props"],[157,115,163,101],[157,117,163,103],[157,118,163,104],[157,121,163,107,"allowedProps"],[157,133,163,119],[157,135,163,121],[157,138,163,124,"customNativeProps"],[157,155,163,141],[157,156,163,142],[157,158,163,144,"config"],[157,164,163,150],[157,165,163,151],[157,166,163,152],[158,8,164,6],[158,12,164,10],[158,13,164,11],[158,17,164,15],[158,18,164,16,"viewNode"],[158,26,164,24],[158,28,164,26],[159,10,165,8],[159,16,165,14],[159,20,165,18,"Error"],[159,25,165,23],[159,26,165,24],[159,73,165,71,"Handler"],[159,80,165,78],[159,81,165,79,"displayName"],[159,92,165,90],[159,152,165,150],[159,153,165,151],[160,8,166,6],[161,8,167,6],[161,12,167,10],[161,13,167,11,"attachGestureHandler"],[161,33,167,31],[161,34,167,32],[161,38,167,32,"findNodeHandle"],[161,61,167,46],[161,63,167,47],[161,67,167,51],[161,68,167,52,"viewNode"],[161,76,167,60],[161,77,167,61],[161,78,167,62],[161,79,167,63],[161,80,167,64],[162,6,168,4],[163,6,169,4,"componentDidUpdate"],[163,24,169,22,"componentDidUpdate"],[163,25,169,22],[163,27,169,25],[164,8,170,6],[164,14,170,12,"viewTag"],[164,21,170,19],[164,24,170,22],[164,28,170,22,"findNodeHandle"],[164,51,170,36],[164,53,170,37],[164,57,170,41],[164,58,170,42,"viewNode"],[164,66,170,50],[164,67,170,51],[165,8,171,6],[165,12,171,10],[165,16,171,14],[165,17,171,15,"viewTag"],[165,24,171,22],[165,29,171,27,"viewTag"],[165,36,171,34],[165,38,171,36],[166,10,172,8],[166,14,172,12],[166,15,172,13,"attachGestureHandler"],[166,35,172,33],[166,36,172,34,"viewTag"],[166,43,172,41],[166,44,172,42],[166,45,172,43],[166,46,172,44],[167,8,173,6],[168,8,174,6],[168,12,174,10],[168,13,174,11,"update"],[168,19,174,17],[168,20,174,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[168,47,174,45],[168,48,174,46],[169,6,175,4],[170,6,176,4,"componentWillUnmount"],[170,26,176,24,"componentWillUnmount"],[170,27,176,24],[170,29,176,27],[171,8,177,6],[171,12,177,10],[171,13,177,11,"inspectorToggleListener"],[171,36,177,34],[171,38,177,36,"remove"],[171,44,177,42],[171,45,177,43],[171,46,177,44],[172,8,178,6],[172,12,178,10],[172,13,178,11,"isMountedRef"],[172,25,178,23],[172,26,178,24,"current"],[172,33,178,31],[172,36,178,34],[172,41,178,39],[173,8,179,6],[173,12,179,10,"Platform"],[173,29,179,18],[173,30,179,19,"OS"],[173,32,179,21],[173,37,179,26],[173,42,179,31],[173,44,179,33],[174,10,180,8],[174,14,180,8,"unregisterOldGestureHandler"],[174,59,180,35],[174,61,180,36],[174,65,180,40],[174,66,180,41,"handlerTag"],[174,76,180,51],[174,77,180,52],[175,8,181,6],[176,8,182,6,"RNGestureHandlerModule"],[176,39,182,28],[176,40,182,29,"dropGestureHandler"],[176,58,182,47],[176,59,182,48],[176,63,182,52],[176,64,182,53,"handlerTag"],[176,74,182,63],[176,75,182,64],[177,8,183,6],[177,12,183,6,"scheduleFlushOperations"],[177,42,183,29],[177,44,183,30],[177,45,183,31],[178,8,184,6],[179,8,185,6],[179,14,185,12,"handlerID"],[179,23,185,21],[179,26,185,24],[179,30,185,28],[179,31,185,29,"props"],[179,36,185,34],[179,37,185,35,"id"],[179,39,185,37],[180,8,186,6],[180,12,186,10,"handlerID"],[180,21,186,19],[180,23,186,21],[181,10,187,8],[182,10,188,8],[182,17,188,15,"handlerIDToTag"],[182,49,188,29],[182,50,188,30,"handlerID"],[182,59,188,39],[182,60,188,40],[183,8,189,6],[184,8,190,6,"MountRegistry"],[184,36,190,19],[184,37,190,20,"gestureHandlerWillUnmount"],[184,62,190,45],[184,63,190,46],[184,67,190,50],[184,68,190,51],[185,6,191,4],[186,6,192,4,"onGestureHandlerEvent"],[186,27,192,25],[186,30,192,28,"event"],[186,35,192,33],[186,39,192,37],[187,8,193,6],[187,12,193,10,"event"],[187,17,193,15],[187,18,193,16,"nativeEvent"],[187,29,193,27],[187,30,193,28,"handlerTag"],[187,40,193,38],[187,45,193,43],[187,49,193,47],[187,50,193,48,"handlerTag"],[187,60,193,58],[187,62,193,60],[188,10,194,8],[188,14,194,12],[188,21,194,19],[188,25,194,23],[188,26,194,24,"props"],[188,31,194,29],[188,32,194,30,"onGestureEvent"],[188,46,194,44],[188,51,194,49],[188,61,194,59],[188,63,194,61],[189,12,195,10],[189,16,195,14],[189,17,195,15,"props"],[189,22,195,20],[189,23,195,21,"onGestureEvent"],[189,37,195,35],[189,40,195,38,"event"],[189,45,195,43],[189,46,195,44],[190,10,196,8],[191,8,197,6],[191,9,197,7],[191,15,197,13],[192,10,198,8],[192,14,198,12],[192,15,198,13,"props"],[192,20,198,18],[192,21,198,19,"onGestureHandlerEvent"],[192,42,198,40],[192,45,198,43,"event"],[192,50,198,48],[192,51,198,49],[193,8,199,6],[194,6,200,4],[194,7,200,5],[196,6,202,4],[197,6,203,4,"onGestureHandlerStateChange"],[197,33,203,31],[197,36,203,34,"event"],[197,41,203,39],[197,45,203,43],[198,8,204,6],[198,12,204,10,"event"],[198,17,204,15],[198,18,204,16,"nativeEvent"],[198,29,204,27],[198,30,204,28,"handlerTag"],[198,40,204,38],[198,45,204,43],[198,49,204,47],[198,50,204,48,"handlerTag"],[198,60,204,58],[198,62,204,60],[199,10,205,8],[199,14,205,12],[199,21,205,19],[199,25,205,23],[199,26,205,24,"props"],[199,31,205,29],[199,32,205,30,"onHandlerStateChange"],[199,52,205,50],[199,57,205,55],[199,67,205,65],[199,69,205,67],[200,12,206,10],[200,16,206,14],[200,17,206,15,"props"],[200,22,206,20],[200,23,206,21,"onHandlerStateChange"],[200,43,206,41],[200,46,206,44,"event"],[200,51,206,49],[200,52,206,50],[201,10,207,8],[202,10,208,8],[202,16,208,14,"state"],[202,21,208,19],[202,24,208,22,"event"],[202,29,208,27],[202,30,208,28,"nativeEvent"],[202,41,208,39],[202,42,208,40,"state"],[202,47,208,45],[203,10,209,8],[203,16,209,14,"stateEventName"],[203,30,209,28],[203,33,209,31,"stateToPropMappings"],[203,52,209,50],[203,53,209,51,"state"],[203,58,209,56],[203,59,209,57],[204,10,210,8],[204,16,210,14,"eventHandler"],[204,28,210,26],[204,31,210,29,"stateEventName"],[204,45,210,43],[204,49,210,47],[204,53,210,51],[204,54,210,52,"props"],[204,59,210,57],[204,60,210,58,"stateEventName"],[204,74,210,72],[204,75,210,73],[205,10,211,8],[205,14,211,12,"eventHandler"],[205,26,211,24],[205,30,211,28],[205,37,211,35,"eventHandler"],[205,49,211,47],[205,54,211,52],[205,64,211,62],[205,66,211,64],[206,12,212,10,"eventHandler"],[206,24,212,22],[206,25,212,23,"event"],[206,30,212,28],[206,31,212,29],[207,10,213,8],[208,8,214,6],[208,9,214,7],[208,15,214,13],[209,10,215,8],[209,14,215,12],[209,15,215,13,"props"],[209,20,215,18],[209,21,215,19,"onGestureHandlerStateChange"],[209,48,215,46],[209,51,215,49,"event"],[209,56,215,54],[209,57,215,55],[210,8,216,6],[211,6,217,4],[211,7,217,5],[212,6,218,4,"refHandler"],[212,16,218,14],[212,19,218,17,"node"],[212,23,218,21],[212,27,218,25],[213,8,219,6],[213,12,219,10],[213,13,219,11,"viewNode"],[213,21,219,19],[213,24,219,22,"node"],[213,28,219,26],[214,8,220,6],[214,14,220,12,"child"],[214,19,220,17],[214,22,220,20,"React"],[214,27,220,25],[214,28,220,26,"Children"],[214,36,220,34],[214,37,220,35,"only"],[214,41,220,39],[214,42,220,40],[214,46,220,44],[214,47,220,45,"props"],[214,52,220,50],[214,53,220,51,"children"],[214,61,220,59],[214,62,220,60],[215,8,221,6],[216,8,222,6],[217,8,223,6],[217,14,223,12,"ref"],[217,17,223,15],[217,20,223,18],[217,24,223,18,"isReact19"],[217,41,223,27],[217,43,223,28],[217,44,223,29],[217,47,223,32,"child"],[217,52,223,37],[217,53,223,38,"props"],[217,58,223,43],[217,60,223,45,"ref"],[217,63,223,48],[217,66,223,51,"child"],[217,71,223,56],[217,73,223,58,"ref"],[217,76,223,61],[218,8,224,6],[218,12,224,10],[218,13,224,11,"ref"],[218,16,224,14],[218,18,224,16],[219,10,225,8],[220,8,226,6],[221,8,227,6],[221,12,227,10],[221,19,227,17,"ref"],[221,22,227,20],[221,27,227,25],[221,37,227,35],[221,39,227,37],[222,10,228,8,"ref"],[222,13,228,11],[222,14,228,12,"node"],[222,18,228,16],[222,19,228,17],[223,8,229,6],[223,9,229,7],[223,15,229,13],[224,10,230,8,"ref"],[224,13,230,11],[224,14,230,12,"current"],[224,21,230,19],[224,24,230,22,"node"],[224,28,230,26],[225,8,231,6],[226,6,232,4],[226,7,232,5],[227,6,233,4,"createGestureHandler"],[227,26,233,24],[227,29,233,27,"newConfig"],[227,38,233,36],[227,42,233,40],[228,8,234,6],[228,12,234,10],[228,13,234,11,"handlerTag"],[228,23,234,21],[228,26,234,24],[228,30,234,24,"getNextHandlerTag"],[228,66,234,41],[228,68,234,42],[228,69,234,43],[229,8,235,6],[229,12,235,10],[229,13,235,11,"config"],[229,19,235,17],[229,22,235,20,"newConfig"],[229,31,235,29],[230,8,236,6,"RNGestureHandlerModule"],[230,39,236,28],[230,40,236,29,"createGestureHandler"],[230,60,236,49],[230,61,236,50,"name"],[230,65,236,54],[230,67,236,56],[230,71,236,60],[230,72,236,61,"handlerTag"],[230,82,236,71],[230,84,236,73,"newConfig"],[230,93,236,82],[230,94,236,83],[231,6,237,4],[231,7,237,5],[232,6,238,4,"attachGestureHandler"],[232,26,238,24],[232,29,238,27,"newViewTag"],[232,39,238,37],[232,43,238,41],[233,8,239,6],[233,12,239,10],[233,13,239,11,"viewTag"],[233,20,239,18],[233,23,239,21,"newViewTag"],[233,33,239,31],[234,8,240,6],[234,12,240,10,"Platform"],[234,29,240,18],[234,30,240,19,"OS"],[234,32,240,21],[234,37,240,26],[234,42,240,31],[234,44,240,33],[235,10,241,8],[236,10,242,8,"RNGestureHandlerModule"],[236,41,242,30],[236,42,242,31,"attachGestureHandler"],[236,62,242,51],[236,63,242,52],[236,67,242,56],[236,68,242,57,"handlerTag"],[236,78,242,67],[236,80,242,69,"newViewTag"],[236,90,242,79],[236,92,242,81,"ActionType"],[236,114,242,91],[236,115,242,92,"JS_FUNCTION_OLD_API"],[236,134,242,111],[237,10,243,8],[238,10,244,8],[238,14,244,12],[238,15,244,13,"propsRef"],[238,23,244,21],[238,24,244,22],[239,8,245,6],[239,9,245,7],[239,15,245,13],[240,10,246,8],[240,14,246,8,"registerOldGestureHandler"],[240,57,246,33],[240,59,246,34],[240,63,246,38],[240,64,246,39,"handlerTag"],[240,74,246,49],[240,76,246,51],[241,12,247,10,"onGestureEvent"],[241,26,247,24],[241,28,247,26],[241,32,247,30],[241,33,247,31,"onGestureHandlerEvent"],[241,54,247,52],[242,12,248,10,"onGestureStateChange"],[242,32,248,30],[242,34,248,32],[242,38,248,36],[242,39,248,37,"onGestureHandlerStateChange"],[243,10,249,8],[243,11,249,9],[243,12,249,10],[244,10,250,8],[244,16,250,14,"actionType"],[244,26,250,24],[244,29,250,27],[244,30,250,28],[244,36,250,34],[245,12,251,10],[245,18,251,16,"onGestureEvent"],[245,32,251,30],[245,35,251,33],[245,39,251,37],[245,40,251,38,"props"],[245,45,251,43],[245,47,251,45,"onGestureEvent"],[245,61,251,59],[246,12,252,10],[246,18,252,16,"isGestureHandlerWorklet"],[246,41,252,39],[246,44,252,42,"onGestureEvent"],[246,58,252,56],[246,63,252,61],[246,72,252,70],[246,76,252,74,"onGestureEvent"],[246,90,252,88],[246,94,252,92],[246,115,252,113],[246,119,252,117,"onGestureEvent"],[246,133,252,131],[246,134,252,132],[247,12,253,10],[247,18,253,16,"onHandlerStateChange"],[247,38,253,36],[247,41,253,39],[247,45,253,43],[247,46,253,44,"props"],[247,51,253,49],[247,53,253,51,"onHandlerStateChange"],[247,73,253,71],[248,12,254,10],[248,18,254,16,"isStateChangeHandlerWorklet"],[248,45,254,43],[248,48,254,46,"onHandlerStateChange"],[248,68,254,66],[248,73,254,71],[248,82,254,80],[248,86,254,84,"onHandlerStateChange"],[248,106,254,104],[248,110,254,108],[248,131,254,129],[248,135,254,133,"onHandlerStateChange"],[248,155,254,153],[248,156,254,154],[249,12,255,10],[249,18,255,16,"isReanimatedHandler"],[249,37,255,35],[249,40,255,38,"isGestureHandlerWorklet"],[249,63,255,61],[249,67,255,65,"isStateChangeHandlerWorklet"],[249,94,255,92],[250,12,256,10],[250,16,256,14,"isReanimatedHandler"],[250,35,256,33],[250,37,256,35],[251,14,257,12],[252,14,258,12],[252,21,258,19,"ActionType"],[252,43,258,29],[252,44,258,30,"REANIMATED_WORKLET"],[252,62,258,48],[253,12,259,10],[253,13,259,11],[253,19,259,17],[253,23,259,21,"onGestureEvent"],[253,37,259,35],[253,41,259,39],[253,53,259,51],[253,57,259,55,"onGestureEvent"],[253,71,259,69],[253,73,259,71],[254,14,260,12],[255,14,261,12],[255,21,261,19,"ActionType"],[255,43,261,29],[255,44,261,30,"NATIVE_ANIMATED_EVENT"],[255,65,261,51],[256,12,262,10],[256,13,262,11],[256,19,262,17],[257,14,263,12],[258,14,264,12],[258,21,264,19,"ActionType"],[258,43,264,29],[258,44,264,30,"JS_FUNCTION_OLD_API"],[258,63,264,49],[259,12,265,10],[260,10,266,8],[260,11,266,9],[260,13,266,11],[260,14,266,12],[261,10,267,8,"RNGestureHandlerModule"],[261,41,267,30],[261,42,267,31,"attachGestureHandler"],[261,62,267,51],[261,63,267,52],[261,67,267,56],[261,68,267,57,"handlerTag"],[261,78,267,67],[261,80,267,69,"newViewTag"],[261,90,267,79],[261,92,267,81,"actionType"],[261,102,267,91],[261,103,267,92],[262,8,268,6],[263,8,269,6],[263,12,269,6,"scheduleFlushOperations"],[263,42,269,29],[263,44,269,30],[263,45,269,31],[264,8,270,6],[264,12,270,6,"ghQueueMicrotask"],[264,46,270,22],[264,48,270,23],[264,54,270,29],[265,10,271,8,"MountRegistry"],[265,38,271,21],[265,39,271,22,"gestureHandlerWillMount"],[265,62,271,45],[265,63,271,46],[265,67,271,50],[265,68,271,51],[266,8,272,6],[266,9,272,7],[266,10,272,8],[267,6,273,4],[267,7,273,5],[268,6,274,4,"updateGestureHandler"],[268,26,274,24],[268,29,274,27,"newConfig"],[268,38,274,36],[268,42,274,40],[269,8,275,6],[269,12,275,10],[269,13,275,11,"config"],[269,19,275,17],[269,22,275,20,"newConfig"],[269,31,275,29],[270,8,276,6,"RNGestureHandlerModule"],[270,39,276,28],[270,40,276,29,"updateGestureHandler"],[270,60,276,49],[270,61,276,50],[270,65,276,54],[270,66,276,55,"handlerTag"],[270,76,276,65],[270,78,276,67,"newConfig"],[270,87,276,76],[270,88,276,77],[271,8,277,6],[271,12,277,6,"scheduleFlushOperations"],[271,42,277,29],[271,44,277,30],[271,45,277,31],[272,6,278,4],[272,7,278,5],[273,6,279,4,"update"],[273,12,279,10,"update"],[273,13,279,11,"remainingTries"],[273,27,279,25],[273,29,279,27],[274,8,280,6],[274,12,280,10],[274,13,280,11],[274,17,280,15],[274,18,280,16,"isMountedRef"],[274,30,280,28],[274,31,280,29,"current"],[274,38,280,36],[274,40,280,38],[275,10,281,8],[276,8,282,6],[277,8,283,6],[277,14,283,12,"props"],[277,19,283,17],[277,22,283,20],[277,26,283,24],[277,27,283,25,"props"],[277,32,283,30],[279,8,285,6],[280,8,286,6],[281,8,287,6],[282,8,288,6],[282,12,288,10,"hasUnresolvedRefs"],[282,29,288,27],[282,30,288,28,"props"],[282,35,288,33],[282,36,288,34],[282,40,288,38,"remainingTries"],[282,54,288,52],[282,57,288,55],[282,58,288,56],[282,60,288,58],[283,10,289,8],[283,14,289,8,"ghQueueMicrotask"],[283,48,289,24],[283,50,289,25],[283,56,289,31],[284,12,290,10],[284,16,290,14],[284,17,290,15,"update"],[284,23,290,21],[284,24,290,22,"remainingTries"],[284,38,290,36],[284,41,290,39],[284,42,290,40],[284,43,290,41],[285,10,291,8],[285,11,291,9],[285,12,291,10],[286,8,292,6],[286,9,292,7],[286,15,292,13],[287,10,293,8],[287,16,293,14,"newConfig"],[287,25,293,23],[287,28,293,26],[287,32,293,26,"filterConfig"],[287,51,293,38],[287,53,293,39,"transformProps"],[287,67,293,53],[287,70,293,56,"transformProps"],[287,84,293,70],[287,85,293,71],[287,89,293,75],[287,90,293,76,"props"],[287,95,293,81],[287,96,293,82],[287,99,293,85],[287,103,293,89],[287,104,293,90,"props"],[287,109,293,95],[287,111,293,97],[287,112,293,98],[287,115,293,101,"allowedProps"],[287,127,293,113],[287,129,293,115],[287,132,293,118,"customNativeProps"],[287,149,293,135],[287,150,293,136],[287,152,293,138,"config"],[287,158,293,144],[287,159,293,145],[288,10,294,8],[288,14,294,12],[288,15,294,13],[288,19,294,13,"deepEqual"],[288,36,294,22],[288,38,294,23],[288,42,294,27],[288,43,294,28,"config"],[288,49,294,34],[288,51,294,36,"newConfig"],[288,60,294,45],[288,61,294,46],[288,63,294,48],[289,12,295,10],[289,16,295,14],[289,17,295,15,"updateGestureHandler"],[289,37,295,35],[289,38,295,36,"newConfig"],[289,47,295,45],[289,48,295,46],[290,10,296,8],[291,8,297,6],[292,6,298,4],[294,6,300,4],[295,6,301,4,"setNativeProps"],[295,20,301,18,"setNativeProps"],[295,21,301,19,"updates"],[295,28,301,26],[295,30,301,28],[296,8,302,6],[296,14,302,12,"mergedProps"],[296,25,302,23],[296,28,302,23,"Object"],[296,34,302,23],[296,35,302,23,"assign"],[296,41,302,23],[296,46,303,11],[296,50,303,15],[296,51,303,16,"props"],[296,56,303,21],[296,58,304,11,"updates"],[296,65,304,18],[296,66,305,7],[297,8,306,6],[297,14,306,12,"newConfig"],[297,23,306,21],[297,26,306,24],[297,30,306,24,"filterConfig"],[297,49,306,36],[297,51,306,37,"transformProps"],[297,65,306,51],[297,68,306,54,"transformProps"],[297,82,306,68],[297,83,306,69,"mergedProps"],[297,94,306,80],[297,95,306,81],[297,98,306,84,"mergedProps"],[297,109,306,95],[297,111,306,97],[297,112,306,98],[297,115,306,101,"allowedProps"],[297,127,306,113],[297,129,306,115],[297,132,306,118,"customNativeProps"],[297,149,306,135],[297,150,306,136],[297,152,306,138,"config"],[297,158,306,144],[297,159,306,145],[298,8,307,6],[298,12,307,10],[298,13,307,11,"updateGestureHandler"],[298,33,307,31],[298,34,307,32,"newConfig"],[298,43,307,41],[298,44,307,42],[299,6,308,4],[300,6,309,4,"render"],[300,12,309,10,"render"],[300,13,309,10],[300,15,309,13],[301,8,310,6],[301,12,310,10,"__DEV__"],[301,19,310,17],[301,23,310,21],[301,24,310,22],[301,28,310,26],[301,29,310,27,"context"],[301,36,310,34],[301,40,310,38],[301,41,310,39],[301,45,310,39,"isTestEnv"],[301,62,310,48],[301,64,310,49],[301,65,310,50],[301,69,310,54,"Platform"],[301,86,310,62],[301,87,310,63,"OS"],[301,89,310,65],[301,94,310,70],[301,99,310,75],[301,101,310,77],[302,10,311,8],[302,16,311,14],[302,20,311,18,"Error"],[302,25,311,23],[302,26,311,24,"name"],[302,30,311,28],[302,33,311,31],[302,247,311,245],[302,248,311,246],[303,8,312,6],[304,8,313,6],[304,12,313,10,"gestureEventHandler"],[304,31,313,29],[304,34,313,32],[304,38,313,36],[304,39,313,37,"onGestureHandlerEvent"],[304,60,313,58],[305,8,314,6],[307,8,316,6],[307,14,316,12],[308,10,317,8,"onGestureEvent"],[308,24,317,22],[309,10,318,8,"onGestureHandlerEvent"],[310,8,319,6],[310,9,319,7],[310,12,319,10],[310,16,319,14],[310,17,319,15,"props"],[310,22,319,20],[311,8,320,6],[311,12,320,10,"onGestureEvent"],[311,26,320,24],[311,30,320,28],[311,37,320,35,"onGestureEvent"],[311,51,320,49],[311,56,320,54],[311,66,320,64],[311,68,320,66],[312,10,321,8],[313,10,322,8],[314,10,323,8],[315,10,324,8],[315,14,324,12,"onGestureHandlerEvent"],[315,35,324,33],[315,37,324,35],[316,12,325,10],[316,18,325,16],[316,22,325,20,"Error"],[316,27,325,25],[316,28,325,26],[316,101,325,99],[316,102,325,100],[317,10,326,8],[318,10,327,8,"gestureEventHandler"],[318,29,327,27],[318,32,327,30,"onGestureEvent"],[318,46,327,44],[319,8,328,6],[319,9,328,7],[319,15,328,13],[320,10,329,8],[320,14,329,12,"onGestureHandlerEvent"],[320,35,329,33],[320,39,329,37],[320,46,329,44,"onGestureHandlerEvent"],[320,67,329,65],[320,72,329,70],[320,82,329,80],[320,84,329,82],[321,12,330,10],[321,18,330,16],[321,22,330,20,"Error"],[321,27,330,25],[321,28,330,26],[321,101,330,99],[321,102,330,100],[322,10,331,8],[323,8,332,6],[324,8,333,6],[324,12,333,10,"gestureStateEventHandler"],[324,36,333,34],[324,39,333,37],[324,43,333,41],[324,44,333,42,"onGestureHandlerStateChange"],[324,71,333,69],[325,8,334,6],[327,8,336,6],[327,14,336,12],[328,10,337,8,"onHandlerStateChange"],[328,30,337,28],[329,10,338,8,"onGestureHandlerStateChange"],[330,8,339,6],[330,9,339,7],[330,12,339,10],[330,16,339,14],[330,17,339,15,"props"],[330,22,339,20],[331,8,340,6],[331,12,340,10,"onHandlerStateChange"],[331,32,340,30],[331,36,340,34],[331,43,340,41,"onHandlerStateChange"],[331,63,340,61],[331,68,340,66],[331,78,340,76],[331,80,340,78],[332,10,341,8],[333,10,342,8],[334,10,343,8],[335,10,344,8],[335,14,344,12,"onGestureHandlerStateChange"],[335,41,344,39],[335,43,344,41],[336,12,345,10],[336,18,345,16],[336,22,345,20,"Error"],[336,27,345,25],[336,28,345,26],[336,101,345,99],[336,102,345,100],[337,10,346,8],[338,10,347,8,"gestureStateEventHandler"],[338,34,347,32],[338,37,347,35,"onHandlerStateChange"],[338,57,347,55],[339,8,348,6],[339,9,348,7],[339,15,348,13],[340,10,349,8],[340,14,349,12,"onGestureHandlerStateChange"],[340,41,349,39],[340,45,349,43],[340,52,349,50,"onGestureHandlerStateChange"],[340,79,349,77],[340,84,349,82],[340,94,349,92],[340,96,349,94],[341,12,350,10],[341,18,350,16],[341,22,350,20,"Error"],[341,27,350,25],[341,28,350,26],[341,101,350,99],[341,102,350,100],[342,10,351,8],[343,8,352,6],[344,8,353,6],[344,14,353,12,"events"],[344,20,353,18],[344,23,353,21],[345,10,354,8,"onGestureHandlerEvent"],[345,31,354,29],[345,33,354,31],[345,37,354,35],[345,38,354,36,"state"],[345,43,354,41],[345,44,354,42,"allowTouches"],[345,56,354,54],[345,59,354,57,"gestureEventHandler"],[345,78,354,76],[345,81,354,79,"undefined"],[345,90,354,88],[346,10,355,8,"onGestureHandlerStateChange"],[346,37,355,35],[346,39,355,37],[346,43,355,41],[346,44,355,42,"state"],[346,49,355,47],[346,50,355,48,"allowTouches"],[346,62,355,60],[346,65,355,63,"gestureStateEventHandler"],[346,89,355,87],[346,92,355,90,"undefined"],[347,8,356,6],[347,9,356,7],[348,8,357,6],[348,12,357,10],[348,13,357,11,"propsRef"],[348,21,357,19],[348,22,357,20,"current"],[348,29,357,27],[348,32,357,30,"events"],[348,38,357,36],[349,8,358,6],[349,12,358,10,"child"],[349,17,358,15],[349,20,358,18],[349,24,358,22],[350,8,359,6],[350,12,359,10],[351,10,360,8,"child"],[351,15,360,13],[351,18,360,16,"React"],[351,23,360,21],[351,24,360,22,"Children"],[351,32,360,30],[351,33,360,31,"only"],[351,37,360,35],[351,38,360,36],[351,42,360,40],[351,43,360,41,"props"],[351,48,360,46],[351,49,360,47,"children"],[351,57,360,55],[351,58,360,56],[352,8,361,6],[352,9,361,7],[352,10,361,8],[352,17,361,15,"e"],[352,18,361,16],[352,20,361,18],[353,10,362,8],[353,16,362,14],[353,20,362,18,"Error"],[353,25,362,23],[353,26,362,24],[353,30,362,24,"tagMessage"],[353,48,362,34],[353,50,362,35],[353,53,362,38,"name"],[353,57,362,42],[353,213,362,198],[353,214,362,199],[353,215,362,200],[354,8,363,6],[355,8,364,6],[355,12,364,10,"grandChildren"],[355,25,364,23],[355,28,364,26,"child"],[355,33,364,31],[355,34,364,32,"props"],[355,39,364,37],[355,40,364,38,"children"],[355,48,364,46],[356,8,365,6],[356,12,365,10,"__DEV__"],[356,19,365,17],[356,23,365,21,"child"],[356,28,365,26],[356,29,365,27,"type"],[356,33,365,31],[356,38,365,36,"child"],[356,43,365,41],[356,44,365,42,"type"],[356,48,365,46],[356,53,365,51],[356,77,365,75],[356,81,365,79,"child"],[356,86,365,84],[356,87,365,85,"type"],[356,91,365,89],[356,92,365,90,"name"],[356,96,365,94],[356,101,365,99],[356,107,365,105],[356,111,365,109,"child"],[356,116,365,114],[356,117,365,115,"type"],[356,121,365,119],[356,122,365,120,"displayName"],[356,133,365,131],[356,138,365,136],[356,144,365,142],[356,145,365,143],[356,147,365,145],[357,10,366,8,"grandChildren"],[357,23,366,21],[357,26,366,24,"React"],[357,31,366,29],[357,32,366,30,"Children"],[357,40,366,38],[357,41,366,39,"toArray"],[357,48,366,46],[357,49,366,47,"grandChildren"],[357,62,366,60],[357,63,366,61],[358,10,367,8,"grandChildren"],[358,23,367,21],[358,24,367,22,"push"],[358,28,367,26],[358,29,367,27],[358,42,367,40],[358,46,367,40,"_jsx"],[358,61,367,44],[358,63,367,45,"PressabilityDebugView"],[358,107,367,66],[358,109,367,68],[359,12,368,10,"color"],[359,17,368,15],[359,19,368,17],[359,38,368,36],[360,12,369,10,"hitSlop"],[360,19,369,17],[360,21,369,19,"child"],[360,26,369,24],[360,27,369,25,"props"],[360,32,369,30],[360,33,369,31,"hitSlop"],[361,10,370,8],[361,11,370,9],[361,13,370,11],[361,36,370,34],[361,37,370,35],[361,38,370,36],[362,8,371,6],[363,8,372,6],[363,15,372,13],[363,28,372,26,"React"],[363,33,372,31],[363,34,372,32,"cloneElement"],[363,46,372,44],[363,47,372,45,"child"],[363,52,372,50],[363,54,372,50,"Object"],[363,60,372,50],[363,61,372,50,"assign"],[363,67,372,50],[364,10,373,8,"ref"],[364,13,373,11],[364,15,373,13],[364,19,373,17],[364,20,373,18,"refHandler"],[364,30,373,28],[365,10,374,8,"collapsable"],[365,21,374,19],[365,23,374,21],[366,8,374,26],[366,11,375,12],[366,15,375,12,"isTestEnv"],[366,32,375,21],[366,34,375,22],[366,35,375,23],[366,38,375,26],[367,10,376,10,"handlerType"],[367,21,376,21],[367,23,376,23,"name"],[367,27,376,27],[368,10,377,10,"handlerTag"],[368,20,377,20],[368,22,377,22],[368,26,377,26],[368,27,377,27,"handlerTag"],[368,37,377,37],[369,10,378,10,"enabled"],[369,17,378,17],[369,19,378,19],[369,23,378,23],[369,24,378,24,"props"],[369,29,378,29],[369,30,378,30,"enabled"],[370,8,379,8],[370,9,379,9],[370,12,379,12],[370,13,379,13],[370,14,379,14],[371,10,380,8,"testID"],[371,16,380,14],[371,18,380,16],[371,22,380,20],[371,23,380,21,"props"],[371,28,380,26],[371,29,380,27,"testID"],[371,35,380,33],[371,39,380,37,"child"],[371,44,380,42],[371,45,380,43,"props"],[371,50,380,48],[371,51,380,49,"testID"],[372,8,380,55],[372,11,381,11,"events"],[372,17,381,17],[372,20,382,9,"grandChildren"],[372,33,382,22],[372,34,382,23],[373,6,383,4],[374,4,384,2],[375,4,385,2],[375,11,385,9,"Handler"],[375,18,385,16],[376,2,386,0],[377,0,386,1],[377,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCCkE;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIM;GJE;AKE;kBCE;qBCI,4BD;GDC;CLE;eQe;ECO;ICI;KDc;IEC;gGPI;wBQC;YRE;SOE;yBES;SFE;KFO;IKC;KLM;IMC;KNe;4BOC;KPQ;kCQG;KRc;iBSC;KTc;2BUC;KVI;2BWC;4BnBY;SmBgB;uBPI;OOE;KXC;2BYC;KZI;IaC;yBTU;SSE;KbO;IcG;KdO;IeC;Kf0E;GDC;CRE"}},"type":"js/module"}]}