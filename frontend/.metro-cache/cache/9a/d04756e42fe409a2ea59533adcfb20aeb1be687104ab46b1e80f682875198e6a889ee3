{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"]}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":36,"index":51}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"]}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":52},"end":{"line":4,"column":62,"index":114}}],"key":"dpOMqAtzFjjUQychI3TYNsYmXQE=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":115},"end":{"line":5,"column":32,"index":147}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var _hammerjs = _interopRequireDefault(require(_dependencyMap[2], \"@egjs/hammerjs\"));\n  var _DiscreteGestureHandler = _interopRequireDefault(require(_dependencyMap[3], \"./DiscreteGestureHandler\"));\n  var _utils = require(_dependencyMap[4], \"./utils\");\n  const _excluded = [\"shouldCancelWhenOutside\", \"maxDeltaX\", \"maxDeltaY\", \"numberOfTaps\", \"minDurationMs\", \"maxDelayMs\", \"maxDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"];\n  class TapGestureHandler extends _DiscreteGestureHandler.default {\n    _shouldFireEndEvent = null;\n    // TODO unused?\n    get name() {\n      return 'tap';\n    }\n    get NativeGestureClass() {\n      return _hammerjs.default.Tap;\n    }\n    get maxDelayMs() {\n      // @ts-ignore TODO(TS) trace down config\n      return (0, _utils.isnan)(this.config.maxDelayMs) ? 300 : this.config.maxDelayMs;\n    }\n    simulateCancelEvent(inputData) {\n      if (this.isGestureRunning) {\n        this.cancelEvent(inputData);\n      }\n    }\n    onGestureActivated(ev) {\n      if (this.isGestureRunning) {\n        this.onSuccessfulTap(ev);\n      }\n    }\n    onSuccessfulTap = ev => {\n      if (this._getPendingGestures().length) {\n        this._shouldFireEndEvent = ev;\n        return;\n      }\n      if (ev.eventType === _hammerjs.default.INPUT_END) {\n        this.sendEvent(Object.assign({}, ev, {\n          eventType: _hammerjs.default.INPUT_MOVE\n        }));\n      }\n      // When handler gets activated it will turn into State.END immediately.\n      this.sendEvent(Object.assign({}, ev, {\n        isFinal: true\n      }));\n      this.onGestureEnded(ev);\n    };\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n\n      // Attempt to create a touch-down event by checking if a valid tap hasn't started yet, then validating the input.\n      if (!this.hasGestureFailed && !this.isGestureRunning &&\n      // Prevent multi-pointer events from misfiring.\n      !ev.isFinal) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name);\n        // @ts-ignore TODO(TS) trace down config\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n      if (ev.isFinal && ev.maxPointers > 1) {\n        setTimeout(() => {\n          // Handle case where one finger presses slightly\n          // after the first finger on a multi-tap event\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      }\n      if (this.hasGestureFailed) {\n        return;\n      }\n      // Hammer doesn't send a `cancel` event for taps.\n      // Manually fail the event.\n      if (ev.isFinal) {\n        // Handle case where one finger presses slightly\n        // after the first finger on a multi-tap event\n        if (ev.maxPointers > 1) {\n          setTimeout(() => {\n            if (this.isGestureRunning) {\n              this.cancelEvent(ev);\n            }\n          });\n        }\n\n        // Clear last timer\n        clearTimeout(this._timer);\n        // Create time out for multi-taps.\n        this._timer = setTimeout(() => {\n          this.hasGestureFailed = true;\n          this.cancelEvent(ev);\n        }, this.maxDelayMs);\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name);\n        // @ts-ignore TODO(TS) trace down config\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n    getHammerConfig() {\n      return Object.assign({}, super.getHammerConfig(), {\n        event: this.name,\n        // @ts-ignore TODO(TS) trace down config\n        taps: (0, _utils.isnan)(this.config.numberOfTaps) ? 1 : this.config.numberOfTaps,\n        interval: this.maxDelayMs,\n        time:\n        // @ts-ignore TODO(TS) trace down config\n        (0, _utils.isnan)(this.config.maxDurationMs) || this.config.maxDurationMs == null ? 250 :\n        // @ts-ignore TODO(TS) trace down config\n        this.config.maxDurationMs\n      });\n    }\n    updateGestureConfig(_ref) {\n      let {\n          shouldCancelWhenOutside = true,\n          maxDeltaX = Number.NaN,\n          maxDeltaY = Number.NaN,\n          numberOfTaps = 1,\n          minDurationMs = 525,\n          maxDelayMs = Number.NaN,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars -- TODO possibly forgotten to use in updateGestureConfig?\n          maxDurationMs = Number.NaN,\n          maxDist = 2,\n          minPointers = 1,\n          maxPointers = 1\n        } = _ref,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n      return super.updateGestureConfig(Object.assign({\n        shouldCancelWhenOutside,\n        numberOfTaps,\n        maxDeltaX,\n        maxDeltaY,\n        minDurationMs,\n        maxDelayMs,\n        maxDist,\n        minPointers,\n        maxPointers\n      }, props));\n    }\n    onGestureEnded(...props) {\n      clearTimeout(this._timer);\n      // @ts-ignore TODO(TS) check how onGestureEnded works\n      super.onGestureEnded(...props);\n    }\n    onWaitingEnded(_gesture) {\n      if (this._shouldFireEndEvent) {\n        this.onSuccessfulTap(this._shouldFireEndEvent);\n        this._shouldFireEndEvent = null;\n      }\n    }\n  }\n  var _default = exports.default = TapGestureHandler;\n});","lineCount":165,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[9,2,1,13],[9,6,1,13,"_objectWithoutPropertiesLoose2"],[9,36,1,13],[9,39,1,13,"_interopRequireDefault"],[9,61,1,13],[9,62,1,13,"require"],[9,69,1,13],[9,70,1,13,"_dependencyMap"],[9,84,1,13],[10,2,3,0],[10,6,3,0,"_hammerjs"],[10,15,3,0],[10,18,3,0,"_interopRequireDefault"],[10,40,3,0],[10,41,3,0,"require"],[10,48,3,0],[10,49,3,0,"_dependencyMap"],[10,63,3,0],[11,2,4,0],[11,6,4,0,"_DiscreteGestureHandler"],[11,29,4,0],[11,32,4,0,"_interopRequireDefault"],[11,54,4,0],[11,55,4,0,"require"],[11,62,4,0],[11,63,4,0,"_dependencyMap"],[11,77,4,0],[12,2,5,0],[12,6,5,0,"_utils"],[12,12,5,0],[12,15,5,0,"require"],[12,22,5,0],[12,23,5,0,"_dependencyMap"],[12,37,5,0],[13,2,5,32],[13,8,5,32,"_excluded"],[13,17,5,32],[14,2,6,0],[14,8,6,6,"TapGestureHandler"],[14,25,6,23],[14,34,6,32,"DiscreteGestureHandler"],[14,65,6,54],[14,66,6,55],[15,4,7,2,"_shouldFireEndEvent"],[15,23,7,21],[15,26,7,24],[15,30,7,28],[16,4,8,2],[17,4,9,2],[17,8,9,6,"name"],[17,12,9,10,"name"],[17,13,9,10],[17,15,9,13],[18,6,10,4],[18,13,10,11],[18,18,10,16],[19,4,11,2],[20,4,12,2],[20,8,12,6,"NativeGestureClass"],[20,26,12,24,"NativeGestureClass"],[20,27,12,24],[20,29,12,27],[21,6,13,4],[21,13,13,11,"Hammer"],[21,30,13,17],[21,31,13,18,"Tap"],[21,34,13,21],[22,4,14,2],[23,4,15,2],[23,8,15,6,"maxDelayMs"],[23,18,15,16,"maxDelayMs"],[23,19,15,16],[23,21,15,19],[24,6,16,4],[25,6,17,4],[25,13,17,11],[25,17,17,11,"isnan"],[25,29,17,16],[25,31,17,17],[25,35,17,21],[25,36,17,22,"config"],[25,42,17,28],[25,43,17,29,"maxDelayMs"],[25,53,17,39],[25,54,17,40],[25,57,17,43],[25,60,17,46],[25,63,17,49],[25,67,17,53],[25,68,17,54,"config"],[25,74,17,60],[25,75,17,61,"maxDelayMs"],[25,85,17,71],[26,4,18,2],[27,4,19,2,"simulateCancelEvent"],[27,23,19,21,"simulateCancelEvent"],[27,24,19,22,"inputData"],[27,33,19,31],[27,35,19,33],[28,6,20,4],[28,10,20,8],[28,14,20,12],[28,15,20,13,"isGestureRunning"],[28,31,20,29],[28,33,20,31],[29,8,21,6],[29,12,21,10],[29,13,21,11,"cancelEvent"],[29,24,21,22],[29,25,21,23,"inputData"],[29,34,21,32],[29,35,21,33],[30,6,22,4],[31,4,23,2],[32,4,24,2,"onGestureActivated"],[32,22,24,20,"onGestureActivated"],[32,23,24,21,"ev"],[32,25,24,23],[32,27,24,25],[33,6,25,4],[33,10,25,8],[33,14,25,12],[33,15,25,13,"isGestureRunning"],[33,31,25,29],[33,33,25,31],[34,8,26,6],[34,12,26,10],[34,13,26,11,"onSuccessfulTap"],[34,28,26,26],[34,29,26,27,"ev"],[34,31,26,29],[34,32,26,30],[35,6,27,4],[36,4,28,2],[37,4,29,2,"onSuccessfulTap"],[37,19,29,17],[37,22,29,20,"ev"],[37,24,29,22],[37,28,29,26],[38,6,30,4],[38,10,30,8],[38,14,30,12],[38,15,30,13,"_getPendingGestures"],[38,34,30,32],[38,35,30,33],[38,36,30,34],[38,37,30,35,"length"],[38,43,30,41],[38,45,30,43],[39,8,31,6],[39,12,31,10],[39,13,31,11,"_shouldFireEndEvent"],[39,32,31,30],[39,35,31,33,"ev"],[39,37,31,35],[40,8,32,6],[41,6,33,4],[42,6,34,4],[42,10,34,8,"ev"],[42,12,34,10],[42,13,34,11,"eventType"],[42,22,34,20],[42,27,34,25,"Hammer"],[42,44,34,31],[42,45,34,32,"INPUT_END"],[42,54,34,41],[42,56,34,43],[43,8,35,6],[43,12,35,10],[43,13,35,11,"sendEvent"],[43,22,35,20],[43,23,35,20,"Object"],[43,29,35,20],[43,30,35,20,"assign"],[43,36,35,20],[43,41,36,11,"ev"],[43,43,36,13],[44,10,37,8,"eventType"],[44,19,37,17],[44,21,37,19,"Hammer"],[44,38,37,25],[44,39,37,26,"INPUT_MOVE"],[45,8,37,36],[45,10,38,7],[45,11,38,8],[46,6,39,4],[47,6,40,4],[48,6,41,4],[48,10,41,8],[48,11,41,9,"sendEvent"],[48,20,41,18],[48,21,41,18,"Object"],[48,27,41,18],[48,28,41,18,"assign"],[48,34,41,18],[48,39,42,9,"ev"],[48,41,42,11],[49,8,43,6,"isFinal"],[49,15,43,13],[49,17,43,15],[50,6,43,19],[50,8,44,5],[50,9,44,6],[51,6,45,4],[51,10,45,8],[51,11,45,9,"onGestureEnded"],[51,25,45,23],[51,26,45,24,"ev"],[51,28,45,26],[51,29,45,27],[52,4,46,2],[52,5,46,3],[53,4,47,2,"onRawEvent"],[53,14,47,12,"onRawEvent"],[53,15,47,13,"ev"],[53,17,47,15],[53,19,47,17],[54,6,48,4],[54,11,48,9],[54,12,48,10,"onRawEvent"],[54,22,48,20],[54,23,48,21,"ev"],[54,25,48,23],[54,26,48,24],[56,6,50,4],[57,6,51,4],[57,10,51,8],[57,11,51,9],[57,15,51,13],[57,16,51,14,"hasGestureFailed"],[57,32,51,30],[57,36,51,34],[57,37,51,35],[57,41,51,39],[57,42,51,40,"isGestureRunning"],[57,58,51,56],[58,6,52,4],[59,6,53,4],[59,7,53,5,"ev"],[59,9,53,7],[59,10,53,8,"isFinal"],[59,17,53,15],[59,19,53,17],[60,8,54,6],[61,8,55,6],[61,14,55,12,"gesture"],[61,21,55,19],[61,24,55,22],[61,28,55,26],[61,29,55,27,"hammer"],[61,35,55,33],[61,36,55,34,"get"],[61,39,55,37],[61,40,55,38],[61,44,55,42],[61,45,55,43,"name"],[61,49,55,47],[61,50,55,48],[62,8,56,6],[63,8,57,6],[63,12,57,10,"gesture"],[63,19,57,17],[63,20,57,18,"options"],[63,27,57,25],[63,28,57,26,"enable"],[63,34,57,32],[63,35,57,33,"gesture"],[63,42,57,40],[63,44,57,42,"ev"],[63,46,57,44],[63,47,57,45],[63,49,57,47],[64,10,58,8,"clearTimeout"],[64,22,58,20],[64,23,58,21],[64,27,58,25],[64,28,58,26,"_multiTapTimer"],[64,42,58,40],[64,43,58,41],[65,10,59,8],[65,14,59,12],[65,15,59,13,"onStart"],[65,22,59,20],[65,23,59,21,"ev"],[65,25,59,23],[65,26,59,24],[66,10,60,8],[66,14,60,12],[66,15,60,13,"sendEvent"],[66,24,60,22],[66,25,60,23,"ev"],[66,27,60,25],[66,28,60,26],[67,8,61,6],[68,6,62,4],[69,6,63,4],[69,10,63,8,"ev"],[69,12,63,10],[69,13,63,11,"isFinal"],[69,20,63,18],[69,24,63,22,"ev"],[69,26,63,24],[69,27,63,25,"maxPointers"],[69,38,63,36],[69,41,63,39],[69,42,63,40],[69,44,63,42],[70,8,64,6,"setTimeout"],[70,18,64,16],[70,19,64,17],[70,25,64,23],[71,10,65,8],[72,10,66,8],[73,10,67,8],[73,14,67,12],[73,18,67,16],[73,19,67,17,"isGestureRunning"],[73,35,67,33],[73,37,67,35],[74,12,68,10],[74,16,68,14],[74,17,68,15,"cancelEvent"],[74,28,68,26],[74,29,68,27,"ev"],[74,31,68,29],[74,32,68,30],[75,10,69,8],[76,8,70,6],[76,9,70,7],[76,10,70,8],[77,6,71,4],[78,6,72,4],[78,10,72,8],[78,14,72,12],[78,15,72,13,"hasGestureFailed"],[78,31,72,29],[78,33,72,31],[79,8,73,6],[80,6,74,4],[81,6,75,4],[82,6,76,4],[83,6,77,4],[83,10,77,8,"ev"],[83,12,77,10],[83,13,77,11,"isFinal"],[83,20,77,18],[83,22,77,20],[84,8,78,6],[85,8,79,6],[86,8,80,6],[86,12,80,10,"ev"],[86,14,80,12],[86,15,80,13,"maxPointers"],[86,26,80,24],[86,29,80,27],[86,30,80,28],[86,32,80,30],[87,10,81,8,"setTimeout"],[87,20,81,18],[87,21,81,19],[87,27,81,25],[88,12,82,10],[88,16,82,14],[88,20,82,18],[88,21,82,19,"isGestureRunning"],[88,37,82,35],[88,39,82,37],[89,14,83,12],[89,18,83,16],[89,19,83,17,"cancelEvent"],[89,30,83,28],[89,31,83,29,"ev"],[89,33,83,31],[89,34,83,32],[90,12,84,10],[91,10,85,8],[91,11,85,9],[91,12,85,10],[92,8,86,6],[94,8,88,6],[95,8,89,6,"clearTimeout"],[95,20,89,18],[95,21,89,19],[95,25,89,23],[95,26,89,24,"_timer"],[95,32,89,30],[95,33,89,31],[96,8,90,6],[97,8,91,6],[97,12,91,10],[97,13,91,11,"_timer"],[97,19,91,17],[97,22,91,20,"setTimeout"],[97,32,91,30],[97,33,91,31],[97,39,91,37],[98,10,92,8],[98,14,92,12],[98,15,92,13,"hasGestureFailed"],[98,31,92,29],[98,34,92,32],[98,38,92,36],[99,10,93,8],[99,14,93,12],[99,15,93,13,"cancelEvent"],[99,26,93,24],[99,27,93,25,"ev"],[99,29,93,27],[99,30,93,28],[100,8,94,6],[100,9,94,7],[100,11,94,9],[100,15,94,13],[100,16,94,14,"maxDelayMs"],[100,26,94,24],[100,27,94,25],[101,6,95,4],[101,7,95,5],[101,13,95,11],[101,17,95,15],[101,18,95,16],[101,22,95,20],[101,23,95,21,"hasGestureFailed"],[101,39,95,37],[101,43,95,41],[101,44,95,42],[101,48,95,46],[101,49,95,47,"isGestureRunning"],[101,65,95,63],[101,67,95,65],[102,8,96,6],[103,8,97,6],[103,14,97,12,"gesture"],[103,21,97,19],[103,24,97,22],[103,28,97,26],[103,29,97,27,"hammer"],[103,35,97,33],[103,36,97,34,"get"],[103,39,97,37],[103,40,97,38],[103,44,97,42],[103,45,97,43,"name"],[103,49,97,47],[103,50,97,48],[104,8,98,6],[105,8,99,6],[105,12,99,10,"gesture"],[105,19,99,17],[105,20,99,18,"options"],[105,27,99,25],[105,28,99,26,"enable"],[105,34,99,32],[105,35,99,33,"gesture"],[105,42,99,40],[105,44,99,42,"ev"],[105,46,99,44],[105,47,99,45],[105,49,99,47],[106,10,100,8,"clearTimeout"],[106,22,100,20],[106,23,100,21],[106,27,100,25],[106,28,100,26,"_multiTapTimer"],[106,42,100,40],[106,43,100,41],[107,10,101,8],[107,14,101,12],[107,15,101,13,"onStart"],[107,22,101,20],[107,23,101,21,"ev"],[107,25,101,23],[107,26,101,24],[108,10,102,8],[108,14,102,12],[108,15,102,13,"sendEvent"],[108,24,102,22],[108,25,102,23,"ev"],[108,27,102,25],[108,28,102,26],[109,8,103,6],[110,6,104,4],[111,4,105,2],[112,4,106,2,"getHammerConfig"],[112,19,106,17,"getHammerConfig"],[112,20,106,17],[112,22,106,20],[113,6,107,4],[113,13,107,4,"Object"],[113,19,107,4],[113,20,107,4,"assign"],[113,26,107,4],[113,31,108,9],[113,36,108,14],[113,37,108,15,"getHammerConfig"],[113,52,108,30],[113,53,108,31],[113,54,108,32],[114,8,109,6,"event"],[114,13,109,11],[114,15,109,13],[114,19,109,17],[114,20,109,18,"name"],[114,24,109,22],[115,8,110,6],[116,8,111,6,"taps"],[116,12,111,10],[116,14,111,12],[116,18,111,12,"isnan"],[116,30,111,17],[116,32,111,18],[116,36,111,22],[116,37,111,23,"config"],[116,43,111,29],[116,44,111,30,"numberOfTaps"],[116,56,111,42],[116,57,111,43],[116,60,111,46],[116,61,111,47],[116,64,111,50],[116,68,111,54],[116,69,111,55,"config"],[116,75,111,61],[116,76,111,62,"numberOfTaps"],[116,88,111,74],[117,8,112,6,"interval"],[117,16,112,14],[117,18,112,16],[117,22,112,20],[117,23,112,21,"maxDelayMs"],[117,33,112,31],[118,8,113,6,"time"],[118,12,113,10],[119,8,114,6],[120,8,115,6],[120,12,115,6,"isnan"],[120,24,115,11],[120,26,115,12],[120,30,115,16],[120,31,115,17,"config"],[120,37,115,23],[120,38,115,24,"maxDurationMs"],[120,51,115,37],[120,52,115,38],[120,56,115,42],[120,60,115,46],[120,61,115,47,"config"],[120,67,115,53],[120,68,115,54,"maxDurationMs"],[120,81,115,67],[120,85,115,71],[120,89,115,75],[120,92,115,78],[120,95,115,81],[121,8,116,6],[122,8,117,6],[122,12,117,10],[122,13,117,11,"config"],[122,19,117,17],[122,20,117,18,"maxDurationMs"],[123,6,117,31],[124,4,119,2],[125,4,120,2,"updateGestureConfig"],[125,23,120,21,"updateGestureConfig"],[125,24,120,21,"_ref"],[125,28,120,21],[125,30,133,5],[126,6,133,5],[126,10,120,22],[127,10,121,4,"shouldCancelWhenOutside"],[127,33,121,27],[127,36,121,30],[127,40,121,34],[128,10,122,4,"maxDeltaX"],[128,19,122,13],[128,22,122,16,"Number"],[128,28,122,22],[128,29,122,23,"NaN"],[128,32,122,26],[129,10,123,4,"maxDeltaY"],[129,19,123,13],[129,22,123,16,"Number"],[129,28,123,22],[129,29,123,23,"NaN"],[129,32,123,26],[130,10,124,4,"numberOfTaps"],[130,22,124,16],[130,25,124,19],[130,26,124,20],[131,10,125,4,"minDurationMs"],[131,23,125,17],[131,26,125,20],[131,29,125,23],[132,10,126,4,"maxDelayMs"],[132,20,126,14],[132,23,126,17,"Number"],[132,29,126,23],[132,30,126,24,"NaN"],[132,33,126,27],[133,10,127,4],[134,10,128,4,"maxDurationMs"],[134,23,128,17],[134,26,128,20,"Number"],[134,32,128,26],[134,33,128,27,"NaN"],[134,36,128,30],[135,10,129,4,"maxDist"],[135,17,129,11],[135,20,129,14],[135,21,129,15],[136,10,130,4,"minPointers"],[136,21,130,15],[136,24,130,18],[136,25,130,19],[137,10,131,4,"maxPointers"],[137,21,131,15],[137,24,131,18],[138,8,133,2],[138,9,133,3],[138,12,133,3,"_ref"],[138,16,133,3],[139,8,132,7,"props"],[139,13,132,12],[139,20,132,12,"_objectWithoutPropertiesLoose2"],[139,50,132,12],[139,51,132,12,"default"],[139,58,132,12],[139,60,132,12,"_ref"],[139,64,132,12],[139,66,132,12,"_excluded"],[139,75,132,12],[140,6,134,4],[140,13,134,11],[140,18,134,16],[140,19,134,17,"updateGestureConfig"],[140,38,134,36],[140,39,134,36,"Object"],[140,45,134,36],[140,46,134,36,"assign"],[140,52,134,36],[141,8,135,6,"shouldCancelWhenOutside"],[141,31,135,29],[142,8,136,6,"numberOfTaps"],[142,20,136,18],[143,8,137,6,"maxDeltaX"],[143,17,137,15],[144,8,138,6,"maxDeltaY"],[144,17,138,15],[145,8,139,6,"minDurationMs"],[145,21,139,19],[146,8,140,6,"maxDelayMs"],[146,18,140,16],[147,8,141,6,"maxDist"],[147,15,141,13],[148,8,142,6,"minPointers"],[148,19,142,17],[149,8,143,6,"maxPointers"],[150,6,143,17],[150,9,144,9,"props"],[150,14,144,14],[150,15,145,5],[150,16,145,6],[151,4,146,2],[152,4,147,2,"onGestureEnded"],[152,18,147,16,"onGestureEnded"],[152,19,147,17],[152,22,147,20,"props"],[152,27,147,25],[152,29,147,27],[153,6,148,4,"clearTimeout"],[153,18,148,16],[153,19,148,17],[153,23,148,21],[153,24,148,22,"_timer"],[153,30,148,28],[153,31,148,29],[154,6,149,4],[155,6,150,4],[155,11,150,9],[155,12,150,10,"onGestureEnded"],[155,26,150,24],[155,27,150,25],[155,30,150,28,"props"],[155,35,150,33],[155,36,150,34],[156,4,151,2],[157,4,152,2,"onWaitingEnded"],[157,18,152,16,"onWaitingEnded"],[157,19,152,17,"_gesture"],[157,27,152,25],[157,29,152,27],[158,6,153,4],[158,10,153,8],[158,14,153,12],[158,15,153,13,"_shouldFireEndEvent"],[158,34,153,32],[158,36,153,34],[159,8,154,6],[159,12,154,10],[159,13,154,11,"onSuccessfulTap"],[159,28,154,26],[159,29,154,27],[159,33,154,31],[159,34,154,32,"_shouldFireEndEvent"],[159,53,154,51],[159,54,154,52],[160,8,155,6],[160,12,155,10],[160,13,155,11,"_shouldFireEndEvent"],[160,32,155,30],[160,35,155,33],[160,39,155,37],[161,6,156,4],[162,4,157,2],[163,2,158,0],[164,2,158,1],[164,6,158,1,"_default"],[164,14,158,1],[164,17,158,1,"exports"],[164,24,158,1],[164,25,158,1,"default"],[164,32,158,1],[164,35,159,15,"TapGestureHandler"],[164,52,159,32],[165,0,159,32],[165,3]],"functionMap":{"names":["<global>","TapGestureHandler","get__name","get__NativeGestureClass","get__maxDelayMs","simulateCancelEvent","onGestureActivated","onSuccessfulTap","onRawEvent","setTimeout$argument_0","getHammerConfig","updateGestureConfig","onGestureEnded","onWaitingEnded"],"mappings":"AAA;ACK;ECG;GDE;EEC;GFE;EGC;GHG;EIC;GJI;EKC;GLI;oBMC;GNiB;EOC;iBCiB;ODM;mBCW;SDI;+BCM;ODG;GPW;ESC;GTa;EUC;GV0B;EWC;GXI;EYC;GZK;CDC"}},"type":"js/module"}]}