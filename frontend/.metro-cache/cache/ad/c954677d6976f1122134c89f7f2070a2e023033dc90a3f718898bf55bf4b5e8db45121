{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":49,"index":260}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PanGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        changeX: current.translationX,\n        changeY: current.translationY\n      };\n    } else {\n      changePayload = {\n        changeX: current.translationX - previous.translationX,\n        changeY: current.translationY - previous.translationY\n      };\n    }\n    return Object.assign({}, current, changePayload);\n  }\n  class PanGesture extends _gesture.ContinousBaseGesture {\n    constructor() {\n      super();\n      _defineProperty(this, \"config\", {});\n      this.handlerName = 'PanGestureHandler';\n    }\n    /**\n     * Range along Y axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetyvalue-number--number\n     */\n\n    activeOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetYStart = offset[0];\n        this.config.activeOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetYStart = offset;\n      } else {\n        this.config.activeOffsetYEnd = offset;\n      }\n      return this;\n    }\n    /**\n     * Range along X axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetxvalue-number--number\n     */\n\n    activeOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetXStart = offset[0];\n        this.config.activeOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetXStart = offset;\n      } else {\n        this.config.activeOffsetXEnd = offset;\n      }\n      return this;\n    }\n    /**\n     * When the finger moves outside this range (in points) along Y axis and gesture hasn't yet activated it will fail recognizing the gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetyvalue-number--number\n     */\n\n    failOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetYStart = offset[0];\n        this.config.failOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetYStart = offset;\n      } else {\n        this.config.failOffsetYEnd = offset;\n      }\n      return this;\n    }\n    /**\n     * When the finger moves outside this range (in points) along X axis and gesture hasn't yet activated it will fail recognizing the gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetxvalue-number--number\n     */\n\n    failOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetXStart = offset[0];\n        this.config.failOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetXStart = offset;\n      } else {\n        this.config.failOffsetXEnd = offset;\n      }\n      return this;\n    }\n    /**\n     * A number of fingers that is required to be placed before gesture can activate. Should be a higher or equal to 0 integer.\n     * @param minPointers\n     */\n\n    minPointers(minPointers) {\n      this.config.minPointers = minPointers;\n      return this;\n    }\n    /**\n     * When the given number of fingers is placed on the screen and gesture hasn't yet activated it will fail recognizing the gesture.\n     * Should be a higher or equal to 0 integer.\n     * @param maxPointers\n     */\n\n    maxPointers(maxPointers) {\n      this.config.maxPointers = maxPointers;\n      return this;\n    }\n    /**\n     * Minimum distance the finger (or multiple finger) need to travel before the gesture activates.\n     * Expressed in points.\n     * @param distance\n     */\n\n    minDistance(distance) {\n      this.config.minDist = distance;\n      return this;\n    }\n    /**\n     * Minimum velocity the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n\n    minVelocity(velocity) {\n      this.config.minVelocity = velocity;\n      return this;\n    }\n    /**\n     * Minimum velocity along X axis the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n\n    minVelocityX(velocity) {\n      this.config.minVelocityX = velocity;\n      return this;\n    }\n    /**\n     * Minimum velocity along Y axis the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n\n    minVelocityY(velocity) {\n      this.config.minVelocityY = velocity;\n      return this;\n    }\n    /**\n     * #### Android only\n     * Android, by default, will calculate translation values based on the position of the leading pointer (the first one that was placed on the screen).\n     * This modifier allows that behavior to be changed to the one that is default on iOS - the averaged position of all active pointers will be used to calculate the translation values.\n     * @param value\n     */\n\n    averageTouches(value) {\n      this.config.avgTouches = value;\n      return this;\n    }\n    /**\n     * #### iOS only\n     * Enables two-finger gestures on supported devices, for example iPads with trackpads.\n     * @param value\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#enabletrackpadtwofingergesturevalue-boolean-ios-only\n     */\n\n    enableTrackpadTwoFingerGesture(value) {\n      this.config.enableTrackpadTwoFingerGesture = value;\n      return this;\n    }\n    /**\n     * Duration in milliseconds of the LongPress gesture before Pan is allowed to activate.\n     * @param duration\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#activateafterlongpressduration-number\n     */\n\n    activateAfterLongPress(duration) {\n      this.config.activateAfterLongPress = duration;\n      return this;\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n  exports.PanGesture = PanGesture;\n});","lineCount":206,"map":[[6,2,3,0],[6,6,3,0,"_gesture"],[6,14,3,0],[6,17,3,0,"require"],[6,24,3,0],[6,25,3,0,"_dependencyMap"],[6,39,3,0],[7,2,1,0],[7,11,1,9,"_defineProperty"],[7,26,1,24,"_defineProperty"],[7,27,1,25,"obj"],[7,30,1,28],[7,32,1,30,"key"],[7,35,1,33],[7,37,1,35,"value"],[7,42,1,40],[7,44,1,42],[8,4,1,44],[8,8,1,48,"key"],[8,11,1,51],[8,15,1,55,"obj"],[8,18,1,58],[8,20,1,60],[9,6,1,62,"Object"],[9,12,1,68],[9,13,1,69,"defineProperty"],[9,27,1,83],[9,28,1,84,"obj"],[9,31,1,87],[9,33,1,89,"key"],[9,36,1,92],[9,38,1,94],[10,8,1,96,"value"],[10,13,1,101],[10,15,1,103,"value"],[10,20,1,108],[11,8,1,110,"enumerable"],[11,18,1,120],[11,20,1,122],[11,24,1,126],[12,8,1,128,"configurable"],[12,20,1,140],[12,22,1,142],[12,26,1,146],[13,8,1,148,"writable"],[13,16,1,156],[13,18,1,158],[14,6,1,163],[14,7,1,164],[14,8,1,165],[15,4,1,167],[15,5,1,168],[15,11,1,174],[16,6,1,176,"obj"],[16,9,1,179],[16,10,1,180,"key"],[16,13,1,183],[16,14,1,184],[16,17,1,187,"value"],[16,22,1,192],[17,4,1,194],[18,4,1,196],[18,11,1,203,"obj"],[18,14,1,206],[19,2,1,208],[20,2,5,0],[20,11,5,9,"changeEventCalculator"],[20,32,5,30,"changeEventCalculator"],[20,33,5,31,"current"],[20,40,5,38],[20,42,5,40,"previous"],[20,50,5,48],[20,52,5,50],[21,4,6,2],[21,13,6,11],[23,4,8,2],[23,8,8,6,"changePayload"],[23,21,8,19],[24,4,10,2],[24,8,10,6,"previous"],[24,16,10,14],[24,21,10,19,"undefined"],[24,30,10,28],[24,32,10,30],[25,6,11,4,"changePayload"],[25,19,11,17],[25,22,11,20],[26,8,12,6,"changeX"],[26,15,12,13],[26,17,12,15,"current"],[26,24,12,22],[26,25,12,23,"translationX"],[26,37,12,35],[27,8,13,6,"changeY"],[27,15,13,13],[27,17,13,15,"current"],[27,24,13,22],[27,25,13,23,"translationY"],[28,6,14,4],[28,7,14,5],[29,4,15,2],[29,5,15,3],[29,11,15,9],[30,6,16,4,"changePayload"],[30,19,16,17],[30,22,16,20],[31,8,17,6,"changeX"],[31,15,17,13],[31,17,17,15,"current"],[31,24,17,22],[31,25,17,23,"translationX"],[31,37,17,35],[31,40,17,38,"previous"],[31,48,17,46],[31,49,17,47,"translationX"],[31,61,17,59],[32,8,18,6,"changeY"],[32,15,18,13],[32,17,18,15,"current"],[32,24,18,22],[32,25,18,23,"translationY"],[32,37,18,35],[32,40,18,38,"previous"],[32,48,18,46],[32,49,18,47,"translationY"],[33,6,19,4],[33,7,19,5],[34,4,20,2],[35,4,22,2],[35,11,22,2,"Object"],[35,17,22,2],[35,18,22,2,"assign"],[35,24,22,2],[35,29,22,14,"current"],[35,36,22,21],[35,38,23,7,"changePayload"],[35,51,23,20],[36,2,25,0],[37,2,27,7],[37,8,27,13,"PanGesture"],[37,18,27,23],[37,27,27,32,"ContinousBaseGesture"],[37,56,27,52],[37,57,27,53],[38,4,28,2,"constructor"],[38,15,28,13,"constructor"],[38,16,28,13],[38,18,28,16],[39,6,29,4],[39,11,29,9],[39,12,29,10],[39,13,29,11],[40,6,31,4,"_defineProperty"],[40,21,31,19],[40,22,31,20],[40,26,31,24],[40,28,31,26],[40,36,31,34],[40,38,31,36],[40,39,31,37],[40,40,31,38],[40,41,31,39],[41,6,33,4],[41,10,33,8],[41,11,33,9,"handlerName"],[41,22,33,20],[41,25,33,23],[41,44,33,42],[42,4,34,2],[43,4,35,2],[44,0,36,0],[45,0,37,0],[46,0,38,0],[47,0,39,0],[49,4,42,2,"activeOffsetY"],[49,17,42,15,"activeOffsetY"],[49,18,42,16,"offset"],[49,24,42,22],[49,26,42,24],[50,6,43,4],[50,10,43,8,"Array"],[50,15,43,13],[50,16,43,14,"isArray"],[50,23,43,21],[50,24,43,22,"offset"],[50,30,43,28],[50,31,43,29],[50,33,43,31],[51,8,44,6],[51,12,44,10],[51,13,44,11,"config"],[51,19,44,17],[51,20,44,18,"activeOffsetYStart"],[51,38,44,36],[51,41,44,39,"offset"],[51,47,44,45],[51,48,44,46],[51,49,44,47],[51,50,44,48],[52,8,45,6],[52,12,45,10],[52,13,45,11,"config"],[52,19,45,17],[52,20,45,18,"activeOffsetYEnd"],[52,36,45,34],[52,39,45,37,"offset"],[52,45,45,43],[52,46,45,44],[52,47,45,45],[52,48,45,46],[53,6,46,4],[53,7,46,5],[53,13,46,11],[53,17,46,15,"offset"],[53,23,46,21],[53,26,46,24],[53,27,46,25],[53,29,46,27],[54,8,47,6],[54,12,47,10],[54,13,47,11,"config"],[54,19,47,17],[54,20,47,18,"activeOffsetYStart"],[54,38,47,36],[54,41,47,39,"offset"],[54,47,47,45],[55,6,48,4],[55,7,48,5],[55,13,48,11],[56,8,49,6],[56,12,49,10],[56,13,49,11,"config"],[56,19,49,17],[56,20,49,18,"activeOffsetYEnd"],[56,36,49,34],[56,39,49,37,"offset"],[56,45,49,43],[57,6,50,4],[58,6,52,4],[58,13,52,11],[58,17,52,15],[59,4,53,2],[60,4,54,2],[61,0,55,0],[62,0,56,0],[63,0,57,0],[64,0,58,0],[66,4,61,2,"activeOffsetX"],[66,17,61,15,"activeOffsetX"],[66,18,61,16,"offset"],[66,24,61,22],[66,26,61,24],[67,6,62,4],[67,10,62,8,"Array"],[67,15,62,13],[67,16,62,14,"isArray"],[67,23,62,21],[67,24,62,22,"offset"],[67,30,62,28],[67,31,62,29],[67,33,62,31],[68,8,63,6],[68,12,63,10],[68,13,63,11,"config"],[68,19,63,17],[68,20,63,18,"activeOffsetXStart"],[68,38,63,36],[68,41,63,39,"offset"],[68,47,63,45],[68,48,63,46],[68,49,63,47],[68,50,63,48],[69,8,64,6],[69,12,64,10],[69,13,64,11,"config"],[69,19,64,17],[69,20,64,18,"activeOffsetXEnd"],[69,36,64,34],[69,39,64,37,"offset"],[69,45,64,43],[69,46,64,44],[69,47,64,45],[69,48,64,46],[70,6,65,4],[70,7,65,5],[70,13,65,11],[70,17,65,15,"offset"],[70,23,65,21],[70,26,65,24],[70,27,65,25],[70,29,65,27],[71,8,66,6],[71,12,66,10],[71,13,66,11,"config"],[71,19,66,17],[71,20,66,18,"activeOffsetXStart"],[71,38,66,36],[71,41,66,39,"offset"],[71,47,66,45],[72,6,67,4],[72,7,67,5],[72,13,67,11],[73,8,68,6],[73,12,68,10],[73,13,68,11,"config"],[73,19,68,17],[73,20,68,18,"activeOffsetXEnd"],[73,36,68,34],[73,39,68,37,"offset"],[73,45,68,43],[74,6,69,4],[75,6,71,4],[75,13,71,11],[75,17,71,15],[76,4,72,2],[77,4,73,2],[78,0,74,0],[79,0,75,0],[80,0,76,0],[81,0,77,0],[83,4,80,2,"failOffsetY"],[83,15,80,13,"failOffsetY"],[83,16,80,14,"offset"],[83,22,80,20],[83,24,80,22],[84,6,81,4],[84,10,81,8,"Array"],[84,15,81,13],[84,16,81,14,"isArray"],[84,23,81,21],[84,24,81,22,"offset"],[84,30,81,28],[84,31,81,29],[84,33,81,31],[85,8,82,6],[85,12,82,10],[85,13,82,11,"config"],[85,19,82,17],[85,20,82,18,"failOffsetYStart"],[85,36,82,34],[85,39,82,37,"offset"],[85,45,82,43],[85,46,82,44],[85,47,82,45],[85,48,82,46],[86,8,83,6],[86,12,83,10],[86,13,83,11,"config"],[86,19,83,17],[86,20,83,18,"failOffsetYEnd"],[86,34,83,32],[86,37,83,35,"offset"],[86,43,83,41],[86,44,83,42],[86,45,83,43],[86,46,83,44],[87,6,84,4],[87,7,84,5],[87,13,84,11],[87,17,84,15,"offset"],[87,23,84,21],[87,26,84,24],[87,27,84,25],[87,29,84,27],[88,8,85,6],[88,12,85,10],[88,13,85,11,"config"],[88,19,85,17],[88,20,85,18,"failOffsetYStart"],[88,36,85,34],[88,39,85,37,"offset"],[88,45,85,43],[89,6,86,4],[89,7,86,5],[89,13,86,11],[90,8,87,6],[90,12,87,10],[90,13,87,11,"config"],[90,19,87,17],[90,20,87,18,"failOffsetYEnd"],[90,34,87,32],[90,37,87,35,"offset"],[90,43,87,41],[91,6,88,4],[92,6,90,4],[92,13,90,11],[92,17,90,15],[93,4,91,2],[94,4,92,2],[95,0,93,0],[96,0,94,0],[97,0,95,0],[98,0,96,0],[100,4,99,2,"failOffsetX"],[100,15,99,13,"failOffsetX"],[100,16,99,14,"offset"],[100,22,99,20],[100,24,99,22],[101,6,100,4],[101,10,100,8,"Array"],[101,15,100,13],[101,16,100,14,"isArray"],[101,23,100,21],[101,24,100,22,"offset"],[101,30,100,28],[101,31,100,29],[101,33,100,31],[102,8,101,6],[102,12,101,10],[102,13,101,11,"config"],[102,19,101,17],[102,20,101,18,"failOffsetXStart"],[102,36,101,34],[102,39,101,37,"offset"],[102,45,101,43],[102,46,101,44],[102,47,101,45],[102,48,101,46],[103,8,102,6],[103,12,102,10],[103,13,102,11,"config"],[103,19,102,17],[103,20,102,18,"failOffsetXEnd"],[103,34,102,32],[103,37,102,35,"offset"],[103,43,102,41],[103,44,102,42],[103,45,102,43],[103,46,102,44],[104,6,103,4],[104,7,103,5],[104,13,103,11],[104,17,103,15,"offset"],[104,23,103,21],[104,26,103,24],[104,27,103,25],[104,29,103,27],[105,8,104,6],[105,12,104,10],[105,13,104,11,"config"],[105,19,104,17],[105,20,104,18,"failOffsetXStart"],[105,36,104,34],[105,39,104,37,"offset"],[105,45,104,43],[106,6,105,4],[106,7,105,5],[106,13,105,11],[107,8,106,6],[107,12,106,10],[107,13,106,11,"config"],[107,19,106,17],[107,20,106,18,"failOffsetXEnd"],[107,34,106,32],[107,37,106,35,"offset"],[107,43,106,41],[108,6,107,4],[109,6,109,4],[109,13,109,11],[109,17,109,15],[110,4,110,2],[111,4,111,2],[112,0,112,0],[113,0,113,0],[114,0,114,0],[116,4,117,2,"minPointers"],[116,15,117,13,"minPointers"],[116,16,117,14,"minPointers"],[116,27,117,25],[116,29,117,27],[117,6,118,4],[117,10,118,8],[117,11,118,9,"config"],[117,17,118,15],[117,18,118,16,"minPointers"],[117,29,118,27],[117,32,118,30,"minPointers"],[117,43,118,41],[118,6,119,4],[118,13,119,11],[118,17,119,15],[119,4,120,2],[120,4,121,2],[121,0,122,0],[122,0,123,0],[123,0,124,0],[124,0,125,0],[126,4,128,2,"maxPointers"],[126,15,128,13,"maxPointers"],[126,16,128,14,"maxPointers"],[126,27,128,25],[126,29,128,27],[127,6,129,4],[127,10,129,8],[127,11,129,9,"config"],[127,17,129,15],[127,18,129,16,"maxPointers"],[127,29,129,27],[127,32,129,30,"maxPointers"],[127,43,129,41],[128,6,130,4],[128,13,130,11],[128,17,130,15],[129,4,131,2],[130,4,132,2],[131,0,133,0],[132,0,134,0],[133,0,135,0],[134,0,136,0],[136,4,139,2,"minDistance"],[136,15,139,13,"minDistance"],[136,16,139,14,"distance"],[136,24,139,22],[136,26,139,24],[137,6,140,4],[137,10,140,8],[137,11,140,9,"config"],[137,17,140,15],[137,18,140,16,"minDist"],[137,25,140,23],[137,28,140,26,"distance"],[137,36,140,34],[138,6,141,4],[138,13,141,11],[138,17,141,15],[139,4,142,2],[140,4,143,2],[141,0,144,0],[142,0,145,0],[143,0,146,0],[145,4,149,2,"minVelocity"],[145,15,149,13,"minVelocity"],[145,16,149,14,"velocity"],[145,24,149,22],[145,26,149,24],[146,6,150,4],[146,10,150,8],[146,11,150,9,"config"],[146,17,150,15],[146,18,150,16,"minVelocity"],[146,29,150,27],[146,32,150,30,"velocity"],[146,40,150,38],[147,6,151,4],[147,13,151,11],[147,17,151,15],[148,4,152,2],[149,4,153,2],[150,0,154,0],[151,0,155,0],[152,0,156,0],[154,4,159,2,"minVelocityX"],[154,16,159,14,"minVelocityX"],[154,17,159,15,"velocity"],[154,25,159,23],[154,27,159,25],[155,6,160,4],[155,10,160,8],[155,11,160,9,"config"],[155,17,160,15],[155,18,160,16,"minVelocityX"],[155,30,160,28],[155,33,160,31,"velocity"],[155,41,160,39],[156,6,161,4],[156,13,161,11],[156,17,161,15],[157,4,162,2],[158,4,163,2],[159,0,164,0],[160,0,165,0],[161,0,166,0],[163,4,169,2,"minVelocityY"],[163,16,169,14,"minVelocityY"],[163,17,169,15,"velocity"],[163,25,169,23],[163,27,169,25],[164,6,170,4],[164,10,170,8],[164,11,170,9,"config"],[164,17,170,15],[164,18,170,16,"minVelocityY"],[164,30,170,28],[164,33,170,31,"velocity"],[164,41,170,39],[165,6,171,4],[165,13,171,11],[165,17,171,15],[166,4,172,2],[167,4,173,2],[168,0,174,0],[169,0,175,0],[170,0,176,0],[171,0,177,0],[172,0,178,0],[174,4,181,2,"averageTouches"],[174,18,181,16,"averageTouches"],[174,19,181,17,"value"],[174,24,181,22],[174,26,181,24],[175,6,182,4],[175,10,182,8],[175,11,182,9,"config"],[175,17,182,15],[175,18,182,16,"avgTouches"],[175,28,182,26],[175,31,182,29,"value"],[175,36,182,34],[176,6,183,4],[176,13,183,11],[176,17,183,15],[177,4,184,2],[178,4,185,2],[179,0,186,0],[180,0,187,0],[181,0,188,0],[182,0,189,0],[183,0,190,0],[185,4,193,2,"enableTrackpadTwoFingerGesture"],[185,34,193,32,"enableTrackpadTwoFingerGesture"],[185,35,193,33,"value"],[185,40,193,38],[185,42,193,40],[186,6,194,4],[186,10,194,8],[186,11,194,9,"config"],[186,17,194,15],[186,18,194,16,"enableTrackpadTwoFingerGesture"],[186,48,194,46],[186,51,194,49,"value"],[186,56,194,54],[187,6,195,4],[187,13,195,11],[187,17,195,15],[188,4,196,2],[189,4,197,2],[190,0,198,0],[191,0,199,0],[192,0,200,0],[193,0,201,0],[195,4,204,2,"activateAfterLongPress"],[195,26,204,24,"activateAfterLongPress"],[195,27,204,25,"duration"],[195,35,204,33],[195,37,204,35],[196,6,205,4],[196,10,205,8],[196,11,205,9,"config"],[196,17,205,15],[196,18,205,16,"activateAfterLongPress"],[196,40,205,38],[196,43,205,41,"duration"],[196,51,205,49],[197,6,206,4],[197,13,206,11],[197,17,206,15],[198,4,207,2],[199,4,209,2,"onChange"],[199,12,209,10,"onChange"],[199,13,209,11,"callback"],[199,21,209,19],[199,23,209,21],[200,6,210,4],[201,6,211,4],[201,10,211,8],[201,11,211,9,"handlers"],[201,19,211,17],[201,20,211,18,"changeEventCalculator"],[201,41,211,39],[201,44,211,42,"changeEventCalculator"],[201,65,211,63],[202,6,212,4],[202,13,212,11],[202,18,212,16],[202,19,212,17,"onChange"],[202,27,212,25],[202,28,212,26,"callback"],[202,36,212,34],[202,37,212,35],[203,4,213,2],[204,2,215,0],[205,2,215,1,"exports"],[205,9,215,1],[205,10,215,1,"PanGesture"],[205,20,215,1],[205,23,215,1,"PanGesture"],[205,33,215,1],[206,0,215,1],[206,3]],"functionMap":{"names":["_defineProperty","<global>","changeEventCalculator","PanGesture","PanGesture#constructor","PanGesture#activeOffsetY","PanGesture#activeOffsetX","PanGesture#failOffsetY","PanGesture#failOffsetX","PanGesture#minPointers","PanGesture#maxPointers","PanGesture#minDistance","PanGesture#minVelocity","PanGesture#minVelocityX","PanGesture#minVelocityY","PanGesture#averageTouches","PanGesture#enableTrackpadTwoFingerGesture","PanGesture#activateAfterLongPress","PanGesture#onChange"],"mappings":"AAA,iNC;ACI;CDoB;OEE;ECC;GDM;EEQ;GFW;EGQ;GHW;EIQ;GJW;EKQ;GLW;EMO;GNG;EOQ;GPG;EQQ;GRG;ESO;GTG;EUO;GVG;EWO;GXG;EYS;GZG;EaS;GbG;EcQ;GdG;EeE;GfI;CFE"}},"type":"js/module"}]}