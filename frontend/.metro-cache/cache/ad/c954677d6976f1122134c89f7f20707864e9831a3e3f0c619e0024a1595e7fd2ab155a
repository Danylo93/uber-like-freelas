{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":49,"index":64}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PanGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        changeX: current.translationX,\n        changeY: current.translationY\n      };\n    } else {\n      changePayload = {\n        changeX: current.translationX - previous.translationX,\n        changeY: current.translationY - previous.translationY\n      };\n    }\n    return Object.assign({}, current, changePayload);\n  }\n  class PanGesture extends _gesture.ContinousBaseGesture {\n    config = {};\n    constructor() {\n      super();\n      this.handlerName = 'PanGestureHandler';\n    }\n\n    /**\n     * Range along Y axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetyvalue-number--number\n     */\n    activeOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetYStart = offset[0];\n        this.config.activeOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetYStart = offset;\n      } else {\n        this.config.activeOffsetYEnd = offset;\n      }\n      return this;\n    }\n\n    /**\n     * Range along X axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetxvalue-number--number\n     */\n    activeOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetXStart = offset[0];\n        this.config.activeOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetXStart = offset;\n      } else {\n        this.config.activeOffsetXEnd = offset;\n      }\n      return this;\n    }\n\n    /**\n     * When the finger moves outside this range (in points) along Y axis and gesture hasn't yet activated it will fail recognizing the gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetyvalue-number--number\n     */\n    failOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetYStart = offset[0];\n        this.config.failOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetYStart = offset;\n      } else {\n        this.config.failOffsetYEnd = offset;\n      }\n      return this;\n    }\n\n    /**\n     * When the finger moves outside this range (in points) along X axis and gesture hasn't yet activated it will fail recognizing the gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetxvalue-number--number\n     */\n    failOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetXStart = offset[0];\n        this.config.failOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetXStart = offset;\n      } else {\n        this.config.failOffsetXEnd = offset;\n      }\n      return this;\n    }\n\n    /**\n     * A number of fingers that is required to be placed before gesture can activate. Should be a higher or equal to 0 integer.\n     * @param minPointers\n     */\n    minPointers(minPointers) {\n      this.config.minPointers = minPointers;\n      return this;\n    }\n\n    /**\n     * When the given number of fingers is placed on the screen and gesture hasn't yet activated it will fail recognizing the gesture.\n     * Should be a higher or equal to 0 integer.\n     * @param maxPointers\n     */\n    maxPointers(maxPointers) {\n      this.config.maxPointers = maxPointers;\n      return this;\n    }\n\n    /**\n     * Minimum distance the finger (or multiple finger) need to travel before the gesture activates.\n     * Expressed in points.\n     * @param distance\n     */\n    minDistance(distance) {\n      this.config.minDist = distance;\n      return this;\n    }\n\n    /**\n     * Minimum velocity the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n    minVelocity(velocity) {\n      this.config.minVelocity = velocity;\n      return this;\n    }\n\n    /**\n     * Minimum velocity along X axis the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n    minVelocityX(velocity) {\n      this.config.minVelocityX = velocity;\n      return this;\n    }\n\n    /**\n     * Minimum velocity along Y axis the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n    minVelocityY(velocity) {\n      this.config.minVelocityY = velocity;\n      return this;\n    }\n\n    /**\n     * #### Android only\n     * Android, by default, will calculate translation values based on the position of the leading pointer (the first one that was placed on the screen).\n     * This modifier allows that behavior to be changed to the one that is default on iOS - the averaged position of all active pointers will be used to calculate the translation values.\n     * @param value\n     */\n    averageTouches(value) {\n      this.config.avgTouches = value;\n      return this;\n    }\n\n    /**\n     * #### iOS only\n     * Enables two-finger gestures on supported devices, for example iPads with trackpads.\n     * @param value\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#enabletrackpadtwofingergesturevalue-boolean-ios-only\n     */\n    enableTrackpadTwoFingerGesture(value) {\n      this.config.enableTrackpadTwoFingerGesture = value;\n      return this;\n    }\n\n    /**\n     * Duration in milliseconds of the LongPress gesture before Pan is allowed to activate.\n     * @param duration\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#activateafterlongpressduration-number\n     */\n    activateAfterLongPress(duration) {\n      this.config.activateAfterLongPress = duration;\n      return this;\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n  exports.PanGesture = PanGesture;\n});","lineCount":195,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"PanGesture"],[7,20,1,13],[8,2,3,0],[8,6,3,0,"_gesture"],[8,14,3,0],[8,17,3,0,"require"],[8,24,3,0],[8,25,3,0,"_dependencyMap"],[8,39,3,0],[9,2,4,0],[9,11,4,9,"changeEventCalculator"],[9,32,4,30,"changeEventCalculator"],[9,33,4,31,"current"],[9,40,4,38],[9,42,4,40,"previous"],[9,50,4,48],[9,52,4,50],[10,4,5,2],[10,13,5,11],[12,4,7,2],[12,8,7,6,"changePayload"],[12,21,7,19],[13,4,8,2],[13,8,8,6,"previous"],[13,16,8,14],[13,21,8,19,"undefined"],[13,30,8,28],[13,32,8,30],[14,6,9,4,"changePayload"],[14,19,9,17],[14,22,9,20],[15,8,10,6,"changeX"],[15,15,10,13],[15,17,10,15,"current"],[15,24,10,22],[15,25,10,23,"translationX"],[15,37,10,35],[16,8,11,6,"changeY"],[16,15,11,13],[16,17,11,15,"current"],[16,24,11,22],[16,25,11,23,"translationY"],[17,6,12,4],[17,7,12,5],[18,4,13,2],[18,5,13,3],[18,11,13,9],[19,6,14,4,"changePayload"],[19,19,14,17],[19,22,14,20],[20,8,15,6,"changeX"],[20,15,15,13],[20,17,15,15,"current"],[20,24,15,22],[20,25,15,23,"translationX"],[20,37,15,35],[20,40,15,38,"previous"],[20,48,15,46],[20,49,15,47,"translationX"],[20,61,15,59],[21,8,16,6,"changeY"],[21,15,16,13],[21,17,16,15,"current"],[21,24,16,22],[21,25,16,23,"translationY"],[21,37,16,35],[21,40,16,38,"previous"],[21,48,16,46],[21,49,16,47,"translationY"],[22,6,17,4],[22,7,17,5],[23,4,18,2],[24,4,19,2],[24,11,19,2,"Object"],[24,17,19,2],[24,18,19,2,"assign"],[24,24,19,2],[24,29,20,7,"current"],[24,36,20,14],[24,38,21,7,"changePayload"],[24,51,21,20],[25,2,23,0],[26,2,24,7],[26,8,24,13,"PanGesture"],[26,18,24,23],[26,27,24,32,"ContinousBaseGesture"],[26,56,24,52],[26,57,24,53],[27,4,25,2,"config"],[27,10,25,8],[27,13,25,11],[27,14,25,12],[27,15,25,13],[28,4,26,2,"constructor"],[28,15,26,13,"constructor"],[28,16,26,13],[28,18,26,16],[29,6,27,4],[29,11,27,9],[29,12,27,10],[29,13,27,11],[30,6,28,4],[30,10,28,8],[30,11,28,9,"handlerName"],[30,22,28,20],[30,25,28,23],[30,44,28,42],[31,4,29,2],[33,4,31,2],[34,0,32,0],[35,0,33,0],[36,0,34,0],[37,0,35,0],[38,4,36,2,"activeOffsetY"],[38,17,36,15,"activeOffsetY"],[38,18,36,16,"offset"],[38,24,36,22],[38,26,36,24],[39,6,37,4],[39,10,37,8,"Array"],[39,15,37,13],[39,16,37,14,"isArray"],[39,23,37,21],[39,24,37,22,"offset"],[39,30,37,28],[39,31,37,29],[39,33,37,31],[40,8,38,6],[40,12,38,10],[40,13,38,11,"config"],[40,19,38,17],[40,20,38,18,"activeOffsetYStart"],[40,38,38,36],[40,41,38,39,"offset"],[40,47,38,45],[40,48,38,46],[40,49,38,47],[40,50,38,48],[41,8,39,6],[41,12,39,10],[41,13,39,11,"config"],[41,19,39,17],[41,20,39,18,"activeOffsetYEnd"],[41,36,39,34],[41,39,39,37,"offset"],[41,45,39,43],[41,46,39,44],[41,47,39,45],[41,48,39,46],[42,6,40,4],[42,7,40,5],[42,13,40,11],[42,17,40,15,"offset"],[42,23,40,21],[42,26,40,24],[42,27,40,25],[42,29,40,27],[43,8,41,6],[43,12,41,10],[43,13,41,11,"config"],[43,19,41,17],[43,20,41,18,"activeOffsetYStart"],[43,38,41,36],[43,41,41,39,"offset"],[43,47,41,45],[44,6,42,4],[44,7,42,5],[44,13,42,11],[45,8,43,6],[45,12,43,10],[45,13,43,11,"config"],[45,19,43,17],[45,20,43,18,"activeOffsetYEnd"],[45,36,43,34],[45,39,43,37,"offset"],[45,45,43,43],[46,6,44,4],[47,6,45,4],[47,13,45,11],[47,17,45,15],[48,4,46,2],[50,4,48,2],[51,0,49,0],[52,0,50,0],[53,0,51,0],[54,0,52,0],[55,4,53,2,"activeOffsetX"],[55,17,53,15,"activeOffsetX"],[55,18,53,16,"offset"],[55,24,53,22],[55,26,53,24],[56,6,54,4],[56,10,54,8,"Array"],[56,15,54,13],[56,16,54,14,"isArray"],[56,23,54,21],[56,24,54,22,"offset"],[56,30,54,28],[56,31,54,29],[56,33,54,31],[57,8,55,6],[57,12,55,10],[57,13,55,11,"config"],[57,19,55,17],[57,20,55,18,"activeOffsetXStart"],[57,38,55,36],[57,41,55,39,"offset"],[57,47,55,45],[57,48,55,46],[57,49,55,47],[57,50,55,48],[58,8,56,6],[58,12,56,10],[58,13,56,11,"config"],[58,19,56,17],[58,20,56,18,"activeOffsetXEnd"],[58,36,56,34],[58,39,56,37,"offset"],[58,45,56,43],[58,46,56,44],[58,47,56,45],[58,48,56,46],[59,6,57,4],[59,7,57,5],[59,13,57,11],[59,17,57,15,"offset"],[59,23,57,21],[59,26,57,24],[59,27,57,25],[59,29,57,27],[60,8,58,6],[60,12,58,10],[60,13,58,11,"config"],[60,19,58,17],[60,20,58,18,"activeOffsetXStart"],[60,38,58,36],[60,41,58,39,"offset"],[60,47,58,45],[61,6,59,4],[61,7,59,5],[61,13,59,11],[62,8,60,6],[62,12,60,10],[62,13,60,11,"config"],[62,19,60,17],[62,20,60,18,"activeOffsetXEnd"],[62,36,60,34],[62,39,60,37,"offset"],[62,45,60,43],[63,6,61,4],[64,6,62,4],[64,13,62,11],[64,17,62,15],[65,4,63,2],[67,4,65,2],[68,0,66,0],[69,0,67,0],[70,0,68,0],[71,0,69,0],[72,4,70,2,"failOffsetY"],[72,15,70,13,"failOffsetY"],[72,16,70,14,"offset"],[72,22,70,20],[72,24,70,22],[73,6,71,4],[73,10,71,8,"Array"],[73,15,71,13],[73,16,71,14,"isArray"],[73,23,71,21],[73,24,71,22,"offset"],[73,30,71,28],[73,31,71,29],[73,33,71,31],[74,8,72,6],[74,12,72,10],[74,13,72,11,"config"],[74,19,72,17],[74,20,72,18,"failOffsetYStart"],[74,36,72,34],[74,39,72,37,"offset"],[74,45,72,43],[74,46,72,44],[74,47,72,45],[74,48,72,46],[75,8,73,6],[75,12,73,10],[75,13,73,11,"config"],[75,19,73,17],[75,20,73,18,"failOffsetYEnd"],[75,34,73,32],[75,37,73,35,"offset"],[75,43,73,41],[75,44,73,42],[75,45,73,43],[75,46,73,44],[76,6,74,4],[76,7,74,5],[76,13,74,11],[76,17,74,15,"offset"],[76,23,74,21],[76,26,74,24],[76,27,74,25],[76,29,74,27],[77,8,75,6],[77,12,75,10],[77,13,75,11,"config"],[77,19,75,17],[77,20,75,18,"failOffsetYStart"],[77,36,75,34],[77,39,75,37,"offset"],[77,45,75,43],[78,6,76,4],[78,7,76,5],[78,13,76,11],[79,8,77,6],[79,12,77,10],[79,13,77,11,"config"],[79,19,77,17],[79,20,77,18,"failOffsetYEnd"],[79,34,77,32],[79,37,77,35,"offset"],[79,43,77,41],[80,6,78,4],[81,6,79,4],[81,13,79,11],[81,17,79,15],[82,4,80,2],[84,4,82,2],[85,0,83,0],[86,0,84,0],[87,0,85,0],[88,0,86,0],[89,4,87,2,"failOffsetX"],[89,15,87,13,"failOffsetX"],[89,16,87,14,"offset"],[89,22,87,20],[89,24,87,22],[90,6,88,4],[90,10,88,8,"Array"],[90,15,88,13],[90,16,88,14,"isArray"],[90,23,88,21],[90,24,88,22,"offset"],[90,30,88,28],[90,31,88,29],[90,33,88,31],[91,8,89,6],[91,12,89,10],[91,13,89,11,"config"],[91,19,89,17],[91,20,89,18,"failOffsetXStart"],[91,36,89,34],[91,39,89,37,"offset"],[91,45,89,43],[91,46,89,44],[91,47,89,45],[91,48,89,46],[92,8,90,6],[92,12,90,10],[92,13,90,11,"config"],[92,19,90,17],[92,20,90,18,"failOffsetXEnd"],[92,34,90,32],[92,37,90,35,"offset"],[92,43,90,41],[92,44,90,42],[92,45,90,43],[92,46,90,44],[93,6,91,4],[93,7,91,5],[93,13,91,11],[93,17,91,15,"offset"],[93,23,91,21],[93,26,91,24],[93,27,91,25],[93,29,91,27],[94,8,92,6],[94,12,92,10],[94,13,92,11,"config"],[94,19,92,17],[94,20,92,18,"failOffsetXStart"],[94,36,92,34],[94,39,92,37,"offset"],[94,45,92,43],[95,6,93,4],[95,7,93,5],[95,13,93,11],[96,8,94,6],[96,12,94,10],[96,13,94,11,"config"],[96,19,94,17],[96,20,94,18,"failOffsetXEnd"],[96,34,94,32],[96,37,94,35,"offset"],[96,43,94,41],[97,6,95,4],[98,6,96,4],[98,13,96,11],[98,17,96,15],[99,4,97,2],[101,4,99,2],[102,0,100,0],[103,0,101,0],[104,0,102,0],[105,4,103,2,"minPointers"],[105,15,103,13,"minPointers"],[105,16,103,14,"minPointers"],[105,27,103,25],[105,29,103,27],[106,6,104,4],[106,10,104,8],[106,11,104,9,"config"],[106,17,104,15],[106,18,104,16,"minPointers"],[106,29,104,27],[106,32,104,30,"minPointers"],[106,43,104,41],[107,6,105,4],[107,13,105,11],[107,17,105,15],[108,4,106,2],[110,4,108,2],[111,0,109,0],[112,0,110,0],[113,0,111,0],[114,0,112,0],[115,4,113,2,"maxPointers"],[115,15,113,13,"maxPointers"],[115,16,113,14,"maxPointers"],[115,27,113,25],[115,29,113,27],[116,6,114,4],[116,10,114,8],[116,11,114,9,"config"],[116,17,114,15],[116,18,114,16,"maxPointers"],[116,29,114,27],[116,32,114,30,"maxPointers"],[116,43,114,41],[117,6,115,4],[117,13,115,11],[117,17,115,15],[118,4,116,2],[120,4,118,2],[121,0,119,0],[122,0,120,0],[123,0,121,0],[124,0,122,0],[125,4,123,2,"minDistance"],[125,15,123,13,"minDistance"],[125,16,123,14,"distance"],[125,24,123,22],[125,26,123,24],[126,6,124,4],[126,10,124,8],[126,11,124,9,"config"],[126,17,124,15],[126,18,124,16,"minDist"],[126,25,124,23],[126,28,124,26,"distance"],[126,36,124,34],[127,6,125,4],[127,13,125,11],[127,17,125,15],[128,4,126,2],[130,4,128,2],[131,0,129,0],[132,0,130,0],[133,0,131,0],[134,4,132,2,"minVelocity"],[134,15,132,13,"minVelocity"],[134,16,132,14,"velocity"],[134,24,132,22],[134,26,132,24],[135,6,133,4],[135,10,133,8],[135,11,133,9,"config"],[135,17,133,15],[135,18,133,16,"minVelocity"],[135,29,133,27],[135,32,133,30,"velocity"],[135,40,133,38],[136,6,134,4],[136,13,134,11],[136,17,134,15],[137,4,135,2],[139,4,137,2],[140,0,138,0],[141,0,139,0],[142,0,140,0],[143,4,141,2,"minVelocityX"],[143,16,141,14,"minVelocityX"],[143,17,141,15,"velocity"],[143,25,141,23],[143,27,141,25],[144,6,142,4],[144,10,142,8],[144,11,142,9,"config"],[144,17,142,15],[144,18,142,16,"minVelocityX"],[144,30,142,28],[144,33,142,31,"velocity"],[144,41,142,39],[145,6,143,4],[145,13,143,11],[145,17,143,15],[146,4,144,2],[148,4,146,2],[149,0,147,0],[150,0,148,0],[151,0,149,0],[152,4,150,2,"minVelocityY"],[152,16,150,14,"minVelocityY"],[152,17,150,15,"velocity"],[152,25,150,23],[152,27,150,25],[153,6,151,4],[153,10,151,8],[153,11,151,9,"config"],[153,17,151,15],[153,18,151,16,"minVelocityY"],[153,30,151,28],[153,33,151,31,"velocity"],[153,41,151,39],[154,6,152,4],[154,13,152,11],[154,17,152,15],[155,4,153,2],[157,4,155,2],[158,0,156,0],[159,0,157,0],[160,0,158,0],[161,0,159,0],[162,0,160,0],[163,4,161,2,"averageTouches"],[163,18,161,16,"averageTouches"],[163,19,161,17,"value"],[163,24,161,22],[163,26,161,24],[164,6,162,4],[164,10,162,8],[164,11,162,9,"config"],[164,17,162,15],[164,18,162,16,"avgTouches"],[164,28,162,26],[164,31,162,29,"value"],[164,36,162,34],[165,6,163,4],[165,13,163,11],[165,17,163,15],[166,4,164,2],[168,4,166,2],[169,0,167,0],[170,0,168,0],[171,0,169,0],[172,0,170,0],[173,0,171,0],[174,4,172,2,"enableTrackpadTwoFingerGesture"],[174,34,172,32,"enableTrackpadTwoFingerGesture"],[174,35,172,33,"value"],[174,40,172,38],[174,42,172,40],[175,6,173,4],[175,10,173,8],[175,11,173,9,"config"],[175,17,173,15],[175,18,173,16,"enableTrackpadTwoFingerGesture"],[175,48,173,46],[175,51,173,49,"value"],[175,56,173,54],[176,6,174,4],[176,13,174,11],[176,17,174,15],[177,4,175,2],[179,4,177,2],[180,0,178,0],[181,0,179,0],[182,0,180,0],[183,0,181,0],[184,4,182,2,"activateAfterLongPress"],[184,26,182,24,"activateAfterLongPress"],[184,27,182,25,"duration"],[184,35,182,33],[184,37,182,35],[185,6,183,4],[185,10,183,8],[185,11,183,9,"config"],[185,17,183,15],[185,18,183,16,"activateAfterLongPress"],[185,40,183,38],[185,43,183,41,"duration"],[185,51,183,49],[186,6,184,4],[186,13,184,11],[186,17,184,15],[187,4,185,2],[188,4,186,2,"onChange"],[188,12,186,10,"onChange"],[188,13,186,11,"callback"],[188,21,186,19],[188,23,186,21],[189,6,187,4],[190,6,188,4],[190,10,188,8],[190,11,188,9,"handlers"],[190,19,188,17],[190,20,188,18,"changeEventCalculator"],[190,41,188,39],[190,44,188,42,"changeEventCalculator"],[190,65,188,63],[191,6,189,4],[191,13,189,11],[191,18,189,16],[191,19,189,17,"onChange"],[191,27,189,25],[191,28,189,26,"callback"],[191,36,189,34],[191,37,189,35],[192,4,190,2],[193,2,191,0],[194,2,191,1,"exports"],[194,9,191,1],[194,10,191,1,"PanGesture"],[194,20,191,1],[194,23,191,1,"PanGesture"],[194,33,191,1],[195,0,191,1],[195,3]],"functionMap":{"names":["<global>","changeEventCalculator","PanGesture","PanGesture#constructor","PanGesture#activeOffsetY","PanGesture#activeOffsetX","PanGesture#failOffsetY","PanGesture#failOffsetX","PanGesture#minPointers","PanGesture#maxPointers","PanGesture#minDistance","PanGesture#minVelocity","PanGesture#minVelocityX","PanGesture#minVelocityY","PanGesture#averageTouches","PanGesture#enableTrackpadTwoFingerGesture","PanGesture#activateAfterLongPress","PanGesture#onChange"],"mappings":"AAA;ACG;CDmB;OEC;ECE;GDG;EEO;GFU;EGO;GHU;EIO;GJU;EKO;GLU;EMM;GNG;EOO;GPG;EQO;GRG;ESM;GTG;EUM;GVG;EWM;GXG;EYQ;GZG;EaQ;GbG;EcO;GdG;EeC;GfI;CFC"}},"type":"js/module"}]}