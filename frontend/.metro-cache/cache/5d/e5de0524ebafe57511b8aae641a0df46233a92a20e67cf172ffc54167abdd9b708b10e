{"dependencies":[{"name":"firebase/app","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"xvv30w+QArkNig0cCn46MsyEGs4=","exportNames":["*"]}},{"name":"firebase/database","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":111,"index":157}}],"key":"ZF/J3nfk5GUgbzXl84BqV1IxYEE=","exportNames":["*"]}},{"name":"firebase/auth","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":158},"end":{"line":3,"column":59,"index":217}}],"key":"o2UvaebosmgxImAY7KlhPO3FnYs=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.firebaseRealtimeService = void 0;\n  var _app = require(_dependencyMap[0], \"firebase/app\");\n  var _database = require(_dependencyMap[1], \"firebase/database\");\n  var _auth = require(_dependencyMap[2], \"firebase/auth\");\n  // Firebase configuration - will be set from environment variables\n  const firebaseConfig = {\n    apiKey: process.env.EXPO_PUBLIC_FIREBASE_API_KEY,\n    authDomain: process.env.EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.EXPO_PUBLIC_FIREBASE_DATABASE_URL,\n    projectId: process.env.EXPO_PUBLIC_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.EXPO_PUBLIC_FIREBASE_APP_ID\n  };\n\n  // Initialize Firebase\n  const app = (0, _app.initializeApp)(firebaseConfig);\n  const database = (0, _database.getDatabase)(app);\n  const auth = (0, _auth.getAuth)(app);\n  class FirebaseRealtimeService {\n    initialized = false;\n    async initialize() {\n      if (this.initialized) return;\n      try {\n        // Sign in anonymously to Firebase\n        await (0, _auth.signInAnonymously)(auth);\n        this.initialized = true;\n        console.log('Firebase Realtime Database initialized successfully');\n      } catch (error) {\n        console.error('Firebase initialization error:', error);\n        throw error;\n      }\n    }\n\n    // Service Requests Management\n    async createServiceRequest(serviceRequest) {\n      if (!this.initialized) await this.initialize();\n      const serviceRef = (0, _database.ref)(database, 'serviceRequests');\n      const newServiceRef = (0, _database.push)(serviceRef);\n      const serviceData = {\n        ...serviceRequest,\n        id: newServiceRef.key,\n        createdAt: Date.now(),\n        updatedAt: Date.now(),\n        status: 'pending'\n      };\n      await (0, _database.set)(newServiceRef, serviceData);\n      return newServiceRef.key;\n    }\n    async updateServiceRequest(serviceId, updates) {\n      if (!this.initialized) await this.initialize();\n      const serviceRef = (0, _database.ref)(database, `serviceRequests/${serviceId}`);\n      await (0, _database.update)(serviceRef, {\n        ...updates,\n        updatedAt: Date.now()\n      });\n    }\n    subscribeToServiceRequests(callback) {\n      if (!this.initialized) {\n        this.initialize().then(() => {\n          this.subscribeToServiceRequests(callback);\n        });\n        return () => {};\n      }\n      const servicesRef = (0, _database.ref)(database, 'serviceRequests');\n      const unsubscribe = (0, _database.onValue)(servicesRef, snapshot => {\n        const data = snapshot.val();\n        const services = data ? Object.values(data) : [];\n        callback(services);\n      });\n      return () => (0, _database.off)(servicesRef, 'value', unsubscribe);\n    }\n    subscribeToServiceRequest(serviceId, callback) {\n      if (!this.initialized) {\n        this.initialize().then(() => {\n          this.subscribeToServiceRequest(serviceId, callback);\n        });\n        return () => {};\n      }\n      const serviceRef = (0, _database.ref)(database, `serviceRequests/${serviceId}`);\n      const unsubscribe = (0, _database.onValue)(serviceRef, snapshot => {\n        const service = snapshot.val();\n        callback(service);\n      });\n      return () => (0, _database.off)(serviceRef, 'value', unsubscribe);\n    }\n\n    // Provider Location Tracking\n    async updateProviderLocation(providerId, location) {\n      if (!this.initialized) await this.initialize();\n      const locationRef = (0, _database.ref)(database, `providerLocations/${providerId}`);\n      await (0, _database.set)(locationRef, {\n        ...location,\n        providerId,\n        lastUpdated: Date.now()\n      });\n    }\n    subscribeToNearbyProviders(callback) {\n      if (!this.initialized) {\n        this.initialize().then(() => {\n          this.subscribeToNearbyProviders(callback);\n        });\n        return () => {};\n      }\n      const providersRef = (0, _database.ref)(database, 'providerLocations');\n      const unsubscribe = (0, _database.onValue)(providersRef, snapshot => {\n        const data = snapshot.val();\n        const providers = data ? Object.values(data).filter(p => p.isOnline && Date.now() - p.lastUpdated < 300000) // Active in last 5 minutes\n        : [];\n        callback(providers);\n      });\n      return () => (0, _database.off)(providersRef, 'value', unsubscribe);\n    }\n\n    // Chat System\n    async sendMessage(chatId, message) {\n      if (!this.initialized) await this.initialize();\n      const messagesRef = (0, _database.ref)(database, `chats/${chatId}/messages`);\n      const newMessageRef = (0, _database.push)(messagesRef);\n      const messageData = {\n        ...message,\n        id: newMessageRef.key,\n        timestamp: Date.now()\n      };\n      await (0, _database.set)(newMessageRef, messageData);\n\n      // Update chat metadata\n      const chatRef = (0, _database.ref)(database, `chats/${chatId}/metadata`);\n      await (0, _database.update)(chatRef, {\n        lastMessage: message.message,\n        lastMessageTime: Date.now(),\n        lastSenderId: message.senderId\n      });\n      return newMessageRef.key;\n    }\n    subscribeToChat(chatId, callback) {\n      if (!this.initialized) {\n        this.initialize().then(() => {\n          this.subscribeToChat(chatId, callback);\n        });\n        return () => {};\n      }\n      const messagesRef = (0, _database.ref)(database, `chats/${chatId}/messages`);\n      const unsubscribe = (0, _database.onValue)(messagesRef, snapshot => {\n        const data = snapshot.val();\n        const messages = data ? Object.values(data).sort((a, b) => a.timestamp - b.timestamp) : [];\n        callback(messages);\n      });\n      return () => (0, _database.off)(messagesRef, 'value', unsubscribe);\n    }\n\n    // Notifications\n    async sendNotification(userId, notification) {\n      if (!this.initialized) await this.initialize();\n      const notificationRef = (0, _database.ref)(database, `notifications/${userId}`);\n      const newNotificationRef = (0, _database.push)(notificationRef);\n      await (0, _database.set)(newNotificationRef, {\n        ...notification,\n        id: newNotificationRef.key,\n        timestamp: Date.now(),\n        read: false\n      });\n    }\n    subscribeToNotifications(userId, callback) {\n      if (!this.initialized) {\n        this.initialize().then(() => {\n          this.subscribeToNotifications(userId, callback);\n        });\n        return () => {};\n      }\n      const notificationsRef = (0, _database.ref)(database, `notifications/${userId}`);\n      const unsubscribe = (0, _database.onValue)(notificationsRef, snapshot => {\n        const data = snapshot.val();\n        const notifications = data ? Object.values(data).sort((a, b) => b.timestamp - a.timestamp) : [];\n        callback(notifications);\n      });\n      return () => (0, _database.off)(notificationsRef, 'value', unsubscribe);\n    }\n\n    // Connection Status\n    isConnected() {\n      return this.initialized;\n    }\n\n    // Cleanup\n    async disconnect() {\n      // Firebase handles connection cleanup automatically\n      this.initialized = false;\n    }\n  }\n  const firebaseRealtimeService = exports.firebaseRealtimeService = new FirebaseRealtimeService();\n});","lineCount":196,"map":[[6,2,1,0],[6,6,1,0,"_app"],[6,10,1,0],[6,13,1,0,"require"],[6,20,1,0],[6,21,1,0,"_dependencyMap"],[6,35,1,0],[7,2,2,0],[7,6,2,0,"_database"],[7,15,2,0],[7,18,2,0,"require"],[7,25,2,0],[7,26,2,0,"_dependencyMap"],[7,40,2,0],[8,2,3,0],[8,6,3,0,"_auth"],[8,11,3,0],[8,14,3,0,"require"],[8,21,3,0],[8,22,3,0,"_dependencyMap"],[8,36,3,0],[9,2,5,0],[10,2,6,0],[10,8,6,6,"firebaseConfig"],[10,22,6,20],[10,25,6,23],[11,4,7,2,"apiKey"],[11,10,7,8],[11,12,7,10,"process"],[11,19,7,17],[11,20,7,18,"env"],[11,23,7,21],[11,24,7,22,"EXPO_PUBLIC_FIREBASE_API_KEY"],[11,52,7,50],[12,4,8,2,"authDomain"],[12,14,8,12],[12,16,8,14,"process"],[12,23,8,21],[12,24,8,22,"env"],[12,27,8,25],[12,28,8,26,"EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN"],[12,60,8,58],[13,4,9,2,"databaseURL"],[13,15,9,13],[13,17,9,15,"process"],[13,24,9,22],[13,25,9,23,"env"],[13,28,9,26],[13,29,9,27,"EXPO_PUBLIC_FIREBASE_DATABASE_URL"],[13,62,9,60],[14,4,10,2,"projectId"],[14,13,10,11],[14,15,10,13,"process"],[14,22,10,20],[14,23,10,21,"env"],[14,26,10,24],[14,27,10,25,"EXPO_PUBLIC_FIREBASE_PROJECT_ID"],[14,58,10,56],[15,4,11,2,"storageBucket"],[15,17,11,15],[15,19,11,17,"process"],[15,26,11,24],[15,27,11,25,"env"],[15,30,11,28],[15,31,11,29,"EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET"],[15,66,11,64],[16,4,12,2,"messagingSenderId"],[16,21,12,19],[16,23,12,21,"process"],[16,30,12,28],[16,31,12,29,"env"],[16,34,12,32],[16,35,12,33,"EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID"],[16,75,12,73],[17,4,13,2,"appId"],[17,9,13,7],[17,11,13,9,"process"],[17,18,13,16],[17,19,13,17,"env"],[17,22,13,20],[17,23,13,21,"EXPO_PUBLIC_FIREBASE_APP_ID"],[18,2,14,0],[18,3,14,1],[20,2,16,0],[21,2,17,0],[21,8,17,6,"app"],[21,11,17,9],[21,14,17,12],[21,18,17,12,"initializeApp"],[21,36,17,25],[21,38,17,26,"firebaseConfig"],[21,52,17,40],[21,53,17,41],[22,2,18,0],[22,8,18,6,"database"],[22,16,18,14],[22,19,18,17],[22,23,18,17,"getDatabase"],[22,44,18,28],[22,46,18,29,"app"],[22,49,18,32],[22,50,18,33],[23,2,19,0],[23,8,19,6,"auth"],[23,12,19,10],[23,15,19,13],[23,19,19,13,"getAuth"],[23,32,19,20],[23,34,19,21,"app"],[23,37,19,24],[23,38,19,25],[24,2,60,0],[24,8,60,6,"FirebaseRealtimeService"],[24,31,60,29],[24,32,60,30],[25,4,61,10,"initialized"],[25,15,61,21],[25,18,61,33],[25,23,61,38],[26,4,63,2],[26,10,63,8,"initialize"],[26,20,63,18,"initialize"],[26,21,63,18],[26,23,63,21],[27,6,64,4],[27,10,64,8],[27,14,64,12],[27,15,64,13,"initialized"],[27,26,64,24],[27,28,64,26],[28,6,66,4],[28,10,66,8],[29,8,67,6],[30,8,68,6],[30,14,68,12],[30,18,68,12,"signInAnonymously"],[30,41,68,29],[30,43,68,30,"auth"],[30,47,68,34],[30,48,68,35],[31,8,69,6],[31,12,69,10],[31,13,69,11,"initialized"],[31,24,69,22],[31,27,69,25],[31,31,69,29],[32,8,70,6,"console"],[32,15,70,13],[32,16,70,14,"log"],[32,19,70,17],[32,20,70,18],[32,73,70,71],[32,74,70,72],[33,6,71,4],[33,7,71,5],[33,8,71,6],[33,15,71,13,"error"],[33,20,71,18],[33,22,71,20],[34,8,72,6,"console"],[34,15,72,13],[34,16,72,14,"error"],[34,21,72,19],[34,22,72,20],[34,54,72,52],[34,56,72,54,"error"],[34,61,72,59],[34,62,72,60],[35,8,73,6],[35,14,73,12,"error"],[35,19,73,17],[36,6,74,4],[37,4,75,2],[39,4,77,2],[40,4,78,2],[40,10,78,8,"createServiceRequest"],[40,30,78,28,"createServiceRequest"],[40,31,78,29,"serviceRequest"],[40,45,78,107],[40,47,78,126],[41,6,79,4],[41,10,79,8],[41,11,79,9],[41,15,79,13],[41,16,79,14,"initialized"],[41,27,79,25],[41,29,79,27],[41,35,79,33],[41,39,79,37],[41,40,79,38,"initialize"],[41,50,79,48],[41,51,79,49],[41,52,79,50],[42,6,81,4],[42,12,81,10,"serviceRef"],[42,22,81,20],[42,25,81,23],[42,29,81,23,"ref"],[42,42,81,26],[42,44,81,27,"database"],[42,52,81,35],[42,54,81,37],[42,71,81,54],[42,72,81,55],[43,6,82,4],[43,12,82,10,"newServiceRef"],[43,25,82,23],[43,28,82,26],[43,32,82,26,"push"],[43,46,82,30],[43,48,82,31,"serviceRef"],[43,58,82,41],[43,59,82,42],[44,6,84,4],[44,12,84,10,"serviceData"],[44,23,84,45],[44,26,84,48],[45,8,85,6],[45,11,85,9,"serviceRequest"],[45,25,85,23],[46,8,86,6,"id"],[46,10,86,8],[46,12,86,10,"newServiceRef"],[46,25,86,23],[46,26,86,24,"key"],[46,29,86,28],[47,8,87,6,"createdAt"],[47,17,87,15],[47,19,87,17,"Date"],[47,23,87,21],[47,24,87,22,"now"],[47,27,87,25],[47,28,87,26],[47,29,87,27],[48,8,88,6,"updatedAt"],[48,17,88,15],[48,19,88,17,"Date"],[48,23,88,21],[48,24,88,22,"now"],[48,27,88,25],[48,28,88,26],[48,29,88,27],[49,8,89,6,"status"],[49,14,89,12],[49,16,89,14],[50,6,90,4],[50,7,90,5],[51,6,92,4],[51,12,92,10],[51,16,92,10,"set"],[51,29,92,13],[51,31,92,14,"newServiceRef"],[51,44,92,27],[51,46,92,29,"serviceData"],[51,57,92,40],[51,58,92,41],[52,6,93,4],[52,13,93,11,"newServiceRef"],[52,26,93,24],[52,27,93,25,"key"],[52,30,93,28],[53,4,94,2],[54,4,96,2],[54,10,96,8,"updateServiceRequest"],[54,30,96,28,"updateServiceRequest"],[54,31,96,29,"serviceId"],[54,40,96,46],[54,42,96,48,"updates"],[54,49,96,88],[54,51,96,90],[55,6,97,4],[55,10,97,8],[55,11,97,9],[55,15,97,13],[55,16,97,14,"initialized"],[55,27,97,25],[55,29,97,27],[55,35,97,33],[55,39,97,37],[55,40,97,38,"initialize"],[55,50,97,48],[55,51,97,49],[55,52,97,50],[56,6,99,4],[56,12,99,10,"serviceRef"],[56,22,99,20],[56,25,99,23],[56,29,99,23,"ref"],[56,42,99,26],[56,44,99,27,"database"],[56,52,99,35],[56,54,99,37],[56,73,99,56,"serviceId"],[56,82,99,65],[56,84,99,67],[56,85,99,68],[57,6,100,4],[57,12,100,10],[57,16,100,10,"update"],[57,32,100,16],[57,34,100,17,"serviceRef"],[57,44,100,27],[57,46,100,29],[58,8,101,6],[58,11,101,9,"updates"],[58,18,101,16],[59,8,102,6,"updatedAt"],[59,17,102,15],[59,19,102,17,"Date"],[59,23,102,21],[59,24,102,22,"now"],[59,27,102,25],[59,28,102,26],[60,6,103,4],[60,7,103,5],[60,8,103,6],[61,4,104,2],[62,4,106,2,"subscribeToServiceRequests"],[62,30,106,28,"subscribeToServiceRequests"],[62,31,106,29,"callback"],[62,39,106,83],[62,41,106,97],[63,6,107,4],[63,10,107,8],[63,11,107,9],[63,15,107,13],[63,16,107,14,"initialized"],[63,27,107,25],[63,29,107,27],[64,8,108,6],[64,12,108,10],[64,13,108,11,"initialize"],[64,23,108,21],[64,24,108,22],[64,25,108,23],[64,26,108,24,"then"],[64,30,108,28],[64,31,108,29],[64,37,108,35],[65,10,109,8],[65,14,109,12],[65,15,109,13,"subscribeToServiceRequests"],[65,41,109,39],[65,42,109,40,"callback"],[65,50,109,48],[65,51,109,49],[66,8,110,6],[66,9,110,7],[66,10,110,8],[67,8,111,6],[67,15,111,13],[67,21,111,19],[67,22,111,20],[67,23,111,21],[68,6,112,4],[69,6,114,4],[69,12,114,10,"servicesRef"],[69,23,114,21],[69,26,114,24],[69,30,114,24,"ref"],[69,43,114,27],[69,45,114,28,"database"],[69,53,114,36],[69,55,114,38],[69,72,114,55],[69,73,114,56],[70,6,116,4],[70,12,116,10,"unsubscribe"],[70,23,116,21],[70,26,116,24],[70,30,116,24,"onValue"],[70,47,116,31],[70,49,116,32,"servicesRef"],[70,60,116,43],[70,62,116,46,"snapshot"],[70,70,116,54],[70,74,116,59],[71,8,117,6],[71,14,117,12,"data"],[71,18,117,16],[71,21,117,19,"snapshot"],[71,29,117,27],[71,30,117,28,"val"],[71,33,117,31],[71,34,117,32],[71,35,117,33],[72,8,118,6],[72,14,118,12,"services"],[72,22,118,46],[72,25,118,49,"data"],[72,29,118,53],[72,32,119,10,"Object"],[72,38,119,16],[72,39,119,17,"values"],[72,45,119,23],[72,46,119,24,"data"],[72,50,119,28],[72,51,119,29],[72,54,120,10],[72,56,120,12],[73,8,121,6,"callback"],[73,16,121,14],[73,17,121,15,"services"],[73,25,121,23],[73,26,121,24],[74,6,122,4],[74,7,122,5],[74,8,122,6],[75,6,124,4],[75,13,124,11],[75,19,124,17],[75,23,124,17,"off"],[75,36,124,20],[75,38,124,21,"servicesRef"],[75,49,124,32],[75,51,124,34],[75,58,124,41],[75,60,124,43,"unsubscribe"],[75,71,124,54],[75,72,124,55],[76,4,125,2],[77,4,127,2,"subscribeToServiceRequest"],[77,29,127,27,"subscribeToServiceRequest"],[77,30,127,28,"serviceId"],[77,39,127,45],[77,41,127,47,"callback"],[77,49,127,105],[77,51,127,119],[78,6,128,4],[78,10,128,8],[78,11,128,9],[78,15,128,13],[78,16,128,14,"initialized"],[78,27,128,25],[78,29,128,27],[79,8,129,6],[79,12,129,10],[79,13,129,11,"initialize"],[79,23,129,21],[79,24,129,22],[79,25,129,23],[79,26,129,24,"then"],[79,30,129,28],[79,31,129,29],[79,37,129,35],[80,10,130,8],[80,14,130,12],[80,15,130,13,"subscribeToServiceRequest"],[80,40,130,38],[80,41,130,39,"serviceId"],[80,50,130,48],[80,52,130,50,"callback"],[80,60,130,58],[80,61,130,59],[81,8,131,6],[81,9,131,7],[81,10,131,8],[82,8,132,6],[82,15,132,13],[82,21,132,19],[82,22,132,20],[82,23,132,21],[83,6,133,4],[84,6,135,4],[84,12,135,10,"serviceRef"],[84,22,135,20],[84,25,135,23],[84,29,135,23,"ref"],[84,42,135,26],[84,44,135,27,"database"],[84,52,135,35],[84,54,135,37],[84,73,135,56,"serviceId"],[84,82,135,65],[84,84,135,67],[84,85,135,68],[85,6,137,4],[85,12,137,10,"unsubscribe"],[85,23,137,21],[85,26,137,24],[85,30,137,24,"onValue"],[85,47,137,31],[85,49,137,32,"serviceRef"],[85,59,137,42],[85,61,137,45,"snapshot"],[85,69,137,53],[85,73,137,58],[86,8,138,6],[86,14,138,12,"service"],[86,21,138,19],[86,24,138,22,"snapshot"],[86,32,138,30],[86,33,138,31,"val"],[86,36,138,34],[86,37,138,35],[86,38,138,36],[87,8,139,6,"callback"],[87,16,139,14],[87,17,139,15,"service"],[87,24,139,22],[87,25,139,23],[88,6,140,4],[88,7,140,5],[88,8,140,6],[89,6,142,4],[89,13,142,11],[89,19,142,17],[89,23,142,17,"off"],[89,36,142,20],[89,38,142,21,"serviceRef"],[89,48,142,31],[89,50,142,33],[89,57,142,40],[89,59,142,42,"unsubscribe"],[89,70,142,53],[89,71,142,54],[90,4,143,2],[92,4,145,2],[93,4,146,2],[93,10,146,8,"updateProviderLocation"],[93,32,146,30,"updateProviderLocation"],[93,33,146,31,"providerId"],[93,43,146,49],[93,45,146,51,"location"],[93,53,146,113],[93,55,146,115],[94,6,147,4],[94,10,147,8],[94,11,147,9],[94,15,147,13],[94,16,147,14,"initialized"],[94,27,147,25],[94,29,147,27],[94,35,147,33],[94,39,147,37],[94,40,147,38,"initialize"],[94,50,147,48],[94,51,147,49],[94,52,147,50],[95,6,149,4],[95,12,149,10,"locationRef"],[95,23,149,21],[95,26,149,24],[95,30,149,24,"ref"],[95,43,149,27],[95,45,149,28,"database"],[95,53,149,36],[95,55,149,38],[95,76,149,59,"providerId"],[95,86,149,69],[95,88,149,71],[95,89,149,72],[96,6,150,4],[96,12,150,10],[96,16,150,10,"set"],[96,29,150,13],[96,31,150,14,"locationRef"],[96,42,150,25],[96,44,150,27],[97,8,151,6],[97,11,151,9,"location"],[97,19,151,17],[98,8,152,6,"providerId"],[98,18,152,16],[99,8,153,6,"lastUpdated"],[99,19,153,17],[99,21,153,19,"Date"],[99,25,153,23],[99,26,153,24,"now"],[99,29,153,27],[99,30,153,28],[100,6,154,4],[100,7,154,5],[100,8,154,6],[101,4,155,2],[102,4,157,2,"subscribeToNearbyProviders"],[102,30,157,28,"subscribeToNearbyProviders"],[102,31,157,29,"callback"],[102,39,157,78],[102,41,157,92],[103,6,158,4],[103,10,158,8],[103,11,158,9],[103,15,158,13],[103,16,158,14,"initialized"],[103,27,158,25],[103,29,158,27],[104,8,159,6],[104,12,159,10],[104,13,159,11,"initialize"],[104,23,159,21],[104,24,159,22],[104,25,159,23],[104,26,159,24,"then"],[104,30,159,28],[104,31,159,29],[104,37,159,35],[105,10,160,8],[105,14,160,12],[105,15,160,13,"subscribeToNearbyProviders"],[105,41,160,39],[105,42,160,40,"callback"],[105,50,160,48],[105,51,160,49],[106,8,161,6],[106,9,161,7],[106,10,161,8],[107,8,162,6],[107,15,162,13],[107,21,162,19],[107,22,162,20],[107,23,162,21],[108,6,163,4],[109,6,165,4],[109,12,165,10,"providersRef"],[109,24,165,22],[109,27,165,25],[109,31,165,25,"ref"],[109,44,165,28],[109,46,165,29,"database"],[109,54,165,37],[109,56,165,39],[109,75,165,58],[109,76,165,59],[110,6,167,4],[110,12,167,10,"unsubscribe"],[110,23,167,21],[110,26,167,24],[110,30,167,24,"onValue"],[110,47,167,31],[110,49,167,32,"providersRef"],[110,61,167,44],[110,63,167,47,"snapshot"],[110,71,167,55],[110,75,167,60],[111,8,168,6],[111,14,168,12,"data"],[111,18,168,16],[111,21,168,19,"snapshot"],[111,29,168,27],[111,30,168,28,"val"],[111,33,168,31],[111,34,168,32],[111,35,168,33],[112,8,169,6],[112,14,169,12,"providers"],[112,23,169,41],[112,26,169,44,"data"],[112,30,169,48],[112,33,170,10,"Object"],[112,39,170,16],[112,40,170,17,"values"],[112,46,170,23],[112,47,170,24,"data"],[112,51,170,28],[112,52,170,29],[112,53,170,30,"filter"],[112,59,170,36],[112,60,170,38,"p"],[112,61,170,44],[112,65,170,49,"p"],[112,66,170,50],[112,67,170,51,"isOnline"],[112,75,170,59],[112,79,170,64,"Date"],[112,83,170,68],[112,84,170,69,"now"],[112,87,170,72],[112,88,170,73],[112,89,170,74],[112,92,170,77,"p"],[112,93,170,78],[112,94,170,79,"lastUpdated"],[112,105,170,90],[112,108,170,94],[112,114,170,100],[112,115,170,101],[112,116,170,102],[113,8,170,102],[113,10,171,10],[113,12,171,12],[114,8,172,6,"callback"],[114,16,172,14],[114,17,172,15,"providers"],[114,26,172,24],[114,27,172,25],[115,6,173,4],[115,7,173,5],[115,8,173,6],[116,6,175,4],[116,13,175,11],[116,19,175,17],[116,23,175,17,"off"],[116,36,175,20],[116,38,175,21,"providersRef"],[116,50,175,33],[116,52,175,35],[116,59,175,42],[116,61,175,44,"unsubscribe"],[116,72,175,55],[116,73,175,56],[117,4,176,2],[119,4,178,2],[120,4,179,2],[120,10,179,8,"sendMessage"],[120,21,179,19,"sendMessage"],[120,22,179,20,"chatId"],[120,28,179,34],[120,30,179,36,"message"],[120,37,179,82],[120,39,179,84],[121,6,180,4],[121,10,180,8],[121,11,180,9],[121,15,180,13],[121,16,180,14,"initialized"],[121,27,180,25],[121,29,180,27],[121,35,180,33],[121,39,180,37],[121,40,180,38,"initialize"],[121,50,180,48],[121,51,180,49],[121,52,180,50],[122,6,182,4],[122,12,182,10,"messagesRef"],[122,23,182,21],[122,26,182,24],[122,30,182,24,"ref"],[122,43,182,27],[122,45,182,28,"database"],[122,53,182,36],[122,55,182,38],[122,64,182,47,"chatId"],[122,70,182,53],[122,81,182,64],[122,82,182,65],[123,6,183,4],[123,12,183,10,"newMessageRef"],[123,25,183,23],[123,28,183,26],[123,32,183,26,"push"],[123,46,183,30],[123,48,183,31,"messagesRef"],[123,59,183,42],[123,60,183,43],[124,6,185,4],[124,12,185,10,"messageData"],[124,23,185,34],[124,26,185,37],[125,8,186,6],[125,11,186,9,"message"],[125,18,186,16],[126,8,187,6,"id"],[126,10,187,8],[126,12,187,10,"newMessageRef"],[126,25,187,23],[126,26,187,24,"key"],[126,29,187,28],[127,8,188,6,"timestamp"],[127,17,188,15],[127,19,188,17,"Date"],[127,23,188,21],[127,24,188,22,"now"],[127,27,188,25],[127,28,188,26],[128,6,189,4],[128,7,189,5],[129,6,191,4],[129,12,191,10],[129,16,191,10,"set"],[129,29,191,13],[129,31,191,14,"newMessageRef"],[129,44,191,27],[129,46,191,29,"messageData"],[129,57,191,40],[129,58,191,41],[131,6,193,4],[132,6,194,4],[132,12,194,10,"chatRef"],[132,19,194,17],[132,22,194,20],[132,26,194,20,"ref"],[132,39,194,23],[132,41,194,24,"database"],[132,49,194,32],[132,51,194,34],[132,60,194,43,"chatId"],[132,66,194,49],[132,77,194,60],[132,78,194,61],[133,6,195,4],[133,12,195,10],[133,16,195,10,"update"],[133,32,195,16],[133,34,195,17,"chatRef"],[133,41,195,24],[133,43,195,26],[134,8,196,6,"lastMessage"],[134,19,196,17],[134,21,196,19,"message"],[134,28,196,26],[134,29,196,27,"message"],[134,36,196,34],[135,8,197,6,"lastMessageTime"],[135,23,197,21],[135,25,197,23,"Date"],[135,29,197,27],[135,30,197,28,"now"],[135,33,197,31],[135,34,197,32],[135,35,197,33],[136,8,198,6,"lastSenderId"],[136,20,198,18],[136,22,198,20,"message"],[136,29,198,27],[136,30,198,28,"senderId"],[137,6,199,4],[137,7,199,5],[137,8,199,6],[138,6,201,4],[138,13,201,11,"newMessageRef"],[138,26,201,24],[138,27,201,25,"key"],[138,30,201,28],[139,4,202,2],[140,4,204,2,"subscribeToChat"],[140,19,204,17,"subscribeToChat"],[140,20,204,18,"chatId"],[140,26,204,32],[140,28,204,34,"callback"],[140,36,204,77],[140,38,204,91],[141,6,205,4],[141,10,205,8],[141,11,205,9],[141,15,205,13],[141,16,205,14,"initialized"],[141,27,205,25],[141,29,205,27],[142,8,206,6],[142,12,206,10],[142,13,206,11,"initialize"],[142,23,206,21],[142,24,206,22],[142,25,206,23],[142,26,206,24,"then"],[142,30,206,28],[142,31,206,29],[142,37,206,35],[143,10,207,8],[143,14,207,12],[143,15,207,13,"subscribeToChat"],[143,30,207,28],[143,31,207,29,"chatId"],[143,37,207,35],[143,39,207,37,"callback"],[143,47,207,45],[143,48,207,46],[144,8,208,6],[144,9,208,7],[144,10,208,8],[145,8,209,6],[145,15,209,13],[145,21,209,19],[145,22,209,20],[145,23,209,21],[146,6,210,4],[147,6,212,4],[147,12,212,10,"messagesRef"],[147,23,212,21],[147,26,212,24],[147,30,212,24,"ref"],[147,43,212,27],[147,45,212,28,"database"],[147,53,212,36],[147,55,212,38],[147,64,212,47,"chatId"],[147,70,212,53],[147,81,212,64],[147,82,212,65],[148,6,214,4],[148,12,214,10,"unsubscribe"],[148,23,214,21],[148,26,214,24],[148,30,214,24,"onValue"],[148,47,214,31],[148,49,214,32,"messagesRef"],[148,60,214,43],[148,62,214,46,"snapshot"],[148,70,214,54],[148,74,214,59],[149,8,215,6],[149,14,215,12,"data"],[149,18,215,16],[149,21,215,19,"snapshot"],[149,29,215,27],[149,30,215,28,"val"],[149,33,215,31],[149,34,215,32],[149,35,215,33],[150,8,216,6],[150,14,216,12,"messages"],[150,22,216,35],[150,25,216,38,"data"],[150,29,216,42],[150,32,217,10,"Object"],[150,38,217,16],[150,39,217,17,"values"],[150,45,217,23],[150,46,217,24,"data"],[150,50,217,28],[150,51,217,29],[150,52,217,30,"sort"],[150,56,217,34],[150,57,217,35],[150,58,217,36,"a"],[150,59,217,42],[150,61,217,44,"b"],[150,62,217,50],[150,67,217,55,"a"],[150,68,217,56],[150,69,217,57,"timestamp"],[150,78,217,66],[150,81,217,69,"b"],[150,82,217,70],[150,83,217,71,"timestamp"],[150,92,217,80],[150,93,217,81],[150,96,218,10],[150,98,218,12],[151,8,219,6,"callback"],[151,16,219,14],[151,17,219,15,"messages"],[151,25,219,23],[151,26,219,24],[152,6,220,4],[152,7,220,5],[152,8,220,6],[153,6,222,4],[153,13,222,11],[153,19,222,17],[153,23,222,17,"off"],[153,36,222,20],[153,38,222,21,"messagesRef"],[153,49,222,32],[153,51,222,34],[153,58,222,41],[153,60,222,43,"unsubscribe"],[153,71,222,54],[153,72,222,55],[154,4,223,2],[156,4,225,2],[157,4,226,2],[157,10,226,8,"sendNotification"],[157,26,226,24,"sendNotification"],[157,27,226,25,"userId"],[157,33,226,39],[157,35,226,41,"notification"],[157,47,230,3],[157,49,230,5],[158,6,231,4],[158,10,231,8],[158,11,231,9],[158,15,231,13],[158,16,231,14,"initialized"],[158,27,231,25],[158,29,231,27],[158,35,231,33],[158,39,231,37],[158,40,231,38,"initialize"],[158,50,231,48],[158,51,231,49],[158,52,231,50],[159,6,233,4],[159,12,233,10,"notificationRef"],[159,27,233,25],[159,30,233,28],[159,34,233,28,"ref"],[159,47,233,31],[159,49,233,32,"database"],[159,57,233,40],[159,59,233,42],[159,76,233,59,"userId"],[159,82,233,65],[159,84,233,67],[159,85,233,68],[160,6,234,4],[160,12,234,10,"newNotificationRef"],[160,30,234,28],[160,33,234,31],[160,37,234,31,"push"],[160,51,234,35],[160,53,234,36,"notificationRef"],[160,68,234,51],[160,69,234,52],[161,6,236,4],[161,12,236,10],[161,16,236,10,"set"],[161,29,236,13],[161,31,236,14,"newNotificationRef"],[161,49,236,32],[161,51,236,34],[162,8,237,6],[162,11,237,9,"notification"],[162,23,237,21],[163,8,238,6,"id"],[163,10,238,8],[163,12,238,10,"newNotificationRef"],[163,30,238,28],[163,31,238,29,"key"],[163,34,238,33],[164,8,239,6,"timestamp"],[164,17,239,15],[164,19,239,17,"Date"],[164,23,239,21],[164,24,239,22,"now"],[164,27,239,25],[164,28,239,26],[164,29,239,27],[165,8,240,6,"read"],[165,12,240,10],[165,14,240,12],[166,6,241,4],[166,7,241,5],[166,8,241,6],[167,4,242,2],[168,4,244,2,"subscribeToNotifications"],[168,28,244,26,"subscribeToNotifications"],[168,29,244,27,"userId"],[168,35,244,41],[168,37,244,43,"callback"],[168,45,244,83],[168,47,244,97],[169,6,245,4],[169,10,245,8],[169,11,245,9],[169,15,245,13],[169,16,245,14,"initialized"],[169,27,245,25],[169,29,245,27],[170,8,246,6],[170,12,246,10],[170,13,246,11,"initialize"],[170,23,246,21],[170,24,246,22],[170,25,246,23],[170,26,246,24,"then"],[170,30,246,28],[170,31,246,29],[170,37,246,35],[171,10,247,8],[171,14,247,12],[171,15,247,13,"subscribeToNotifications"],[171,39,247,37],[171,40,247,38,"userId"],[171,46,247,44],[171,48,247,46,"callback"],[171,56,247,54],[171,57,247,55],[172,8,248,6],[172,9,248,7],[172,10,248,8],[173,8,249,6],[173,15,249,13],[173,21,249,19],[173,22,249,20],[173,23,249,21],[174,6,250,4],[175,6,252,4],[175,12,252,10,"notificationsRef"],[175,28,252,26],[175,31,252,29],[175,35,252,29,"ref"],[175,48,252,32],[175,50,252,33,"database"],[175,58,252,41],[175,60,252,43],[175,77,252,60,"userId"],[175,83,252,66],[175,85,252,68],[175,86,252,69],[176,6,254,4],[176,12,254,10,"unsubscribe"],[176,23,254,21],[176,26,254,24],[176,30,254,24,"onValue"],[176,47,254,31],[176,49,254,32,"notificationsRef"],[176,65,254,48],[176,67,254,51,"snapshot"],[176,75,254,59],[176,79,254,64],[177,8,255,6],[177,14,255,12,"data"],[177,18,255,16],[177,21,255,19,"snapshot"],[177,29,255,27],[177,30,255,28,"val"],[177,33,255,31],[177,34,255,32],[177,35,255,33],[178,8,256,6],[178,14,256,12,"notifications"],[178,27,256,25],[178,30,256,28,"data"],[178,34,256,32],[178,37,257,10,"Object"],[178,43,257,16],[178,44,257,17,"values"],[178,50,257,23],[178,51,257,24,"data"],[178,55,257,28],[178,56,257,29],[178,57,257,30,"sort"],[178,61,257,34],[178,62,257,35],[178,63,257,36,"a"],[178,64,257,42],[178,66,257,44,"b"],[178,67,257,50],[178,72,257,55,"b"],[178,73,257,56],[178,74,257,57,"timestamp"],[178,83,257,66],[178,86,257,69,"a"],[178,87,257,70],[178,88,257,71,"timestamp"],[178,97,257,80],[178,98,257,81],[178,101,258,10],[178,103,258,12],[179,8,259,6,"callback"],[179,16,259,14],[179,17,259,15,"notifications"],[179,30,259,28],[179,31,259,29],[180,6,260,4],[180,7,260,5],[180,8,260,6],[181,6,262,4],[181,13,262,11],[181,19,262,17],[181,23,262,17,"off"],[181,36,262,20],[181,38,262,21,"notificationsRef"],[181,54,262,37],[181,56,262,39],[181,63,262,46],[181,65,262,48,"unsubscribe"],[181,76,262,59],[181,77,262,60],[182,4,263,2],[184,4,265,2],[185,4,266,2,"isConnected"],[185,15,266,13,"isConnected"],[185,16,266,13],[185,18,266,25],[186,6,267,4],[186,13,267,11],[186,17,267,15],[186,18,267,16,"initialized"],[186,29,267,27],[187,4,268,2],[189,4,270,2],[190,4,271,2],[190,10,271,8,"disconnect"],[190,20,271,18,"disconnect"],[190,21,271,18],[190,23,271,21],[191,6,272,4],[192,6,273,4],[192,10,273,8],[192,11,273,9,"initialized"],[192,22,273,20],[192,25,273,23],[192,30,273,28],[193,4,274,2],[194,2,275,0],[195,2,277,7],[195,8,277,13,"firebaseRealtimeService"],[195,31,277,36],[195,34,277,36,"exports"],[195,41,277,36],[195,42,277,36,"firebaseRealtimeService"],[195,65,277,36],[195,68,277,39],[195,72,277,43,"FirebaseRealtimeService"],[195,95,277,66],[195,96,277,67],[195,97,277,68],[196,0,277,69],[196,3]],"functionMap":{"names":["<global>","FirebaseRealtimeService","FirebaseRealtimeService#initialize","FirebaseRealtimeService#createServiceRequest","FirebaseRealtimeService#updateServiceRequest","FirebaseRealtimeService#subscribeToServiceRequests","initialize.then$argument_0","<anonymous>","onValue$argument_1","FirebaseRealtimeService#subscribeToServiceRequest","FirebaseRealtimeService#updateProviderLocation","FirebaseRealtimeService#subscribeToNearbyProviders","Object.values.filter$argument_0","FirebaseRealtimeService#sendMessage","FirebaseRealtimeService#subscribeToChat","Object.values.sort$argument_0","FirebaseRealtimeService#sendNotification","FirebaseRealtimeService#subscribeToNotifications","FirebaseRealtimeService#isConnected","FirebaseRealtimeService#disconnect"],"mappings":"AAA;AC2D;ECG;GDY;EEG;GFgB;EGE;GHQ;EIE;6BCE;ODE;aEC,QF;6CGK;KHM;WEE,4CF;GJC;EQE;6BHE;OGE;aFC,QE;4CDK;KCG;WFE,2CE;GRC;ESG;GTS;EUE;6BLE;OKE;aJC,QI;8CHK;qCIG,+DJ;KGG;WJE,6CI;GVC;EYG;GZuB;EaE;6BRE;OQE;aPC,QO;6CNK;mCOG,6CP;KMG;WPE,4CO;GbC;EeG;GfgB;EgBE;6BXE;OWE;aVC,QU;kDTK;mCOG,6CP;KSG;WVE,iDU;GhBC;EiBG;GjBE;EkBG;GlBG;CDC"}},"type":"js/module"}]}