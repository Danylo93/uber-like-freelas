{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"../interfaces","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"GMKh3a5g5xNaAog15vl07v6pG2U=","exportNames":["*"]}},{"name":"./EventManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":59},"end":{"line":4,"column":42,"index":101}}],"key":"+tTRfUGWY5rcrw6ZVLEgvlFTMQc=","exportNames":["*"]}},{"name":"../../PointerType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":102},"end":{"line":5,"column":48,"index":150}}],"key":"PNpP2j+zRZwLQ3w6ZmXPMJNakiU=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _interfaces = require(_dependencyMap[1], \"../interfaces\");\n  var _EventManager = _interopRequireDefault(require(_dependencyMap[2], \"./EventManager\"));\n  var _PointerType = require(_dependencyMap[3], \"../../PointerType\");\n  class KeyboardEventManager extends _EventManager.default {\n    static activationKeys = ['Enter', ' '];\n    static cancelationKeys = ['Tab'];\n    isPressed = false;\n    static registeredStaticListeners = false;\n    static instances = new Set();\n    static keyUpStaticCallback = event => {\n      // We need a global listener, as in some cases, keyUp event gets stop-propagated.\n      // Then, if we used only component-level listeners the gesture would never end,\n      // causing other gestues to fail.\n\n      if (this.activationKeys.indexOf(event.key) === -1) {\n        return;\n      }\n      this.instances.forEach(item => {\n        item.onKeyUp(event);\n      });\n    };\n    keyDownCallback = event => {\n      if (KeyboardEventManager.cancelationKeys.indexOf(event.key) !== -1 && this.isPressed) {\n        this.dispatchEvent(event, _interfaces.EventTypes.CANCEL);\n        return;\n      }\n      if (KeyboardEventManager.activationKeys.indexOf(event.key) === -1) {\n        return;\n      }\n      this.dispatchEvent(event, _interfaces.EventTypes.DOWN);\n    };\n    onKeyUp = event => {\n      if (KeyboardEventManager.activationKeys.indexOf(event.key) === -1 || !this.isPressed) {\n        return;\n      }\n      this.dispatchEvent(event, _interfaces.EventTypes.UP);\n    };\n    dispatchEvent(event, eventType) {\n      if (!(event.target instanceof HTMLElement)) {\n        return;\n      }\n      const adaptedEvent = this.mapEvent(event, eventType);\n      switch (eventType) {\n        case _interfaces.EventTypes.UP:\n          this.isPressed = false;\n          this.onPointerUp(adaptedEvent);\n          break;\n        case _interfaces.EventTypes.DOWN:\n          this.isPressed = true;\n          this.onPointerDown(adaptedEvent);\n          break;\n        case _interfaces.EventTypes.CANCEL:\n          this.isPressed = false;\n          this.onPointerCancel(adaptedEvent);\n          break;\n      }\n    }\n    registerListeners() {\n      this.view.addEventListener('keydown', this.keyDownCallback);\n      KeyboardEventManager.instances.add(this);\n      if (!KeyboardEventManager.registeredStaticListeners) {\n        KeyboardEventManager.registeredStaticListeners = true;\n        document.addEventListener('keyup', KeyboardEventManager.keyUpStaticCallback, {\n          capture: true\n        });\n      }\n    }\n    unregisterListeners() {\n      this.view.removeEventListener('keydown', this.keyDownCallback);\n      KeyboardEventManager.instances.delete(this);\n      if (KeyboardEventManager.instances.size === 0) {\n        document.removeEventListener('keyup', KeyboardEventManager.keyUpStaticCallback, {\n          capture: true\n        });\n        KeyboardEventManager.registeredStaticListeners = false;\n      }\n    }\n    mapEvent(event, eventType) {\n      const viewRect = event.target.getBoundingClientRect();\n      const viewportPosition = {\n        x: viewRect?.x + viewRect?.width / 2,\n        y: viewRect?.y + viewRect?.height / 2\n      };\n      const relativePosition = {\n        x: viewRect?.width / 2,\n        y: viewRect?.height / 2\n      };\n      return {\n        x: viewportPosition.x,\n        y: viewportPosition.y,\n        offsetX: relativePosition.x,\n        offsetY: relativePosition.y,\n        pointerId: 0,\n        eventType: eventType,\n        pointerType: _PointerType.PointerType.KEY,\n        time: event.timeStamp\n      };\n    }\n  }\n  exports.default = KeyboardEventManager;\n});","lineCount":109,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[9,2,3,0],[9,6,3,0,"_interfaces"],[9,17,3,0],[9,20,3,0,"require"],[9,27,3,0],[9,28,3,0,"_dependencyMap"],[9,42,3,0],[10,2,4,0],[10,6,4,0,"_EventManager"],[10,19,4,0],[10,22,4,0,"_interopRequireDefault"],[10,44,4,0],[10,45,4,0,"require"],[10,52,4,0],[10,53,4,0,"_dependencyMap"],[10,67,4,0],[11,2,5,0],[11,6,5,0,"_PointerType"],[11,18,5,0],[11,21,5,0,"require"],[11,28,5,0],[11,29,5,0,"_dependencyMap"],[11,43,5,0],[12,2,6,15],[12,8,6,21,"KeyboardEventManager"],[12,28,6,41],[12,37,6,50,"EventManager"],[12,58,6,62],[12,59,6,63],[13,4,7,2],[13,11,7,9,"activationKeys"],[13,25,7,23],[13,28,7,26],[13,29,7,27],[13,36,7,34],[13,38,7,36],[13,41,7,39],[13,42,7,40],[14,4,8,2],[14,11,8,9,"cancelationKeys"],[14,26,8,24],[14,29,8,27],[14,30,8,28],[14,35,8,33],[14,36,8,34],[15,4,9,2,"isPressed"],[15,13,9,11],[15,16,9,14],[15,21,9,19],[16,4,10,2],[16,11,10,9,"registeredStaticListeners"],[16,36,10,34],[16,39,10,37],[16,44,10,42],[17,4,11,2],[17,11,11,9,"instances"],[17,20,11,18],[17,23,11,21],[17,27,11,25,"Set"],[17,30,11,28],[17,31,11,29],[17,32,11,30],[18,4,12,2],[18,11,12,9,"keyUpStaticCallback"],[18,30,12,28],[18,33,12,31,"event"],[18,38,12,36],[18,42,12,40],[19,6,13,4],[20,6,14,4],[21,6,15,4],[23,6,17,4],[23,10,17,8],[23,14,17,12],[23,15,17,13,"activationKeys"],[23,29,17,27],[23,30,17,28,"indexOf"],[23,37,17,35],[23,38,17,36,"event"],[23,43,17,41],[23,44,17,42,"key"],[23,47,17,45],[23,48,17,46],[23,53,17,51],[23,54,17,52],[23,55,17,53],[23,57,17,55],[24,8,18,6],[25,6,19,4],[26,6,20,4],[26,10,20,8],[26,11,20,9,"instances"],[26,20,20,18],[26,21,20,19,"forEach"],[26,28,20,26],[26,29,20,27,"item"],[26,33,20,31],[26,37,20,35],[27,8,21,6,"item"],[27,12,21,10],[27,13,21,11,"onKeyUp"],[27,20,21,18],[27,21,21,19,"event"],[27,26,21,24],[27,27,21,25],[28,6,22,4],[28,7,22,5],[28,8,22,6],[29,4,23,2],[29,5,23,3],[30,4,24,2,"keyDownCallback"],[30,19,24,17],[30,22,24,20,"event"],[30,27,24,25],[30,31,24,29],[31,6,25,4],[31,10,25,8,"KeyboardEventManager"],[31,30,25,28],[31,31,25,29,"cancelationKeys"],[31,46,25,44],[31,47,25,45,"indexOf"],[31,54,25,52],[31,55,25,53,"event"],[31,60,25,58],[31,61,25,59,"key"],[31,64,25,62],[31,65,25,63],[31,70,25,68],[31,71,25,69],[31,72,25,70],[31,76,25,74],[31,80,25,78],[31,81,25,79,"isPressed"],[31,90,25,88],[31,92,25,90],[32,8,26,6],[32,12,26,10],[32,13,26,11,"dispatchEvent"],[32,26,26,24],[32,27,26,25,"event"],[32,32,26,30],[32,34,26,32,"EventTypes"],[32,56,26,42],[32,57,26,43,"CANCEL"],[32,63,26,49],[32,64,26,50],[33,8,27,6],[34,6,28,4],[35,6,29,4],[35,10,29,8,"KeyboardEventManager"],[35,30,29,28],[35,31,29,29,"activationKeys"],[35,45,29,43],[35,46,29,44,"indexOf"],[35,53,29,51],[35,54,29,52,"event"],[35,59,29,57],[35,60,29,58,"key"],[35,63,29,61],[35,64,29,62],[35,69,29,67],[35,70,29,68],[35,71,29,69],[35,73,29,71],[36,8,30,6],[37,6,31,4],[38,6,32,4],[38,10,32,8],[38,11,32,9,"dispatchEvent"],[38,24,32,22],[38,25,32,23,"event"],[38,30,32,28],[38,32,32,30,"EventTypes"],[38,54,32,40],[38,55,32,41,"DOWN"],[38,59,32,45],[38,60,32,46],[39,4,33,2],[39,5,33,3],[40,4,34,2,"onKeyUp"],[40,11,34,9],[40,14,34,12,"event"],[40,19,34,17],[40,23,34,21],[41,6,35,4],[41,10,35,8,"KeyboardEventManager"],[41,30,35,28],[41,31,35,29,"activationKeys"],[41,45,35,43],[41,46,35,44,"indexOf"],[41,53,35,51],[41,54,35,52,"event"],[41,59,35,57],[41,60,35,58,"key"],[41,63,35,61],[41,64,35,62],[41,69,35,67],[41,70,35,68],[41,71,35,69],[41,75,35,73],[41,76,35,74],[41,80,35,78],[41,81,35,79,"isPressed"],[41,90,35,88],[41,92,35,90],[42,8,36,6],[43,6,37,4],[44,6,38,4],[44,10,38,8],[44,11,38,9,"dispatchEvent"],[44,24,38,22],[44,25,38,23,"event"],[44,30,38,28],[44,32,38,30,"EventTypes"],[44,54,38,40],[44,55,38,41,"UP"],[44,57,38,43],[44,58,38,44],[45,4,39,2],[45,5,39,3],[46,4,40,2,"dispatchEvent"],[46,17,40,15,"dispatchEvent"],[46,18,40,16,"event"],[46,23,40,21],[46,25,40,23,"eventType"],[46,34,40,32],[46,36,40,34],[47,6,41,4],[47,10,41,8],[47,12,41,10,"event"],[47,17,41,15],[47,18,41,16,"target"],[47,24,41,22],[47,36,41,34,"HTMLElement"],[47,47,41,45],[47,48,41,46],[47,50,41,48],[48,8,42,6],[49,6,43,4],[50,6,44,4],[50,12,44,10,"adaptedEvent"],[50,24,44,22],[50,27,44,25],[50,31,44,29],[50,32,44,30,"mapEvent"],[50,40,44,38],[50,41,44,39,"event"],[50,46,44,44],[50,48,44,46,"eventType"],[50,57,44,55],[50,58,44,56],[51,6,45,4],[51,14,45,12,"eventType"],[51,23,45,21],[52,8,46,6],[52,13,46,11,"EventTypes"],[52,35,46,21],[52,36,46,22,"UP"],[52,38,46,24],[53,10,47,8],[53,14,47,12],[53,15,47,13,"isPressed"],[53,24,47,22],[53,27,47,25],[53,32,47,30],[54,10,48,8],[54,14,48,12],[54,15,48,13,"onPointerUp"],[54,26,48,24],[54,27,48,25,"adaptedEvent"],[54,39,48,37],[54,40,48,38],[55,10,49,8],[56,8,50,6],[56,13,50,11,"EventTypes"],[56,35,50,21],[56,36,50,22,"DOWN"],[56,40,50,26],[57,10,51,8],[57,14,51,12],[57,15,51,13,"isPressed"],[57,24,51,22],[57,27,51,25],[57,31,51,29],[58,10,52,8],[58,14,52,12],[58,15,52,13,"onPointerDown"],[58,28,52,26],[58,29,52,27,"adaptedEvent"],[58,41,52,39],[58,42,52,40],[59,10,53,8],[60,8,54,6],[60,13,54,11,"EventTypes"],[60,35,54,21],[60,36,54,22,"CANCEL"],[60,42,54,28],[61,10,55,8],[61,14,55,12],[61,15,55,13,"isPressed"],[61,24,55,22],[61,27,55,25],[61,32,55,30],[62,10,56,8],[62,14,56,12],[62,15,56,13,"onPointerCancel"],[62,30,56,28],[62,31,56,29,"adaptedEvent"],[62,43,56,41],[62,44,56,42],[63,10,57,8],[64,6,58,4],[65,4,59,2],[66,4,60,2,"registerListeners"],[66,21,60,19,"registerListeners"],[66,22,60,19],[66,24,60,22],[67,6,61,4],[67,10,61,8],[67,11,61,9,"view"],[67,15,61,13],[67,16,61,14,"addEventListener"],[67,32,61,30],[67,33,61,31],[67,42,61,40],[67,44,61,42],[67,48,61,46],[67,49,61,47,"keyDownCallback"],[67,64,61,62],[67,65,61,63],[68,6,62,4,"KeyboardEventManager"],[68,26,62,24],[68,27,62,25,"instances"],[68,36,62,34],[68,37,62,35,"add"],[68,40,62,38],[68,41,62,39],[68,45,62,43],[68,46,62,44],[69,6,63,4],[69,10,63,8],[69,11,63,9,"KeyboardEventManager"],[69,31,63,29],[69,32,63,30,"registeredStaticListeners"],[69,57,63,55],[69,59,63,57],[70,8,64,6,"KeyboardEventManager"],[70,28,64,26],[70,29,64,27,"registeredStaticListeners"],[70,54,64,52],[70,57,64,55],[70,61,64,59],[71,8,65,6,"document"],[71,16,65,14],[71,17,65,15,"addEventListener"],[71,33,65,31],[71,34,65,32],[71,41,65,39],[71,43,65,41,"KeyboardEventManager"],[71,63,65,61],[71,64,65,62,"keyUpStaticCallback"],[71,83,65,81],[71,85,65,83],[72,10,66,8,"capture"],[72,17,66,15],[72,19,66,17],[73,8,67,6],[73,9,67,7],[73,10,67,8],[74,6,68,4],[75,4,69,2],[76,4,70,2,"unregisterListeners"],[76,23,70,21,"unregisterListeners"],[76,24,70,21],[76,26,70,24],[77,6,71,4],[77,10,71,8],[77,11,71,9,"view"],[77,15,71,13],[77,16,71,14,"removeEventListener"],[77,35,71,33],[77,36,71,34],[77,45,71,43],[77,47,71,45],[77,51,71,49],[77,52,71,50,"keyDownCallback"],[77,67,71,65],[77,68,71,66],[78,6,72,4,"KeyboardEventManager"],[78,26,72,24],[78,27,72,25,"instances"],[78,36,72,34],[78,37,72,35,"delete"],[78,43,72,41],[78,44,72,42],[78,48,72,46],[78,49,72,47],[79,6,73,4],[79,10,73,8,"KeyboardEventManager"],[79,30,73,28],[79,31,73,29,"instances"],[79,40,73,38],[79,41,73,39,"size"],[79,45,73,43],[79,50,73,48],[79,51,73,49],[79,53,73,51],[80,8,74,6,"document"],[80,16,74,14],[80,17,74,15,"removeEventListener"],[80,36,74,34],[80,37,74,35],[80,44,74,42],[80,46,74,44,"KeyboardEventManager"],[80,66,74,64],[80,67,74,65,"keyUpStaticCallback"],[80,86,74,84],[80,88,74,86],[81,10,75,8,"capture"],[81,17,75,15],[81,19,75,17],[82,8,76,6],[82,9,76,7],[82,10,76,8],[83,8,77,6,"KeyboardEventManager"],[83,28,77,26],[83,29,77,27,"registeredStaticListeners"],[83,54,77,52],[83,57,77,55],[83,62,77,60],[84,6,78,4],[85,4,79,2],[86,4,80,2,"mapEvent"],[86,12,80,10,"mapEvent"],[86,13,80,11,"event"],[86,18,80,16],[86,20,80,18,"eventType"],[86,29,80,27],[86,31,80,29],[87,6,81,4],[87,12,81,10,"viewRect"],[87,20,81,18],[87,23,81,21,"event"],[87,28,81,26],[87,29,81,27,"target"],[87,35,81,33],[87,36,81,34,"getBoundingClientRect"],[87,57,81,55],[87,58,81,56],[87,59,81,57],[88,6,82,4],[88,12,82,10,"viewportPosition"],[88,28,82,26],[88,31,82,29],[89,8,83,6,"x"],[89,9,83,7],[89,11,83,9,"viewRect"],[89,19,83,17],[89,21,83,19,"x"],[89,22,83,20],[89,25,83,23,"viewRect"],[89,33,83,31],[89,35,83,33,"width"],[89,40,83,38],[89,43,83,41],[89,44,83,42],[90,8,84,6,"y"],[90,9,84,7],[90,11,84,9,"viewRect"],[90,19,84,17],[90,21,84,19,"y"],[90,22,84,20],[90,25,84,23,"viewRect"],[90,33,84,31],[90,35,84,33,"height"],[90,41,84,39],[90,44,84,42],[91,6,85,4],[91,7,85,5],[92,6,86,4],[92,12,86,10,"relativePosition"],[92,28,86,26],[92,31,86,29],[93,8,87,6,"x"],[93,9,87,7],[93,11,87,9,"viewRect"],[93,19,87,17],[93,21,87,19,"width"],[93,26,87,24],[93,29,87,27],[93,30,87,28],[94,8,88,6,"y"],[94,9,88,7],[94,11,88,9,"viewRect"],[94,19,88,17],[94,21,88,19,"height"],[94,27,88,25],[94,30,88,28],[95,6,89,4],[95,7,89,5],[96,6,90,4],[96,13,90,11],[97,8,91,6,"x"],[97,9,91,7],[97,11,91,9,"viewportPosition"],[97,27,91,25],[97,28,91,26,"x"],[97,29,91,27],[98,8,92,6,"y"],[98,9,92,7],[98,11,92,9,"viewportPosition"],[98,27,92,25],[98,28,92,26,"y"],[98,29,92,27],[99,8,93,6,"offsetX"],[99,15,93,13],[99,17,93,15,"relativePosition"],[99,33,93,31],[99,34,93,32,"x"],[99,35,93,33],[100,8,94,6,"offsetY"],[100,15,94,13],[100,17,94,15,"relativePosition"],[100,33,94,31],[100,34,94,32,"y"],[100,35,94,33],[101,8,95,6,"pointerId"],[101,17,95,15],[101,19,95,17],[101,20,95,18],[102,8,96,6,"eventType"],[102,17,96,15],[102,19,96,17,"eventType"],[102,28,96,26],[103,8,97,6,"pointerType"],[103,19,97,17],[103,21,97,19,"PointerType"],[103,45,97,30],[103,46,97,31,"KEY"],[103,49,97,34],[104,8,98,6,"time"],[104,12,98,10],[104,14,98,12,"event"],[104,19,98,17],[104,20,98,18,"timeStamp"],[105,6,99,4],[105,7,99,5],[106,4,100,2],[107,2,101,0],[108,2,101,1,"exports"],[108,9,101,1],[108,10,101,1,"default"],[108,17,101,1],[108,20,101,1,"KeyboardEventManager"],[108,40,101,1],[109,0,101,1],[109,3]],"functionMap":{"names":["<global>","KeyboardEventManager","keyUpStaticCallback","instances.forEach$argument_0","keyDownCallback","onKeyUp","dispatchEvent","registerListeners","unregisterListeners","mapEvent"],"mappings":"AAA;eCK;+BCM;2BCQ;KDE;GDC;oBGC;GHS;YIC;GJK;EKC;GLmB;EMC;GNS;EOC;GPS;EQC;GRoB;CDC"}},"type":"js/module"}]}