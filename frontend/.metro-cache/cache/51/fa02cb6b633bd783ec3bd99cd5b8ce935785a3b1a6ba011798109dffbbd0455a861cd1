{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":49,"index":64}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ForceTouchGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  /**\n   * @deprecated ForceTouch gesture is deprecated and will be removed in the future.\n   */\n\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        forceChange: current.force\n      };\n    } else {\n      changePayload = {\n        forceChange: current.force - previous.force\n      };\n    }\n    return {\n      ...current,\n      ...changePayload\n    };\n  }\n\n  /**\n   * @deprecated ForceTouch gesture is deprecated and will be removed in the future.\n   */\n  class ForceTouchGesture extends _gesture.ContinousBaseGesture {\n    config = {};\n    constructor() {\n      super();\n      this.handlerName = 'ForceTouchGestureHandler';\n    }\n\n    /**\n     * A minimal pressure that is required before gesture can activate.\n     * Should be a value from range [0.0, 1.0]. Default is 0.2.\n     * @param force\n     */\n    minForce(force) {\n      this.config.minForce = force;\n      return this;\n    }\n\n    /**\n     * A maximal pressure that could be applied for gesture.\n     * If the pressure is greater, gesture fails. Should be a value from range [0.0, 1.0].\n     * @param force\n     */\n    maxForce(force) {\n      this.config.maxForce = force;\n      return this;\n    }\n\n    /**\n     * Value defining if haptic feedback has to be performed on activation.\n     * @param value\n     */\n    feedbackOnActivation(value) {\n      this.config.feedbackOnActivation = value;\n      return this;\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, ForceTouchGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n\n  /**\n   * @deprecated ForceTouch gesture is deprecated and will be removed in the future.\n   */\n  exports.ForceTouchGesture = ForceTouchGesture;\n});","lineCount":81,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"ForceTouchGesture"],[7,27,1,13],[8,2,3,0],[8,6,3,0,"_gesture"],[8,14,3,0],[8,17,3,0,"require"],[8,24,3,0],[8,25,3,0,"_dependencyMap"],[8,39,3,0],[9,2,5,0],[10,0,6,0],[11,0,7,0],[13,2,9,0],[13,11,9,9,"changeEventCalculator"],[13,32,9,30,"changeEventCalculator"],[13,33,9,31,"current"],[13,40,9,38],[13,42,9,40,"previous"],[13,50,9,48],[13,52,9,50],[14,4,10,2],[14,13,10,11],[16,4,12,2],[16,8,12,6,"changePayload"],[16,21,12,19],[17,4,13,2],[17,8,13,6,"previous"],[17,16,13,14],[17,21,13,19,"undefined"],[17,30,13,28],[17,32,13,30],[18,6,14,4,"changePayload"],[18,19,14,17],[18,22,14,20],[19,8,15,6,"forceChange"],[19,19,15,17],[19,21,15,19,"current"],[19,28,15,26],[19,29,15,27,"force"],[20,6,16,4],[20,7,16,5],[21,4,17,2],[21,5,17,3],[21,11,17,9],[22,6,18,4,"changePayload"],[22,19,18,17],[22,22,18,20],[23,8,19,6,"forceChange"],[23,19,19,17],[23,21,19,19,"current"],[23,28,19,26],[23,29,19,27,"force"],[23,34,19,32],[23,37,19,35,"previous"],[23,45,19,43],[23,46,19,44,"force"],[24,6,20,4],[24,7,20,5],[25,4,21,2],[26,4,22,2],[26,11,22,9],[27,6,23,4],[27,9,23,7,"current"],[27,16,23,14],[28,6,24,4],[28,9,24,7,"changePayload"],[29,4,25,2],[29,5,25,3],[30,2,26,0],[32,2,28,0],[33,0,29,0],[34,0,30,0],[35,2,31,7],[35,8,31,13,"ForceTouchGesture"],[35,25,31,30],[35,34,31,39,"ContinousBaseGesture"],[35,63,31,59],[35,64,31,60],[36,4,32,2,"config"],[36,10,32,8],[36,13,32,11],[36,14,32,12],[36,15,32,13],[37,4,33,2,"constructor"],[37,15,33,13,"constructor"],[37,16,33,13],[37,18,33,16],[38,6,34,4],[38,11,34,9],[38,12,34,10],[38,13,34,11],[39,6,35,4],[39,10,35,8],[39,11,35,9,"handlerName"],[39,22,35,20],[39,25,35,23],[39,51,35,49],[40,4,36,2],[42,4,38,2],[43,0,39,0],[44,0,40,0],[45,0,41,0],[46,0,42,0],[47,4,43,2,"minForce"],[47,12,43,10,"minForce"],[47,13,43,11,"force"],[47,18,43,16],[47,20,43,18],[48,6,44,4],[48,10,44,8],[48,11,44,9,"config"],[48,17,44,15],[48,18,44,16,"minForce"],[48,26,44,24],[48,29,44,27,"force"],[48,34,44,32],[49,6,45,4],[49,13,45,11],[49,17,45,15],[50,4,46,2],[52,4,48,2],[53,0,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,4,53,2,"maxForce"],[57,12,53,10,"maxForce"],[57,13,53,11,"force"],[57,18,53,16],[57,20,53,18],[58,6,54,4],[58,10,54,8],[58,11,54,9,"config"],[58,17,54,15],[58,18,54,16,"maxForce"],[58,26,54,24],[58,29,54,27,"force"],[58,34,54,32],[59,6,55,4],[59,13,55,11],[59,17,55,15],[60,4,56,2],[62,4,58,2],[63,0,59,0],[64,0,60,0],[65,0,61,0],[66,4,62,2,"feedbackOnActivation"],[66,24,62,22,"feedbackOnActivation"],[66,25,62,23,"value"],[66,30,62,28],[66,32,62,30],[67,6,63,4],[67,10,63,8],[67,11,63,9,"config"],[67,17,63,15],[67,18,63,16,"feedbackOnActivation"],[67,38,63,36],[67,41,63,39,"value"],[67,46,63,44],[68,6,64,4],[68,13,64,11],[68,17,64,15],[69,4,65,2],[70,4,66,2,"onChange"],[70,12,66,10,"onChange"],[70,13,66,11,"callback"],[70,21,66,19],[70,23,66,21],[71,6,67,4],[72,6,68,4],[72,10,68,8],[72,11,68,9,"handlers"],[72,19,68,17],[72,20,68,18,"changeEventCalculator"],[72,41,68,39],[72,44,68,42,"changeEventCalculator"],[72,65,68,63],[73,6,69,4],[73,13,69,11],[73,18,69,16],[73,19,69,17,"onChange"],[73,27,69,25],[73,28,69,26,"callback"],[73,36,69,34],[73,37,69,35],[74,4,70,2],[75,2,71,0],[77,2,73,0],[78,0,74,0],[79,0,75,0],[80,2,73,0,"exports"],[80,9,73,0],[80,10,73,0,"ForceTouchGesture"],[80,27,73,0],[80,30,73,0,"ForceTouchGesture"],[80,47,73,0],[81,0,73,0],[81,3]],"functionMap":{"names":["<global>","changeEventCalculator","ForceTouchGesture","ForceTouchGesture#constructor","ForceTouchGesture#minForce","ForceTouchGesture#maxForce","ForceTouchGesture#feedbackOnActivation","ForceTouchGesture#onChange"],"mappings":"AAA;ACQ;CDiB;OEK;ECE;GDG;EEO;GFG;EGO;GHG;EIM;GJG;EKC;GLI;CFC"}},"type":"js/module"}]}