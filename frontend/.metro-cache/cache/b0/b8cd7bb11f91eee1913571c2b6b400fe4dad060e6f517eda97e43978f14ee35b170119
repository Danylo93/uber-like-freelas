{"dependencies":[{"name":"./flingGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":46,"index":61}}],"key":"h24ijk3pJCmeakiNLvaxhU4oD+0=","exportNames":["*"]}},{"name":"./forceTouchGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":62},"end":{"line":4,"column":56,"index":118}}],"key":"1QIx9s/Hb/tSlS4sC64N+Adyv7M=","exportNames":["*"]}},{"name":"./gestureComposition","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":119},"end":{"line":5,"column":94,"index":213}}],"key":"J0ugy1LMUGf5KgbYvNV+9auzxk4=","exportNames":["*"]}},{"name":"./longPressGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":214},"end":{"line":6,"column":54,"index":268}}],"key":"1o89s2ZbLCAJzQNlPSeE8o2+cH8=","exportNames":["*"]}},{"name":"./panGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":269},"end":{"line":7,"column":42,"index":311}}],"key":"aBzYQKsfDy415OM5yEWHEC+JvOM=","exportNames":["*"]}},{"name":"./pinchGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":312},"end":{"line":8,"column":46,"index":358}}],"key":"Dpg/8aAltyIIC/a4wQAoQVMdkg4=","exportNames":["*"]}},{"name":"./rotationGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":359},"end":{"line":9,"column":52,"index":411}}],"key":"/7dx2ayCyD336a+OWcSLUeam5aE=","exportNames":["*"]}},{"name":"./tapGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":412},"end":{"line":10,"column":42,"index":454}}],"key":"0AhBYBLv6GsrGEF0r8aS4Nb6QGo=","exportNames":["*"]}},{"name":"./nativeGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":455},"end":{"line":11,"column":48,"index":503}}],"key":"cjDWt0y1Cq1VxsEGc4geilXmt0Q=","exportNames":["*"]}},{"name":"./manualGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":504},"end":{"line":12,"column":48,"index":552}}],"key":"HUWWiRL9QzXRRI3alfUEUrUAkqk=","exportNames":["*"]}},{"name":"./hoverGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":553},"end":{"line":13,"column":46,"index":599}}],"key":"+OU9Hr4DiheWQiFQL42cwzfCmfI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.GestureObjects = void 0;\n  var _flingGesture = require(_dependencyMap[0], \"./flingGesture\");\n  var _forceTouchGesture = require(_dependencyMap[1], \"./forceTouchGesture\");\n  var _gestureComposition = require(_dependencyMap[2], \"./gestureComposition\");\n  var _longPressGesture = require(_dependencyMap[3], \"./longPressGesture\");\n  var _panGesture = require(_dependencyMap[4], \"./panGesture\");\n  var _pinchGesture = require(_dependencyMap[5], \"./pinchGesture\");\n  var _rotationGesture = require(_dependencyMap[6], \"./rotationGesture\");\n  var _tapGesture = require(_dependencyMap[7], \"./tapGesture\");\n  var _nativeGesture = require(_dependencyMap[8], \"./nativeGesture\");\n  var _manualGesture = require(_dependencyMap[9], \"./manualGesture\");\n  var _hoverGesture = require(_dependencyMap[10], \"./hoverGesture\");\n  /**\n   * `Gesture` is the object that allows you to create and compose gestures.\n   *\n   * ### Remarks\n   * - Consider wrapping your gesture configurations with `useMemo`, as it will reduce the amount of work Gesture Handler has to do under the hood when updating gestures.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture\n   */\n  const GestureObjects = exports.GestureObjects = {\n    /**\n     * A discrete gesture that recognizes one or many taps.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture\n     */\n    Tap: () => {\n      return new _tapGesture.TapGesture();\n    },\n    /**\n     * A continuous gesture that can recognize a panning (dragging) gesture and track its movement.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture\n     */\n    Pan: () => {\n      return new _panGesture.PanGesture();\n    },\n    /**\n     * A continuous gesture that recognizes pinch gesture. It allows for tracking the distance between two fingers and use that information to scale or zoom your content.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pinch-gesture\n     */\n    Pinch: () => {\n      return new _pinchGesture.PinchGesture();\n    },\n    /**\n     * A continuous gesture that can recognize rotation and track its movement.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/rotation-gesture\n     */\n    Rotation: () => {\n      return new _rotationGesture.RotationGesture();\n    },\n    /**\n     * A discrete gesture that activates when the movement is sufficiently fast.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/fling-gesture\n     */\n    Fling: () => {\n      return new _flingGesture.FlingGesture();\n    },\n    /**\n     * A discrete gesture that activates when the corresponding view is pressed for a sufficiently long time.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/long-press-gesture\n     */\n    LongPress: () => {\n      return new _longPressGesture.LongPressGesture();\n    },\n    /**\n     * @deprecated ForceTouch gesture is deprecated and will be removed in the future.\n     *\n     *  #### iOS only\n     * A continuous gesture that recognizes force of a touch. It allows for tracking pressure of touch on some iOS devices.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/force-touch-gesture\n     */\n    ForceTouch: () => {\n      return new _forceTouchGesture.ForceTouchGesture();\n    },\n    /**\n     * A gesture that allows other touch handling components to participate in RNGH's gesture system.\n     * When used, the other component should be the direct child of a `GestureDetector`.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/native-gesture\n     */\n    Native: () => {\n      return new _nativeGesture.NativeGesture();\n    },\n    /**\n     * A plain gesture that has no specific activation criteria nor event data set.\n     * Its state has to be controlled manually using a state manager.\n     * It will not fail when all the pointers are lifted from the screen.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/manual-gesture\n     */\n    Manual: () => {\n      return new _manualGesture.ManualGesture();\n    },\n    /**\n     * A continuous gesture that can recognize hovering above the view it's attached to.\n     * The hover effect may be activated by moving a mouse or a stylus over the view.\n     *\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/hover-gesture\n     */\n    Hover: () => {\n      return new _hoverGesture.HoverGesture();\n    },\n    /**\n     * Builds a composed gesture consisting of gestures provided as parameters.\n     * The first one that becomes active cancels the rest of gestures.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#race\n     */\n    Race: (...gestures) => {\n      return new _gestureComposition.ComposedGesture(...gestures);\n    },\n    /**\n     * Builds a composed gesture that allows all base gestures to run simultaneously.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#simultaneous\n     */\n    Simultaneous(...gestures) {\n      return new _gestureComposition.SimultaneousGesture(...gestures);\n    },\n    /**\n     * Builds a composed gesture where only one of the provided gestures can become active.\n     * Priority is decided through the order of gestures: the first one has higher priority\n     * than the second one, second one has higher priority than the third one, and so on.\n     * For example, to make a gesture that recognizes both single and double tap you need\n     * to call Exclusive(doubleTap, singleTap).\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#exclusive\n     */\n    Exclusive(...gestures) {\n      return new _gestureComposition.ExclusiveGesture(...gestures);\n    }\n  };\n});","lineCount":133,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"GestureObjects"],[7,24,1,13],[8,2,3,0],[8,6,3,0,"_flingGesture"],[8,19,3,0],[8,22,3,0,"require"],[8,29,3,0],[8,30,3,0,"_dependencyMap"],[8,44,3,0],[9,2,4,0],[9,6,4,0,"_forceTouchGesture"],[9,24,4,0],[9,27,4,0,"require"],[9,34,4,0],[9,35,4,0,"_dependencyMap"],[9,49,4,0],[10,2,5,0],[10,6,5,0,"_gestureComposition"],[10,25,5,0],[10,28,5,0,"require"],[10,35,5,0],[10,36,5,0,"_dependencyMap"],[10,50,5,0],[11,2,6,0],[11,6,6,0,"_longPressGesture"],[11,23,6,0],[11,26,6,0,"require"],[11,33,6,0],[11,34,6,0,"_dependencyMap"],[11,48,6,0],[12,2,7,0],[12,6,7,0,"_panGesture"],[12,17,7,0],[12,20,7,0,"require"],[12,27,7,0],[12,28,7,0,"_dependencyMap"],[12,42,7,0],[13,2,8,0],[13,6,8,0,"_pinchGesture"],[13,19,8,0],[13,22,8,0,"require"],[13,29,8,0],[13,30,8,0,"_dependencyMap"],[13,44,8,0],[14,2,9,0],[14,6,9,0,"_rotationGesture"],[14,22,9,0],[14,25,9,0,"require"],[14,32,9,0],[14,33,9,0,"_dependencyMap"],[14,47,9,0],[15,2,10,0],[15,6,10,0,"_tapGesture"],[15,17,10,0],[15,20,10,0,"require"],[15,27,10,0],[15,28,10,0,"_dependencyMap"],[15,42,10,0],[16,2,11,0],[16,6,11,0,"_nativeGesture"],[16,20,11,0],[16,23,11,0,"require"],[16,30,11,0],[16,31,11,0,"_dependencyMap"],[16,45,11,0],[17,2,12,0],[17,6,12,0,"_manualGesture"],[17,20,12,0],[17,23,12,0,"require"],[17,30,12,0],[17,31,12,0,"_dependencyMap"],[17,45,12,0],[18,2,13,0],[18,6,13,0,"_hoverGesture"],[18,19,13,0],[18,22,13,0,"require"],[18,29,13,0],[18,30,13,0,"_dependencyMap"],[18,44,13,0],[19,2,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,2,23,7],[27,8,23,13,"GestureObjects"],[27,22,23,27],[27,25,23,27,"exports"],[27,32,23,27],[27,33,23,27,"GestureObjects"],[27,47,23,27],[27,50,23,30],[28,4,24,2],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,4,28,2,"Tap"],[32,7,28,5],[32,9,28,7,"Tap"],[32,10,28,7],[32,15,28,13],[33,6,29,4],[33,13,29,11],[33,17,29,15,"TapGesture"],[33,39,29,25],[33,40,29,26],[33,41,29,27],[34,4,30,2],[34,5,30,3],[35,4,31,2],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,4,35,2,"Pan"],[39,7,35,5],[39,9,35,7,"Pan"],[39,10,35,7],[39,15,35,13],[40,6,36,4],[40,13,36,11],[40,17,36,15,"PanGesture"],[40,39,36,25],[40,40,36,26],[40,41,36,27],[41,4,37,2],[41,5,37,3],[42,4,38,2],[43,0,39,0],[44,0,40,0],[45,0,41,0],[46,4,42,2,"Pinch"],[46,9,42,7],[46,11,42,9,"Pinch"],[46,12,42,9],[46,17,42,15],[47,6,43,4],[47,13,43,11],[47,17,43,15,"PinchGesture"],[47,43,43,27],[47,44,43,28],[47,45,43,29],[48,4,44,2],[48,5,44,3],[49,4,45,2],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,4,49,2,"Rotation"],[53,12,49,10],[53,14,49,12,"Rotation"],[53,15,49,12],[53,20,49,18],[54,6,50,4],[54,13,50,11],[54,17,50,15,"RotationGesture"],[54,49,50,30],[54,50,50,31],[54,51,50,32],[55,4,51,2],[55,5,51,3],[56,4,52,2],[57,0,53,0],[58,0,54,0],[59,0,55,0],[60,4,56,2,"Fling"],[60,9,56,7],[60,11,56,9,"Fling"],[60,12,56,9],[60,17,56,15],[61,6,57,4],[61,13,57,11],[61,17,57,15,"FlingGesture"],[61,43,57,27],[61,44,57,28],[61,45,57,29],[62,4,58,2],[62,5,58,3],[63,4,59,2],[64,0,60,0],[65,0,61,0],[66,0,62,0],[67,4,63,2,"LongPress"],[67,13,63,11],[67,15,63,13,"LongPress"],[67,16,63,13],[67,21,63,19],[68,6,64,4],[68,13,64,11],[68,17,64,15,"LongPressGesture"],[68,51,64,31],[68,52,64,32],[68,53,64,33],[69,4,65,2],[69,5,65,3],[70,4,66,2],[71,0,67,0],[72,0,68,0],[73,0,69,0],[74,0,70,0],[75,0,71,0],[76,0,72,0],[77,4,73,2,"ForceTouch"],[77,14,73,12],[77,16,73,14,"ForceTouch"],[77,17,73,14],[77,22,73,20],[78,6,74,4],[78,13,74,11],[78,17,74,15,"ForceTouchGesture"],[78,53,74,32],[78,54,74,33],[78,55,74,34],[79,4,75,2],[79,5,75,3],[80,4,76,2],[81,0,77,0],[82,0,78,0],[83,0,79,0],[84,0,80,0],[85,4,81,2,"Native"],[85,10,81,8],[85,12,81,10,"Native"],[85,13,81,10],[85,18,81,16],[86,6,82,4],[86,13,82,11],[86,17,82,15,"NativeGesture"],[86,45,82,28],[86,46,82,29],[86,47,82,30],[87,4,83,2],[87,5,83,3],[88,4,84,2],[89,0,85,0],[90,0,86,0],[91,0,87,0],[92,0,88,0],[93,0,89,0],[94,4,90,2,"Manual"],[94,10,90,8],[94,12,90,10,"Manual"],[94,13,90,10],[94,18,90,16],[95,6,91,4],[95,13,91,11],[95,17,91,15,"ManualGesture"],[95,45,91,28],[95,46,91,29],[95,47,91,30],[96,4,92,2],[96,5,92,3],[97,4,93,2],[98,0,94,0],[99,0,95,0],[100,0,96,0],[101,0,97,0],[102,0,98,0],[103,4,99,2,"Hover"],[103,9,99,7],[103,11,99,9,"Hover"],[103,12,99,9],[103,17,99,15],[104,6,100,4],[104,13,100,11],[104,17,100,15,"HoverGesture"],[104,43,100,27],[104,44,100,28],[104,45,100,29],[105,4,101,2],[105,5,101,3],[106,4,102,2],[107,0,103,0],[108,0,104,0],[109,0,105,0],[110,0,106,0],[111,4,107,2,"Race"],[111,8,107,6],[111,10,107,8,"Race"],[111,11,107,9],[111,14,107,12,"gestures"],[111,22,107,20],[111,27,107,25],[112,6,108,4],[112,13,108,11],[112,17,108,15,"ComposedGesture"],[112,52,108,30],[112,53,108,31],[112,56,108,34,"gestures"],[112,64,108,42],[112,65,108,43],[113,4,109,2],[113,5,109,3],[114,4,110,2],[115,0,111,0],[116,0,112,0],[117,0,113,0],[118,4,114,2,"Simultaneous"],[118,16,114,14,"Simultaneous"],[118,17,114,15],[118,20,114,18,"gestures"],[118,28,114,26],[118,30,114,28],[119,6,115,4],[119,13,115,11],[119,17,115,15,"SimultaneousGesture"],[119,56,115,34],[119,57,115,35],[119,60,115,38,"gestures"],[119,68,115,46],[119,69,115,47],[120,4,116,2],[120,5,116,3],[121,4,117,2],[122,0,118,0],[123,0,119,0],[124,0,120,0],[125,0,121,0],[126,0,122,0],[127,0,123,0],[128,0,124,0],[129,4,125,2,"Exclusive"],[129,13,125,11,"Exclusive"],[129,14,125,12],[129,17,125,15,"gestures"],[129,25,125,23],[129,27,125,25],[130,6,126,4],[130,13,126,11],[130,17,126,15,"ExclusiveGesture"],[130,53,126,31],[130,54,126,32],[130,57,126,35,"gestures"],[130,65,126,43],[130,66,126,44],[131,4,127,2],[132,2,128,0],[132,3,128,1],[133,0,128,2],[133,3]],"functionMap":{"names":["<global>","GestureObjects.Tap","GestureObjects.Pan","GestureObjects.Pinch","GestureObjects.Rotation","GestureObjects.Fling","GestureObjects.LongPress","GestureObjects.ForceTouch","GestureObjects.Native","GestureObjects.Manual","GestureObjects.Hover","GestureObjects.Race","GestureObjects.Simultaneous","GestureObjects.Exclusive"],"mappings":"AAA;OC2B;GDE;OEK;GFE;SGK;GHE;YIK;GJE;SKK;GLE;aMK;GNE;cOQ;GPE;UQM;GRE;USO;GTE;SUO;GVE;QWM;GXE;EYK;GZE;EaS;GbE"}},"type":"js/module"}]}