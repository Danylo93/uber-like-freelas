version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: marketplace-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: marketplace
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - marketplace-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: marketplace-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - marketplace-network

  # FastAPI Backend
  backend:
    build: .
    container_name: marketplace-backend
    restart: unless-stopped
    environment:
      - MONGO_URL=mongodb://admin:password123@mongodb:27017/marketplace?authSource=admin
      - DB_NAME=marketplace
      - STRIPE_SECRET_KEY=sk_test_emergent
      - EMERGENT_LLM_KEY=sk-emergent-fF0F93bB6715b6c590
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    ports:
      - "8001:8000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - .:/app
      - /app/__pycache__
    networks:
      - marketplace-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Admin Interface (opcional)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: marketplace-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - marketplace-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  marketplace-network:
    driver: bridge