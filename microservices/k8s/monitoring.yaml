apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: marketplace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.44.0
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-data
          mountPath: /prometheus
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=15d'
          - '--web.enable-lifecycle'
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: marketplace
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: marketplace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.0.0
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: admin-password
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        resources:
          requests:
            memory: "256Mi"
            cpu: "125m"
          limits:
            memory: "512Mi"
            cpu: "250m"
      volumes:
      - name: grafana-data
        persistentVolumeClaim:
          claimName: grafana-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: marketplace
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: marketplace
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    scrape_configs:
      - job_name: 'auth-service'
        static_configs:
          - targets: ['auth-service:8000']
        metrics_path: /metrics
        scrape_interval: 30s
      
      - job_name: 'service-service'
        static_configs:
          - targets: ['service-service:8000']
        metrics_path: /metrics
        scrape_interval: 30s
      
      - job_name: 'realtime-service'
        static_configs:
          - targets: ['realtime-service:8000']
        metrics_path: /metrics
        scrape_interval: 10s
      
      - job_name: 'notification-service'
        static_configs:
          - targets: ['notification-service:8000']
        metrics_path: /metrics
        scrape_interval: 30s
      
      - job_name: 'payment-service'
        static_configs:
          - targets: ['payment-service:8000']
        metrics_path: /metrics
        scrape_interval: 30s
      
      - job_name: 'chat-service'
        static_configs:
          - targets: ['chat-service:8000']
        metrics_path: /metrics
        scrape_interval: 30s
      
      - job_name: 'analytics-service'
        static_configs:
          - targets: ['analytics-service:8000']
        metrics_path: /metrics
        scrape_interval: 60s
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - marketplace
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true